<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|1be09454bb94fedcb75d8378f19d0367d3b39234|lout"> 
  <link rel="shortcut icon" href="/jira/s/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"sd.customer.profile.multi.languages\":true,\"sd.customer.portal.transitions\":true,\"sd.customer.portal.transitions.config\":true,\"sd.custom.email.stripping.rules\":false,\"sd.sla.lucene.issue.id.callback.performance\":true,\"sd.new.settings.sidebar.location\":true,\"sd.workload.report.paginator\":true,\"sd.experimental.portal.search.algorithm.default.1\":false,\"sd.customer.portal.help.center.agent.announcement\":true,\"sd.sla.improved.rendering\":false,\"sd.experimental.portal.search.algorithm.default.2\":false,\"sd.customer.feedback.validate.reporter.on.token\":true,\"sd.custom.email.notifications.utf8.csat.star\":true,\"sd.who.create.customers.by.email.setting\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.renderer.consider.variable.format\":true,\"sd.stats.event.tracking\":true,\"sd.password.helper.dialog\":true,\"sd.canned.responses\":false,\"sd.portal.help.center.customer.signup.secondary.email\":true,\"sd.custom.email.notifications.manage.language\":true,\"sd.use.search.by.permissions\":true,\"sd.slavalue.record.updated.date\":false,\"sd.report.custom.date.range\":false,\"sd.kb.article.helpfulness.report\":false,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"sd.custom.email.notifications.styling\":true,\"sd.workinghours.new.page.bulldog.1\":false,\"sd.customer.portal.two.step.login\":false,\"sd.automation.psmq.async.executor\":true,\"sd.customer.org.list.page.lazy.search\":true,\"sd.approval.requested.when.handler\":true,\"sd.request.type.field.rest.api.filtering.bugfix\":true,\"sd.automation.then.action.auto.answer.approval\":true,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"sla.will.only.be.paused.if.they.are.already.started\":true,\"sd.kb.comment.share.stats.collection\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"sd.customer.orgs.group.participants\":true,\"sd.portal.help.center.customer.signup\":true,\"sd.sla.agent.jql.security.restricted\":true,\"sd.test.feature.flag.x\":true,\"sd.test.feature.flag.y\":false,\"sd.cluster.safe.mail.channel.shutdown\":true,\"sd.email.channel.folders\":false,\"sd.email.analytics.open\":false,\"sd.kb.project.creation.create.link.space\":true,\"sd.workinghours.new.page\":false,\"sd.confluence.anonymous.permission.fix\":true,\"com.atlassian.jira.issuetable.draggable\":true,\"sd.customer.portal.project.agent.announcement\":true,\"sd.automation.audit.log\":true,\"jira.jql.suggestrecentfields\":false,\"sd.canned.responses.check.index.startup\":false,\"sd.new.project.templates\":true,\"sd.custom.email.notifications.custom.rules.simple.ui\":false,\"sd.custom.email.notifications.cut.over\":true,\"sd.dismiss.all.misconfiguration.warnings.setting\":true,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"sd.sla.configurations.export\":true,\"sd.canned.responses.variable.substitution\":true,\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"sd.customer.portal.prioties.per.project.fix\":true,\"jira.instrumentation.laas\":false,\"sd.kb.self.service.report\":false,\"sla.improved.request.handling\":true,\"sd.no.schedule.async.upgrade.tasks\":true,\"sd.kb.primary.nav\":true,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"sd.kb.issueview.panel.phase2\":true,\"sd.email.outsider.comments\":true,\"jira.create.linked.issue\":true,\"sd.kb.issueview.panel\":true,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"sd.approvals.light.weight\":false,\"sd.automation.then.webhook\":true,\"sd.respect.inline.edit.issue.off\":true,\"jira.jql.smartautoselectfirst\":false,\"sd.global.portal.search.atlassian.only.tracking\":false,\"sd.automation.if.condition.comment.primary.action\":true,\"jira.priorities.per.project\":true,\"sd.inline.noformat.renderer\":true,\"sd.customer.request.type.create.edit.screens\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/png,image/vnd.wap.wbmp,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["com.atlassian.servicedesk.servicedesk-canned-responses-plugin:canned-responses-data-provider.data"]="{\"substitutionVariables\":{\"issue.summary\":\"Issue summary\",\"issue.description\":\"Issue description\",\"issue.key\":\"Issue key\",\"issue.reporter.name\":\"Issue reporter\",\"issue.resolution\":\"Issue resolution\",\"request.url\":\"Request URL\",\"request.status\":\"Request status\"}}";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.servicedesk.core-ui:util-help-links.help-links"]="{\"help\":{\"email.settings\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email\",\"managing.queues\":\"https://docs.atlassian.com/jira/jsd-docs-039/Setting+up+queues+for+your+team\",\"email.setup\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email\",\"request.settings.help.bubble\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+access+to+your+service+desk\",\"email.settings.suitablerequest\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email#Receivingrequestsbyemail-suitablerequest\",\"sla.import.help\":\"https://docs.atlassian.com/jira/jsd-docs-039/Importing+SLAs\",\"documentation.home\":\"https://docs.atlassian.com/jira/jsd-docs-039/JIRA+Service+Desk+Documentation\",\"default\":\"https://docs.atlassian.com/jira/jsd-docs-039/\",\"create.space.help\":\"https://docs.atlassian.com/jira/jsd-docs-039/Serving+customers+with+a+knowledge+base#serving-customers-with-a-knowledge-base-createpermission\",\"email.settings.troubleshooting\":\"https://docs.atlassian.com/jira/jsd-docs-039/Troubleshooting+issues+with+the+email+channel\",\"admin.notifications.config\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+service+desk+notifications\",\"troubleshoot.requesttype\":\"https://docs.atlassian.com/jira/jsd-docs-039/Troubleshooting+issues+with+request+types\",\"approvals.configuration\":\"https://docs.atlassian.com/jira/jsd-docs-039/Configuring+JIRA+Service+Desk+approvals\",\"setting.up.reports\":\"https://docs.atlassian.com/jira/jsd-docs-039/Setting+up+service+desk+reports\",\"public.signup\":\"https://docs.atlassian.com/jira/jsd-docs-039/Configuring+public+signup\",\"knowledge.base\":\"https://docs.atlassian.com/jira/jsd-docs-039/Serving+customers+with+a+knowledge+base\",\"resolve.permission.scheme.errors\":\"https://docs.atlassian.com/jira/jsd-docs-039/Resolving+permission+scheme+errors\",\"getting.started\":\"https://docs.atlassian.com/jira/jsd-docs-039/Getting+started+with+JIRA+Service+Desk\",\"getting.started.agent\":\"https://docs.atlassian.com/jira/jsd-docs-039/Getting+started+for+service+desk+agents\",\"invite.customers\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+access+to+your+service+desk\"},\"kb\":{\"default\":\"https://confluence.atlassian.com/display/SDKB/\",\"troubleshooting.user.management.issues\":\"https://confluence.atlassian.com/display/SDKB/Troubleshooting+issues+with+service+desk+user+management\",\"legacytransition\":\"https://confluence.atlassian.com/display/SDKB/Replacing+legacy+automatic+transitions+with+automation+rules\",\"umtroubleshoot\":\"https://confluence.atlassian.com/display/SDKB/Troubleshooting+issues+with+service+desk+user+management\"}}";
WRM._unparsedData["com.atlassian.servicedesk.core-ui:util-base-url.base-url"]="\"https://issues.apache.org/jira\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"1e160f720d0f\"";
WRM._unparsedData["project-id"]="12310230";
WRM._unparsedData["project-key"]="\"SOLR\"";
WRM._unparsedData["project-name"]="\"Solr\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="12310230";
WRM._unparsedData["projectKey"]="\"SOLR\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/1a6b21131945f6f49ff48336b49ca3fe-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/37a6e594cbbfd462a8a54d5aa11475c1/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/d8484c9183f546511a8e336a8779bcd9-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d3b35d835f8f46fc3b53bb4db7f85158-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/37a6e594cbbfd462a8a54d5aa11475c1/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/71d42e74136d842a3ef4d5d136484843-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/95a4826c265852f4904f1e0e7300df68-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/944bb39eced1b35cfc7194aa02eb5a5a/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/5a8f0f8b8aa8f96a4f0f7e9e248d62f3-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true&amp;sd_operational=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="SOLR-8323"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[SOLR-8323] Add CollectionWatcher API to ZkStateReader - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[SOLR-8323] Add CollectionWatcher API to ZkStateReader - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/SOLR" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FSOLR-8323">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="12310230" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Solr'" src="https://issues.apache.org/jira/secure/projectavatar?pid=12310230&amp;avatarId=22151"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/SOLR">Solr</a></li>
                 <li><a class="issue-link" data-issue-key="SOLR-8323" href="/jira/browse/SOLR-8323" id="key-val" rel="12914882">SOLR-8323</a></li>
                </ol>
                <h1 id="summary-val">Add CollectionWatcher API to ZkStateReader</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FSOLR-8323"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/SOLR-8323/SOLR-8323.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/SOLR-8323/SOLR-8323.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/SOLR-8323/SOLR-8323.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/SOLR-8323/SOLR-8323.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" title="Improvement - An improvement or enhancement to an existing feature or task." width="16"> Improvement </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/major.svg" title="Major - Major loss of function." width="16"> Major </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> <span class="shorten" id="versions-field"> <span title="6.0 First 6.x release, Major release after 5.5">6.0</span> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+SOLR+AND+fixVersion+%3D+6.1" title="6.1 Major release after 6.0">6.1</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> None </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <span class="labels" id="labels-12914882-value">None</span> 
                   </div> 
                  </div> </li> 
                </ul> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p>An API to watch for changes to collection state would be a generally useful thing, both internally and for client use.</p> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/SOLR-8323?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/SOLR-8323?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/SOLR-8323?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/SOLR-8323?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12803894" data-issue-id="12914882" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12803894/SOLR-8323.patch" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12803894/SOLR-8323.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12803894/SOLR-8323.patch" title="Latest  13/May/16 17:00 - Alan Woodward" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12803894/SOLR-8323.patch">SOLR-8323.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2016-05-13T17:00:25.787Z">13/May/16 17:00</time>
                   </dd>
                   <dd class="attachment-size">
                    50 kB
                   </dd>
                   <dd class="attachment-author">
                    Alan Woodward
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment earlier-version" data-attachment-id="12799263" data-issue-id="12914882" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12799263/SOLR-8323.patch" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12799263/SOLR-8323.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12799263/SOLR-8323.patch" title=" 18/Apr/16 14:35 - Alan Woodward" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12799263/SOLR-8323.patch">SOLR-8323.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2016-04-18T14:35:28.557Z">18/Apr/16 14:35</time>
                   </dd>
                   <dd class="attachment-size">
                    39 kB
                   </dd>
                   <dd class="attachment-author">
                    Alan Woodward
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment earlier-version" data-attachment-id="12792221" data-issue-id="12914882" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12792221/SOLR-8323.patch" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12792221/SOLR-8323.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12792221/SOLR-8323.patch" title=" 09/Mar/16 10:00 - Alan Woodward" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12792221/SOLR-8323.patch">SOLR-8323.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2016-03-09T10:00:38.119Z">09/Mar/16 10:00</time>
                   </dd>
                   <dd class="attachment-size">
                    39 kB
                   </dd>
                   <dd class="attachment-author">
                    Alan Woodward
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment earlier-version" data-attachment-id="12790457" data-issue-id="12914882" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12790457/SOLR-8323.patch" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12790457/SOLR-8323.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12790457/SOLR-8323.patch" title=" 29/Feb/16 11:55 - Alan Woodward" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12790457/SOLR-8323.patch">SOLR-8323.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2016-02-29T11:55:45.108Z">29/Feb/16 11:55</time>
                   </dd>
                   <dd class="attachment-size">
                    29 kB
                   </dd>
                   <dd class="attachment-author">
                    Alan Woodward
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment earlier-version" data-attachment-id="12773532" data-issue-id="12914882" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12773532/SOLR-8323.patch" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12773532/SOLR-8323.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12773532/SOLR-8323.patch" title=" 20/Nov/15 15:55 - Alan Woodward" draggable="true" data-downloadurl="text/plain:SOLR-8323.patch:https://issues.apache.org/jira/secure/attachment/12773532/SOLR-8323.patch">SOLR-8323.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2015-11-20T15:55:43.189Z">20/Nov/15 15:55</time>
                   </dd>
                   <dd class="attachment-size">
                    19 kB
                   </dd>
                   <dd class="attachment-author">
                    Alan Woodward
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="linkingmodule" class="module toggle-wrap">
               <div id="linkingmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Issue Links</h2>
               </div>
               <div class="mod-content"> 
                <div class="links-container" data-default-link-icon="/jira/images/icons/generic_link_16.png"> 
                 <dl class="links-list "> 
                  <dt title="links to">
                   links to
                  </dt> 
                  <dd id="remote-41619" data-remote-link-id="41619" class="
                        remote-link                                            "> 
                   <div class="link-content"> 
                    <p> <img src="/jira/images/icons/generic_link_16.png" width="16" height="16" title="Web Link" alt="Web Link"> <span title="GitHub Pull Request #32"> <a href="https://github.com/apache/lucene-solr/pull/32" class="link-title">GitHub Pull Request #32</a> <span class="link-summary"></span> </span> </p> 
                    <ul class="link-snapshot"> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                </div> 
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_romseygeek" rel="romseygeek" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Alan Woodward&quot;,&quot;emailAddress&quot;:&quot;alan.woodward@romseysoftware.co.uk&quot;,&quot;username&quot;:&quot;romseygeek&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="romseygeek"></span></span> Alan Woodward </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_romseygeek" rel="romseygeek" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Alan Woodward&quot;,&quot;emailAddress&quot;:&quot;alan.woodward@romseysoftware.co.uk&quot;,&quot;username&quot;:&quot;romseygeek&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="romseygeek"></span></span> Alan Woodward </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">1</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">9</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="20/Nov/15 15:43"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2015-11-20T15:43:02+0000">20/Nov/15 15:43</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="17/Jun/16 13:11"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2016-06-17T13:11:09+0000">17/Jun/16 13:11</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="23/May/16 20:34"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2016-05-23T20:34:54+0000">23/May/16 20:34</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for n/a, Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-8323?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/SOLR-8323?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-15018193\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15018193&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15018193\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15018193_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15018193_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Nov\\/15 15:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-11-20T15:55:43+0000\'\u003e20\\/Nov\\/15 15:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ePatch outlining the basic idea.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis adds two new interfaces, CollectionStateWatcher and CollectionStatePredicate.  The first can be registered for a particular collection with ZkStateReader and is called when the state of that collection changes (as determined by the internal watcher of that collection\'s state.json node).  The second is used in a new ZkStateReader.waitForState() method, and is called on a state change to see if the state of a collection matches a predicate.  There are also forwarding methods on CloudSolrClient for use by SolrJ clients, and a couple of helper methods on DocCollection and Replica to easily check for collection liveness.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe new interfaces lend themselves nicely to use as Java 8 functional interfaces, and the TestCollectionStateWatchers test demonstrate both lambdas and method references here.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis should make it easy to replace some of the helper methods (eg waitForThingsToLevelOut, waitForRecoveriesToFinish) in our tests with methods available to SolrJ.\u003c\\/p\u003e\\n\\n\u003cp\u003eA caveat: this is only implemented for collections with their own state.json.  I think it should be relatively easy to extend it to stateformat=1 collections as well if people think that\'s worth it.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15018193_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15018193_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Nov\\/15 15:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-11-20T15:55:43+0000\'\u003e20\\/Nov\\/15 15:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Patch outlining the basic idea. \\n\\n This adds two new interfaces, CollectionStateWatcher and CollectionStatePredicate.  The first can be registered for a particular collection with ZkStateReader and is called when the state of that collection changes (as determined by the internal watcher of that collection\'s state.json node).  The second is used in a new ZkStateReader.waitForState() method, and is called on a state change to see if the state of a collection matches a predicate.  There are also forwarding methods on CloudSolrClient for use by SolrJ clients, and a couple of helper methods on DocCollection and Replica to easily check for collection liveness. \\n\\n The new interfaces lend themselves nicely to use as Java 8 functional interfaces, and the TestCollectionStateWatchers test demonstrate both lambdas and method references here. \\n\\n This should make it easy to replace some of the helper methods (eg waitForThingsToLevelOut, waitForRecoveriesToFinish) in our tests with methods available to SolrJ. \\n\\n A caveat: this is only implemented for collections with their own state.json.  I think it should be relatively easy to extend it to stateformat=1 collections as well if people think that\'s worth it.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15018564\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15018564&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15018564\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"markrmiller@gmail.com\\\" id=\\\"commentauthor_15018564_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=markrmiller%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"markrmiller@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mark Miller\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15018564_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Nov\\/15 19:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-11-20T19:10:46+0000\'\u003e20\\/Nov\\/15 19:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003ewaitForThingsToLevelOut\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eThat one is pretty test specific.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eI think it should be relatively easy to extend it to stateformat=1 collections as well if people think that\'s worth it.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eSomeone should remove stateformat=1 for Solr 6 in an ideal world.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"markrmiller@gmail.com\\\" id=\\\"commentauthor_15018564_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=markrmiller%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"markrmiller@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mark Miller\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15018564_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Nov\\/15 19:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-11-20T19:10:46+0000\'\u003e20\\/Nov\\/15 19:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     waitForThingsToLevelOut  \\n\\n That one is pretty test specific. \\n\\n  I think it should be relatively easy to extend it to stateformat=1 collections as well if people think that\'s worth it.  \\n\\n Someone should remove stateformat=1 for Solr 6 in an ideal world.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15021785\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15021785&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15021785\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15021785_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15021785_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Nov\\/15 09:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-11-23T09:02:18+0000\'\u003e23\\/Nov\\/15 09:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eSomeone should remove stateformat=1 for Solr 6 in an ideal world\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eAbsolutely.  Maybe this new API should just go into trunk for now?  If Solr 6 is coming early in the new year it makes sense to start adding things that don\'t need to worry about back-compatibility.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15021785_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15021785_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Nov\\/15 09:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-11-23T09:02:18+0000\'\u003e23\\/Nov\\/15 09:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Someone should remove stateformat=1 for Solr 6 in an ideal world  \\n\\n Absolutely.  Maybe this new API should just go into trunk for now?  If Solr 6 is coming early in the new year it makes sense to start adding things that don\'t need to worry about back-compatibility.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15171785\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15171785&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15171785\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15171785_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15171785_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Feb\\/16 11:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-02-29T11:55:45+0000\'\u003e29\\/Feb\\/16 11:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eUpdated patch, using the SolrCloudTestCase from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8758\\\" title=\\\"Add SolrCloudTestCase base class\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8758\\\"\u003e\u003cdel\u003eSOLR-8758\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis has required a couple of tweaks to the collection-watching code in ZkStateReader, to allow for watching of non-existent collections.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15171785_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15171785_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Feb\\/16 11:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-02-29T11:55:45+0000\'\u003e29\\/Feb\\/16 11:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Updated patch, using the SolrCloudTestCase from   SOLR-8758  . \\n\\n This has required a couple of tweaks to the collection-watching code in ZkStateReader, to allow for watching of non-existent collections.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15180368\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15180368&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15180368\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15180368_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15180368_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/16 18:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-03-04T18:56:31+0000\'\u003e04\\/Mar\\/16 18:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eWhy is DocCollection.isFullyActive() static?\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cblockquote\u003e\u003cp\u003estateWatchers.putIfAbsent(collection, Collections.synchronizedList(new ArrayList&lt;&gt;()));\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eYou want computeIfAbsent() here to avoid the allocations.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eIf waitForState() exits with the TimeoutException, the watcher never gets removed.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eThere is a fundamental problem with how interestingCollections is getting managed now; there are external controls on that set, but now it\'s mixed up with the CollectionStateWatcher API.  As an example, CollectionStateWatcher adds but never removes; and an external caller could call removeZkWatcher on a collection that there\'s a listener for.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eThe way the code is structured with setCreationWatch and refreshAndWatch doesn\'t make sense to me. Why in the heck are they recursive?  I don\'t think you need all this.  I suspect what you really want is to move the call to notifyStateWatchers() and handle it more intelligently to not fire events if the state hasn\'t actually changed.  Basically, you want to call notifyStateWatchers() from within updateWatchedCollection() exactly at the 3 points we\'re emitting log messages.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15180368_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15180368_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/16 18:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-03-04T18:56:31+0000\'\u003e04\\/Mar\\/16 18:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n\\t Why is DocCollection.isFullyActive() static? \\n \\n\\n\\n  stateWatchers.putIfAbsent(collection, Collections.synchronizedList(new ArrayList&lt;&gt;()));  \\n\\n \\n\\t You want computeIfAbsent() here to avoid the allocations. \\n \\n\\n\\n \\n\\t If waitForState() exits with the TimeoutException, the watcher never gets removed. \\n \\n\\n\\n \\n\\t There is a fundamental problem with how interestingCollections is getting managed now; there are external controls on that set, but now it\'s mixed up with the CollectionStateWatcher API.  As an example, CollectionStateWatcher adds but never removes; and an external caller could call removeZkWatcher on a collection that there\'s a listener for. \\n \\n\\n\\n \\n\\t The way the code is structured with setCreationWatch and refreshAndWatch doesn\'t make sense to me. Why in the heck are they recursive?  I don\'t think you need all this.  I suspect what you really want is to move the call to notifyStateWatchers() and handle it more intelligently to not fire events if the state hasn\'t actually changed.  Basically, you want to call notifyStateWatchers() from within updateWatchedCollection() exactly at the 3 points we\'re emitting log messages. \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15186883\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15186883&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15186883\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15186883_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15186883_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/Mar\\/16 10:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-03-09T10:00:38+0000\'\u003e09\\/Mar\\/16 10:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for the review, Scott!  Here\'s an update patch.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eWhy is DocCollection.isFullyActive() static?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eBecause the DocCollection passed to onStateChanged() may be null if the collection doesn\'t exist, or has been deleted.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eIf waitForState() exits with the TimeoutException, the watcher never gets removed.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eFixed.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eBasically, you want to call notifyStateWatchers() from within updateWatchedCollection() exactly at the 3 points we\'re emitting log messages\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eDone, thanks - that\'s considerably simpler.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eThere is a fundamental problem with how interestingCollections is getting managed now\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI\'ve restructured this entirely.  Watches keep track of a) how many cores they have interested in them, and b) how many state watchers there are.  Changes to a CollectionWatch state are always done inside a ConcurrentHashMap.compute() method to keep them atomic.  This simplifies the watch handling in ZKController as well, and removes the abstraction leak where external objects controlled when to remove watches.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15186883_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15186883_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/Mar\\/16 10:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-03-09T10:00:38+0000\'\u003e09\\/Mar\\/16 10:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for the review, Scott!  Here\'s an update patch. \\n\\n  Why is DocCollection.isFullyActive() static?  \\n\\n Because the DocCollection passed to onStateChanged() may be null if the collection doesn\'t exist, or has been deleted. \\n\\n  If waitForState() exits with the TimeoutException, the watcher never gets removed.  \\n\\n Fixed. \\n\\n  Basically, you want to call notifyStateWatchers() from within updateWatchedCollection() exactly at the 3 points we\'re emitting log messages  \\n\\n Done, thanks - that\'s considerably simpler. \\n\\n  There is a fundamental problem with how interestingCollections is getting managed now  \\n\\n I\'ve restructured this entirely.  Watches keep track of a) how many cores they have interested in them, and b) how many state watchers there are.  Changes to a CollectionWatch state are always done inside a ConcurrentHashMap.compute() method to keep them atomic.  This simplifies the watch handling in ZKController as well, and removes the abstraction leak where external objects controlled when to remove watches.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15205105\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15205105&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15205105\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15205105_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15205105_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Mar\\/16 20:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-03-21T20:51:11+0000\'\u003e21\\/Mar\\/16 20:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI haven\'t forgotten this one, going to give the new patch a look this week (today or tomorrow)\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15205105_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15205105_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Mar\\/16 20:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-03-21T20:51:11+0000\'\u003e21\\/Mar\\/16 20:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I haven\'t forgotten this one, going to give the new patch a look this week (today or tomorrow)              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238145\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238145&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238145\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238145_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238145_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:43:56+0000\'\u003e12\\/Apr\\/16 22:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eLooking at this now.  BTW, a Github PR might actually make this way easier....\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238145_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238145_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:43:56+0000\'\u003e12\\/Apr\\/16 22:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Looking at this now.  BTW, a Github PR might actually make this way easier....              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238148\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238148&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238148\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238148_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238148_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:46:21+0000\'\u003e12\\/Apr\\/16 22:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI like the scheme of reference counting the ZkController core references\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238148_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238148_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:46:21+0000\'\u003e12\\/Apr\\/16 22:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I like the scheme of reference counting the ZkController core references              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238149\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238149&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238149\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238149_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238149_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:47:13+0000\'\u003e12\\/Apr\\/16 22:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCould collectionWatches and interestingCollections be unified into a single thing?\u003cbr\\/\u003e\\ncollectionWatches.keySet should always be equal to interestingCollections, so I don\'t a reason to have both\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238149_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238149_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:47:13+0000\'\u003e12\\/Apr\\/16 22:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Could collectionWatches and interestingCollections be unified into a single thing? \\ncollectionWatches.keySet should always be equal to interestingCollections, so I don\'t a reason to have both              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238166\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238166&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238166\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238166_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238166_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:50:52+0000\'\u003e12\\/Apr\\/16 22:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003enit: make the static type of collectionWatchers be ConcurrentMap?  Conveys intent better and plays nicer in IDE.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238166_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238166_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:50:52+0000\'\u003e12\\/Apr\\/16 22:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    nit: make the static type of collectionWatchers be ConcurrentMap?  Conveys intent better and plays nicer in IDE.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238170\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238170&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238170\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238170_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238170_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:54:16+0000\'\u003e12\\/Apr\\/16 22:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eunregisterCore needs a better guard against under-referencing, since it can be called from the outside.\u003cbr\\/\u003e\\nA caller could call unregisterCore enough times to make coreRefCount negative, offsetting a positive stateWatchers.size() and prematurely removing.\u003cbr\\/\u003e\\nMight even be advisable to throw an exception here on under reference.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238170_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238170_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:54:16+0000\'\u003e12\\/Apr\\/16 22:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    unregisterCore needs a better guard against under-referencing, since it can be called from the outside. \\nA caller could call unregisterCore enough times to make coreRefCount negative, offsetting a positive stateWatchers.size() and prematurely removing. \\nMight even be advisable to throw an exception here on under reference.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238178\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238178&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238178\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238178_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238178_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:57:49+0000\'\u003e12\\/Apr\\/16 22:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003eLOG.info(\u003cspan class=\\\"code-quote\\\"\u003e\\\"Deleting data \u003cspan class=\\\"code-keyword\\\"\u003efor\u003c\\/span\u003e [{}]\\\"\u003c\\/span\u003e, coll);\\nnotifyStateWatchers(coll, newState);\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003enewState is always null (IDE warning) so maybe just pass in null\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238178_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238178_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:57:49+0000\'\u003e12\\/Apr\\/16 22:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     \\n LOG.info( \\\"Deleting data  for  [{}]\\\" , coll);\\nnotifyStateWatchers(coll, newState);\\n \\n  \\n\\n newState is always null (IDE warning) so maybe just pass in null              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238180\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238180&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238180\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238180_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238180_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:59:38+0000\'\u003e12\\/Apr\\/16 22:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e    \u003cspan class=\\\"code-keyword\\\"\u003eif\u003c\\/span\u003e (watchers.size() == 0)\\n      \u003cspan class=\\\"code-keyword\\\"\u003ereturn\u003c\\/span\u003e;\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eNo need to early exit here, the loop will do it anyway\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238180_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238180_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 22:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T22:59:38+0000\'\u003e12\\/Apr\\/16 22:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     \\n      if  (watchers.size() == 0)\\n       return ;\\n \\n  \\n\\n No need to early exit here, the loop will do it anyway              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238183\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238183&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238183\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238183_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238183_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:00:52+0000\'\u003e12\\/Apr\\/16 23:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIn notifyStateWatchers you can avoid some copies but just re-assigning the instance variable to a new empty set, and taking ownership of the existing set to fire events on.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238183_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238183_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:00:52+0000\'\u003e12\\/Apr\\/16 23:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    In notifyStateWatchers you can avoid some copies but just re-assigning the instance variable to a new empty set, and taking ownership of the existing set to fire events on.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238186\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238186&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238186\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238186_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238186_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:02:52+0000\'\u003e12\\/Apr\\/16 23:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIn getStateWatchers() you probably still want to wrap in a compute function to avoid weird race conditions and memory-visibility problems.  In particular there\'s absolutely no ordering guarantees on the reference to watch.stateWatchers\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238186_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238186_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:02:52+0000\'\u003e12\\/Apr\\/16 23:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    In getStateWatchers() you probably still want to wrap in a compute function to avoid weird race conditions and memory-visibility problems.  In particular there\'s absolutely no ordering guarantees on the reference to watch.stateWatchers              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238207\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238207&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238207\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238207_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238207_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:09:23+0000\'\u003e12\\/Apr\\/16 23:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003efetchCollectionState() expectExists parameter doesn\'t make sense to me... I would have thought that if a non-null watcher is passed in, you always want to setup an exists watch if the node doesn\'t exist.  And if a null watcher is passed in, calling exists() is a waste of energy.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238207_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238207_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:09:23+0000\'\u003e12\\/Apr\\/16 23:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    fetchCollectionState() expectExists parameter doesn\'t make sense to me... I would have thought that if a non-null watcher is passed in, you always want to setup an exists watch if the node doesn\'t exist.  And if a null watcher is passed in, calling exists() is a waste of energy.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238210\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238210&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238210\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238210_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238210_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:11:55+0000\'\u003e12\\/Apr\\/16 23:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eregisterCore\\/ unregisterCore should probably retain the previous doc:\u003c\\/p\u003e\\n\\n\u003cp\u003e\\/** This is not a public API. Only used by ZkController *\\/\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238210_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238210_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:11:55+0000\'\u003e12\\/Apr\\/16 23:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    registerCore\\/ unregisterCore should probably retain the previous doc: \\n\\n \\/** This is not a public API. Only used by ZkController *\\/              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238214\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238214&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238214\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238214_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238214_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:13:36+0000\'\u003e12\\/Apr\\/16 23:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003egetStateWatchers() could return null vs. empty set to differentiate between whether or not the collection is being watched, which would improve the precision of test assertions.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238214_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238214_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:13:36+0000\'\u003e12\\/Apr\\/16 23:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    getStateWatchers() could return null vs. empty set to differentiate between whether or not the collection is being watched, which would improve the precision of test assertions.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15238243\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15238243&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15238243\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238243_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238243_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:30:57+0000\'\u003e12\\/Apr\\/16 23:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI did get one failure on a test run:\u003cbr\\/\u003e\\n\\\"Did not see a fully active cluster after 30 seconds\\\"\u003c\\/p\u003e\\n\\n\u003cp\u003eBut second run it passed.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15238243_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15238243_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/16 23:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-12T23:30:57+0000\'\u003e12\\/Apr\\/16 23:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I did get one failure on a test run: \\n\\\"Did not see a fully active cluster after 30 seconds\\\" \\n\\n But second run it passed.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15245755\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15245755&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15245755\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15245755_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15245755_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Apr\\/16 14:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-18T14:35:28+0000\'\u003e18\\/Apr\\/16 14:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWow, thanks for the very thorough review Scott!  Here\'s an updated patch.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eCould collectionWatches and interestingCollections be unified into a single thing?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eUnfortunately not, as it\'s needed to detect collections which have migrated from state format 1 to state format 2.  There\'s almost certainly a nicer way of doing that, though - maybe in a follow-up issue?\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003emake the static type of collectionWatchers be ConcurrentMap?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI disagree here - we don\'t use any of the concurrent methods, so I think just using Map is fine?\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eunregisterCore needs a better guard against under-referencing\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eAdded.  I don\'t think throwing an exception is necessary, although maybe we should log a warning in this case?\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003enewState is always null\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003echanged\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eNo need to early exit here\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003echanged\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eIn notifyStateWatchers you can avoid some copies...\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI think this ends up as a wash, given that you may end up creating multiple HashSets?  And we\'re only copying references, after all.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eIn getStateWatchers() you probably still want to wrap in a compute function...\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eCompute() doesn\'t help here, I don\'t think?  And given that it\'s a test-only method, I\'m not too concerned about accuracy.  I\'ve made it return a copy rather than return the original set, which should stop weird things happening to it once it\'s been returned, though.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003efetchCollectionState() expectExists parameter doesn\'t make sense to me\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eAgain, this is due to state format 1 - a collection state might be in clusterstate.json, so the collection-specific state might not exist.  I agree about the null watcher though, and have added a check around the exists call for that.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eregisterCore\\/ unregisterCore should probably retain the previous doc:\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eAdded back\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003egetStateWatchers() could return null vs. empty set\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eNice idea, added.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'ve also added an explicit test for state format 1 collections, and updated the code so that it actually works \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15245755_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15245755_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Apr\\/16 14:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-18T14:35:28+0000\'\u003e18\\/Apr\\/16 14:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Wow, thanks for the very thorough review Scott!  Here\'s an updated patch. \\n\\n  Could collectionWatches and interestingCollections be unified into a single thing?  \\n\\n Unfortunately not, as it\'s needed to detect collections which have migrated from state format 1 to state format 2.  There\'s almost certainly a nicer way of doing that, though - maybe in a follow-up issue? \\n\\n  make the static type of collectionWatchers be ConcurrentMap?  \\n\\n I disagree here - we don\'t use any of the concurrent methods, so I think just using Map is fine? \\n\\n  unregisterCore needs a better guard against under-referencing  \\n\\n Added.  I don\'t think throwing an exception is necessary, although maybe we should log a warning in this case? \\n\\n  newState is always null  \\n\\n changed \\n\\n  No need to early exit here  \\n\\n changed \\n\\n  In notifyStateWatchers you can avoid some copies...  \\n\\n I think this ends up as a wash, given that you may end up creating multiple HashSets?  And we\'re only copying references, after all. \\n\\n  In getStateWatchers() you probably still want to wrap in a compute function...  \\n\\n Compute() doesn\'t help here, I don\'t think?  And given that it\'s a test-only method, I\'m not too concerned about accuracy.  I\'ve made it return a copy rather than return the original set, which should stop weird things happening to it once it\'s been returned, though. \\n\\n  fetchCollectionState() expectExists parameter doesn\'t make sense to me  \\n\\n Again, this is due to state format 1 - a collection state might be in clusterstate.json, so the collection-specific state might not exist.  I agree about the null watcher though, and have added a check around the exists call for that. \\n\\n  registerCore\\/ unregisterCore should probably retain the previous doc:  \\n\\n Added back \\n\\n  getStateWatchers() could return null vs. empty set  \\n\\n Nice idea, added. \\n\\n I\'ve also added an explicit test for state format 1 collections, and updated the code so that it actually works                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15246778\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15246778&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15246778\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15246778_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15246778_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Apr\\/16 23:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-18T23:45:20+0000\'\u003e18\\/Apr\\/16 23:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eDon\'t suppose I could convince you to open a github PR?  Would make it much easier to review. \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/biggrin.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15246778_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15246778_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Apr\\/16 23:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-18T23:45:20+0000\'\u003e18\\/Apr\\/16 23:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Don\'t suppose I could convince you to open a github PR?  Would make it much easier to review.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15250364\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15250364&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15250364\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15250364_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15250364_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Apr\\/16 17:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-20T17:52:26+0000\'\u003e20\\/Apr\\/16 17:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGitHub user romseygeek opened a pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Adds a CollectionStateWatcher API to listen for changes to collection state (\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e)\u003c\\/p\u003e\\n\\n\u003cp\u003eYou can merge this pull request into a Git repository by running:\u003c\\/p\u003e\\n\\n\u003cp\u003e    $ git pull \u003ca href=\\\"https:\\/\\/github.com\\/romseygeek\\/lucene-solr\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/romseygeek\\/lucene-solr\u003c\\/a\u003e \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eAlternatively you can review and apply these changes as the patch at:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32.patch\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32.patch\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eTo close this pull request, make a commit to your master\\/trunk branch\u003cbr\\/\u003e\\nwith (at least) the following in the commit message:\u003c\\/p\u003e\\n\\n\u003cp\u003e    This closes #32\u003c\\/p\u003e\\n\\n\u003chr \\/\u003e\\n\\n\u003chr \\/\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15250364_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15250364_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Apr\\/16 17:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-20T17:52:26+0000\'\u003e20\\/Apr\\/16 17:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    GitHub user romseygeek opened a pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32  \\n\\n       SOLR-8323   \\n\\n     Adds a CollectionStateWatcher API to listen for changes to collection state (  SOLR-8323  ) \\n\\n You can merge this pull request into a Git repository by running: \\n\\n     $ git pull  https:\\/\\/github.com\\/romseygeek\\/lucene-solr    SOLR-8323   \\n\\n Alternatively you can review and apply these changes as the patch at: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32.patch  \\n\\n To close this pull request, make a commit to your master\\/trunk branch \\nwith (at least) the following in the commit message: \\n\\n     This closes #32 \\n\\n \\n\\n              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15250369\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15250369&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15250369\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15250369_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15250369_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Apr\\/16 17:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-20T17:54:00+0000\'\u003e20\\/Apr\\/16 17:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ePull request opened, review away!  I see that you\'ve already committed some changes to the way legacy collections are dealt with, so we may well be able to remove the \'interestingcollections\' list - will give it a go.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15250369_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15250369_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Apr\\/16 17:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-20T17:54:00+0000\'\u003e20\\/Apr\\/16 17:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Pull request opened, review away!  I see that you\'ve already committed some changes to the way legacy collections are dealt with, so we may well be able to remove the \'interestingcollections\' list - will give it a go.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15260262\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15260262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15260262\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15260262_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15260262_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Apr\\/16 14:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-27T14:39:02+0000\'\u003e27\\/Apr\\/16 14:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\" class=\\\"user-hover\\\" rel=\\\"dragonsinth\\\"\u003eScott Blum\u003c\\/a\u003e any comments on the pull request?  I\'d like to get this in soon, as it will make it easier to clean up a bunch of tests.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15260262_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15260262_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Apr\\/16 14:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-27T14:39:02+0000\'\u003e27\\/Apr\\/16 14:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Scott Blum  any comments on the pull request?  I\'d like to get this in soon, as it will make it easier to clean up a bunch of tests.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15260519\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15260519&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15260519\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15260519_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15260519_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Apr\\/16 17:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-27T17:19:18+0000\'\u003e27\\/Apr\\/16 17:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eSorry! I\'ll look at it today. Been swamped with other stuff. \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/sad.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15260519_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15260519_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Apr\\/16 17:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-27T17:19:18+0000\'\u003e27\\/Apr\\/16 17:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Sorry! I\'ll look at it today. Been swamped with other stuff.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263015\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263015&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263015\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263015_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263015_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:15:06+0000\'\u003e28\\/Apr\\/16 21:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61503724\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61503724\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/client\\/solrj\\/impl\\/CloudSolrClient.java &#8212;\u003cbr\\/\u003e\\n    @@ -572,6 +574,40 @@ public void downloadConfig(String configName, Path downloadPath) throws IOExcept\u003cbr\\/\u003e\\n         zkStateReader.getConfigManager().downloadConfigDir(configName, downloadPath);\u003cbr\\/\u003e\\n       }\u003c\\/p\u003e\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a collection state matches a predicate, or a timeout\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection to watch\u003cbr\\/\u003e\\n    +   * @param wait       how long to wait\u003cbr\\/\u003e\\n    +   * @param unit       the units of the wait parameter\u003cbr\\/\u003e\\n    +   * @param predicate  a \u003c\\/p\u003e\\n{@link CollectionStatePredicate}\\n\u003cp\u003e to check the collection state\u003cbr\\/\u003e\\n    +   * @throws InterruptedException on interrupt\u003cbr\\/\u003e\\n    +   * @throws TimeoutException on timeout\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void waitForState(String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate)\u003cbr\\/\u003e\\n    +      throws InterruptedException, TimeoutException \u003c\\/p\u003e\\n{\\n    +    connect();\\n    +    zkStateReader.waitForState(collection, wait, unit, predicate);\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the cluster state for a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the watcher is unregistered after it has been called once.  To make a watcher persistent,\u003cbr\\/\u003e\\n    +   * it should re-register itself in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * call\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection to watch\u003cbr\\/\u003e\\n    +   * @param watcher    a watcher that will be called when the state changes\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher watcher) \u003c\\/p\u003e\\n{\\n    +    connect();\\n    +    zkStateReader.registerCollectionStateWatcher(collection, watcher);\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    I would note that getZkStateReader() is a public method, is there value in adding these forwarding methods?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263015_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263015_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:15:06+0000\'\u003e28\\/Apr\\/16 21:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61503724  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/client\\/solrj\\/impl\\/CloudSolrClient.java &#8212; \\n    @@ -572,6 +574,40 @@ public void downloadConfig(String configName, Path downloadPath) throws IOExcept \\n         zkStateReader.getConfigManager().downloadConfigDir(configName, downloadPath); \\n       } \\n\\n     +  \\/** \\n    +   * Block until a collection state matches a predicate, or a timeout \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    +   * \\n    +   * @param collection the collection to watch \\n    +   * @param wait       how long to wait \\n    +   * @param unit       the units of the wait parameter \\n    +   * @param predicate  a  \\n{@link CollectionStatePredicate}\\n  to check the collection state \\n    +   * @throws InterruptedException on interrupt \\n    +   * @throws TimeoutException on timeout \\n    +   *\\/ \\n    +  public void waitForState(String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate) \\n    +      throws InterruptedException, TimeoutException  \\n{\\n    +    connect();\\n    +    zkStateReader.waitForState(collection, wait, unit, predicate);\\n    +  }\\n     + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the cluster state for a collection changes \\n    +   * \\n    +   * Note that the watcher is unregistered after it has been called once.  To make a watcher persistent, \\n    +   * it should re-register itself in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * call \\n    +   * \\n    +   * @param collection the collection to watch \\n    +   * @param watcher    a watcher that will be called when the state changes \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher watcher)  \\n{\\n    +    connect();\\n    +    zkStateReader.registerCollectionStateWatcher(collection, watcher);\\n    +  }\\n     + \\n    &#8212; End diff &#8211; \\n\\n     I would note that getZkStateReader() is a public method, is there value in adding these forwarding methods?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263020\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263020&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263020\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263020_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263020_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:17:07+0000\'\u003e28\\/Apr\\/16 21:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504017\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504017\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStatePredicate.java &#8212;\u003cbr\\/\u003e\\n    @@ -0,0 +1,41 @@\u003cbr\\/\u003e\\n    +package org.apache.solr.common.cloud;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/*\u003cbr\\/\u003e\\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\u003cbr\\/\u003e\\n    + * contributor license agreements.  See the NOTICE file distributed with\u003cbr\\/\u003e\\n    + * this work for additional information regarding copyright ownership.\u003cbr\\/\u003e\\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\u003cbr\\/\u003e\\n    + * (the \\\"License\\\"); you may not use this file except in compliance with\u003cbr\\/\u003e\\n    + * the License.  You may obtain a copy of the License at\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + *     \u003ca href=\\\"http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\u003c\\/a\u003e\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * Unless required by applicable law or agreed to in writing, software\u003cbr\\/\u003e\\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\u003cbr\\/\u003e\\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u003cbr\\/\u003e\\n    + * See the License for the specific language governing permissions and\u003cbr\\/\u003e\\n    + * limitations under the License.\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import java.util.Set;\u003cbr\\/\u003e\\n    +import java.util.concurrent.TimeUnit;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/**\u003cbr\\/\u003e\\n    + * Interface to determine if a collection state matches a required state\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * @see ZkStateReader#waitForState(String, long, TimeUnit, CollectionStatePredicate)\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    +public interface CollectionStatePredicate {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Check the collection state matches a required state\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The collectionState parameter may be null if the collection does not exist\u003cbr\\/\u003e\\n    +   * or has been deleted\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    This wants to be `@param collectionState the current collection state, or null if the collection doesn\'t exist or has been deleted`\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263020_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263020_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:17:07+0000\'\u003e28\\/Apr\\/16 21:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504017  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStatePredicate.java &#8212; \\n    @@ -0,0 +1,41 @@ \\n    +package org.apache.solr.common.cloud; \\n    + \\n    +\\/* \\n    + * Licensed to the Apache Software Foundation (ASF) under one or more \\n    + * contributor license agreements.  See the NOTICE file distributed with \\n    + * this work for additional information regarding copyright ownership. \\n    + * The ASF licenses this file to You under the Apache License, Version 2.0 \\n    + * (the \\\"License\\\"); you may not use this file except in compliance with \\n    + * the License.  You may obtain a copy of the License at \\n    + * \\n    + *      http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0  \\n    + * \\n    + * Unless required by applicable law or agreed to in writing, software \\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS, \\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \\n    + * See the License for the specific language governing permissions and \\n    + * limitations under the License. \\n    + *\\/ \\n    + \\n    +import java.util.Set; \\n    +import java.util.concurrent.TimeUnit; \\n    + \\n    +\\/** \\n    + * Interface to determine if a collection state matches a required state \\n    + * \\n    + * @see ZkStateReader#waitForState(String, long, TimeUnit, CollectionStatePredicate) \\n    + *\\/ \\n    +public interface CollectionStatePredicate { \\n    + \\n    +  \\/** \\n    +   * Check the collection state matches a required state \\n    +   * \\n    +   * The collectionState parameter may be null if the collection does not exist \\n    +   * or has been deleted \\n    &#8212; End diff &#8211; \\n\\n     This wants to be `@param collectionState the current collection state, or null if the collection doesn\'t exist or has been deleted`              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263034\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263034&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263034\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263034_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263034_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:21:53+0000\'\u003e28\\/Apr\\/16 21:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504670\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504670\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212;\u003cbr\\/\u003e\\n    @@ -0,0 +1,42 @@\u003cbr\\/\u003e\\n    +package org.apache.solr.common.cloud;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/*\u003cbr\\/\u003e\\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\u003cbr\\/\u003e\\n    + * contributor license agreements.  See the NOTICE file distributed with\u003cbr\\/\u003e\\n    + * this work for additional information regarding copyright ownership.\u003cbr\\/\u003e\\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\u003cbr\\/\u003e\\n    + * (the \\\"License\\\"); you may not use this file except in compliance with\u003cbr\\/\u003e\\n    + * the License.  You may obtain a copy of the License at\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + *     \u003ca href=\\\"http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\u003c\\/a\u003e\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * Unless required by applicable law or agreed to in writing, software\u003cbr\\/\u003e\\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\u003cbr\\/\u003e\\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u003cbr\\/\u003e\\n    + * See the License for the specific language governing permissions and\u003cbr\\/\u003e\\n    + * limitations under the License.\u003cbr\\/\u003e\\n    +*\\/\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import java.util.Set;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/**\u003cbr\\/\u003e\\n    + * Callback registered with \u003c\\/p\u003e\\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n\u003cp\u003e    + * and called whenever the collection state changes.\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    +public interface CollectionStateWatcher \u003c\\/p\u003e\\n{\\n    +\\n    +  \\/**\\n    +   * Called when the collection we are registered against has a change of state\\n    +   *\\n    +   * Note that, due to the way Zookeeper watchers are implemented, a single call may be\\n    +   * the result of several state changes\\n    +   *\\n    +   * A watcher is unregistered after it has been called once.  To make a watcher persistent,\\n    +   * implementors should re-register during this call.\\n    +   *\\n    +   * @param liveNodes       the set of live nodes\\n    +   * @param collectionState the new collection state\\n    +   *\\/\\n    +  void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState);\\n    +\\n    +}\\n\u003cp\u003e    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    I just want to toss out an idea here after looking at this some more.  I notice that CollectionStateWatcher and CollectionStatePredicate are nearly identical.  What would you think about combining the two into a single interface?\u003c\\/p\u003e\\n\\n\u003cp\u003e    The signature could be e.g.:\u003c\\/p\u003e\\n\\n\u003cp\u003e    bool stateChanged(liveNodes, collectionState)\u003c\\/p\u003e\\n\\n\u003cp\u003e    In a watch context, the return value means \\\"keep watching?\\\".  So return true to reset the watcher and continue getting updates, or return false to stop watching.\u003c\\/p\u003e\\n\\n\u003cp\u003e    In a predicate context, the return value means \\\"keep waiting?\\\".  So return true to keep waiting, or return false if you\'ve finally seen what you were waiting for.\u003c\\/p\u003e\\n\\n\u003cp\u003e    They\'ll both have the same semantic meaning either way.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263034_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263034_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:21:53+0000\'\u003e28\\/Apr\\/16 21:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504670  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212; \\n    @@ -0,0 +1,42 @@ \\n    +package org.apache.solr.common.cloud; \\n    + \\n    +\\/* \\n    + * Licensed to the Apache Software Foundation (ASF) under one or more \\n    + * contributor license agreements.  See the NOTICE file distributed with \\n    + * this work for additional information regarding copyright ownership. \\n    + * The ASF licenses this file to You under the Apache License, Version 2.0 \\n    + * (the \\\"License\\\"); you may not use this file except in compliance with \\n    + * the License.  You may obtain a copy of the License at \\n    + * \\n    + *      http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0  \\n    + * \\n    + * Unless required by applicable law or agreed to in writing, software \\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS, \\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \\n    + * See the License for the specific language governing permissions and \\n    + * limitations under the License. \\n    +*\\/ \\n    + \\n    +import java.util.Set; \\n    + \\n    +\\/** \\n    + * Callback registered with  \\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n     + * and called whenever the collection state changes. \\n    + *\\/ \\n    +public interface CollectionStateWatcher  \\n{\\n    +\\n    +  \\/**\\n    +   * Called when the collection we are registered against has a change of state\\n    +   *\\n    +   * Note that, due to the way Zookeeper watchers are implemented, a single call may be\\n    +   * the result of several state changes\\n    +   *\\n    +   * A watcher is unregistered after it has been called once.  To make a watcher persistent,\\n    +   * implementors should re-register during this call.\\n    +   *\\n    +   * @param liveNodes       the set of live nodes\\n    +   * @param collectionState the new collection state\\n    +   *\\/\\n    +  void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState);\\n    +\\n    +}\\n     &#8212; End diff &#8211; \\n\\n     I just want to toss out an idea here after looking at this some more.  I notice that CollectionStateWatcher and CollectionStatePredicate are nearly identical.  What would you think about combining the two into a single interface? \\n\\n     The signature could be e.g.: \\n\\n     bool stateChanged(liveNodes, collectionState) \\n\\n     In a watch context, the return value means \\\"keep watching?\\\".  So return true to reset the watcher and continue getting updates, or return false to stop watching. \\n\\n     In a predicate context, the return value means \\\"keep waiting?\\\".  So return true to keep waiting, or return false if you\'ve finally seen what you were waiting for. \\n\\n     They\'ll both have the same semantic meaning either way.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263038\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263038&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263038\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263038_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263038_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:23:02+0000\'\u003e28\\/Apr\\/16 21:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504824\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504824\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/DocCollection.java &#8212;\u003cbr\\/\u003e\\n    @@ -210,6 +213,38 @@ public Replica getReplica(String coreNodeName) \u003c\\/p\u003e\\n{\\n         return null;\\n       }\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Check that all replicas in a collection are live\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see CollectionStatePredicate\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public static boolean isFullyActive(Set&lt;String&gt; liveNodes, DocCollection collectionState) {\u003cbr\\/\u003e\\n    +    Objects.requireNonNull(liveNodes);\u003cbr\\/\u003e\\n    +    if (collectionState == null)\u003cbr\\/\u003e\\n    +      return false;\u003cbr\\/\u003e\\n    +    for (Slice slice : collectionState) {\u003cbr\\/\u003e\\n    +      for (Replica replica : slice) \u003c\\/p\u003e\\n{\\n    +        if (replica.isActive(liveNodes) == false)\\n    +          return false;\\n    +      }\\n\u003cp\u003e    +    }\u003cbr\\/\u003e\\n    +    return true;\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Returns true if the passed in DocCollection is null\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see CollectionStatePredicate\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public static boolean isDeleted(Set&lt;String&gt; liveNodes, DocCollection collectionState) \u003c\\/p\u003e\\n{\\n    +    return collectionState == null;\\n    +  }\\n\u003cp\u003e    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    maybe `exists`? isDeleted implies that it used to exist, but it may have never been created\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263038_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263038_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:23:02+0000\'\u003e28\\/Apr\\/16 21:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61504824  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/DocCollection.java &#8212; \\n    @@ -210,6 +213,38 @@ public Replica getReplica(String coreNodeName)  \\n{\\n         return null;\\n       }\\n\\n     +  \\/** \\n    +   * Check that all replicas in a collection are live \\n    +   * \\n    +   * @see CollectionStatePredicate \\n    +   *\\/ \\n    +  public static boolean isFullyActive(Set&lt;String&gt; liveNodes, DocCollection collectionState) { \\n    +    Objects.requireNonNull(liveNodes); \\n    +    if (collectionState == null) \\n    +      return false; \\n    +    for (Slice slice : collectionState) { \\n    +      for (Replica replica : slice)  \\n{\\n    +        if (replica.isActive(liveNodes) == false)\\n    +          return false;\\n    +      }\\n     +    } \\n    +    return true; \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Returns true if the passed in DocCollection is null \\n    +   * \\n    +   * @see CollectionStatePredicate \\n    +   *\\/ \\n    +  public static boolean isDeleted(Set&lt;String&gt; liveNodes, DocCollection collectionState)  \\n{\\n    +    return collectionState == null;\\n    +  }\\n     &#8212; End diff &#8211; \\n\\n     maybe `exists`? isDeleted implies that it used to exist, but it may have never been created              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263080\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263080&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263080\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263080_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263080_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:41:12+0000\'\u003e28\\/Apr\\/16 21:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61507382\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61507382\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -484,6 +498,12 @@ private void refreshLegacyClusterState(Watcher watcher)\u003cbr\\/\u003e\\n             }\u003cbr\\/\u003e\\n             this.legacyCollectionStates = loadedData.getCollectionStates();\u003cbr\\/\u003e\\n             this.legacyClusterStateVersion = stat.getVersion();\u003cbr\\/\u003e\\n    +        for (Map.Entry&lt;String, ClusterState.CollectionRef&gt; entry : this.legacyCollectionStates.entrySet()) {\u003cbr\\/\u003e\\n    +          if (entry.getValue().isLazilyLoaded() == false) \u003c\\/p\u003e\\n{\\n    +            \\/\\/ a watched collection - trigger notifications\\n    +            notifyStateWatchers(entry.getKey(), entry.getValue().get());\\n    +          }\\n\u003cp\u003e    +        }\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    I think it would add a lot of value here to actually check differences.  There really wouldn\'t be much computational work since you could restrict it to watched collections.  Something like:\u003c\\/p\u003e\\n\\n\u003cp\u003e    ```\u003cbr\\/\u003e\\n            for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) {\u003cbr\\/\u003e\\n              String coll = watchEntry.getKey();\u003cbr\\/\u003e\\n              CollectionWatch collWatch = watchEntry.getValue();\u003cbr\\/\u003e\\n              DocCollection newState = this.legacyCollectionStates.get(coll).get();\u003cbr\\/\u003e\\n              if (!collWatch.stateWatchers.isEmpty()\u003cbr\\/\u003e\\n                  &amp;&amp; !Objects.equals(oldCollectionStates.get(coll).get(), newState)) \u003c\\/p\u003e\\n{\\n                notifyStateWatchers(coll, newState);\\n              }\\n\u003cp\u003e            }\u003cbr\\/\u003e\\n    ```\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263080_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263080_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:41:12+0000\'\u003e28\\/Apr\\/16 21:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61507382  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -484,6 +498,12 @@ private void refreshLegacyClusterState(Watcher watcher) \\n             } \\n             this.legacyCollectionStates = loadedData.getCollectionStates(); \\n             this.legacyClusterStateVersion = stat.getVersion(); \\n    +        for (Map.Entry&lt;String, ClusterState.CollectionRef&gt; entry : this.legacyCollectionStates.entrySet()) { \\n    +          if (entry.getValue().isLazilyLoaded() == false)  \\n{\\n    +            \\/\\/ a watched collection - trigger notifications\\n    +            notifyStateWatchers(entry.getKey(), entry.getValue().get());\\n    +          }\\n     +        } \\n    &#8212; End diff &#8211; \\n\\n     I think it would add a lot of value here to actually check differences.  There really wouldn\'t be much computational work since you could restrict it to watched collections.  Something like: \\n\\n     ``` \\n            for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) { \\n              String coll = watchEntry.getKey(); \\n              CollectionWatch collWatch = watchEntry.getValue(); \\n              DocCollection newState = this.legacyCollectionStates.get(coll).get(); \\n              if (!collWatch.stateWatchers.isEmpty() \\n                  &amp;&amp; !Objects.equals(oldCollectionStates.get(coll).get(), newState))  \\n{\\n                notifyStateWatchers(coll, newState);\\n              }\\n             } \\n    ``` \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263087\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263087&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263087\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263087_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263087_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:45:44+0000\'\u003e28\\/Apr\\/16 21:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61507961\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61507961\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -131,6 +132,19 @@\u003c\\/p\u003e\\n\\n\u003cp\u003e       private final Runnable securityNodeListener;\u003c\\/p\u003e\\n\\n\u003cp\u003e    +  private Map&lt;String, CollectionWatch&gt; collectionWatches = new ConcurrentHashMap&lt;&gt;();\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    The reason I made a comment about using the concrete type here is that it makes it much easier to work with as a developer.  When you can see that the static type of this variable is ConcurrentHashMap, that helps you evaluate the code that touches it.\u003c\\/p\u003e\\n\\n\u003cp\u003e    For example, when you use IDE features to \'click through\' a method call or view the javadoc on a called method, you get the ConcurrentHashMap version of the javadoc\\/method instead of the Map version, which helps you more easily evaluate the correctness.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263087_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263087_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:45:44+0000\'\u003e28\\/Apr\\/16 21:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61507961  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -131,6 +132,19 @@ \\n\\n        private final Runnable securityNodeListener; \\n\\n     +  private Map&lt;String, CollectionWatch&gt; collectionWatches = new ConcurrentHashMap&lt;&gt;(); \\n    &#8212; End diff &#8211; \\n\\n     The reason I made a comment about using the concrete type here is that it makes it much easier to work with as a developer.  When you can see that the static type of this variable is ConcurrentHashMap, that helps you evaluate the code that touches it. \\n\\n     For example, when you use IDE features to \'click through\' a method call or view the javadoc on a called method, you get the ConcurrentHashMap version of the javadoc\\/method instead of the Map version, which helps you more easily evaluate the correctness.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263094\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263094&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263094\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263094_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263094_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:53:53+0000\'\u003e28\\/Apr\\/16 21:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61508998\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61508998\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e       }\u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection to watch\u003cbr\\/\u003e\\n    +   * @param wait       how long to wait\u003cbr\\/\u003e\\n    +   * @param unit       the units of the wait parameter\u003cbr\\/\u003e\\n    +   * @param predicate  the predicate to call on state changes\u003cbr\\/\u003e\\n    +   * @throws InterruptedException on interrupt\u003cbr\\/\u003e\\n    +   * @throws TimeoutException on timeout\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate)\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    @shalinmangar this is what I was referring to, I know you\'re working on getting Overseer to not peg ZK polling for state changes on unwatched collections, this PR provides an easy mechanism to temporarily watch collections of interest.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263094_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263094_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:53:53+0000\'\u003e28\\/Apr\\/16 21:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61508998  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }   \\n        }  \\n \\n\\n\\n     +  \\/** \\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    +   * \\n    +   * @param collection the collection to watch \\n    +   * @param wait       how long to wait \\n    +   * @param unit       the units of the wait parameter \\n    +   * @param predicate  the predicate to call on state changes \\n    +   * @throws InterruptedException on interrupt \\n    +   * @throws TimeoutException on timeout \\n    +   *\\/ \\n    +  public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate) \\n    &#8212; End diff &#8211; \\n\\n     @shalinmangar this is what I was referring to, I know you\'re working on getting Overseer to not peg ZK polling for state changes on unwatched collections, this PR provides an easy mechanism to temporarily watch collections of interest.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263108\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263108&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263108\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263108_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263108_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:59:09+0000\'\u003e28\\/Apr\\/16 21:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61509699\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61509699\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e       }\u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    I think we could tighten this code up to ensure that predicate never gets call concurrently from two different threads at the same time, this would simplify things for clients and handle the case of calling it twice when it succeeds immediately.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263108_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263108_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 21:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T21:59:09+0000\'\u003e28\\/Apr\\/16 21:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61509699  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }   \\n        }  \\n \\n\\n\\n     +  \\/** \\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    &#8212; End diff &#8211; \\n\\n     I think we could tighten this code up to ensure that predicate never gets call concurrently from two different threads at the same time, this would simplify things for clients and handle the case of calling it twice when it succeeds immediately.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263112\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263112&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263112\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263112_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263112_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:00:56+0000\'\u003e28\\/Apr\\/16 22:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61509937\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61509937\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e       }\u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection to watch\u003cbr\\/\u003e\\n    +   * @param wait       how long to wait\u003cbr\\/\u003e\\n    +   * @param unit       the units of the wait parameter\u003cbr\\/\u003e\\n    +   * @param predicate  the predicate to call on state changes\u003cbr\\/\u003e\\n    +   * @throws InterruptedException on interrupt\u003cbr\\/\u003e\\n    +   * @throws TimeoutException on timeout\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate)\u003cbr\\/\u003e\\n    +      throws InterruptedException, TimeoutException {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    final CountDownLatch latch = new CountDownLatch(1);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    CollectionStateWatcher watcher = new CollectionStateWatcher() {\u003cbr\\/\u003e\\n    +      @Override\u003cbr\\/\u003e\\n    +      public void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState) {\u003cbr\\/\u003e\\n    +        if (predicate.matches(liveNodes, collectionState)) \u003c\\/p\u003e\\n{\\n    +          latch.countDown();\\n    +        }\\n\u003cp\u003e else \u003c\\/p\u003e\\n{\\n    +          registerCollectionStateWatcher(collection, this);\\n    +        }\\n\u003cp\u003e    +      }\u003cbr\\/\u003e\\n    +    };\u003cbr\\/\u003e\\n    +    registerCollectionStateWatcher(collection, watcher);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    try \u003c\\/p\u003e\\n{\\n    +      \\/\\/ check the current state\\n    +      DocCollection dc = clusterState.getCollectionOrNull(collection);\\n    +      if (predicate.matches(liveNodes, dc))\\n    +        return;\\n    +\\n    +      \\/\\/ wait for the watcher predicate to return true, or time out\\n    +      if (!latch.await(wait, unit))\\n    +        throw new TimeoutException();\\n    +\\n    +    }\\n\u003cp\u003e    +    finally \u003c\\/p\u003e\\n{\\n    +      removeCollectionStateWatcher(collection, watcher);\\n    +    }\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Remove a watcher from a collection\'s watch list.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * This allows Zookeeper watches to be removed if there is no interest in the\u003cbr\\/\u003e\\n    +   * collection.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection\u003cbr\\/\u003e\\n    +   * @param watcher    the watcher\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void removeCollectionStateWatcher(String collection, CollectionStateWatcher watcher) {\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n{\\n    +      if (v == null)\\n    +        return null;\\n    +      v.stateWatchers.remove(watcher);\\n    +      if (v.canBeRemoved())\\n    +        return null;\\n    +      return v;\\n    +    }\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private void notifyStateWatchers(String collection, DocCollection collectionState) {\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    I think we should pass in liveNodes; particularly in cases where we\'re firing a bunch of watchers, or even firing watchers on a bunch of collections at once, we can avoid the repeated volatile reads.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263112_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263112_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:00:56+0000\'\u003e28\\/Apr\\/16 22:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61509937  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }   \\n        }  \\n \\n\\n\\n     +  \\/** \\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    +   * \\n    +   * @param collection the collection to watch \\n    +   * @param wait       how long to wait \\n    +   * @param unit       the units of the wait parameter \\n    +   * @param predicate  the predicate to call on state changes \\n    +   * @throws InterruptedException on interrupt \\n    +   * @throws TimeoutException on timeout \\n    +   *\\/ \\n    +  public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate) \\n    +      throws InterruptedException, TimeoutException { \\n    + \\n    +    final CountDownLatch latch = new CountDownLatch(1); \\n    + \\n    +    CollectionStateWatcher watcher = new CollectionStateWatcher() { \\n    +      @Override \\n    +      public void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState) { \\n    +        if (predicate.matches(liveNodes, collectionState))  \\n{\\n    +          latch.countDown();\\n    +        }\\n  else  \\n{\\n    +          registerCollectionStateWatcher(collection, this);\\n    +        }\\n     +      } \\n    +    }; \\n    +    registerCollectionStateWatcher(collection, watcher); \\n    + \\n    +    try  \\n{\\n    +      \\/\\/ check the current state\\n    +      DocCollection dc = clusterState.getCollectionOrNull(collection);\\n    +      if (predicate.matches(liveNodes, dc))\\n    +        return;\\n    +\\n    +      \\/\\/ wait for the watcher predicate to return true, or time out\\n    +      if (!latch.await(wait, unit))\\n    +        throw new TimeoutException();\\n    +\\n    +    }\\n     +    finally  \\n{\\n    +      removeCollectionStateWatcher(collection, watcher);\\n    +    }\\n     +  } \\n    + \\n    +  \\/** \\n    +   * Remove a watcher from a collection\'s watch list. \\n    +   * \\n    +   * This allows Zookeeper watches to be removed if there is no interest in the \\n    +   * collection. \\n    +   * \\n    +   * @param collection the collection \\n    +   * @param watcher    the watcher \\n    +   *\\/ \\n    +  public void removeCollectionStateWatcher(String collection, CollectionStateWatcher watcher) { \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n{\\n    +      if (v == null)\\n    +        return null;\\n    +      v.stateWatchers.remove(watcher);\\n    +      if (v.canBeRemoved())\\n    +        return null;\\n    +      return v;\\n    +    }\\n ); \\n    +  } \\n    + \\n    +  private void notifyStateWatchers(String collection, DocCollection collectionState) { \\n    &#8212; End diff &#8211; \\n\\n     I think we should pass in liveNodes; particularly in cases where we\'re firing a bunch of watchers, or even firing watchers on a bunch of collections at once, we can avoid the repeated volatile reads.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263119\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263119&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263119\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263119_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263119_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:02:50+0000\'\u003e28\\/Apr\\/16 22:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61510100\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61510100\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212;\u003cbr\\/\u003e\\n    @@ -0,0 +1,42 @@\u003cbr\\/\u003e\\n    +package org.apache.solr.common.cloud;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/*\u003cbr\\/\u003e\\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\u003cbr\\/\u003e\\n    + * contributor license agreements.  See the NOTICE file distributed with\u003cbr\\/\u003e\\n    + * this work for additional information regarding copyright ownership.\u003cbr\\/\u003e\\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\u003cbr\\/\u003e\\n    + * (the \\\"License\\\"); you may not use this file except in compliance with\u003cbr\\/\u003e\\n    + * the License.  You may obtain a copy of the License at\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + *     \u003ca href=\\\"http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\u003c\\/a\u003e\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * Unless required by applicable law or agreed to in writing, software\u003cbr\\/\u003e\\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\u003cbr\\/\u003e\\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u003cbr\\/\u003e\\n    + * See the License for the specific language governing permissions and\u003cbr\\/\u003e\\n    + * limitations under the License.\u003cbr\\/\u003e\\n    +*\\/\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import java.util.Set;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/**\u003cbr\\/\u003e\\n    + * Callback registered with \u003c\\/p\u003e\\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n\u003cp\u003e    + * and called whenever the collection state changes.\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    If we\'re not going to be firing events on all watchers whenever live_nodes changes, we should be very clear about this.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263119_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263119_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:02:50+0000\'\u003e28\\/Apr\\/16 22:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61510100  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212; \\n    @@ -0,0 +1,42 @@ \\n    +package org.apache.solr.common.cloud; \\n    + \\n    +\\/* \\n    + * Licensed to the Apache Software Foundation (ASF) under one or more \\n    + * contributor license agreements.  See the NOTICE file distributed with \\n    + * this work for additional information regarding copyright ownership. \\n    + * The ASF licenses this file to You under the Apache License, Version 2.0 \\n    + * (the \\\"License\\\"); you may not use this file except in compliance with \\n    + * the License.  You may obtain a copy of the License at \\n    + * \\n    + *      http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0  \\n    + * \\n    + * Unless required by applicable law or agreed to in writing, software \\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS, \\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \\n    + * See the License for the specific language governing permissions and \\n    + * limitations under the License. \\n    +*\\/ \\n    + \\n    +import java.util.Set; \\n    + \\n    +\\/** \\n    + * Callback registered with  \\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n     + * and called whenever the collection state changes. \\n    + *\\/ \\n    &#8212; End diff &#8211; \\n\\n     If we\'re not going to be firing events on all watchers whenever live_nodes changes, we should be very clear about this.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263120\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263120&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263120\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263120_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263120_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:03:22+0000\'\u003e28\\/Apr\\/16 22:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61510208\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61510208\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/test-framework\\/src\\/java\\/org\\/apache\\/solr\\/cloud\\/MiniSolrCloudCluster.java &#8212;\u003cbr\\/\u003e\\n    @@ -348,7 +358,13 @@ public JettySolrRunner stopJettySolrRunner(int index) throws Exception \u003c\\/p\u003e\\n{\\n         return jetty;\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eprotected JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception {\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Add a previously stopped node back to the cluster\u003cbr\\/\u003e\\n    +   * @param jetty a \\n{@link JettySolrRunner}\\n\u003cp\u003e previously returned by \u003c\\/p\u003e\\n{@link #stopJettySolrRunner(int)}\\n\u003cp\u003e    +   * @return the started node\u003cbr\\/\u003e\\n    +   * @throws Exception on error\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception {\u003c\\/p\u003e\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    Are the changes in this file related to this PR?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263120_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263120_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:03:22+0000\'\u003e28\\/Apr\\/16 22:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61510208  \\n\\n     &#8212; Diff: solr\\/test-framework\\/src\\/java\\/org\\/apache\\/solr\\/cloud\\/MiniSolrCloudCluster.java &#8212; \\n    @@ -348,7 +358,13 @@ public JettySolrRunner stopJettySolrRunner(int index) throws Exception  \\n{\\n         return jetty;\\n       }\\n\\n \\n\\t protected JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception { \\n    +  \\/** \\n    +   * Add a previously stopped node back to the cluster \\n    +   * @param jetty a \\n{@link JettySolrRunner}\\n  previously returned by  \\n{@link #stopJettySolrRunner(int)}\\n     +   * @return the started node \\n    +   * @throws Exception on error \\n    +   *\\/ \\n    +  public JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception { \\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     Are the changes in this file related to this PR?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263122\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263122&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263122\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263122_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263122_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:05:25+0000\'\u003e28\\/Apr\\/16 22:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-215576790\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-215576790\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Looking good, a little more high-level feedback.  @shalinmangar I think you should take a look also.\u003c\\/p\u003e\\n\\n\u003cp\u003e    Have you run the tests extensively?  The first time I ran I got a failure, but after that it\'s been fairly reliable, but I haven\'t beasted.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263122_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263122_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Apr\\/16 22:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-28T22:05:25+0000\'\u003e28\\/Apr\\/16 22:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-215576790  \\n\\n     Looking good, a little more high-level feedback.  @shalinmangar I think you should take a look also. \\n\\n     Have you run the tests extensively?  The first time I ran I got a failure, but after that it\'s been fairly reliable, but I haven\'t beasted.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263665\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263665&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263665\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263665_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263665_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 07:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T07:20:19+0000\'\u003e29\\/Apr\\/16 07:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61541687\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61541687\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/client\\/solrj\\/impl\\/CloudSolrClient.java &#8212;\u003cbr\\/\u003e\\n    @@ -572,6 +574,40 @@ public void downloadConfig(String configName, Path downloadPath) throws IOExcept\u003cbr\\/\u003e\\n         zkStateReader.getConfigManager().downloadConfigDir(configName, downloadPath);\u003cbr\\/\u003e\\n       }\u003c\\/p\u003e\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a collection state matches a predicate, or a timeout\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection to watch\u003cbr\\/\u003e\\n    +   * @param wait       how long to wait\u003cbr\\/\u003e\\n    +   * @param unit       the units of the wait parameter\u003cbr\\/\u003e\\n    +   * @param predicate  a \u003c\\/p\u003e\\n{@link CollectionStatePredicate}\\n\u003cp\u003e to check the collection state\u003cbr\\/\u003e\\n    +   * @throws InterruptedException on interrupt\u003cbr\\/\u003e\\n    +   * @throws TimeoutException on timeout\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void waitForState(String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate)\u003cbr\\/\u003e\\n    +      throws InterruptedException, TimeoutException \u003c\\/p\u003e\\n{\\n    +    connect();\\n    +    zkStateReader.waitForState(collection, wait, unit, predicate);\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the cluster state for a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the watcher is unregistered after it has been called once.  To make a watcher persistent,\u003cbr\\/\u003e\\n    +   * it should re-register itself in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * call\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection to watch\u003cbr\\/\u003e\\n    +   * @param watcher    a watcher that will be called when the state changes\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher watcher) \u003c\\/p\u003e\\n{\\n    +    connect();\\n    +    zkStateReader.registerCollectionStateWatcher(collection, watcher);\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    TBH, I don\'t think getZkStateReader() \u003cb\u003eshould\u003c\\/b\u003e be a public method - client code that\'s using CloudSolrClient shouldn\'t need to interact with low-level stuff like the state reader.  Maybe we only need to expose waitForState() here though.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263665_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263665_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 07:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T07:20:19+0000\'\u003e29\\/Apr\\/16 07:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61541687  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/client\\/solrj\\/impl\\/CloudSolrClient.java &#8212; \\n    @@ -572,6 +574,40 @@ public void downloadConfig(String configName, Path downloadPath) throws IOExcept \\n         zkStateReader.getConfigManager().downloadConfigDir(configName, downloadPath); \\n       } \\n\\n     +  \\/** \\n    +   * Block until a collection state matches a predicate, or a timeout \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    +   * \\n    +   * @param collection the collection to watch \\n    +   * @param wait       how long to wait \\n    +   * @param unit       the units of the wait parameter \\n    +   * @param predicate  a  \\n{@link CollectionStatePredicate}\\n  to check the collection state \\n    +   * @throws InterruptedException on interrupt \\n    +   * @throws TimeoutException on timeout \\n    +   *\\/ \\n    +  public void waitForState(String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate) \\n    +      throws InterruptedException, TimeoutException  \\n{\\n    +    connect();\\n    +    zkStateReader.waitForState(collection, wait, unit, predicate);\\n    +  }\\n     + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the cluster state for a collection changes \\n    +   * \\n    +   * Note that the watcher is unregistered after it has been called once.  To make a watcher persistent, \\n    +   * it should re-register itself in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * call \\n    +   * \\n    +   * @param collection the collection to watch \\n    +   * @param watcher    a watcher that will be called when the state changes \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher watcher)  \\n{\\n    +    connect();\\n    +    zkStateReader.registerCollectionStateWatcher(collection, watcher);\\n    +  }\\n     + \\n    &#8212; End diff &#8211; \\n\\n     TBH, I don\'t think getZkStateReader()  should  be a public method - client code that\'s using CloudSolrClient shouldn\'t need to interact with low-level stuff like the state reader.  Maybe we only need to expose waitForState() here though.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263669\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263669&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263669\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263669_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263669_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 07:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T07:23:40+0000\'\u003e29\\/Apr\\/16 07:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61541928\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61541928\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/test-framework\\/src\\/java\\/org\\/apache\\/solr\\/cloud\\/MiniSolrCloudCluster.java &#8212;\u003cbr\\/\u003e\\n    @@ -348,7 +358,13 @@ public JettySolrRunner stopJettySolrRunner(int index) throws Exception \u003c\\/p\u003e\\n{\\n         return jetty;\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eprotected JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception {\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Add a previously stopped node back to the cluster\u003cbr\\/\u003e\\n    +   * @param jetty a \\n{@link JettySolrRunner}\\n\u003cp\u003e previously returned by \u003c\\/p\u003e\\n{@link #stopJettySolrRunner(int)}\\n\u003cp\u003e    +   * @return the started node\u003cbr\\/\u003e\\n    +   * @throws Exception on error\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception {\u003c\\/p\u003e\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    Yes, they\'re needed to ensure that the cluster is in the same state for all tests.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263669_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263669_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 07:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T07:23:40+0000\'\u003e29\\/Apr\\/16 07:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61541928  \\n\\n     &#8212; Diff: solr\\/test-framework\\/src\\/java\\/org\\/apache\\/solr\\/cloud\\/MiniSolrCloudCluster.java &#8212; \\n    @@ -348,7 +358,13 @@ public JettySolrRunner stopJettySolrRunner(int index) throws Exception  \\n{\\n         return jetty;\\n       }\\n\\n \\n\\t protected JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception { \\n    +  \\/** \\n    +   * Add a previously stopped node back to the cluster \\n    +   * @param jetty a \\n{@link JettySolrRunner}\\n  previously returned by  \\n{@link #stopJettySolrRunner(int)}\\n     +   * @return the started node \\n    +   * @throws Exception on error \\n    +   *\\/ \\n    +  public JettySolrRunner startJettySolrRunner(JettySolrRunner jetty) throws Exception { \\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     Yes, they\'re needed to ensure that the cluster is in the same state for all tests.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263670\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263670&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263670\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263670_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263670_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 07:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T07:24:27+0000\'\u003e29\\/Apr\\/16 07:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-215646194\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-215646194\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Thanks for the comments! I\'ll try and incorporate your suggestions and see how far we get.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263670_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263670_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 07:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T07:24:27+0000\'\u003e29\\/Apr\\/16 07:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-215646194  \\n\\n     Thanks for the comments! I\'ll try and incorporate your suggestions and see how far we get.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263973\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263973&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263973\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263973_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263973_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 12:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T12:19:59+0000\'\u003e29\\/Apr\\/16 12:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61568081\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61568081\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212;\u003cbr\\/\u003e\\n    @@ -0,0 +1,42 @@\u003cbr\\/\u003e\\n    +package org.apache.solr.common.cloud;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/*\u003cbr\\/\u003e\\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\u003cbr\\/\u003e\\n    + * contributor license agreements.  See the NOTICE file distributed with\u003cbr\\/\u003e\\n    + * this work for additional information regarding copyright ownership.\u003cbr\\/\u003e\\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\u003cbr\\/\u003e\\n    + * (the \\\"License\\\"); you may not use this file except in compliance with\u003cbr\\/\u003e\\n    + * the License.  You may obtain a copy of the License at\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + *     \u003ca href=\\\"http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\u003c\\/a\u003e\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * Unless required by applicable law or agreed to in writing, software\u003cbr\\/\u003e\\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\u003cbr\\/\u003e\\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u003cbr\\/\u003e\\n    + * See the License for the specific language governing permissions and\u003cbr\\/\u003e\\n    + * limitations under the License.\u003cbr\\/\u003e\\n    +*\\/\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import java.util.Set;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/**\u003cbr\\/\u003e\\n    + * Callback registered with \u003c\\/p\u003e\\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n\u003cp\u003e    + * and called whenever the collection state changes.\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    Hm, that\'s a good point.  Maybe we should be doing just that?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263973_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263973_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 12:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T12:19:59+0000\'\u003e29\\/Apr\\/16 12:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61568081  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212; \\n    @@ -0,0 +1,42 @@ \\n    +package org.apache.solr.common.cloud; \\n    + \\n    +\\/* \\n    + * Licensed to the Apache Software Foundation (ASF) under one or more \\n    + * contributor license agreements.  See the NOTICE file distributed with \\n    + * this work for additional information regarding copyright ownership. \\n    + * The ASF licenses this file to You under the Apache License, Version 2.0 \\n    + * (the \\\"License\\\"); you may not use this file except in compliance with \\n    + * the License.  You may obtain a copy of the License at \\n    + * \\n    + *      http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0  \\n    + * \\n    + * Unless required by applicable law or agreed to in writing, software \\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS, \\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \\n    + * See the License for the specific language governing permissions and \\n    + * limitations under the License. \\n    +*\\/ \\n    + \\n    +import java.util.Set; \\n    + \\n    +\\/** \\n    + * Callback registered with  \\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n     + * and called whenever the collection state changes. \\n    + *\\/ \\n    &#8212; End diff &#8211; \\n\\n     Hm, that\'s a good point.  Maybe we should be doing just that?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15263985\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15263985&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15263985\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263985_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263985_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 12:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T12:31:25+0000\'\u003e29\\/Apr\\/16 12:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61569303\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61569303\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e       }\u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    I\'m not talking about concurrent calls here, rather it\'s the race between adding the watcher, checking if the predicate matches the current state, and state changes arriving.\u003c\\/p\u003e\\n\\n\u003cp\u003e    There are two scenarios here (T1 = client thread, Z1 = zkCallback thread):\u003c\\/p\u003e\\n\\n\u003cp\u003e    T1 -&gt; watcher added\u003cbr\\/\u003e\\n    Z1 -&gt; state changes, watcher called\u003cbr\\/\u003e\\n    T1 -&gt; watcher called for initial check\u003c\\/p\u003e\\n\\n\u003cp\u003e    Or, if we do things the other way round\u003cbr\\/\u003e\\n    T1 -&gt; watcher called for initial check and doesn\'t trigger\u003cbr\\/\u003e\\n    Z1 -&gt; state changes\u003cbr\\/\u003e\\n    T1 -&gt; watcher added, but isn\'t updated\u003c\\/p\u003e\\n\\n\u003cp\u003e    Absent adding locks all over the place, which I\'m really reluctant to do here as it would be far too easy to end up in a deadlock, I think we have to accept that a predicate may get called twice.  I don\'t think it matters too much though?  This is generally just going to be used for waiting.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15263985_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15263985_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 12:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T12:31:25+0000\'\u003e29\\/Apr\\/16 12:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61569303  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }   \\n        }  \\n \\n\\n\\n     +  \\/** \\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    &#8212; End diff &#8211; \\n\\n     I\'m not talking about concurrent calls here, rather it\'s the race between adding the watcher, checking if the predicate matches the current state, and state changes arriving. \\n\\n     There are two scenarios here (T1 = client thread, Z1 = zkCallback thread): \\n\\n     T1 -&gt; watcher added \\n    Z1 -&gt; state changes, watcher called \\n    T1 -&gt; watcher called for initial check \\n\\n     Or, if we do things the other way round \\n    T1 -&gt; watcher called for initial check and doesn\'t trigger \\n    Z1 -&gt; state changes \\n    T1 -&gt; watcher added, but isn\'t updated \\n\\n     Absent adding locks all over the place, which I\'m really reluctant to do here as it would be far too easy to end up in a deadlock, I think we have to accept that a predicate may get called twice.  I don\'t think it matters too much though?  This is generally just going to be used for waiting.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15264473\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15264473&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15264473\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264473_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264473_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 18:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T18:16:24+0000\'\u003e29\\/Apr\\/16 18:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61622572\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61622572\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212;\u003cbr\\/\u003e\\n    @@ -0,0 +1,42 @@\u003cbr\\/\u003e\\n    +package org.apache.solr.common.cloud;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/*\u003cbr\\/\u003e\\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\u003cbr\\/\u003e\\n    + * contributor license agreements.  See the NOTICE file distributed with\u003cbr\\/\u003e\\n    + * this work for additional information regarding copyright ownership.\u003cbr\\/\u003e\\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\u003cbr\\/\u003e\\n    + * (the \\\"License\\\"); you may not use this file except in compliance with\u003cbr\\/\u003e\\n    + * the License.  You may obtain a copy of the License at\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + *     \u003ca href=\\\"http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\u003c\\/a\u003e\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * Unless required by applicable law or agreed to in writing, software\u003cbr\\/\u003e\\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\u003cbr\\/\u003e\\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u003cbr\\/\u003e\\n    + * See the License for the specific language governing permissions and\u003cbr\\/\u003e\\n    + * limitations under the License.\u003cbr\\/\u003e\\n    +*\\/\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import java.util.Set;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/**\u003cbr\\/\u003e\\n    + * Callback registered with \u003c\\/p\u003e\\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n\u003cp\u003e    + * and called whenever the collection state changes.\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    Not sure! \\u00AF&#95;(\\u30C4)_\\/\\u00AF\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264473_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264473_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 18:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T18:16:24+0000\'\u003e29\\/Apr\\/16 18:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61622572  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStateWatcher.java &#8212; \\n    @@ -0,0 +1,42 @@ \\n    +package org.apache.solr.common.cloud; \\n    + \\n    +\\/* \\n    + * Licensed to the Apache Software Foundation (ASF) under one or more \\n    + * contributor license agreements.  See the NOTICE file distributed with \\n    + * this work for additional information regarding copyright ownership. \\n    + * The ASF licenses this file to You under the Apache License, Version 2.0 \\n    + * (the \\\"License\\\"); you may not use this file except in compliance with \\n    + * the License.  You may obtain a copy of the License at \\n    + * \\n    + *      http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0  \\n    + * \\n    + * Unless required by applicable law or agreed to in writing, software \\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS, \\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \\n    + * See the License for the specific language governing permissions and \\n    + * limitations under the License. \\n    +*\\/ \\n    + \\n    +import java.util.Set; \\n    + \\n    +\\/** \\n    + * Callback registered with  \\n{@link ZkStateReader#registerCollectionStateWatcher(String, CollectionStateWatcher)}\\n     + * and called whenever the collection state changes. \\n    + *\\/ \\n    &#8212; End diff &#8211; \\n\\n     Not sure! \\u00AF&#95;(\\u30C4)_\\/\\u00AF              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15264723\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15264723&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15264723\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264723_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264723_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 20:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T20:56:26+0000\'\u003e29\\/Apr\\/16 20:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643539\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643539\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e       }\u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    It seems like it would be nice to shield callers from doing any kind of similar mutexing.  If you don\'t want to bother right now, I can come back and see if I can do something not yucky looking here.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264723_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264723_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 20:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T20:56:26+0000\'\u003e29\\/Apr\\/16 20:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643539  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }   \\n        }  \\n \\n\\n\\n     +  \\/** \\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    &#8212; End diff &#8211; \\n\\n     It seems like it would be nice to shield callers from doing any kind of similar mutexing.  If you don\'t want to bother right now, I can come back and see if I can do something not yucky looking here.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15264726\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15264726&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15264726\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264726_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264726_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 20:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T20:58:19+0000\'\u003e29\\/Apr\\/16 20:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643749\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643749\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStatePredicate.java &#8212;\u003cbr\\/\u003e\\n    @@ -30,8 +30,9 @@\u003cbr\\/\u003e\\n       \\/**\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eCheck the collection state matches a required state\u003cbr\\/\u003e\\n        *\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003e* The collectionState parameter may be null if the collection does not exist\u003c\\/li\u003e\\n\\t\u003cli\u003e* or has been deleted\u003cbr\\/\u003e\\n    +   * @param liveNodes the current set of live nodes\u003cbr\\/\u003e\\n    +   * @param collectionState the latest collection state, or null if the collection\u003cbr\\/\u003e\\n    +   *                        does not exist\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    I think this needs to be below the \\\"Note\\\" lines to get formatted right.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264726_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264726_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 20:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T20:58:19+0000\'\u003e29\\/Apr\\/16 20:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643749  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/CollectionStatePredicate.java &#8212; \\n    @@ -30,8 +30,9 @@ \\n       \\/** \\n \\n\\t Check the collection state matches a required state \\n        * \\n \\n \\n\\t * The collectionState parameter may be null if the collection does not exist \\n\\t * or has been deleted \\n    +   * @param liveNodes the current set of live nodes \\n    +   * @param collectionState the latest collection state, or null if the collection \\n    +   *                        does not exist\\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     I think this needs to be below the \\\"Note\\\" lines to get formatted right.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15264728\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15264728&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15264728\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264728_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264728_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 20:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T20:58:53+0000\'\u003e29\\/Apr\\/16 20:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643877\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643877\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -256,9 +257,10 @@ public void updateClusterState() throws KeeperException, InterruptedException {\u003cbr\\/\u003e\\n           refreshLegacyClusterState(null);\u003cbr\\/\u003e\\n           \\/\\/ Need a copy so we don\'t delete from what we\'re iterating over.\u003cbr\\/\u003e\\n           Collection&lt;String&gt; safeCopy = new ArrayList&lt;&gt;(watchedCollectionStates.keySet());\u003cbr\\/\u003e\\n    +      Set&lt;String&gt; liveNodes = new HashSet&lt;&gt;(this.liveNodes);\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    You don\'t actually need a copy here, since `liveNodes` is an immutable set.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264728_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264728_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 20:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T20:58:53+0000\'\u003e29\\/Apr\\/16 20:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61643877  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -256,9 +257,10 @@ public void updateClusterState() throws KeeperException, InterruptedException { \\n           refreshLegacyClusterState(null); \\n           \\/\\/ Need a copy so we don\'t delete from what we\'re iterating over. \\n           Collection&lt;String&gt; safeCopy = new ArrayList&lt;&gt;(watchedCollectionStates.keySet()); \\n    +      Set&lt;String&gt; liveNodes = new HashSet&lt;&gt;(this.liveNodes); \\n    &#8212; End diff &#8211; \\n\\n     You don\'t actually need a copy here, since `liveNodes` is an immutable set.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15264743\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15264743&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15264743\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264743_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264743_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 21:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T21:05:57+0000\'\u003e29\\/Apr\\/16 21:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61644721\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61644721\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -491,19 +493,28 @@ private void refreshLegacyClusterState(Watcher watcher)\u003cbr\\/\u003e\\n           final Stat stat = new Stat();\u003cbr\\/\u003e\\n           final byte[] data = zkClient.getData(CLUSTER_STATE, watcher, stat, true);\u003cbr\\/\u003e\\n           final ClusterState loadedData = ClusterState.load(stat.getVersion(), data, emptySet(), CLUSTER_STATE);\u003cbr\\/\u003e\\n    +      final Set&lt;String&gt; liveNodes = new HashSet&lt;&gt;(this.liveNodes);\u003cbr\\/\u003e\\n           synchronized (getUpdateLock()) {\u003cbr\\/\u003e\\n             if (this.legacyClusterStateVersion &gt;= stat.getVersion()) \u003c\\/p\u003e\\n{\\n               \\/\\/ Nothing to do, someone else updated same or newer.\\n               return;\\n             }\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003ethis.legacyCollectionStates = loadedData.getCollectionStates();\u003c\\/li\u003e\\n\\t\u003cli\u003ethis.legacyClusterStateVersion = stat.getVersion();\u003c\\/li\u003e\\n\\t\u003cli\u003efor (Map.Entry&lt;String, ClusterState.CollectionRef&gt; entry : this.legacyCollectionStates.entrySet()) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (entry.getValue().isLazilyLoaded() == false) {\u003c\\/li\u003e\\n\\t\u003cli\u003e\\/\\/ a watched collection - trigger notifications\u003c\\/li\u003e\\n\\t\u003cli\u003enotifyStateWatchers(entry.getKey(), entry.getValue().get());\u003cbr\\/\u003e\\n    +        LOG.info(\\\"Updating legacy cluster state - {} entries in legacyCollectionStates\\\", legacyCollectionStates.size());\u003cbr\\/\u003e\\n    +        for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) {\u003cbr\\/\u003e\\n    +          String coll = watchEntry.getKey();\u003cbr\\/\u003e\\n    +          CollectionWatch collWatch = watchEntry.getValue();\u003cbr\\/\u003e\\n    +          ClusterState.CollectionRef ref = this.legacyCollectionStates.get(coll);\u003cbr\\/\u003e\\n    +          if (ref == null)\u003cbr\\/\u003e\\n    +            continue;\u003cbr\\/\u003e\\n    +          \\/\\/ watched collection, so this will always be local\u003cbr\\/\u003e\\n    +          DocCollection newState = ref.get();\u003cbr\\/\u003e\\n    +          if (!collWatch.stateWatchers.isEmpty()\u003cbr\\/\u003e\\n    +              &amp;&amp; !Objects.equals(loadedData.getCollectionStates().get(coll).get(), newState)) {\u003cbr\\/\u003e\\n    +            notifyStateWatchers(liveNodes, coll, newState);\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    I just realized you don\'t want to call user code while holding the update lock.  I think you\'re going to need to move this out of the synchronized block.  In fact.... this is really nasty now that I think about it.  In general, you\'re going to want to defer calling any user code until the current constuctState() operation finishes.  Otherwise, the user code is potentially going to see a stale copy of the state that you haven\'t finished updating yet.\u003c\\/p\u003e\\n\\n\u003cp\u003e    I think we\'re going to have to build a queue of outstanding state watchers to notify and always call them later, probably in an executor.  I know that sounds like a bit of work, but I\'m not sure I can see how it would be safe otherwise.\u003c\\/p\u003e\\n\\n\u003cp\u003e    @markrmiller any thoughts?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15264743_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264743_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 21:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T21:05:57+0000\'\u003e29\\/Apr\\/16 21:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61644721  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -491,19 +493,28 @@ private void refreshLegacyClusterState(Watcher watcher) \\n           final Stat stat = new Stat(); \\n           final byte[] data = zkClient.getData(CLUSTER_STATE, watcher, stat, true); \\n           final ClusterState loadedData = ClusterState.load(stat.getVersion(), data, emptySet(), CLUSTER_STATE); \\n    +      final Set&lt;String&gt; liveNodes = new HashSet&lt;&gt;(this.liveNodes); \\n           synchronized (getUpdateLock()) { \\n             if (this.legacyClusterStateVersion &gt;= stat.getVersion())  \\n{\\n               \\/\\/ Nothing to do, someone else updated same or newer.\\n               return;\\n             }\\n \\n\\t this.legacyCollectionStates = loadedData.getCollectionStates(); \\n\\t this.legacyClusterStateVersion = stat.getVersion(); \\n\\t for (Map.Entry&lt;String, ClusterState.CollectionRef&gt; entry : this.legacyCollectionStates.entrySet()) { \\n\\t if (entry.getValue().isLazilyLoaded() == false) { \\n\\t \\/\\/ a watched collection - trigger notifications \\n\\t notifyStateWatchers(entry.getKey(), entry.getValue().get()); \\n    +        LOG.info(\\\"Updating legacy cluster state - {} entries in legacyCollectionStates\\\", legacyCollectionStates.size()); \\n    +        for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) { \\n    +          String coll = watchEntry.getKey(); \\n    +          CollectionWatch collWatch = watchEntry.getValue(); \\n    +          ClusterState.CollectionRef ref = this.legacyCollectionStates.get(coll); \\n    +          if (ref == null) \\n    +            continue; \\n    +          \\/\\/ watched collection, so this will always be local \\n    +          DocCollection newState = ref.get(); \\n    +          if (!collWatch.stateWatchers.isEmpty() \\n    +              &amp;&amp; !Objects.equals(loadedData.getCollectionStates().get(coll).get(), newState)) { \\n    +            notifyStateWatchers(liveNodes, coll, newState);\\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     I just realized you don\'t want to call user code while holding the update lock.  I think you\'re going to need to move this out of the synchronized block.  In fact.... this is really nasty now that I think about it.  In general, you\'re going to want to defer calling any user code until the current constuctState() operation finishes.  Otherwise, the user code is potentially going to see a stale copy of the state that you haven\'t finished updating yet. \\n\\n     I think we\'re going to have to build a queue of outstanding state watchers to notify and always call them later, probably in an executor.  I know that sounds like a bit of work, but I\'m not sure I can see how it would be safe otherwise. \\n\\n     @markrmiller any thoughts?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15264767\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15264767&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15264767\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dsmiley\\\" id=\\\"commentauthor_15264767_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dsmiley\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dsmiley\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e David Smiley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264767_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 21:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T21:20:22+0000\'\u003e29\\/Apr\\/16 21:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ePardon the distraction to the fine work going on here but I\'d like to possibly emulate this code review process on other issue(s).  Is it necessary to create a branch on some other\\/personal repo and then issue a pull request (as was done here I see) or is it possible for someone to review commits to a branch on our repo\\/mirror?  I\'m thinking \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-5750\\\" title=\\\"Backup\\/Restore API for SolrCloud\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-5750\\\"\u003e\u003cdel\u003eSOLR-5750\u003c\\/del\u003e\u003c\\/a\u003e &#8211; \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/commits\\/solr-5750\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/commits\\/solr-5750\u003c\\/a\u003e   (feel free to make a comment to test).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dsmiley\\\" id=\\\"commentauthor_15264767_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dsmiley\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dsmiley\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e David Smiley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15264767_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Apr\\/16 21:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-04-29T21:20:22+0000\'\u003e29\\/Apr\\/16 21:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Pardon the distraction to the fine work going on here but I\'d like to possibly emulate this code review process on other issue(s).  Is it necessary to create a branch on some other\\/personal repo and then issue a pull request (as was done here I see) or is it possible for someone to review commits to a branch on our repo\\/mirror?  I\'m thinking   SOLR-5750   &#8211;  https:\\/\\/github.com\\/apache\\/lucene-solr\\/commits\\/solr-5750    (feel free to make a comment to test).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15267144\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15267144&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15267144\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267144_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267144_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 18:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T18:11:22+0000\'\u003e02\\/May\\/16 18:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61777874\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61777874\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e       }\u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    Yeah, I think this can be done in a follow-up issue, if need be?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267144_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267144_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 18:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T18:11:22+0000\'\u003e02\\/May\\/16 18:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r61777874  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1066,32 +1079,201 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }   \\n        }  \\n \\n\\n\\n     +  \\/** \\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    &#8212; End diff &#8211; \\n\\n     Yeah, I think this can be done in a follow-up issue, if need be?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15267156\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15267156&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15267156\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267156_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267156_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 18:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T18:13:13+0000\'\u003e02\\/May\\/16 18:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216315281\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216315281\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    OK, latest push moves all notifications out of synchronized blocks.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267156_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267156_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 18:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T18:13:13+0000\'\u003e02\\/May\\/16 18:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216315281  \\n\\n     OK, latest push moves all notifications out of synchronized blocks.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15267309\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15267309&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15267309\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267309_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267309_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 19:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T19:17:30+0000\'\u003e02\\/May\\/16 19:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216333963\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216333963\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    @romseygeek nice job on the changes so far, and sorry to have so much feedback and so many asks.  This is a pretty complicated change so I feel like it merits the attention to detail.\u003c\\/p\u003e\\n\\n\u003cp\u003e    I feel like we\'re at a fork in the road with this patch at the moment though, and we need to get more people involved to proceed.  Let me explain.\u003c\\/p\u003e\\n\\n\u003cp\u003e    Even having fixed the \\\"calling watchers while holding locks issue\\\", the one thing that makes me most nervous about the current state is that we\'re still potentially executing user-provided predicates on threads that belong to a variety of other people-- e.g. the caller of forceUpdateCollection() or even the Zk event callback thread.  We could make a tactical fix to the implementation of waitForState() by turning that method into a loop and running the predicate on the actual thread that called waitForState(), such that the onStateChanged() handler doesn\'t dip into client code.\u003c\\/p\u003e\\n\\n\u003cp\u003e    But honestly, I feel like having privatized CollectionStateWatcher and the ability to register \\/ unregister is a missed opportunity.  I can think of uses for the feature, like in some cases Overseer operations could watch a collection for the duration of an operation to prevent having to re-query ZK.  To make that solid, we\'d need to either introduce an Executor in ZkStateReader for publishing events, or else require the watch registration to provide an executor, the way Guava\'s ListenableFuture does.\u003c\\/p\u003e\\n\\n\u003cp\u003e    Thoughts?  I\'d also like to hear from others.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267309_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267309_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 19:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T19:17:30+0000\'\u003e02\\/May\\/16 19:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216333963  \\n\\n     @romseygeek nice job on the changes so far, and sorry to have so much feedback and so many asks.  This is a pretty complicated change so I feel like it merits the attention to detail. \\n\\n     I feel like we\'re at a fork in the road with this patch at the moment though, and we need to get more people involved to proceed.  Let me explain. \\n\\n     Even having fixed the \\\"calling watchers while holding locks issue\\\", the one thing that makes me most nervous about the current state is that we\'re still potentially executing user-provided predicates on threads that belong to a variety of other people-- e.g. the caller of forceUpdateCollection() or even the Zk event callback thread.  We could make a tactical fix to the implementation of waitForState() by turning that method into a loop and running the predicate on the actual thread that called waitForState(), such that the onStateChanged() handler doesn\'t dip into client code. \\n\\n     But honestly, I feel like having privatized CollectionStateWatcher and the ability to register \\/ unregister is a missed opportunity.  I can think of uses for the feature, like in some cases Overseer operations could watch a collection for the duration of an operation to prevent having to re-query ZK.  To make that solid, we\'d need to either introduce an Executor in ZkStateReader for publishing events, or else require the watch registration to provide an executor, the way Guava\'s ListenableFuture does. \\n\\n     Thoughts?  I\'d also like to hear from others.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15267396\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15267396&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15267396\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267396_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267396_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 20:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T20:06:34+0000\'\u003e02\\/May\\/16 20:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216347644\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216347644\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Feedback is good \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    I\'ll pull CSW back out and make it public again.  I think keeping it separate from the Predicate is still a useful distinction though.  I\'ll try adding in an executor as well.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267396_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267396_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 20:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T20:06:34+0000\'\u003e02\\/May\\/16 20:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216347644  \\n\\n     Feedback is good   \\n\\n     I\'ll pull CSW back out and make it public again.  I think keeping it separate from the Predicate is still a useful distinction though.  I\'ll try adding in an executor as well.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15267426\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15267426&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15267426\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267426_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267426_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 20:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T20:21:47+0000\'\u003e02\\/May\\/16 20:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216351404\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216351404\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    BTW, here\'s an implementation of waitForState() that does the work on the calling thread.  This passes your tests:\u003c\\/p\u003e\\n\\n\u003cp\u003e    ```\u003cbr\\/\u003e\\n      public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate)\u003cbr\\/\u003e\\n          throws InterruptedException, TimeoutException {\u003cbr\\/\u003e\\n        long stop = System.nanoTime() + unit.toNanos(wait);\u003c\\/p\u003e\\n\\n\u003cp\u003e        if (predicate.matches(this.liveNodes, clusterState.getCollectionOrNull(collection))) \u003c\\/p\u003e\\n{\\n          return;\\n        }\\n\\n\u003cp\u003e        LinkedBlockingQueue&lt;Pair&lt;Set&lt;String&gt;, DocCollection&gt;&gt; queue = new LinkedBlockingQueue&lt;&gt;();\u003cbr\\/\u003e\\n        CollectionStateWatcher watcher = new CollectionStateWatcher() {\u003cbr\\/\u003e\\n          @Override\u003cbr\\/\u003e\\n          public void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState) \u003c\\/p\u003e\\n{\\n            queue.add(new Pair&lt;&gt;(liveNodes, collectionState));\\n            registerCollectionStateWatcher(collection, this);\\n          }\\n\u003cp\u003e        };\u003c\\/p\u003e\\n\\n\u003cp\u003e        registerCollectionStateWatcher(collection, watcher);\u003cbr\\/\u003e\\n        try {\u003cbr\\/\u003e\\n          while (true) {\u003cbr\\/\u003e\\n            Pair&lt;Set&lt;String&gt;, DocCollection&gt; pair = queue.poll(stop - System.nanoTime(), TimeUnit.NANOSECONDS);\u003cbr\\/\u003e\\n            if (pair == null) \u003c\\/p\u003e\\n{\\n              throw new TimeoutException();\\n            }\\n\u003cp\u003e            if (predicate.matches(pair.getKey(), pair.getValue())) \u003c\\/p\u003e\\n{\\n              return;\\n            }\\n\u003cp\u003e          }\u003cbr\\/\u003e\\n        } finally \u003c\\/p\u003e\\n{\\n          removeCollectionStateWatcher(collection, watcher);\\n        }\\n\u003cp\u003e      }\u003cbr\\/\u003e\\n    ```\u003c\\/p\u003e\\n\\n\u003cp\u003e    One thing I noticed in writing this is that it\'s uncertain whether you\'ll miss any states or not.  I kind of like the idea that you could have your watcher return true or false to decide whether to keep watching, as it would ensure we could get all updates without missing any.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15267426_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15267426_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/16 20:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-02T20:21:47+0000\'\u003e02\\/May\\/16 20:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216351404  \\n\\n     BTW, here\'s an implementation of waitForState() that does the work on the calling thread.  This passes your tests: \\n\\n     ``` \\n      public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate) \\n          throws InterruptedException, TimeoutException { \\n        long stop = System.nanoTime() + unit.toNanos(wait); \\n\\n         if (predicate.matches(this.liveNodes, clusterState.getCollectionOrNull(collection)))  \\n{\\n          return;\\n        }\\n\\n         LinkedBlockingQueue&lt;Pair&lt;Set&lt;String&gt;, DocCollection&gt;&gt; queue = new LinkedBlockingQueue&lt;&gt;(); \\n        CollectionStateWatcher watcher = new CollectionStateWatcher() { \\n          @Override \\n          public void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState)  \\n{\\n            queue.add(new Pair&lt;&gt;(liveNodes, collectionState));\\n            registerCollectionStateWatcher(collection, this);\\n          }\\n         }; \\n\\n         registerCollectionStateWatcher(collection, watcher); \\n        try { \\n          while (true) { \\n            Pair&lt;Set&lt;String&gt;, DocCollection&gt; pair = queue.poll(stop - System.nanoTime(), TimeUnit.NANOSECONDS); \\n            if (pair == null)  \\n{\\n              throw new TimeoutException();\\n            }\\n             if (predicate.matches(pair.getKey(), pair.getValue()))  \\n{\\n              return;\\n            }\\n           } \\n        } finally  \\n{\\n          removeCollectionStateWatcher(collection, watcher);\\n        }\\n       } \\n    ``` \\n\\n     One thing I noticed in writing this is that it\'s uncertain whether you\'ll miss any states or not.  I kind of like the idea that you could have your watcher return true or false to decide whether to keep watching, as it would ensure we could get all updates without missing any.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15270950\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15270950&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15270950\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15270950_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15270950_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/May\\/16 16:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-04T16:34:44+0000\'\u003e04\\/May\\/16 16:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216922168\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216922168\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &gt; One thing I noticed in writing this is that it\'s uncertain whether you\'ll miss any states or not\u003c\\/p\u003e\\n\\n\u003cp\u003e    Unless I\'m misunderstanding you, this is just how ZK works, though.  A watcher firing just means that there has been at least one change to the watched node in the space of the last tick.  So we wouldn\'t be able to guarantee that the CollectionStateWatcher is notified of every change.\u003c\\/p\u003e\\n\\n\u003cp\u003e    If we\'re making CSW public again, I don\'t think the queueing implementation you have there will work?  An executor seems to be the most straightforward way of doing things here.  Although, thinking more about that, we already have a separate executor for watchers, don\'t we?  So this may just be overthinking things.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15270950_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15270950_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/May\\/16 16:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-04T16:34:44+0000\'\u003e04\\/May\\/16 16:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216922168  \\n\\n     &gt; One thing I noticed in writing this is that it\'s uncertain whether you\'ll miss any states or not \\n\\n     Unless I\'m misunderstanding you, this is just how ZK works, though.  A watcher firing just means that there has been at least one change to the watched node in the space of the last tick.  So we wouldn\'t be able to guarantee that the CollectionStateWatcher is notified of every change. \\n\\n     If we\'re making CSW public again, I don\'t think the queueing implementation you have there will work?  An executor seems to be the most straightforward way of doing things here.  Although, thinking more about that, we already have a separate executor for watchers, don\'t we?  So this may just be overthinking things.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15270983\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15270983&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15270983\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15270983_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15270983_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/May\\/16 16:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-04T16:59:33+0000\'\u003e04\\/May\\/16 16:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216931783\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216931783\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Correct, the queuing implementation where the waiting thread loops only helps waitForState().  Maybe we should just go with that for now and consider making CSW public as a follow up?  If we do make it public, I think we\'d still want a separate executor, you don\'t want to end up blocking ZKSR\'s internal operations.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15270983_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15270983_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/May\\/16 16:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-04T16:59:33+0000\'\u003e04\\/May\\/16 16:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216931783  \\n\\n     Correct, the queuing implementation where the waiting thread loops only helps waitForState().  Maybe we should just go with that for now and consider making CSW public as a follow up?  If we do make it public, I think we\'d still want a separate executor, you don\'t want to end up blocking ZKSR\'s internal operations.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15271040\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15271040&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15271040\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15271040_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15271040_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/May\\/16 17:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-04T17:33:49+0000\'\u003e04\\/May\\/16 17:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216941787\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216941787\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Last push exposes CollectionStateWatcher directly again, and moves notification calls into an Executor.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15271040_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15271040_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/May\\/16 17:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-04T17:33:49+0000\'\u003e04\\/May\\/16 17:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-216941787  \\n\\n     Last push exposes CollectionStateWatcher directly again, and moves notification calls into an Executor.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15273176\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15273176&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15273176\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15273176_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15273176_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/May\\/16 21:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-05T21:55:04+0000\'\u003e05\\/May\\/16 21:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user markrmiller commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217291207\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217291207\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &gt; Although, thinking more about that, we already have a separate executor for watchers, don\'t we?\u003c\\/p\u003e\\n\\n\u003cp\u003e    Yes, every watch firing event should run from a dedicated executor rather than using ZK\'s event thread. I have not dug in enough here to know it covers what you guys are talking about, but holding up a Watcher thread should no longer interfere with ZK clients internal event thread.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15273176_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15273176_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/May\\/16 21:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-05T21:55:04+0000\'\u003e05\\/May\\/16 21:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user markrmiller commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217291207  \\n\\n     &gt; Although, thinking more about that, we already have a separate executor for watchers, don\'t we? \\n\\n     Yes, every watch firing event should run from a dedicated executor rather than using ZK\'s event thread. I have not dug in enough here to know it covers what you guys are talking about, but holding up a Watcher thread should no longer interfere with ZK clients internal event thread.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15276961\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15276961&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15276961\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15276961_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15276961_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/May\\/16 20:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-09T20:22:46+0000\'\u003e09\\/May\\/16 20:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217978029\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217978029\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    On further reflection, I\'ve pulled the separate executor back out again.  I think the SolrZkClient\'s separate executor will work well enough, and for the most part client code is going to be run inside a CloudSolrClient talking to the cluster, not a Solr node\'s internal state reader.  I\'ve also removed the CSC.registerCollectionWatcher() method, as that\'s really only for internal use, leaving the waitForState() method as a convenience.\u003c\\/p\u003e\\n\\n\u003cp\u003e    I\'d like to commit this in the next couple of days.  I think it will make a big difference to a bunch of test improvements I want to make separately.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15276961_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15276961_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/May\\/16 20:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-09T20:22:46+0000\'\u003e09\\/May\\/16 20:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217978029  \\n\\n     On further reflection, I\'ve pulled the separate executor back out again.  I think the SolrZkClient\'s separate executor will work well enough, and for the most part client code is going to be run inside a CloudSolrClient talking to the cluster, not a Solr node\'s internal state reader.  I\'ve also removed the CSC.registerCollectionWatcher() method, as that\'s really only for internal use, leaving the waitForState() method as a convenience. \\n\\n     I\'d like to commit this in the next couple of days.  I think it will make a big difference to a bunch of test improvements I want to make separately.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15276973\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15276973&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15276973\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15276973_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15276973_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/May\\/16 20:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-09T20:30:12+0000\'\u003e09\\/May\\/16 20:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ePretty sure you can create pull requests from branches within the same repository, so there\'s no need to have your own clone if you don\'t want one.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15276973_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15276973_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/May\\/16 20:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-09T20:30:12+0000\'\u003e09\\/May\\/16 20:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Pretty sure you can create pull requests from branches within the same repository, so there\'s no need to have your own clone if you don\'t want one.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15277005\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15277005&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15277005\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15277005_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15277005_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/May\\/16 20:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-09T20:47:43+0000\'\u003e09\\/May\\/16 20:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217984743\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217984743\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    I did like the idea of a dedicated executor for collection events, just to ensure clean separation.  But I\'ll take a look in its current form.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15277005_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15277005_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/May\\/16 20:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-09T20:47:43+0000\'\u003e09\\/May\\/16 20:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-217984743  \\n\\n     I did like the idea of a dedicated executor for collection events, just to ensure clean separation.  But I\'ll take a look in its current form.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15277927\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15277927&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15277927\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15277927_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15277927_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 10:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T10:44:48+0000\'\u003e10\\/May\\/16 10:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218122269\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218122269\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    New plan!  We now have a separate notification thread, and change notifications are placed into a LinkedBlockingQueue that the thread waits on.\u003c\\/p\u003e\\n\\n\u003cp\u003e    A caveat: the queue is currently unbounded, which is a Bad Thing.  I\'m not sure of the best way forward here - make it bounded, and just drop notifications if the queue is full?  Make a note on the collection predicate javadocs that all predicates run in a single thread, and users need to be careful not to run slow code in them?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15277927_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15277927_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 10:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T10:44:48+0000\'\u003e10\\/May\\/16 10:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218122269  \\n\\n     New plan!  We now have a separate notification thread, and change notifications are placed into a LinkedBlockingQueue that the thread waits on. \\n\\n     A caveat: the queue is currently unbounded, which is a Bad Thing.  I\'m not sure of the best way forward here - make it bounded, and just drop notifications if the queue is full?  Make a note on the collection predicate javadocs that all predicates run in a single thread, and users need to be careful not to run slow code in them?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15278477\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15278477&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15278477\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15278477_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15278477_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 17:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T17:12:27+0000\'\u003e10\\/May\\/16 17:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218226081\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218226081\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Hmm, isn\'t an executor a fancier way of doing a Queue + Thread(s)? \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15278477_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15278477_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 17:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T17:12:27+0000\'\u003e10\\/May\\/16 17:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218226081  \\n\\n     Hmm, isn\'t an executor a fancier way of doing a Queue + Thread(s)?                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15278661\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15278661&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15278661\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15278661_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15278661_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 18:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T18:40:52+0000\'\u003e10\\/May\\/16 18:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218251017\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218251017\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    That\'s... a good point, actually.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15278661_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15278661_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 18:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T18:40:52+0000\'\u003e10\\/May\\/16 18:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218251017  \\n\\n     That\'s... a good point, actually.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279184\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279184&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279184\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279184_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279184_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:12:40+0000\'\u003e10\\/May\\/16 23:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62769742\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62769742\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -485,6 +506,20 @@ private void refreshLegacyClusterState(Watcher watcher)\u003cbr\\/\u003e\\n               \\/\\/ Nothing to do, someone else updated same or newer.\u003cbr\\/\u003e\\n               return;\u003cbr\\/\u003e\\n             }\u003cbr\\/\u003e\\n    +        Set&lt;String&gt; liveNodes = this.liveNodes; \\/\\/ volatile read\u003cbr\\/\u003e\\n    +        for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) {\u003cbr\\/\u003e\\n    +          String coll = watchEntry.getKey();\u003cbr\\/\u003e\\n    +          CollectionWatch collWatch = watchEntry.getValue();\u003cbr\\/\u003e\\n    +          ClusterState.CollectionRef ref = this.legacyCollectionStates.get(coll);\u003cbr\\/\u003e\\n    +          if (ref == null)\u003cbr\\/\u003e\\n    +            continue;\u003cbr\\/\u003e\\n    +          \\/\\/ watched collection, so this will always be local\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    nit `legacy collections are always in-memory`\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279184_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279184_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:12:40+0000\'\u003e10\\/May\\/16 23:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62769742  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -485,6 +506,20 @@ private void refreshLegacyClusterState(Watcher watcher) \\n               \\/\\/ Nothing to do, someone else updated same or newer. \\n               return; \\n             } \\n    +        Set&lt;String&gt; liveNodes = this.liveNodes; \\/\\/ volatile read \\n    +        for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) { \\n    +          String coll = watchEntry.getKey(); \\n    +          CollectionWatch collWatch = watchEntry.getValue(); \\n    +          ClusterState.CollectionRef ref = this.legacyCollectionStates.get(coll); \\n    +          if (ref == null) \\n    +            continue; \\n    +          \\/\\/ watched collection, so this will always be local \\n    &#8212; End diff &#8211; \\n\\n     nit `legacy collections are always in-memory`              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279195\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279195&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279195\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279195_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279195_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:16:03+0000\'\u003e10\\/May\\/16 23:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770082\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770082\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -485,6 +506,20 @@ private void refreshLegacyClusterState(Watcher watcher)\u003cbr\\/\u003e\\n               \\/\\/ Nothing to do, someone else updated same or newer.\u003cbr\\/\u003e\\n               return;\u003cbr\\/\u003e\\n             }\u003cbr\\/\u003e\\n    +        Set&lt;String&gt; liveNodes = this.liveNodes; \\/\\/ volatile read\u003cbr\\/\u003e\\n    +        for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) {\u003cbr\\/\u003e\\n    +          String coll = watchEntry.getKey();\u003cbr\\/\u003e\\n    +          CollectionWatch collWatch = watchEntry.getValue();\u003cbr\\/\u003e\\n    +          ClusterState.CollectionRef ref = this.legacyCollectionStates.get(coll);\u003cbr\\/\u003e\\n    +          if (ref == null)\u003cbr\\/\u003e\\n    +            continue;\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    Q: what happens if you try to set a watcher on a collection that doesn\'t exist yet?  Mostly curious.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279195_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279195_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:16:03+0000\'\u003e10\\/May\\/16 23:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770082  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -485,6 +506,20 @@ private void refreshLegacyClusterState(Watcher watcher) \\n               \\/\\/ Nothing to do, someone else updated same or newer. \\n               return; \\n             } \\n    +        Set&lt;String&gt; liveNodes = this.liveNodes; \\/\\/ volatile read \\n    +        for (Map.Entry&lt;String, CollectionWatch&gt; watchEntry : this.collectionWatches.entrySet()) { \\n    +          String coll = watchEntry.getKey(); \\n    +          CollectionWatch collWatch = watchEntry.getValue(); \\n    +          ClusterState.CollectionRef ref = this.legacyCollectionStates.get(coll); \\n    +          if (ref == null) \\n    +            continue; \\n    &#8212; End diff &#8211; \\n\\n     Q: what happens if you try to set a watcher on a collection that doesn\'t exist yet?  Mostly curious.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279199\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279199&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279199\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279199_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279199_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:18:02+0000\'\u003e10\\/May\\/16 23:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770248\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770248\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -635,6 +669,8 @@ public Object getUpdateLock() {\u003c\\/p\u003e\\n\\n\u003cp\u003e       public void close() {\u003cbr\\/\u003e\\n         this.closed  = true;\u003cbr\\/\u003e\\n    +    notifications.shutdownNow();  \\/\\/ interrupt\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    @markrmiller and I went on a hunt a while ago to try to remove most thread interruptions from Solr due to certain Lucene NIO operations getting permanently wedged due to interrupts.  Is this necessary?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279199_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279199_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:18:02+0000\'\u003e10\\/May\\/16 23:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770248  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -635,6 +669,8 @@ public Object getUpdateLock() { \\n\\n        public void close() { \\n         this.closed  = true; \\n    +    notifications.shutdownNow();  \\/\\/ interrupt \\n    &#8212; End diff &#8211; \\n\\n     @markrmiller and I went on a hunt a while ago to try to remove most thread interruptions from Solr due to certain Lucene NIO operations getting permanently wedged due to interrupts.  Is this necessary?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279200\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279200&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279200\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279200_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279200_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:18:25+0000\'\u003e10\\/May\\/16 23:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770279\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770279\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -635,6 +669,8 @@ public Object getUpdateLock() {\u003c\\/p\u003e\\n\\n\u003cp\u003e       public void close() {\u003cbr\\/\u003e\\n         this.closed  = true;\u003cbr\\/\u003e\\n    +    notifications.shutdownNow();  \\/\\/ interrupt\u003cbr\\/\u003e\\n    +    ExecutorUtil.shutdownAndAwaitTermination(notifications);\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    I think I would just shutdown and not wait.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279200_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279200_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:18:25+0000\'\u003e10\\/May\\/16 23:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770279  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -635,6 +669,8 @@ public Object getUpdateLock() { \\n\\n        public void close() { \\n         this.closed  = true; \\n    +    notifications.shutdownNow();  \\/\\/ interrupt \\n    +    ExecutorUtil.shutdownAndAwaitTermination(notifications); \\n    &#8212; End diff &#8211; \\n\\n     I think I would just shutdown and not wait.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279206\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279206&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279206\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279206_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279206_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:21:18+0000\'\u003e10\\/May\\/16 23:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770569\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770569\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e       }\u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    +  \\/**\u003cbr\\/\u003e\\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Note that the predicate may be called again even after it has returned true, so\u003cbr\\/\u003e\\n    +   * implementors should avoid changing state within the predicate call itself.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection to watch\u003cbr\\/\u003e\\n    +   * @param wait       how long to wait\u003cbr\\/\u003e\\n    +   * @param unit       the units of the wait parameter\u003cbr\\/\u003e\\n    +   * @param predicate  the predicate to call on state changes\u003cbr\\/\u003e\\n    +   * @throws InterruptedException on interrupt\u003cbr\\/\u003e\\n    +   * @throws TimeoutException on timeout\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate)\u003cbr\\/\u003e\\n    +      throws InterruptedException, TimeoutException {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    final CountDownLatch latch = new CountDownLatch(1);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    CollectionStateWatcher watcher = new CollectionStateWatcher() {\u003cbr\\/\u003e\\n    +      @Override\u003cbr\\/\u003e\\n    +      public void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState) {\u003cbr\\/\u003e\\n    +        if (predicate.matches(liveNodes, collectionState)) \u003c\\/p\u003e\\n{\\n    +          latch.countDown();\\n    +        }\\n\u003cp\u003e else \u003c\\/p\u003e\\n{\\n    +          registerCollectionStateWatcher(collection, this);\\n    +        }\\n\u003cp\u003e    +      }\u003cbr\\/\u003e\\n    +    };\u003cbr\\/\u003e\\n    +    registerCollectionStateWatcher(collection, watcher);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    try \u003c\\/p\u003e\\n{\\n    +      \\/\\/ check the current state\\n    +      DocCollection dc = clusterState.getCollectionOrNull(collection);\\n    +      if (predicate.matches(liveNodes, dc))\\n    +        return;\\n    +\\n    +      \\/\\/ wait for the watcher predicate to return true, or time out\\n    +      if (!latch.await(wait, unit))\\n    +        throw new TimeoutException();\\n    +\\n    +    }\\n\u003cp\u003e    +    finally {\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    nit: you have a few formatting issues here and elsewhere\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279206_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279206_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:21:18+0000\'\u003e10\\/May\\/16 23:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770569  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();           synchronized (getUpdateLock()) {\\n             constructState();\\n           }         }   \\n        }  \\n \\n\\n\\n     +  \\/** \\n    +   * Block until a CollectionStatePredicate returns true, or the wait times out \\n    +   * \\n    +   * Note that the predicate may be called again even after it has returned true, so \\n    +   * implementors should avoid changing state within the predicate call itself. \\n    +   * \\n    +   * @param collection the collection to watch \\n    +   * @param wait       how long to wait \\n    +   * @param unit       the units of the wait parameter \\n    +   * @param predicate  the predicate to call on state changes \\n    +   * @throws InterruptedException on interrupt \\n    +   * @throws TimeoutException on timeout \\n    +   *\\/ \\n    +  public void waitForState(final String collection, long wait, TimeUnit unit, CollectionStatePredicate predicate) \\n    +      throws InterruptedException, TimeoutException { \\n    + \\n    +    final CountDownLatch latch = new CountDownLatch(1); \\n    + \\n    +    CollectionStateWatcher watcher = new CollectionStateWatcher() { \\n    +      @Override \\n    +      public void onStateChanged(Set&lt;String&gt; liveNodes, DocCollection collectionState) { \\n    +        if (predicate.matches(liveNodes, collectionState))  \\n{\\n    +          latch.countDown();\\n    +        }\\n  else  \\n{\\n    +          registerCollectionStateWatcher(collection, this);\\n    +        }\\n     +      } \\n    +    }; \\n    +    registerCollectionStateWatcher(collection, watcher); \\n    + \\n    +    try  \\n{\\n    +      \\/\\/ check the current state\\n    +      DocCollection dc = clusterState.getCollectionOrNull(collection);\\n    +      if (predicate.matches(liveNodes, dc))\\n    +        return;\\n    +\\n    +      \\/\\/ wait for the watcher predicate to return true, or time out\\n    +      if (!latch.await(wait, unit))\\n    +        throw new TimeoutException();\\n    +\\n    +    }\\n     +    finally { \\n    &#8212; End diff &#8211; \\n\\n     nit: you have a few formatting issues here and elsewhere              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279209\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279209&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279209\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279209_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279209_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:22:10+0000\'\u003e10\\/May\\/16 23:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770640\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770640\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/util\\/ExecutorUtil.java &#8212;\u003cbr\\/\u003e\\n    @@ -154,6 +147,20 @@ public static ExecutorService newMDCAwareSingleThreadExecutor(ThreadFactory thre\u003cbr\\/\u003e\\n       }\u003c\\/p\u003e\\n\\n\u003cp\u003e       \\/**\u003cbr\\/\u003e\\n    +   * Create a single thread executor using a named thread factory\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public static ExecutorService newMDCAwareSingleThreadExecutor(String name) \u003c\\/p\u003e\\n{\\n    +    return newMDCAwareSingleThreadExecutor(new SolrjNamedThreadFactory(name));\\n    +  }\\n\u003cp\u003e    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    not used\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279209_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279209_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:22:10+0000\'\u003e10\\/May\\/16 23:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62770640  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/util\\/ExecutorUtil.java &#8212; \\n    @@ -154,6 +147,20 @@ public static ExecutorService newMDCAwareSingleThreadExecutor(ThreadFactory thre \\n       } \\n\\n        \\/** \\n    +   * Create a single thread executor using a named thread factory \\n    +   *\\/ \\n    +  public static ExecutorService newMDCAwareSingleThreadExecutor(String name)  \\n{\\n    +    return newMDCAwareSingleThreadExecutor(new SolrjNamedThreadFactory(name));\\n    +  }\\n     &#8212; End diff &#8211; \\n\\n     not used              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279215\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279215&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279215\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279215_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279215_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:26:47+0000\'\u003e10\\/May\\/16 23:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771056\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771056\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/test\\/org\\/apache\\/solr\\/common\\/cloud\\/TestCollectionStateWatchers.java &#8212;\u003cbr\\/\u003e\\n    @@ -0,0 +1,235 @@\u003cbr\\/\u003e\\n    +package org.apache.solr.common.cloud;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/*\u003cbr\\/\u003e\\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\u003cbr\\/\u003e\\n    + * contributor license agreements.  See the NOTICE file distributed with\u003cbr\\/\u003e\\n    + * this work for additional information regarding copyright ownership.\u003cbr\\/\u003e\\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\u003cbr\\/\u003e\\n    + * (the \\\"License\\\"); you may not use this file except in compliance with\u003cbr\\/\u003e\\n    + * the License.  You may obtain a copy of the License at\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + *     \u003ca href=\\\"http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\u003c\\/a\u003e\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * Unless required by applicable law or agreed to in writing, software\u003cbr\\/\u003e\\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\u003cbr\\/\u003e\\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u003cbr\\/\u003e\\n    + * See the License for the specific language governing permissions and\u003cbr\\/\u003e\\n    + * limitations under the License.\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import java.util.HashMap;\u003cbr\\/\u003e\\n    +import java.util.Set;\u003cbr\\/\u003e\\n    +import java.util.concurrent.CountDownLatch;\u003cbr\\/\u003e\\n    +import java.util.concurrent.ExecutorService;\u003cbr\\/\u003e\\n    +import java.util.concurrent.Future;\u003cbr\\/\u003e\\n    +import java.util.concurrent.TimeUnit;\u003cbr\\/\u003e\\n    +import java.util.concurrent.TimeoutException;\u003cbr\\/\u003e\\n    +import java.util.concurrent.atomic.AtomicInteger;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import org.apache.solr.client.solrj.embedded.JettySolrRunner;\u003cbr\\/\u003e\\n    +import org.apache.solr.client.solrj.impl.CloudSolrClient;\u003cbr\\/\u003e\\n    +import org.apache.solr.client.solrj.request.CollectionAdminRequest;\u003cbr\\/\u003e\\n    +import org.apache.solr.cloud.SolrCloudTestCase;\u003cbr\\/\u003e\\n    +import org.apache.solr.common.util.ExecutorUtil;\u003cbr\\/\u003e\\n    +import org.apache.solr.common.util.SolrjNamedThreadFactory;\u003cbr\\/\u003e\\n    +import org.junit.AfterClass;\u003cbr\\/\u003e\\n    +import org.junit.Before;\u003cbr\\/\u003e\\n    +import org.junit.BeforeClass;\u003cbr\\/\u003e\\n    +import org.junit.Test;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import static org.hamcrest.core.Is.is;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +public class TestCollectionStateWatchers extends SolrCloudTestCase {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static final int CLUSTER_SIZE = 4;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static final ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\u003cbr\\/\u003e\\n    +      new SolrjNamedThreadFactory(\\\"backgroundWatchers\\\")\u003cbr\\/\u003e\\n    +  );\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static final int MAX_WAIT_TIMEOUT = 30;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @BeforeClass\u003cbr\\/\u003e\\n    +  public static void startCluster() throws Exception \u003c\\/p\u003e\\n{\\n    +    configureCluster(CLUSTER_SIZE)\\n    +        .addConfig(\\\"config\\\", getFile(\\\"solrj\\/solr\\/collection1\\/conf\\\").toPath())\\n    +        .configure();\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    +  @AfterClass\u003cbr\\/\u003e\\n    +  public static void shutdownBackgroundExecutors() \u003c\\/p\u003e\\n{\\n    +    executor.shutdown();\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    +  @Before\u003cbr\\/\u003e\\n    +  public void prepareCluster() throws Exception {\u003cbr\\/\u003e\\n    +    int missingServers = CLUSTER_SIZE - cluster.getJettySolrRunners().size();\u003cbr\\/\u003e\\n    +    for (int i = 0; i &lt; missingServers; i++) \u003c\\/p\u003e\\n{\\n    +      cluster.startJettySolrRunner();\\n    +    }\\n\u003cp\u003e    +    cluster.waitForAllNodes(30);\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static Future&lt;Boolean&gt; waitInBackground(String collection, long timeout, TimeUnit unit,\u003cbr\\/\u003e\\n    +                                                  CollectionStatePredicate predicate) {\u003cbr\\/\u003e\\n    +    return executor.submit(() -&gt; {\u003cbr\\/\u003e\\n    +      try \u003c\\/p\u003e\\n{\\n    +        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\\n    +      }\\n\u003cp\u003e catch (InterruptedException | TimeoutException e) \u003c\\/p\u003e\\n{\\n    +        return Boolean.FALSE;\\n    +      }\\n\u003cp\u003e    +      return Boolean.TRUE;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @Test\u003cbr\\/\u003e\\n    +  public void testSimpleCollectionWatch() throws Exception {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    CloudSolrClient client = cluster.getSolrClient();\u003cbr\\/\u003e\\n    +    cluster.createCollection(\\\"testcollection\\\", CLUSTER_SIZE, 1, \\\"config\\\", new HashMap&lt;&gt;());\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    client.waitForState(\\\"testcollection\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    \\/\\/ shutdown a node and check that we get notified about the change\u003cbr\\/\u003e\\n    +    final AtomicInteger nodeCount = new AtomicInteger(0);\u003cbr\\/\u003e\\n    +    final CountDownLatch latch = new CountDownLatch(1);\u003cbr\\/\u003e\\n    +    client.registerCollectionStateWatcher(\\\"testcollection\\\", (liveNodes, collectionState) -&gt; {\u003cbr\\/\u003e\\n    +      \\/\\/ we can\'t just count liveNodes here, because that\'s updated by a separate watcher,\u003cbr\\/\u003e\\n    +      \\/\\/ and it may be the case that we\'re triggered by a node setting itself to DOWN before\u003cbr\\/\u003e\\n    +      \\/\\/ the liveNodes watcher is called\u003cbr\\/\u003e\\n    +      for (Slice slice : collectionState) {\u003cbr\\/\u003e\\n    +        for (Replica replica : slice) \u003c\\/p\u003e\\n{\\n    +          if (replica.isActive(liveNodes))\\n    +            nodeCount.incrementAndGet();\\n    +        }\\n\u003cp\u003e    +      }\u003cbr\\/\u003e\\n    +      latch.countDown();\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    cluster.stopJettySolrRunner(random().nextInt(cluster.getJettySolrRunners().size()));\u003cbr\\/\u003e\\n    +    assertTrue(\\\"CollectionStateWatcher was never notified of cluster change\\\", latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS));\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    assertThat(nodeCount.intValue(), is(3));\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @Test\u003cbr\\/\u003e\\n    +  public void testWaitForStateChecksCurrentState() throws Exception {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    CloudSolrClient client = cluster.getSolrClient();\u003cbr\\/\u003e\\n    +    cluster.createCollection(\\\"waitforstate\\\", 1, 1, \\\"config\\\", new HashMap&lt;&gt;());\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    client.waitForState(\\\"waitforstate\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    \\/\\/ several goes, to check that we\'re not getting delayed state changes\u003cbr\\/\u003e\\n    +    for (int i = 0; i &lt; 10; i++) {\u003cbr\\/\u003e\\n    +      try \u003c\\/p\u003e\\n{\\n    +        client.waitForState(\\\"waitforstate\\\", 1, TimeUnit.SECONDS, DocCollection::isFullyActive);\\n    +      }\\n\u003cp\u003e    +      catch (TimeoutException e) \u003c\\/p\u003e\\n{\\n    +        fail(\\\"waitForState should return immediately if the predicate is already satisfied\\\");\\n    +      }\\n\u003cp\u003e    +    }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @Test\u003cbr\\/\u003e\\n    +  public void testCanWatchForNonexistantCollection() throws Exception {\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    technical can \u003cem\u003ewait\u003c\\/em\u003e for non-existent collection.  Would like to know what happens if you try to watch for a non-existent one, does it get fired immediately, or only when the collection is created?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279215_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279215_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:26:47+0000\'\u003e10\\/May\\/16 23:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771056  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/test\\/org\\/apache\\/solr\\/common\\/cloud\\/TestCollectionStateWatchers.java &#8212; \\n    @@ -0,0 +1,235 @@ \\n    +package org.apache.solr.common.cloud; \\n    + \\n    +\\/* \\n    + * Licensed to the Apache Software Foundation (ASF) under one or more \\n    + * contributor license agreements.  See the NOTICE file distributed with \\n    + * this work for additional information regarding copyright ownership. \\n    + * The ASF licenses this file to You under the Apache License, Version 2.0 \\n    + * (the \\\"License\\\"); you may not use this file except in compliance with \\n    + * the License.  You may obtain a copy of the License at \\n    + * \\n    + *      http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0  \\n    + * \\n    + * Unless required by applicable law or agreed to in writing, software \\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS, \\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \\n    + * See the License for the specific language governing permissions and \\n    + * limitations under the License. \\n    + *\\/ \\n    + \\n    +import java.util.HashMap; \\n    +import java.util.Set; \\n    +import java.util.concurrent.CountDownLatch; \\n    +import java.util.concurrent.ExecutorService; \\n    +import java.util.concurrent.Future; \\n    +import java.util.concurrent.TimeUnit; \\n    +import java.util.concurrent.TimeoutException; \\n    +import java.util.concurrent.atomic.AtomicInteger; \\n    + \\n    +import org.apache.solr.client.solrj.embedded.JettySolrRunner; \\n    +import org.apache.solr.client.solrj.impl.CloudSolrClient; \\n    +import org.apache.solr.client.solrj.request.CollectionAdminRequest; \\n    +import org.apache.solr.cloud.SolrCloudTestCase; \\n    +import org.apache.solr.common.util.ExecutorUtil; \\n    +import org.apache.solr.common.util.SolrjNamedThreadFactory; \\n    +import org.junit.AfterClass; \\n    +import org.junit.Before; \\n    +import org.junit.BeforeClass; \\n    +import org.junit.Test; \\n    + \\n    +import static org.hamcrest.core.Is.is; \\n    + \\n    +public class TestCollectionStateWatchers extends SolrCloudTestCase { \\n    + \\n    +  private static final int CLUSTER_SIZE = 4; \\n    + \\n    +  private static final ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool( \\n    +      new SolrjNamedThreadFactory(\\\"backgroundWatchers\\\") \\n    +  ); \\n    + \\n    +  private static final int MAX_WAIT_TIMEOUT = 30; \\n    + \\n    +  @BeforeClass \\n    +  public static void startCluster() throws Exception  \\n{\\n    +    configureCluster(CLUSTER_SIZE)\\n    +        .addConfig(\\\"config\\\", getFile(\\\"solrj\\/solr\\/collection1\\/conf\\\").toPath())\\n    +        .configure();\\n    +  }\\n     + \\n    +  @AfterClass \\n    +  public static void shutdownBackgroundExecutors()  \\n{\\n    +    executor.shutdown();\\n    +  }\\n     + \\n    +  @Before \\n    +  public void prepareCluster() throws Exception { \\n    +    int missingServers = CLUSTER_SIZE - cluster.getJettySolrRunners().size(); \\n    +    for (int i = 0; i &lt; missingServers; i++)  \\n{\\n    +      cluster.startJettySolrRunner();\\n    +    }\\n     +    cluster.waitForAllNodes(30); \\n    +  } \\n    + \\n    +  private static Future&lt;Boolean&gt; waitInBackground(String collection, long timeout, TimeUnit unit, \\n    +                                                  CollectionStatePredicate predicate) { \\n    +    return executor.submit(() -&gt; { \\n    +      try  \\n{\\n    +        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\\n    +      }\\n  catch (InterruptedException | TimeoutException e)  \\n{\\n    +        return Boolean.FALSE;\\n    +      }\\n     +      return Boolean.TRUE; \\n    +    }); \\n    +  } \\n    + \\n    + \\n    +  @Test \\n    +  public void testSimpleCollectionWatch() throws Exception { \\n    + \\n    +    CloudSolrClient client = cluster.getSolrClient(); \\n    +    cluster.createCollection(\\\"testcollection\\\", CLUSTER_SIZE, 1, \\\"config\\\", new HashMap&lt;&gt;()); \\n    + \\n    +    client.waitForState(\\\"testcollection\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive); \\n    + \\n    +    \\/\\/ shutdown a node and check that we get notified about the change \\n    +    final AtomicInteger nodeCount = new AtomicInteger(0); \\n    +    final CountDownLatch latch = new CountDownLatch(1); \\n    +    client.registerCollectionStateWatcher(\\\"testcollection\\\", (liveNodes, collectionState) -&gt; { \\n    +      \\/\\/ we can\'t just count liveNodes here, because that\'s updated by a separate watcher, \\n    +      \\/\\/ and it may be the case that we\'re triggered by a node setting itself to DOWN before \\n    +      \\/\\/ the liveNodes watcher is called \\n    +      for (Slice slice : collectionState) { \\n    +        for (Replica replica : slice)  \\n{\\n    +          if (replica.isActive(liveNodes))\\n    +            nodeCount.incrementAndGet();\\n    +        }\\n     +      } \\n    +      latch.countDown(); \\n    +    }); \\n    + \\n    +    cluster.stopJettySolrRunner(random().nextInt(cluster.getJettySolrRunners().size())); \\n    +    assertTrue(\\\"CollectionStateWatcher was never notified of cluster change\\\", latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS)); \\n    + \\n    +    assertThat(nodeCount.intValue(), is(3)); \\n    + \\n    +  } \\n    + \\n    +  @Test \\n    +  public void testWaitForStateChecksCurrentState() throws Exception { \\n    + \\n    +    CloudSolrClient client = cluster.getSolrClient(); \\n    +    cluster.createCollection(\\\"waitforstate\\\", 1, 1, \\\"config\\\", new HashMap&lt;&gt;()); \\n    + \\n    +    client.waitForState(\\\"waitforstate\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive); \\n    + \\n    +    \\/\\/ several goes, to check that we\'re not getting delayed state changes \\n    +    for (int i = 0; i &lt; 10; i++) { \\n    +      try  \\n{\\n    +        client.waitForState(\\\"waitforstate\\\", 1, TimeUnit.SECONDS, DocCollection::isFullyActive);\\n    +      }\\n     +      catch (TimeoutException e)  \\n{\\n    +        fail(\\\"waitForState should return immediately if the predicate is already satisfied\\\");\\n    +      }\\n     +    } \\n    + \\n    +  } \\n    + \\n    +  @Test \\n    +  public void testCanWatchForNonexistantCollection() throws Exception { \\n    &#8212; End diff &#8211; \\n\\n     technical can  wait  for non-existent collection.  Would like to know what happens if you try to watch for a non-existent one, does it get fired immediately, or only when the collection is created?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279218\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279218&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279218\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279218_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279218_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:27:50+0000\'\u003e10\\/May\\/16 23:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771165\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771165\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) {\u003cbr\\/\u003e\\n    +      new StateWatcher(collection).refreshAndWatch();\u003c\\/p\u003e\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    I feel like this needs to check whether or not the collection exists \\/ is a legacy collection.  If it\'s a legacy collection, you don\'t want to try to create a StateWatcher.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279218_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279218_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:27:50+0000\'\u003e10\\/May\\/16 23:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771165  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get()) { \\n    +      new StateWatcher(collection).refreshAndWatch(); \\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     I feel like this needs to check whether or not the collection exists \\/ is a legacy collection.  If it\'s a legacy collection, you don\'t want to try to create a StateWatcher.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279219\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279219&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279219\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279219_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279219_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:27:59+0000\'\u003e10\\/May\\/16 23:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771180\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771180\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      new StateWatcher(collection).refreshAndWatch();\u003c\\/p\u003e\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    (same) I feel like this needs to check whether or not the collection exists \\/ is a legacy collection.  If it\'s a legacy collection, you don\'t want to try to create a StateWatcher.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279219_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279219_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:27:59+0000\'\u003e10\\/May\\/16 23:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62771180  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get()) { \\n    +      new StateWatcher(collection).refreshAndWatch(); \\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     (same) I feel like this needs to check whether or not the collection exists \\/ is a legacy collection.  If it\'s a legacy collection, you don\'t want to try to create a StateWatcher.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279223\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279223&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279223\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279223_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279223_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:29:10+0000\'\u003e10\\/May\\/16 23:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218321437\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218321437\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    Almost LGTM.  There\'s a few nits, but the only real issue is potentially setting up a StateWatcher on legacy.\u003c\\/p\u003e\\n\\n\u003cp\u003e    Nice work, I think we\'re almost done!!\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279223_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279223_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/16 23:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-10T23:29:10+0000\'\u003e10\\/May\\/16 23:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#issuecomment-218321437  \\n\\n     Almost LGTM.  There\'s a few nits, but the only real issue is potentially setting up a StateWatcher on legacy. \\n\\n     Nice work, I think we\'re almost done!!              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279790\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279790&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279790\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279790_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279790_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 08:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T08:39:08+0000\'\u003e11\\/May\\/16 08:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62810535\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62810535\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/test\\/org\\/apache\\/solr\\/common\\/cloud\\/TestCollectionStateWatchers.java &#8212;\u003cbr\\/\u003e\\n    @@ -0,0 +1,235 @@\u003cbr\\/\u003e\\n    +package org.apache.solr.common.cloud;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\\/*\u003cbr\\/\u003e\\n    + * Licensed to the Apache Software Foundation (ASF) under one or more\u003cbr\\/\u003e\\n    + * contributor license agreements.  See the NOTICE file distributed with\u003cbr\\/\u003e\\n    + * this work for additional information regarding copyright ownership.\u003cbr\\/\u003e\\n    + * The ASF licenses this file to You under the Apache License, Version 2.0\u003cbr\\/\u003e\\n    + * (the \\\"License\\\"); you may not use this file except in compliance with\u003cbr\\/\u003e\\n    + * the License.  You may obtain a copy of the License at\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + *     \u003ca href=\\\"http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0\u003c\\/a\u003e\u003cbr\\/\u003e\\n    + *\u003cbr\\/\u003e\\n    + * Unless required by applicable law or agreed to in writing, software\u003cbr\\/\u003e\\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\u003cbr\\/\u003e\\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u003cbr\\/\u003e\\n    + * See the License for the specific language governing permissions and\u003cbr\\/\u003e\\n    + * limitations under the License.\u003cbr\\/\u003e\\n    + *\\/\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import java.util.HashMap;\u003cbr\\/\u003e\\n    +import java.util.Set;\u003cbr\\/\u003e\\n    +import java.util.concurrent.CountDownLatch;\u003cbr\\/\u003e\\n    +import java.util.concurrent.ExecutorService;\u003cbr\\/\u003e\\n    +import java.util.concurrent.Future;\u003cbr\\/\u003e\\n    +import java.util.concurrent.TimeUnit;\u003cbr\\/\u003e\\n    +import java.util.concurrent.TimeoutException;\u003cbr\\/\u003e\\n    +import java.util.concurrent.atomic.AtomicInteger;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import org.apache.solr.client.solrj.embedded.JettySolrRunner;\u003cbr\\/\u003e\\n    +import org.apache.solr.client.solrj.impl.CloudSolrClient;\u003cbr\\/\u003e\\n    +import org.apache.solr.client.solrj.request.CollectionAdminRequest;\u003cbr\\/\u003e\\n    +import org.apache.solr.cloud.SolrCloudTestCase;\u003cbr\\/\u003e\\n    +import org.apache.solr.common.util.ExecutorUtil;\u003cbr\\/\u003e\\n    +import org.apache.solr.common.util.SolrjNamedThreadFactory;\u003cbr\\/\u003e\\n    +import org.junit.AfterClass;\u003cbr\\/\u003e\\n    +import org.junit.Before;\u003cbr\\/\u003e\\n    +import org.junit.BeforeClass;\u003cbr\\/\u003e\\n    +import org.junit.Test;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +import static org.hamcrest.core.Is.is;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +public class TestCollectionStateWatchers extends SolrCloudTestCase {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static final int CLUSTER_SIZE = 4;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static final ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\u003cbr\\/\u003e\\n    +      new SolrjNamedThreadFactory(\\\"backgroundWatchers\\\")\u003cbr\\/\u003e\\n    +  );\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static final int MAX_WAIT_TIMEOUT = 30;\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @BeforeClass\u003cbr\\/\u003e\\n    +  public static void startCluster() throws Exception \u003c\\/p\u003e\\n{\\n    +    configureCluster(CLUSTER_SIZE)\\n    +        .addConfig(\\\"config\\\", getFile(\\\"solrj\\/solr\\/collection1\\/conf\\\").toPath())\\n    +        .configure();\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    +  @AfterClass\u003cbr\\/\u003e\\n    +  public static void shutdownBackgroundExecutors() \u003c\\/p\u003e\\n{\\n    +    executor.shutdown();\\n    +  }\\n\u003cp\u003e    +\u003cbr\\/\u003e\\n    +  @Before\u003cbr\\/\u003e\\n    +  public void prepareCluster() throws Exception {\u003cbr\\/\u003e\\n    +    int missingServers = CLUSTER_SIZE - cluster.getJettySolrRunners().size();\u003cbr\\/\u003e\\n    +    for (int i = 0; i &lt; missingServers; i++) \u003c\\/p\u003e\\n{\\n    +      cluster.startJettySolrRunner();\\n    +    }\\n\u003cp\u003e    +    cluster.waitForAllNodes(30);\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  private static Future&lt;Boolean&gt; waitInBackground(String collection, long timeout, TimeUnit unit,\u003cbr\\/\u003e\\n    +                                                  CollectionStatePredicate predicate) {\u003cbr\\/\u003e\\n    +    return executor.submit(() -&gt; {\u003cbr\\/\u003e\\n    +      try \u003c\\/p\u003e\\n{\\n    +        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\\n    +      }\\n\u003cp\u003e catch (InterruptedException | TimeoutException e) \u003c\\/p\u003e\\n{\\n    +        return Boolean.FALSE;\\n    +      }\\n\u003cp\u003e    +      return Boolean.TRUE;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @Test\u003cbr\\/\u003e\\n    +  public void testSimpleCollectionWatch() throws Exception {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    CloudSolrClient client = cluster.getSolrClient();\u003cbr\\/\u003e\\n    +    cluster.createCollection(\\\"testcollection\\\", CLUSTER_SIZE, 1, \\\"config\\\", new HashMap&lt;&gt;());\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    client.waitForState(\\\"testcollection\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    \\/\\/ shutdown a node and check that we get notified about the change\u003cbr\\/\u003e\\n    +    final AtomicInteger nodeCount = new AtomicInteger(0);\u003cbr\\/\u003e\\n    +    final CountDownLatch latch = new CountDownLatch(1);\u003cbr\\/\u003e\\n    +    client.registerCollectionStateWatcher(\\\"testcollection\\\", (liveNodes, collectionState) -&gt; {\u003cbr\\/\u003e\\n    +      \\/\\/ we can\'t just count liveNodes here, because that\'s updated by a separate watcher,\u003cbr\\/\u003e\\n    +      \\/\\/ and it may be the case that we\'re triggered by a node setting itself to DOWN before\u003cbr\\/\u003e\\n    +      \\/\\/ the liveNodes watcher is called\u003cbr\\/\u003e\\n    +      for (Slice slice : collectionState) {\u003cbr\\/\u003e\\n    +        for (Replica replica : slice) \u003c\\/p\u003e\\n{\\n    +          if (replica.isActive(liveNodes))\\n    +            nodeCount.incrementAndGet();\\n    +        }\\n\u003cp\u003e    +      }\u003cbr\\/\u003e\\n    +      latch.countDown();\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    cluster.stopJettySolrRunner(random().nextInt(cluster.getJettySolrRunners().size()));\u003cbr\\/\u003e\\n    +    assertTrue(\\\"CollectionStateWatcher was never notified of cluster change\\\", latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS));\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    assertThat(nodeCount.intValue(), is(3));\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @Test\u003cbr\\/\u003e\\n    +  public void testWaitForStateChecksCurrentState() throws Exception {\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    CloudSolrClient client = cluster.getSolrClient();\u003cbr\\/\u003e\\n    +    cluster.createCollection(\\\"waitforstate\\\", 1, 1, \\\"config\\\", new HashMap&lt;&gt;());\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    client.waitForState(\\\"waitforstate\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive);\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +    \\/\\/ several goes, to check that we\'re not getting delayed state changes\u003cbr\\/\u003e\\n    +    for (int i = 0; i &lt; 10; i++) {\u003cbr\\/\u003e\\n    +      try \u003c\\/p\u003e\\n{\\n    +        client.waitForState(\\\"waitforstate\\\", 1, TimeUnit.SECONDS, DocCollection::isFullyActive);\\n    +      }\\n\u003cp\u003e    +      catch (TimeoutException e) \u003c\\/p\u003e\\n{\\n    +        fail(\\\"waitForState should return immediately if the predicate is already satisfied\\\");\\n    +      }\\n\u003cp\u003e    +    }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  @Test\u003cbr\\/\u003e\\n    +  public void testCanWatchForNonexistantCollection() throws Exception {\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    If there\'s already a watch set, then it won\'t be fired.  If there\'s no watch set, then it will be fired by StateWatcher#refreshAndWatch().\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279790_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279790_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 08:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T08:39:08+0000\'\u003e11\\/May\\/16 08:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62810535  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/test\\/org\\/apache\\/solr\\/common\\/cloud\\/TestCollectionStateWatchers.java &#8212; \\n    @@ -0,0 +1,235 @@ \\n    +package org.apache.solr.common.cloud; \\n    + \\n    +\\/* \\n    + * Licensed to the Apache Software Foundation (ASF) under one or more \\n    + * contributor license agreements.  See the NOTICE file distributed with \\n    + * this work for additional information regarding copyright ownership. \\n    + * The ASF licenses this file to You under the Apache License, Version 2.0 \\n    + * (the \\\"License\\\"); you may not use this file except in compliance with \\n    + * the License.  You may obtain a copy of the License at \\n    + * \\n    + *      http:\\/\\/www.apache.org\\/licenses\\/LICENSE-2.0  \\n    + * \\n    + * Unless required by applicable law or agreed to in writing, software \\n    + * distributed under the License is distributed on an \\\"AS IS\\\" BASIS, \\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \\n    + * See the License for the specific language governing permissions and \\n    + * limitations under the License. \\n    + *\\/ \\n    + \\n    +import java.util.HashMap; \\n    +import java.util.Set; \\n    +import java.util.concurrent.CountDownLatch; \\n    +import java.util.concurrent.ExecutorService; \\n    +import java.util.concurrent.Future; \\n    +import java.util.concurrent.TimeUnit; \\n    +import java.util.concurrent.TimeoutException; \\n    +import java.util.concurrent.atomic.AtomicInteger; \\n    + \\n    +import org.apache.solr.client.solrj.embedded.JettySolrRunner; \\n    +import org.apache.solr.client.solrj.impl.CloudSolrClient; \\n    +import org.apache.solr.client.solrj.request.CollectionAdminRequest; \\n    +import org.apache.solr.cloud.SolrCloudTestCase; \\n    +import org.apache.solr.common.util.ExecutorUtil; \\n    +import org.apache.solr.common.util.SolrjNamedThreadFactory; \\n    +import org.junit.AfterClass; \\n    +import org.junit.Before; \\n    +import org.junit.BeforeClass; \\n    +import org.junit.Test; \\n    + \\n    +import static org.hamcrest.core.Is.is; \\n    + \\n    +public class TestCollectionStateWatchers extends SolrCloudTestCase { \\n    + \\n    +  private static final int CLUSTER_SIZE = 4; \\n    + \\n    +  private static final ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool( \\n    +      new SolrjNamedThreadFactory(\\\"backgroundWatchers\\\") \\n    +  ); \\n    + \\n    +  private static final int MAX_WAIT_TIMEOUT = 30; \\n    + \\n    +  @BeforeClass \\n    +  public static void startCluster() throws Exception  \\n{\\n    +    configureCluster(CLUSTER_SIZE)\\n    +        .addConfig(\\\"config\\\", getFile(\\\"solrj\\/solr\\/collection1\\/conf\\\").toPath())\\n    +        .configure();\\n    +  }\\n     + \\n    +  @AfterClass \\n    +  public static void shutdownBackgroundExecutors()  \\n{\\n    +    executor.shutdown();\\n    +  }\\n     + \\n    +  @Before \\n    +  public void prepareCluster() throws Exception { \\n    +    int missingServers = CLUSTER_SIZE - cluster.getJettySolrRunners().size(); \\n    +    for (int i = 0; i &lt; missingServers; i++)  \\n{\\n    +      cluster.startJettySolrRunner();\\n    +    }\\n     +    cluster.waitForAllNodes(30); \\n    +  } \\n    + \\n    +  private static Future&lt;Boolean&gt; waitInBackground(String collection, long timeout, TimeUnit unit, \\n    +                                                  CollectionStatePredicate predicate) { \\n    +    return executor.submit(() -&gt; { \\n    +      try  \\n{\\n    +        cluster.getSolrClient().waitForState(collection, timeout, unit, predicate);\\n    +      }\\n  catch (InterruptedException | TimeoutException e)  \\n{\\n    +        return Boolean.FALSE;\\n    +      }\\n     +      return Boolean.TRUE; \\n    +    }); \\n    +  } \\n    + \\n    + \\n    +  @Test \\n    +  public void testSimpleCollectionWatch() throws Exception { \\n    + \\n    +    CloudSolrClient client = cluster.getSolrClient(); \\n    +    cluster.createCollection(\\\"testcollection\\\", CLUSTER_SIZE, 1, \\\"config\\\", new HashMap&lt;&gt;()); \\n    + \\n    +    client.waitForState(\\\"testcollection\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive); \\n    + \\n    +    \\/\\/ shutdown a node and check that we get notified about the change \\n    +    final AtomicInteger nodeCount = new AtomicInteger(0); \\n    +    final CountDownLatch latch = new CountDownLatch(1); \\n    +    client.registerCollectionStateWatcher(\\\"testcollection\\\", (liveNodes, collectionState) -&gt; { \\n    +      \\/\\/ we can\'t just count liveNodes here, because that\'s updated by a separate watcher, \\n    +      \\/\\/ and it may be the case that we\'re triggered by a node setting itself to DOWN before \\n    +      \\/\\/ the liveNodes watcher is called \\n    +      for (Slice slice : collectionState) { \\n    +        for (Replica replica : slice)  \\n{\\n    +          if (replica.isActive(liveNodes))\\n    +            nodeCount.incrementAndGet();\\n    +        }\\n     +      } \\n    +      latch.countDown(); \\n    +    }); \\n    + \\n    +    cluster.stopJettySolrRunner(random().nextInt(cluster.getJettySolrRunners().size())); \\n    +    assertTrue(\\\"CollectionStateWatcher was never notified of cluster change\\\", latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS)); \\n    + \\n    +    assertThat(nodeCount.intValue(), is(3)); \\n    + \\n    +  } \\n    + \\n    +  @Test \\n    +  public void testWaitForStateChecksCurrentState() throws Exception { \\n    + \\n    +    CloudSolrClient client = cluster.getSolrClient(); \\n    +    cluster.createCollection(\\\"waitforstate\\\", 1, 1, \\\"config\\\", new HashMap&lt;&gt;()); \\n    + \\n    +    client.waitForState(\\\"waitforstate\\\", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive); \\n    + \\n    +    \\/\\/ several goes, to check that we\'re not getting delayed state changes \\n    +    for (int i = 0; i &lt; 10; i++) { \\n    +      try  \\n{\\n    +        client.waitForState(\\\"waitforstate\\\", 1, TimeUnit.SECONDS, DocCollection::isFullyActive);\\n    +      }\\n     +      catch (TimeoutException e)  \\n{\\n    +        fail(\\\"waitForState should return immediately if the predicate is already satisfied\\\");\\n    +      }\\n     +    } \\n    + \\n    +  } \\n    + \\n    +  @Test \\n    +  public void testCanWatchForNonexistantCollection() throws Exception { \\n    &#8212; End diff &#8211; \\n\\n     If there\'s already a watch set, then it won\'t be fired.  If there\'s no watch set, then it will be fired by StateWatcher#refreshAndWatch().              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15279793\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15279793&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15279793\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279793_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279793_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 08:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T08:40:11+0000\'\u003e11\\/May\\/16 08:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user romseygeek commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62810671\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62810671\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -635,6 +669,8 @@ public Object getUpdateLock() {\u003c\\/p\u003e\\n\\n\u003cp\u003e       public void close() {\u003cbr\\/\u003e\\n         this.closed  = true;\u003cbr\\/\u003e\\n    +    notifications.shutdownNow();  \\/\\/ interrupt\u003cbr\\/\u003e\\n    &#8212; End diff &#8211;\u003c\\/p\u003e\\n\\n\u003cp\u003e    Ah, no, that\'s left over from the queue impl, will remove it.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15279793_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15279793_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 08:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T08:40:11+0000\'\u003e11\\/May\\/16 08:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user romseygeek commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62810671  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -635,6 +669,8 @@ public Object getUpdateLock() { \\n\\n        public void close() { \\n         this.closed  = true; \\n    +    notifications.shutdownNow();  \\/\\/ interrupt \\n    &#8212; End diff &#8211; \\n\\n     Ah, no, that\'s left over from the queue impl, will remove it.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15280580\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15280580&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15280580\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15280580_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15280580_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T18:28:08+0000\'\u003e11\\/May\\/16 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62900820\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62900820\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      new StateWatcher(collection).refreshAndWatch();\u003c\\/p\u003e\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    Ignore this, I\'m dumb.  You want a state watcher either way (the old code did this).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15280580_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15280580_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T18:28:08+0000\'\u003e11\\/May\\/16 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62900820  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get()) { \\n    +      new StateWatcher(collection).refreshAndWatch(); \\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     Ignore this, I\'m dumb.  You want a state watcher either way (the old code did this).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15280582\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15280582&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15280582\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15280582_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15280582_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T18:28:17+0000\'\u003e11\\/May\\/16 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGithub user dragonsinth commented on a diff in the pull request:\u003c\\/p\u003e\\n\\n\u003cp\u003e    \u003ca href=\\\"https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62900842\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62900842\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e    &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212;\u003cbr\\/\u003e\\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll) \u003c\\/p\u003e\\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003epublic void addCollectionWatch(String coll) {\u003c\\/li\u003e\\n\\t\u003cli\u003eif (interestingCollections.add(coll)) {\u003c\\/li\u003e\\n\\t\u003cli\u003eLOG.info(\\\"addZkWatch \u003cspan class=\\\"error\\\"\u003e&#91;{}&#93;\u003c\\/span\u003e\\\", coll);\u003c\\/li\u003e\\n\\t\u003cli\u003enew StateWatcher(coll).refreshAndWatch(false);\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection\u003cbr\\/\u003e\\n    +   * state should be watched.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same\u003cbr\\/\u003e\\n    +   * collection does not increase the number of watches.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core is a member of\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @see ZkStateReader#unregisterCore(String)\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      }\u003cbr\\/\u003e\\n    +    }\u003cbr\\/\u003e\\n    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Notify this reader that a local core that is a member of a collection has been closed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * Not a public API.  This method should only be called from ZkController.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s\u003cbr\\/\u003e\\n    +   * for that collection either, the collection watch will be removed.\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * @param collection the collection that the core belongs to\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void unregisterCore(String collection) {\u003cbr\\/\u003e\\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; {\u003cbr\\/\u003e\\n    +      if (v == null)\u003cbr\\/\u003e\\n    +        return null;\u003cbr\\/\u003e\\n    +      if (v.coreRefCount &gt; 0)\u003cbr\\/\u003e\\n    +        v.coreRefCount--;\u003cbr\\/\u003e\\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      }\u003cbr\\/\u003e\\n    +      return v;\u003cbr\\/\u003e\\n    +    });\u003cbr\\/\u003e\\n    +    if (reconstructState.get()) {\u003cbr\\/\u003e\\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e    +  }\u003cbr\\/\u003e\\n    +\u003cbr\\/\u003e\\n    +  \\/**\u003cbr\\/\u003e\\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes\u003cbr\\/\u003e\\n    +   *\u003cbr\\/\u003e\\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher,\u003cbr\\/\u003e\\n    +   * it should register itself again in its \u003c\\/p\u003e\\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n\u003cp\u003e    +   * method.\u003cbr\\/\u003e\\n    +   *\\/\u003cbr\\/\u003e\\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) {\u003cbr\\/\u003e\\n    +    AtomicBoolean watchSet = new AtomicBoolean(false);\u003cbr\\/\u003e\\n    +    collectionWatches.compute(collection, (k, v) -&gt; \u003c\\/p\u003e\\n\u003cdiv class=\\\"error\\\"\u003e\u003cspan class=\\\"error\\\"\u003eUnknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }\u003c\\/span\u003e \u003c\\/div\u003e\\n\u003cp\u003e);\u003cbr\\/\u003e\\n    +    if (watchSet.get()) {\u003cbr\\/\u003e\\n    +      new StateWatcher(collection).refreshAndWatch();\u003c\\/p\u003e\\n\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\u003cli\u003e\\n\\t\\t\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\\t\\t\u003cli\u003eEnd diff &#8211;\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    ditto, ignore this\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"githubbot\\\" id=\\\"commentauthor_15280582_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=githubbot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"githubbot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF GitHub Bot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15280582_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/May\\/16 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-11T18:28:17+0000\'\u003e11\\/May\\/16 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Github user dragonsinth commented on a diff in the pull request: \\n\\n      https:\\/\\/github.com\\/apache\\/lucene-solr\\/pull\\/32#discussion_r62900842  \\n\\n     &#8212; Diff: solr\\/solrj\\/src\\/java\\/org\\/apache\\/solr\\/common\\/cloud\\/ZkStateReader.java &#8212; \\n    @@ -1069,32 +1100,190 @@ public static String getCollectionPath(String coll)  \\n{\\n         return COLLECTIONS_ZKNODE+\\\"\\/\\\"+coll + \\\"\\/state.json\\\";\\n       }\\n\\n \\n\\t public void addCollectionWatch(String coll) { \\n\\t if (interestingCollections.add(coll)) { \\n\\t LOG.info(\\\"addZkWatch  &#91;{}&#93; \\\", coll); \\n\\t new StateWatcher(coll).refreshAndWatch(false); \\n    +  \\/** \\n    +   * Notify this reader that a local Core is a member of a collection, and so that collection \\n    +   * state should be watched. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * The number of cores per-collection is tracked, and adding multiple cores from the same \\n    +   * collection does not increase the number of watches. \\n    +   * \\n    +   * @param collection the collection that the core is a member of \\n    +   * \\n    +   * @see ZkStateReader#unregisterCore(String) \\n    +   *\\/ \\n    +  public void registerCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; \\n  Unknown macro: {    +      if (v == null) {\\n    +        reconstructState.set(true);\\n    +        v = new CollectionWatch();\\n    +      }    +      v.coreRefCount++;    +      return v;    +    }   \\n ); \\n    +    if (reconstructState.get())  \\n  Unknown macro: {    +      new StateWatcher(collection).refreshAndWatch();    +      synchronized (getUpdateLock()) {\\n    +        constructState();\\n    +      } \\n    +    } \\n    +  } \\n    + \\n    +  \\/** \\n    +   * Notify this reader that a local core that is a member of a collection has been closed. \\n    +   * \\n    +   * Not a public API.  This method should only be called from ZkController. \\n    +   * \\n    +   * If no cores are registered for a collection, and there are no {@link CollectionStateWatcher}s \\n    +   * for that collection either, the collection watch will be removed. \\n    +   * \\n    +   * @param collection the collection that the core belongs to \\n    +   *\\/ \\n    +  public void unregisterCore(String collection) { \\n    +    AtomicBoolean reconstructState = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt; { \\n    +      if (v == null) \\n    +        return null; \\n    +      if (v.coreRefCount &gt; 0) \\n    +        v.coreRefCount--; \\n    +      if (v.canBeRemoved()) {\\n    +        watchedCollectionStates.remove(collection);\\n    +        lazyCollectionStates.put(collection, new LazyCollectionRef(collection));\\n    +        reconstructState.set(true);\\n    +        return null;\\n    +      } \\n    +      return v; \\n    +    }); \\n    +    if (reconstructState.get()) { \\n    +      synchronized (getUpdateLock()) {    +        constructState();    +      }    +    }   \\n     +  } \\n    + \\n    +  \\/** \\n    +   * Register a CollectionStateWatcher to be called when the state of a collection changes \\n    +   * \\n    +   * A given CollectionStateWatcher will be only called once.  If you want to have a persistent watcher, \\n    +   * it should register itself again in its  \\n{@link CollectionStateWatcher#onStateChanged(Set, DocCollection)}\\n     +   * method. \\n    +   *\\/ \\n    +  public void registerCollectionStateWatcher(String collection, CollectionStateWatcher stateWatcher) { \\n    +    AtomicBoolean watchSet = new AtomicBoolean(false); \\n    +    collectionWatches.compute(collection, (k, v) -&gt;  \\n  Unknown macro: {    +      if (v == null) {\\n    +        v = new CollectionWatch();\\n    +        watchSet.set(true);\\n    +      }    +      v.stateWatchers.add(stateWatcher);    +      return v;    +    }   \\n ); \\n    +    if (watchSet.get()) { \\n    +      new StateWatcher(collection).refreshAndWatch(); \\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t\\t End diff &#8211; \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n     ditto, ignore this              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15282875\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15282875&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15282875\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15282875_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15282875_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 17:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T17:00:25+0000\'\u003e13\\/May\\/16 17:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eFinal patch.  I think this is ready!\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15282875_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15282875_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 17:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T17:00:25+0000\'\u003e13\\/May\\/16 17:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Final patch.  I think this is ready!              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283077\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283077&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283077\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15283077_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283077_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 19:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T19:55:47+0000\'\u003e13\\/May\\/16 19:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI already LGTM\'d the github PR, I don\'t think I need to look at the patch file?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15283077_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283077_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 19:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T19:55:47+0000\'\u003e13\\/May\\/16 19:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I already LGTM\'d the github PR, I don\'t think I need to look at the patch file?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283113\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283113&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283113\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283113_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283113_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 20:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T20:34:40+0000\'\u003e13\\/May\\/16 20:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit b6d742141250a8395c96d364714a31f4a3a63a96 in lucene-solr\'s branch refs\\/heads\\/master from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=b6d7421\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=b6d7421\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e: Add CollectionStateWatcher API\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283113_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283113_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 20:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T20:34:40+0000\'\u003e13\\/May\\/16 20:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit b6d742141250a8395c96d364714a31f4a3a63a96 in lucene-solr\'s branch refs\\/heads\\/master from  Alan Woodward  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=b6d7421  ] \\n\\n   SOLR-8323  : Add CollectionStateWatcher API              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283127\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283127&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283127\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283127_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283127_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 20:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T20:43:54+0000\'\u003e13\\/May\\/16 20:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 06d2f6368df9b6d29d852f18bab38d96255d83c7 in lucene-solr\'s branch refs\\/heads\\/branch_6x from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=06d2f63\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=06d2f63\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e: Add CollectionStateWatcher API\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283127_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283127_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 20:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T20:43:54+0000\'\u003e13\\/May\\/16 20:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 06d2f6368df9b6d29d852f18bab38d96255d83c7 in lucene-solr\'s branch refs\\/heads\\/branch_6x from  Alan Woodward  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=06d2f63  ] \\n\\n   SOLR-8323  : Add CollectionStateWatcher API              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283129\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283129&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283129\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15283129_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283129_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 20:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T20:45:09+0000\'\u003e13\\/May\\/16 20:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for all the reviewing Scott!  Now on to \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-9056\\\" title=\\\"Add ZkConnectionListener interface\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-9056\\\"\u003e\u003cdel\u003eSOLR-9056\u003c\\/del\u003e\u003c\\/a\u003e \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15283129_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283129_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/May\\/16 20:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-13T20:45:09+0000\'\u003e13\\/May\\/16 20:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for all the reviewing Scott!  Now on to   SOLR-9056                  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283530\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283530&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283530\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283530_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283530_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 11:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T11:53:04+0000\'\u003e14\\/May\\/16 11:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 963c6522b6e10bfeaad340457d1e96351d0aecc1 in lucene-solr\'s branch refs\\/heads\\/master from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=963c652\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=963c652\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e: DocCollection.isFullyActive needs to know how many replicas to expect\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283530_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283530_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 11:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T11:53:04+0000\'\u003e14\\/May\\/16 11:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 963c6522b6e10bfeaad340457d1e96351d0aecc1 in lucene-solr\'s branch refs\\/heads\\/master from  Alan Woodward  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=963c652  ] \\n\\n   SOLR-8323  : DocCollection.isFullyActive needs to know how many replicas to expect              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283534\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283534&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283534\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283534_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283534_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 12:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T12:01:21+0000\'\u003e14\\/May\\/16 12:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 06ebd4fd7e9045b28a6a243c56f753b4f56c8561 in lucene-solr\'s branch refs\\/heads\\/branch_6x from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=06ebd4f\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=06ebd4f\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e: DocCollection.isFullyActive needs to know how many replicas to expect\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283534_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283534_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 12:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T12:01:21+0000\'\u003e14\\/May\\/16 12:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 06ebd4fd7e9045b28a6a243c56f753b4f56c8561 in lucene-solr\'s branch refs\\/heads\\/branch_6x from  Alan Woodward  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=06ebd4f  ] \\n\\n   SOLR-8323  : DocCollection.isFullyActive needs to know how many replicas to expect              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283635\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283635&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283635\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283635_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283635_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 18:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T18:09:26+0000\'\u003e14\\/May\\/16 18:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit c0d23a741e9f2c787ab322e29c67108e5fd5c692 in lucene-solr\'s branch refs\\/heads\\/master from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=c0d23a7\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=c0d23a7\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e: Handle removal of legacy collections\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283635_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283635_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 18:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T18:09:26+0000\'\u003e14\\/May\\/16 18:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit c0d23a741e9f2c787ab322e29c67108e5fd5c692 in lucene-solr\'s branch refs\\/heads\\/master from  Alan Woodward  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=c0d23a7  ] \\n\\n   SOLR-8323  : Handle removal of legacy collections              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283636\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283636&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283636\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283636_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283636_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 18:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T18:10:11+0000\'\u003e14\\/May\\/16 18:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit b5c369a773689955aa9bbd1b0bce3b7d1d96cb1b in lucene-solr\'s branch refs\\/heads\\/branch_6x from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=b5c369a\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=b5c369a\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-8323\\\" title=\\\"Add CollectionWatcher API to ZkStateReader\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-8323\\\"\u003e\u003cdel\u003eSOLR-8323\u003c\\/del\u003e\u003c\\/a\u003e: Handle removal of legacy collections\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15283636_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283636_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/May\\/16 18:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-14T18:10:11+0000\'\u003e14\\/May\\/16 18:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit b5c369a773689955aa9bbd1b0bce3b7d1d96cb1b in lucene-solr\'s branch refs\\/heads\\/branch_6x from  Alan Woodward  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=b5c369a  ] \\n\\n   SOLR-8323  : Handle removal of legacy collections              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283821\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283821&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283821\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15283821_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283821_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/May\\/16 10:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-15T10:24:44+0000\'\u003e15\\/May\\/16 10:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eStill seeing test failures here, for example: \u003ca href=\\\"http:\\/\\/jenkins.thetaphi.de\\/job\\/Lucene-Solr-6.x-Windows\\/181\\/consoleFull\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/jenkins.thetaphi.de\\/job\\/Lucene-Solr-6.x-Windows\\/181\\/consoleFull\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eIt looks as though the collection watcher is being fired even though the state hasn\'t actually changed.  Will add some more debugging to try and work out why.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15283821_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283821_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/May\\/16 10:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-15T10:24:44+0000\'\u003e15\\/May\\/16 10:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Still seeing test failures here, for example:  http:\\/\\/jenkins.thetaphi.de\\/job\\/Lucene-Solr-6.x-Windows\\/181\\/consoleFull  \\n\\n It looks as though the collection watcher is being fired even though the state hasn\'t actually changed.  Will add some more debugging to try and work out why.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15283882\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15283882&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15283882\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15283882_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283882_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/May\\/16 17:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-15T17:04:54+0000\'\u003e15\\/May\\/16 17:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eOK, I think I see what\'s happening.  \u003c\\/p\u003e\\n\\n\u003cp\u003eThe test waits for a collection to be up, and then registers a watch to check for subsequent changes.  Once a wait has returned, then the watch is removed, but the collection isn\'t actually removed from the \'interesting\' list until the next state update.\u003c\\/p\u003e\\n\\n\u003cp\u003eWe have a race between state watchers being cleared after firing and the subsequent removal of a collection from the \'interesting\' list, and the new watcher being added.  On a fast machine, the new watcher is added before the old one is cleared, and so the state is preserved between the calls; this means that the new watcher isn\'t actually fired, because we check if the state has changed before running notifications.  On a slower machine, the watcher is added afterwards, so there\'s no previous state to compare against, so the watcher is fired immediately - resulting in a test failure, because the test is expecting the state to have changed.\u003c\\/p\u003e\\n\\n\u003cp\u003eWe can fix the test by calling registerCore() first, which puts the collection permanently on the watched list, but I think there\'s a bigger question here about how useful statewatchers are, as opposed to state predicate checks.  All the uses I\'ve come up with so far have just been waitForState() calls.  \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\" class=\\\"user-hover\\\" rel=\\\"dragonsinth\\\"\u003eScott Blum\u003c\\/a\u003e what do you think?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15283882_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15283882_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/May\\/16 17:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-15T17:04:54+0000\'\u003e15\\/May\\/16 17:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    OK, I think I see what\'s happening.   \\n\\n The test waits for a collection to be up, and then registers a watch to check for subsequent changes.  Once a wait has returned, then the watch is removed, but the collection isn\'t actually removed from the \'interesting\' list until the next state update. \\n\\n We have a race between state watchers being cleared after firing and the subsequent removal of a collection from the \'interesting\' list, and the new watcher being added.  On a fast machine, the new watcher is added before the old one is cleared, and so the state is preserved between the calls; this means that the new watcher isn\'t actually fired, because we check if the state has changed before running notifications.  On a slower machine, the watcher is added afterwards, so there\'s no previous state to compare against, so the watcher is fired immediately - resulting in a test failure, because the test is expecting the state to have changed. \\n\\n We can fix the test by calling registerCore() first, which puts the collection permanently on the watched list, but I think there\'s a bigger question here about how useful statewatchers are, as opposed to state predicate checks.  All the uses I\'ve come up with so far have just been waitForState() calls.   Scott Blum  what do you think?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15297017\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15297017&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15297017\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15297017_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15297017_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/May\\/16 20:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-23T20:24:33+0000\'\u003e23\\/May\\/16 20:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e sorry I\'m just now having a moment to look at this.  Is this still flakey on master?  Do you have a good spot to drop in a Thread.sleep() to trigger this reliably?  If not I\'ll play around.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15297017_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15297017_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/May\\/16 20:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-23T20:24:33+0000\'\u003e23\\/May\\/16 20:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Alan Woodward  sorry I\'m just now having a moment to look at this.  Is this still flakey on master?  Do you have a good spot to drop in a Thread.sleep() to trigger this reliably?  If not I\'ll play around.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15297033\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15297033&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15297033\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15297033_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15297033_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/May\\/16 20:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-23T20:34:54+0000\'\u003e23\\/May\\/16 20:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-9113\\\" title=\\\"Make it easier to use CollectionStateWatchers \\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-9113\\\"\u003e\u003cdel\u003eSOLR-9113\u003c\\/del\u003e\u003c\\/a\u003e fixed the test failures.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"romseygeek\\\" id=\\\"commentauthor_15297033_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"romseygeek\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Alan Woodward\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15297033_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/May\\/16 20:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-23T20:34:54+0000\'\u003e23\\/May\\/16 20:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                      SOLR-9113   fixed the test failures.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15297052\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-8323?focusedCommentId=15297052&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15297052\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15297052_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15297052_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/May\\/16 20:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-23T20:43:38+0000\'\u003e23\\/May\\/16 20:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eNice, I was just figuring that out. \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/biggrin.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dragonsinth\\\" id=\\\"commentauthor_15297052_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dragonsinth\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dragonsinth\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Scott Blum\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15297052_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/May\\/16 20:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2016-05-23T20:43:38+0000\'\u003e23\\/May\\/16 20:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Nice, I was just figuring that out.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="12310230";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/SOLR\\/summary\\\" title=\\\"Solr\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=12310230&amp;avatarId=22151\\\" alt=\\\"Solr\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/SOLR\\/summary\\\" title=\\\"Solr\\\"\u003eSolr\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/SOLR\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/SOLR?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/SOLR?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1516225861463"> 
    <input type="hidden" title="jira.request.server.time" value="705"> 
    <input type="hidden" title="jira.request.id" value="1311x8488617x7"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="5"> 
    <input type="hidden" title="db.reads.time.in.ms" value="101"> 
    <input type="hidden" title="db.conns.time.in.ms" value="108"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 1311x8488617x7
	          REQUEST TIMESTAMP : [17/Jan/2018:21:51:01 +0000]
	               REQUEST TIME : 0.7050
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 5

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=26, elapsedTotal=101707684, elapsedMin=487405, elapsedMax=63827749, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=30, elapsedTotal=108781683, elapsedMin=519662, elapsedMax=63896067, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>