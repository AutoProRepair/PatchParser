<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|ce7959d852319cf3213d90cca6eaf7558b1c36b7|lout"> 
  <link rel="shortcut icon" href="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"jira.instrumentation.laas\":false,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"com.atlassian.jira.issuetable.draggable\":true,\"jira.create.linked.issue\":true,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"jira.jql.suggestrecentfields\":false,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"jira.jql.smartautoselectfirst\":false,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.priorities.per.project\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"jira.renderer.consider.variable.format\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/vnd.wap.wbmp,image/png,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"36a6cd4e895609\"";
WRM._unparsedData["project-id"]="12310110";
WRM._unparsedData["project-key"]="\"LUCENE\"";
WRM._unparsedData["project-name"]="\"Lucene - Core\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="12310110";
WRM._unparsedData["projectKey"]="\"LUCENE\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/74ac580603ca910fff0cfdf319e54add-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/98ceb006e504d7924d5ffc411626c6bc-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/c1e4d26ea276469807c3dc0918df482c-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/6bf9253c8d533109c3b02e26794be24e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/ccd2e67b523185973473e8bd5735c8f9-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/33e5e0166867c8c9228d44506f60b2e8/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/6579b6b8ba67abaa496e39b9242a18a4-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="LUCENE-845"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[LUCENE-845] If you "flush by RAM usage" then IndexWriter may over-merge - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[LUCENE-845] If you &quot;flush by RAM usage&quot; then IndexWriter may over-merge - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/LUCENE" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FLUCENE-845">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="12310110" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Lucene - Core'" src="https://issues.apache.org/jira/secure/projectavatar?pid=12310110&amp;avatarId=10061"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/LUCENE">Lucene - Core</a></li>
                 <li><a class="issue-link" data-issue-key="LUCENE-845" href="/jira/browse/LUCENE-845" id="key-val" rel="12365610">LUCENE-845</a></li>
                </ol>
                <h1 id="summary-val">If you "flush by RAM usage" then IndexWriter may over-merge</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FLUCENE-845"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/LUCENE-845/LUCENE-845.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/LUCENE-845/LUCENE-845.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/LUCENE-845/LUCENE-845.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/LUCENE-845/LUCENE-845.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" title="Bug - A problem which impairs or prevents the functions of the product." width="16"> Bug </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/minor.svg" title="Minor - Minor loss of function, or other problem where easy workaround is present." width="16"> Minor </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> <span class="shorten" id="versions-field"> <span title="2.1 ">2.1</span> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+LUCENE+AND+fixVersion+%3D+2.3" title="2.3 ">2.3</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> <span class="shorten" id="components-field"> <a href="/jira/issues/?jql=project+%3D+LUCENE+AND+component+%3D+%22core%2Findex%22" title="core/index issues with indexing code">core/index</a> </span> </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <span class="labels" id="labels-12365610-value">None</span> 
                   </div> 
                  </div> </li> 
                </ul> 
                <div id="customfieldmodule"> 
                 <div class="aui-tabs horizontal-tabs" id="customfield-tabs"> 
                  <div id="customfield-panel-1" class="tabs-pane active-pane"> 
                   <ul class="property-list"> 
                    <li id="rowForcustomfield_12310120" class="item"> 
                     <div class="wrap"> 
                      <strong title="Lucene Fields" class="name">Lucene Fields:</strong> 
                      <div id="customfield_12310120-val" class="value type-multicheckboxes" data-fieldtype="multicheckboxes" data-fieldtypecompletekey="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes"> 
                       <div class="shorten" id="customfield_12310120-field"> 
                        <span>New</span> 
                       </div> 
                      </div> 
                     </div> </li> 
                   </ul> 
                  </div> 
                 </div>
                </div> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p>I think a good way to maximize performance of Lucene's indexing for a<br> given amount of RAM is to flush (writer.flush()) the added documents<br> whenever the RAM usage (writer.ramSizeInBytes()) has crossed the max<br> RAM you can afford.</p> 
                  <p>But, this can confuse the merge policy and cause over-merging, unless<br> you set maxBufferedDocs properly.</p> 
                  <p>This is because the merge policy looks at the current maxBufferedDocs<br> to figure out which segments are level 0 (first flushed) or level 1<br> (merged from &lt;mergeFactor&gt; level 0 segments).</p> 
                  <p>I'm not sure how to fix this. Maybe we can look at net size (bytes)<br> of a segment and "infer" level from this? Still we would have to be<br> resilient to the application suddenly increasing the RAM allowed.</p> 
                  <p>The good news is to workaround this bug I think you just need to<br> ensure that your maxBufferedDocs is less than mergeFactor *<br> typical-number-of-docs-flushed.</p> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/LUCENE-845?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/LUCENE-845?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/LUCENE-845?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/LUCENE-845?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12363895" data-issue-id="12365610" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12363895/LUCENE-845.patch" draggable="true" data-downloadurl="text/plain:LUCENE-845.patch:https://issues.apache.org/jira/secure/attachment/12363895/LUCENE-845.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12363895/LUCENE-845.patch" title="Latest  15/Aug/07 23:57 - Michael McCandless" draggable="true" data-downloadurl="text/plain:LUCENE-845.patch:https://issues.apache.org/jira/secure/attachment/12363895/LUCENE-845.patch">LUCENE-845.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2007-08-15T23:57:42.465Z">15/Aug/07 23:57</time>
                   </dd>
                   <dd class="attachment-size">
                    13 kB
                   </dd>
                   <dd class="attachment-author">
                    Michael McCandless
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="linkingmodule" class="module toggle-wrap">
               <div id="linkingmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Issue Links</h2>
               </div>
               <div class="mod-content"> 
                <div class="links-container" data-default-link-icon="/jira/images/icons/generic_link_16.png"> 
                 <dl class="links-list "> 
                  <dt title="blocks">
                   blocks
                  </dt> 
                  <dd id="internal-12365595_10032"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="LUCENE-843: improve how IndexWriter uses RAM to buffer added documents"> <a href="/jira/browse/LUCENE-843" data-issue-key="LUCENE-843" class="issue-link link-title resolution">LUCENE-843</a> <span class="link-summary">improve how IndexWriter uses RAM to buffer added documents</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/minor.svg" width="16" height="16" title="Minor - Minor loss of function, or other problem where easy workaround is present." alt="Minor - Minor loss of function, or other problem where easy workaround is present."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                 <dl class="links-list "> 
                  <dt title="is blocked by">
                   is blocked by
                  </dt> 
                  <dd id="internal-12365696_10032"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="LUCENE-847: Factor merge policy out of IndexWriter"> <a href="/jira/browse/LUCENE-847" data-issue-key="LUCENE-847" class="issue-link link-title resolution">LUCENE-847</a> <span class="link-summary">Factor merge policy out of IndexWriter</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                </div> 
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_mikemccand" rel="mikemccand" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Michael McCandless&quot;,&quot;emailAddress&quot;:&quot;lucene@mikemccandless.com&quot;,&quot;username&quot;:&quot;mikemccand&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mikemccand"></span></span> Michael McCandless </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_mikemccand" rel="mikemccand" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Michael McCandless&quot;,&quot;emailAddress&quot;:&quot;lucene@mikemccandless.com&quot;,&quot;username&quot;:&quot;mikemccand&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mikemccand"></span></span> Michael McCandless </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">0</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">3</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="22/Mar/07 20:15"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2007-03-22T20:15:31+0000">22/Mar/07 20:15</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="25/Jan/08 03:23"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2008-01-25T03:23:53+0000">25/Jan/08 03:23</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="18/Sep/07 09:40"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2007-09-18T09:40:05+0000">18/Sep/07 09:40</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-845?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/LUCENE-845?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-12483631\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12483631&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12483631\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12483631_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12483631_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Mar\\/07 15:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-23T15:27:08+0000\'\u003e23\\/Mar\\/07 15:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThis bug is actually rather serious.\u003c\\/p\u003e\\n\\n\u003cp\u003eIf you set maxBufferedDocs to a very large number (on the expectation\u003cbr\\/\u003e\\nthat it\'s not used since you will manually flush by RAM usage) then\u003cbr\\/\u003e\\nthe merge policy will always merge the index down to 1 segment as soon\u003cbr\\/\u003e\\nas it hits mergeFactor segments.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis will be an O(N^2) slowdown.  EG if based on RAM you are\u003cbr\\/\u003e\\nflushing every 100 docs, then at 1000 docs you will merge to 1\u003cbr\\/\u003e\\nsegment.  Then at 1900 docs, you merge to 1 segment again.  At 2800,\u003cbr\\/\u003e\\n3700, 4600, ... (every 900 docs) you keep merging to 1 segment.  Your\u003cbr\\/\u003e\\nindexing process will get very slow because every 900 documents the\u003cbr\\/\u003e\\nentire index is effectively being optimized.\u003c\\/p\u003e\\n\\n\u003cp\u003eWith \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e I\'m thinking we should deprecate maxBufferedDocs\u003cbr\\/\u003e\\nentirely and switch to flushing by RAM usage instead (you can always\u003cbr\\/\u003e\\nmanually flush every N documents in your app if for some reason you\u003cbr\\/\u003e\\nneed that).  But obviously we need to resolve this bug first.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12483631_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12483631_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Mar\\/07 15:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-23T15:27:08+0000\'\u003e23\\/Mar\\/07 15:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    This bug is actually rather serious. \\n\\n If you set maxBufferedDocs to a very large number (on the expectation \\nthat it\'s not used since you will manually flush by RAM usage) then \\nthe merge policy will always merge the index down to 1 segment as soon \\nas it hits mergeFactor segments. \\n\\n This will be an O(N^2) slowdown.  EG if based on RAM you are \\nflushing every 100 docs, then at 1000 docs you will merge to 1 \\nsegment.  Then at 1900 docs, you merge to 1 segment again.  At 2800, \\n3700, 4600, ... (every 900 docs) you keep merging to 1 segment.  Your \\nindexing process will get very slow because every 900 documents the \\nentire index is effectively being optimized. \\n\\n With   LUCENE-843   I\'m thinking we should deprecate maxBufferedDocs \\nentirely and switch to flushing by RAM usage instead (you can always \\nmanually flush every N documents in your app if for some reason you \\nneed that).  But obviously we need to resolve this bug first.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12484150\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12484150&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12484150\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12484150_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12484150_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/Mar\\/07 16:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-26T16:22:44+0000\'\u003e26\\/Mar\\/07 16:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; With \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e I\'m thinking we should deprecate maxBufferedDocs entirely\u003c\\/p\u003e\\n\\n\u003cp\u003eThat might present a problem for users of ParallelReader.  Right now, it\'s possible to construct two indicies with corresponding docids.... switching to flush-by-ram would makesegment merging unpredictable and destroy the docid matching.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12484150_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12484150_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/Mar\\/07 16:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-26T16:22:44+0000\'\u003e26\\/Mar\\/07 16:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; With   LUCENE-843   I\'m thinking we should deprecate maxBufferedDocs entirely \\n\\n That might present a problem for users of ParallelReader.  Right now, it\'s possible to construct two indicies with corresponding docids.... switching to flush-by-ram would makesegment merging unpredictable and destroy the docid matching.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12484175\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12484175&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12484175\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12484175_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12484175_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/Mar\\/07 18:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-26T18:13:37+0000\'\u003e26\\/Mar\\/07 18:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt;&gt; With \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e I\'m thinking we should deprecate maxBufferedDocs entirely\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; That might present a problem for users of ParallelReader. Right now,\u003cbr\\/\u003e\\n&gt; it\'s possible to construct two indicies with corresponding\u003cbr\\/\u003e\\n&gt; docids.... switching to flush-by-ram would makesegment merging\u003cbr\\/\u003e\\n&gt; unpredictable and destroy the docid matching.\u003c\\/p\u003e\\n\\n\u003cp\u003eAhhh, this is a very good point.  OK I won\'t deprecate \\\"flushing by\u003cbr\\/\u003e\\ndoc count\\\" and instead will allow either \\\"flush by RAM usage\\\" (default\u003cbr\\/\u003e\\nto this?) or \\\"flush by doc count\\\".\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12484175_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12484175_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/Mar\\/07 18:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-26T18:13:37+0000\'\u003e26\\/Mar\\/07 18:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt;&gt; With   LUCENE-843   I\'m thinking we should deprecate maxBufferedDocs entirely \\n&gt; \\n&gt; That might present a problem for users of ParallelReader. Right now, \\n&gt; it\'s possible to construct two indicies with corresponding \\n&gt; docids.... switching to flush-by-ram would makesegment merging \\n&gt; unpredictable and destroy the docid matching. \\n\\n Ahhh, this is a very good point.  OK I won\'t deprecate \\\"flushing by \\ndoc count\\\" and instead will allow either \\\"flush by RAM usage\\\" (default \\nto this?) or \\\"flush by doc count\\\".              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12485722\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12485722&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12485722\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12485722_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12485722_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'31\\/Mar\\/07 12:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-31T12:21:49+0000\'\u003e31\\/Mar\\/07 12:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eJust recapping some following discussion from java-dev ...\u003c\\/p\u003e\\n\\n\u003cp\u003eThe current merge policy can be thought of logically as two different\u003cbr\\/\u003e\\nsteps:\u003c\\/p\u003e\\n\\n\u003cp\u003e  1. How to determine the \\\"level\\\" of each segment in the index.\u003c\\/p\u003e\\n\\n\u003cp\u003e  2. How &amp; when to pick which level N segments into a level N+1\u003cbr\\/\u003e\\n     segment.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe current policy determines a segment\'s level by looking at the doc\u003cbr\\/\u003e\\ncount in the segment as well as the current maxBufferedDocs, which is\u003cbr\\/\u003e\\nvery problematic when you \\\"flush by RAM usage\\\" instead.  This Jira\u003cbr\\/\u003e\\nissue, then, is proposing to instead look at overall byte size of a\u003cbr\\/\u003e\\nsegment for determining its level, while keeping step 2. above.\u003c\\/p\u003e\\n\\n\u003cp\u003eHowever, I would propose we also fix \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-854\\\" title=\\\"Create merge policy that doesn&#39;t periodically inadvertently optimize\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-854\\\"\u003e\u003cdel\u003eLUCENE-854\u003c\\/del\u003e\u003c\\/a\u003e (which addresses step\u003cbr\\/\u003e\\n2 above and not step 1) at the same time, as a single merge policy,\u003cbr\\/\u003e\\nand maybe at some point in the future make this new merge policy the\u003cbr\\/\u003e\\ndefault merge policy.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12485722_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12485722_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'31\\/Mar\\/07 12:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-03-31T12:21:49+0000\'\u003e31\\/Mar\\/07 12:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Just recapping some following discussion from java-dev ... \\n\\n The current merge policy can be thought of logically as two different \\nsteps: \\n\\n   1. How to determine the \\\"level\\\" of each segment in the index. \\n\\n   2. How &amp; when to pick which level N segments into a level N+1 \\n     segment. \\n\\n The current policy determines a segment\'s level by looking at the doc \\ncount in the segment as well as the current maxBufferedDocs, which is \\nvery problematic when you \\\"flush by RAM usage\\\" instead.  This Jira \\nissue, then, is proposing to instead look at overall byte size of a \\nsegment for determining its level, while keeping step 2. above. \\n\\n However, I would propose we also fix   LUCENE-854   (which addresses step \\n2 above and not step 1) at the same time, as a single merge policy, \\nand maybe at some point in the future make this new merge policy the \\ndefault merge policy.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12492814\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12492814&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12492814\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12492814_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12492814_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'30\\/Apr\\/07 23:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-04-30T23:24:38+0000\'\u003e30\\/Apr\\/07 23:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eFollowing up on this, it\'s basically the idea that segments ought to be created\\/merged both either by-segment-size or by-doc-count but not by a mixture? That wouldn\'t be suprising ...\u003c\\/p\u003e\\n\\n\u003cp\u003eIt does impact the APIs, though. It\'s easy enough to imagine, with factored merge policies, both by-doc-count and by-segment-size policies. But the initial segment creation is going to be handled by IndexWriter, so you have to manually make sure you don\'t set that algorithm and the merge policy in conflict. Not great, but I don\'t have any great ideas. Could put in an API handshake, but I\'m not sure if it\'s worth the mess?\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, it sounds like, so far, there\'s no good way of managing parallel-reader setups w\\/by-segment-size algorithms, since the algorithm for creating\\/merging segments has to be globally consistent, not just per index, right?\u003c\\/p\u003e\\n\\n\u003cp\u003eIf that is right, what does that say about making by-segment-size the default? It\'s gonna break (as in bad results) people relying on that behavior that don\'t change their code. Is there a community consensus on this? It\'s not really an API change that would cause a compile\\/class-load failure, but in some ways, it\'s worse ...\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12492814_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12492814_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'30\\/Apr\\/07 23:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-04-30T23:24:38+0000\'\u003e30\\/Apr\\/07 23:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Following up on this, it\'s basically the idea that segments ought to be created\\/merged both either by-segment-size or by-doc-count but not by a mixture? That wouldn\'t be suprising ... \\n\\n It does impact the APIs, though. It\'s easy enough to imagine, with factored merge policies, both by-doc-count and by-segment-size policies. But the initial segment creation is going to be handled by IndexWriter, so you have to manually make sure you don\'t set that algorithm and the merge policy in conflict. Not great, but I don\'t have any great ideas. Could put in an API handshake, but I\'m not sure if it\'s worth the mess? \\n\\n Also, it sounds like, so far, there\'s no good way of managing parallel-reader setups w\\/by-segment-size algorithms, since the algorithm for creating\\/merging segments has to be globally consistent, not just per index, right? \\n\\n If that is right, what does that say about making by-segment-size the default? It\'s gonna break (as in bad results) people relying on that behavior that don\'t change their code. Is there a community consensus on this? It\'s not really an API change that would cause a compile\\/class-load failure, but in some ways, it\'s worse ...              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12493065\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12493065&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12493065\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12493065_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12493065_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/07 09:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-02T09:58:39+0000\'\u003e02\\/May\\/07 09:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; Following up on this, it\'s basically the idea that segments ought to be created\\/merged both either by-segment-size or by-doc-count but not by a mixture? That wouldn\'t be suprising ...\u003c\\/p\u003e\\n\\n\u003cp\u003eRight, but we need the refactored merge policy framework in place\u003cbr\\/\u003e\\nfirst.  I\'ll mark this issue dependent on \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-847\\\" title=\\\"Factor merge policy out of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-847\\\"\u003e\u003cdel\u003eLUCENE-847\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; It does impact the APIs, though. It\'s easy enough to imagine, with factored merge policies, both by-doc-count and by-segment-size policies. But the initial segment creation is going to be handled by IndexWriter, so you have to manually make sure you don\'t set that algorithm and the merge policy in conflict. Not great, but I don\'t have any great ideas. Could put in an API handshake, but I\'m not sure if it\'s worth the mess?\u003c\\/p\u003e\\n\\n\u003cp\u003eGood question.  I think it\'s OK (at least for our first go at this &#8211;\u003cbr\\/\u003e\\nprogress not perfection!) to expect the developer to choose a merge\u003cbr\\/\u003e\\npolicy and then to use IndexWriter in a way that\'s \\\"consistent\\\" with\u003cbr\\/\u003e\\nthat merge policy?  I think it\'s going to get too complex if we try to\u003cbr\\/\u003e\\nformally couple \\\"when to flush\\/commit\\\" with the merge policy?\u003c\\/p\u003e\\n\\n\u003cp\u003eBut, I think the default merge policy needs to be resilient to people\u003cbr\\/\u003e\\ndoing things like changing maxBuffereDocs\\/mergeFactor partway through\u003cbr\\/\u003e\\nan index, calling flush() whenever they want, etc.  The merge policy\u003cbr\\/\u003e\\ntoday is not resilient to these \\\"normal\\\" usages of IndexWriter.  So I\u003cbr\\/\u003e\\nthink we need to do something here even without the pressure from\u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Also, it sounds like, so far, there\'s no good way of managing parallel-reader setups w\\/by-segment-size algorithms, since the algorithm for creating\\/merging segments has to be globally consistent, not just per index, right?\u003c\\/p\u003e\\n\\n\u003cp\u003eRight.  We clearly need to keep the current \\\"by doc\\\" merge policy\u003cbr\\/\u003e\\neasily available for this use case.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; If that is right, what does that say about making by-segment-size the default? It\'s gonna break (as in bad results) people relying on that behavior that don\'t change their code. Is there a community consensus on this? It\'s not really an API change that would cause a compile\\/class-load failure, but in some ways, it\'s worse ...\u003c\\/p\u003e\\n\\n\u003cp\u003eI think there are actually two questions here:\u003c\\/p\u003e\\n\\n\u003cp\u003e  1) What exactly makes for a good default merge policy?\u003c\\/p\u003e\\n\\n\u003cp\u003e     I think the merge policy we have today has some limitations:\u003c\\/p\u003e\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eIt\'s not resilient to \\\"normal\\\" usage of the public APIs in\u003cbr\\/\u003e\\n         IndexWriter.  If you call flush() yourself, if you change\u003cbr\\/\u003e\\n         maxBufferedDocs (and maybe mergeFactor?) partway through an\u003cbr\\/\u003e\\n         index, etc, you can cause disastrous amounts of over-merging\u003cbr\\/\u003e\\n         (that\'s this issue).\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e \\t I think the default policy should be entirely resilient to\u003cbr\\/\u003e\\n\\t any usage of the public IndexWriter APIs.\u003c\\/p\u003e\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eDefault merge policy should strive to minimize net cost\u003cbr\\/\u003e\\n         (amortized over time) of merging, but the current one\u003cbr\\/\u003e\\n         doesn\'t:\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eWhen docs differ in size (frequently the case) it will be\u003cbr\\/\u003e\\n           too costly in CPU\\/IO consumption because small segments are\u003cbr\\/\u003e\\n           merged with large ones.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eIt does too much work in advance (too much \\\"pay it\u003cbr\\/\u003e\\n           forward\\\").  I don\'t think a merge policy should\u003cbr\\/\u003e\\n           \\\"inadvertently optimize\\\" (I opened \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-854\\\" title=\\\"Create merge policy that doesn&#39;t periodically inadvertently optimize\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-854\\\"\u003e\u003cdel\u003eLUCENE-854\u003c\\/del\u003e\u003c\\/a\u003e to describe\u003cbr\\/\u003e\\n           this).\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eIt blocks \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e (flushing by RAM usage).\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e         I think Lucene \\\"out of the box\\\" should give you good indexing\u003cbr\\/\u003e\\n         performance.  You should not have to do extra tuning to get\u003cbr\\/\u003e\\n         substantially better performance.  The best way to get that\u003cbr\\/\u003e\\n         is to \\\"flush by RAM\\\" (with \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e).  But current merge\u003cbr\\/\u003e\\n         policy prevents this (due to this issue).\u003c\\/p\u003e\\n\\n\u003cp\u003e  2) Can we change the default merge policy?\u003c\\/p\u003e\\n\\n\u003cp\u003e     I sure hope so, given the issues above.\u003c\\/p\u003e\\n\\n\u003cp\u003e     I think the majority of Lucene users do the simple \\\"create a\u003cbr\\/\u003e\\n     writer, add\\/delete docs, close writer, while reader(s) use the\u003cbr\\/\u003e\\n     same index\\\" type of usage and so would benefit by the gained\u003cbr\\/\u003e\\n     performance of \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e and \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-854\\\" title=\\\"Create merge policy that doesn&#39;t periodically inadvertently optimize\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-854\\\"\u003e\u003cdel\u003eLUCENE-854\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003e     I think (but may be wrong!) it\'s a minority who use\u003cbr\\/\u003e\\n     ParallelReader and therefore have a reliance on the specific\u003cbr\\/\u003e\\n     merge policy we use today?\u003c\\/p\u003e\\n\\n\u003cp\u003eIdeally we first commit the \\\"decouple merge policy from IndexWriter\\\"\u003cbr\\/\u003e\\n(\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-847\\\" title=\\\"Factor merge policy out of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-847\\\"\u003e\u003cdel\u003eLUCENE-847\u003c\\/del\u003e\u003c\\/a\u003e), then we would make a new merge policy that resolves this\u003cbr\\/\u003e\\nissue and \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-854\\\" title=\\\"Create merge policy that doesn&#39;t periodically inadvertently optimize\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-854\\\"\u003e\u003cdel\u003eLUCENE-854\u003c\\/del\u003e\u003c\\/a\u003e, and make it the default policy.  I think this\u003cbr\\/\u003e\\npolicy would look at size (in bytes) of each segment (perhaps\u003cbr\\/\u003e\\nproportionally reducing # bytes according to pending deletes against\u003cbr\\/\u003e\\nthat segment), and would merge any adjacent segments (not just\u003cbr\\/\u003e\\nrightmost ones) that are \\\"the most similar\\\" in size.  I think it would\u003cbr\\/\u003e\\nmerge N (configurable) at a time and at no time would inadvertently\u003cbr\\/\u003e\\noptimize.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis would mean users of ParallelReader on upgrading to this would\u003cbr\\/\u003e\\nneed to change their merge policy to the legacy \\\"merge by doc count\\\"\u003cbr\\/\u003e\\npolicy.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12493065_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12493065_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/May\\/07 09:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-02T09:58:39+0000\'\u003e02\\/May\\/07 09:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; Following up on this, it\'s basically the idea that segments ought to be created\\/merged both either by-segment-size or by-doc-count but not by a mixture? That wouldn\'t be suprising ... \\n\\n Right, but we need the refactored merge policy framework in place \\nfirst.  I\'ll mark this issue dependent on   LUCENE-847  . \\n\\n &gt; It does impact the APIs, though. It\'s easy enough to imagine, with factored merge policies, both by-doc-count and by-segment-size policies. But the initial segment creation is going to be handled by IndexWriter, so you have to manually make sure you don\'t set that algorithm and the merge policy in conflict. Not great, but I don\'t have any great ideas. Could put in an API handshake, but I\'m not sure if it\'s worth the mess? \\n\\n Good question.  I think it\'s OK (at least for our first go at this &#8211; \\nprogress not perfection!) to expect the developer to choose a merge \\npolicy and then to use IndexWriter in a way that\'s \\\"consistent\\\" with \\nthat merge policy?  I think it\'s going to get too complex if we try to \\nformally couple \\\"when to flush\\/commit\\\" with the merge policy? \\n\\n But, I think the default merge policy needs to be resilient to people \\ndoing things like changing maxBuffereDocs\\/mergeFactor partway through \\nan index, calling flush() whenever they want, etc.  The merge policy \\ntoday is not resilient to these \\\"normal\\\" usages of IndexWriter.  So I \\nthink we need to do something here even without the pressure from \\n  LUCENE-843  . \\n\\n &gt; Also, it sounds like, so far, there\'s no good way of managing parallel-reader setups w\\/by-segment-size algorithms, since the algorithm for creating\\/merging segments has to be globally consistent, not just per index, right? \\n\\n Right.  We clearly need to keep the current \\\"by doc\\\" merge policy \\neasily available for this use case. \\n\\n &gt; If that is right, what does that say about making by-segment-size the default? It\'s gonna break (as in bad results) people relying on that behavior that don\'t change their code. Is there a community consensus on this? It\'s not really an API change that would cause a compile\\/class-load failure, but in some ways, it\'s worse ... \\n\\n I think there are actually two questions here: \\n\\n   1) What exactly makes for a good default merge policy? \\n\\n      I think the merge policy we have today has some limitations: \\n\\n \\n\\t It\'s not resilient to \\\"normal\\\" usage of the public APIs in \\n         IndexWriter.  If you call flush() yourself, if you change \\n         maxBufferedDocs (and maybe mergeFactor?) partway through an \\n         index, etc, you can cause disastrous amounts of over-merging \\n         (that\'s this issue). \\n \\n\\n\\n  \\t I think the default policy should be entirely resilient to \\n\\t any usage of the public IndexWriter APIs. \\n\\n \\n\\t Default merge policy should strive to minimize net cost \\n         (amortized over time) of merging, but the current one \\n         doesn\'t: \\n \\n\\n\\n \\n\\t When docs differ in size (frequently the case) it will be \\n           too costly in CPU\\/IO consumption because small segments are \\n           merged with large ones. \\n \\n\\n\\n \\n\\t It does too much work in advance (too much \\\"pay it \\n           forward\\\").  I don\'t think a merge policy should \\n           \\\"inadvertently optimize\\\" (I opened   LUCENE-854   to describe \\n           this). \\n \\n\\n\\n \\n\\t It blocks   LUCENE-843   (flushing by RAM usage). \\n \\n\\n\\n          I think Lucene \\\"out of the box\\\" should give you good indexing \\n         performance.  You should not have to do extra tuning to get \\n         substantially better performance.  The best way to get that \\n         is to \\\"flush by RAM\\\" (with   LUCENE-843  ).  But current merge \\n         policy prevents this (due to this issue). \\n\\n   2) Can we change the default merge policy? \\n\\n      I sure hope so, given the issues above. \\n\\n      I think the majority of Lucene users do the simple \\\"create a \\n     writer, add\\/delete docs, close writer, while reader(s) use the \\n     same index\\\" type of usage and so would benefit by the gained \\n     performance of   LUCENE-843   and   LUCENE-854  . \\n\\n      I think (but may be wrong!) it\'s a minority who use \\n     ParallelReader and therefore have a reliance on the specific \\n     merge policy we use today? \\n\\n Ideally we first commit the \\\"decouple merge policy from IndexWriter\\\" \\n(  LUCENE-847  ), then we would make a new merge policy that resolves this \\nissue and   LUCENE-854  , and make it the default policy.  I think this \\npolicy would look at size (in bytes) of each segment (perhaps \\nproportionally reducing # bytes according to pending deletes against \\nthat segment), and would merge any adjacent segments (not just \\nrightmost ones) that are \\\"the most similar\\\" in size.  I think it would \\nmerge N (configurable) at a time and at no time would inadvertently \\noptimize. \\n\\n This would mean users of ParallelReader on upgrading to this would \\nneed to change their merge policy to the legacy \\\"merge by doc count\\\" \\npolicy.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520120\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520120&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520120\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520120_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520120_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Aug\\/07 23:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-15T23:57:42+0000\'\u003e15\\/Aug\\/07 23:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003eFirst cut patch.  You have to first apply the most recent patch from\u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-847\\\" title=\\\"Factor merge policy out of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-847\\\"\u003e\u003cdel\u003eLUCENE-847\u003c\\/del\u003e\u003c\\/a\u003e:\u003c\\/p\u003e\\n\\n\u003cp\u003e  \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/attachment\\/12363880\\/LUCENE-847.patch.txt\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/issues.apache.org\\/jira\\/secure\\/attachment\\/12363880\\/LUCENE-847.patch.txt\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eand then apply this patch over it.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis patch has two merge policies:\u003c\\/p\u003e\\n\\n\u003cp\u003e  LogDocMergePolicy\u003c\\/p\u003e\\n\\n\u003cp\u003e    This is \\\"backwards compatible\\\" to current merge policy, yet,\u003cbr\\/\u003e\\n    resolve this \\\"over-merge issue\\\" by not using the current setting\u003cbr\\/\u003e\\n    of \\\"maxBufferedDocs\\\" when computing levels.  I think it should\u003cbr\\/\u003e\\n    replace the current LogDocMergePolicy from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-847\\\" title=\\\"Factor merge policy out of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-847\\\"\u003e\u003cdel\u003eLUCENE-847\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003e  LogByteSizeMergePolicy\u003c\\/p\u003e\\n\\n\u003cp\u003e    Chooses merges according to net size in bytes of all files for a\u003cbr\\/\u003e\\n    segment.  I think we should make this one the default merge\u003cbr\\/\u003e\\n    policy, and also change IndexWriter to flush by RAM by default.\u003c\\/p\u003e\\n\\n\u003cp\u003eThey both subclass from abstract base LogMergePolicy and differ only\u003cbr\\/\u003e\\nin the \\\"size\\\" method which defines how you measure a segment\'s size (#\u003cbr\\/\u003e\\ndocs in that segment or net size in bytes of that segment).\u003c\\/p\u003e\\n\\n\u003cp\u003eThe gist of the approach is the same as the current merge policy: you\u003cbr\\/\u003e\\ngenerally try to merge segments that are \\\"roughly\\\" the same size\u003cbr\\/\u003e\\n(where size can be doc count or byte size), mergeFactor at a time.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe big difference is instead of starting from maxBufferedDocs and\u003cbr\\/\u003e\\n\\\"going up\\\" to determine level, I start from the max segment size (of\u003cbr\\/\u003e\\nall segments in the index) and \\\"go down\\\" to determine level.  This\u003cbr\\/\u003e\\nresolves the bug because levels are \\\"self-defined\\\" by the segments,\u003cbr\\/\u003e\\nrather than by the current value of maxBufferedDocs on IndexWriter.\u003c\\/p\u003e\\n\\n\u003cp\u003eI then pick merges exactly the same as the current merge policy: if\u003cbr\\/\u003e\\nany level has &gt;= mergeFactor segments, we merge them.\u003c\\/p\u003e\\n\\n\u003cp\u003eAll tests pass, except:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eOne assert in testAddIndexesNoOptimize which was relying on the\u003cbr\\/\u003e\\n    specific invariants of the current merge policy (it\'s the same\u003cbr\\/\u003e\\n    assert that \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-847\\\" title=\\\"Factor merge policy out of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-847\\\"\u003e\u003cdel\u003eLUCENE-847\u003c\\/del\u003e\u003c\\/a\u003e had changed; this assert is testing\u003cbr\\/\u003e\\n    particular corner cases of the current merge policy).  Changing\u003cbr\\/\u003e\\n    the assertEquals to \\\"4\\\" instead of \\\"3\\\" fixes it.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eTestLogDocMergePolicy (added in \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-847\\\" title=\\\"Factor merge policy out of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-847\\\"\u003e\u003cdel\u003eLUCENE-847\u003c\\/del\u003e\u003c\\/a\u003e) doesn\'t compile\u003cbr\\/\u003e\\n    against the new version above because it\'s using methods that\u003cbr\\/\u003e\\n    don\'t exist in the new one.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520120_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520120_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Aug\\/07 23:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-15T23:57:42+0000\'\u003e15\\/Aug\\/07 23:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n First cut patch.  You have to first apply the most recent patch from \\n  LUCENE-847  : \\n\\n    https:\\/\\/issues.apache.org\\/jira\\/secure\\/attachment\\/12363880\\/LUCENE-847.patch.txt  \\n\\n and then apply this patch over it. \\n\\n This patch has two merge policies: \\n\\n   LogDocMergePolicy \\n\\n     This is \\\"backwards compatible\\\" to current merge policy, yet, \\n    resolve this \\\"over-merge issue\\\" by not using the current setting \\n    of \\\"maxBufferedDocs\\\" when computing levels.  I think it should \\n    replace the current LogDocMergePolicy from   LUCENE-847  . \\n\\n   LogByteSizeMergePolicy \\n\\n     Chooses merges according to net size in bytes of all files for a \\n    segment.  I think we should make this one the default merge \\n    policy, and also change IndexWriter to flush by RAM by default. \\n\\n They both subclass from abstract base LogMergePolicy and differ only \\nin the \\\"size\\\" method which defines how you measure a segment\'s size (# \\ndocs in that segment or net size in bytes of that segment). \\n\\n The gist of the approach is the same as the current merge policy: you \\ngenerally try to merge segments that are \\\"roughly\\\" the same size \\n(where size can be doc count or byte size), mergeFactor at a time. \\n\\n The big difference is instead of starting from maxBufferedDocs and \\n\\\"going up\\\" to determine level, I start from the max segment size (of \\nall segments in the index) and \\\"go down\\\" to determine level.  This \\nresolves the bug because levels are \\\"self-defined\\\" by the segments, \\nrather than by the current value of maxBufferedDocs on IndexWriter. \\n\\n I then pick merges exactly the same as the current merge policy: if \\nany level has &gt;= mergeFactor segments, we merge them. \\n\\n All tests pass, except: \\n\\n \\n\\t One assert in testAddIndexesNoOptimize which was relying on the \\n    specific invariants of the current merge policy (it\'s the same \\n    assert that   LUCENE-847   had changed; this assert is testing \\n    particular corner cases of the current merge policy).  Changing \\n    the assertEquals to \\\"4\\\" instead of \\\"3\\\" fixes it. \\n \\n\\n\\n \\n\\t TestLogDocMergePolicy (added in   LUCENE-847  ) doesn\'t compile \\n    against the new version above because it\'s using methods that \\n    don\'t exist in the new one. \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520130\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520130&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520130\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520130_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520130_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 01:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T01:10:07+0000\'\u003e16\\/Aug\\/07 01:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThis increases file descriptor usage in some cases, right? In the old scheme, if you set mergeFactor to 10 and maxBufferedDocs to 1000, you\'d only get 10 segments with size &lt;= 1000. But with this code, you can\'t bound that anymore. If I create single doc segments (perhaps by flushing based on latency), I can get 30 of them?\u003c\\/p\u003e\\n\\n\u003cp\u003eOf course, if what we\'re trying to do is manage the number of file descriptors, we should just do that, rather than using using maxBufferedDocs as a proxy (with all it\'s nasty overmerging behavior).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520130_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520130_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 01:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T01:10:07+0000\'\u003e16\\/Aug\\/07 01:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    This increases file descriptor usage in some cases, right? In the old scheme, if you set mergeFactor to 10 and maxBufferedDocs to 1000, you\'d only get 10 segments with size &lt;= 1000. But with this code, you can\'t bound that anymore. If I create single doc segments (perhaps by flushing based on latency), I can get 30 of them? \\n\\n Of course, if what we\'re trying to do is manage the number of file descriptors, we should just do that, rather than using using maxBufferedDocs as a proxy (with all it\'s nasty overmerging behavior).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520181\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520181&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520181\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520181_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520181_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 09:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T09:17:57+0000\'\u003e16\\/Aug\\/07 09:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003e&gt; This increases file descriptor usage in some cases, right? In the\u003cbr\\/\u003e\\n&gt; old scheme, if you set mergeFactor to 10 and maxBufferedDocs to\u003cbr\\/\u003e\\n&gt; 1000, you\'d only get 10 segments with size &lt;= 1000. But with this\u003cbr\\/\u003e\\n&gt; code, you can\'t bound that anymore. If I create single doc segments\u003cbr\\/\u003e\\n&gt; (perhaps by flushing based on latency), I can get 30 of them?\u003c\\/p\u003e\\n\\n\u003cp\u003eRight, the # segments allowed in the index will be more than it is w\\/\u003cbr\\/\u003e\\nthe current merge policy if you consistently flush with \u003cspan class=\\\"error\\\"\u003e&#91;far&#93;\u003c\\/span\u003e fewer\u003cbr\\/\u003e\\ndocs than maxBufferedDocs is set to.\u003c\\/p\u003e\\n\\n\u003cp\u003eBut, this is actually the essense of the bug.  The case we\'re trying\u003cbr\\/\u003e\\nto fix is where you set maxBufferedDocs to something really large (say\u003cbr\\/\u003e\\n1,000,000) to avoid flushing by doc count, and you setRamBufferSizeMB\u003cbr\\/\u003e\\nto something like 32 MB.  In this case, the current merge policy would\u003cbr\\/\u003e\\njust keep merging any set of 10 segments with &lt; 1,000,000 docs each,\u003cbr\\/\u003e\\nsuch that eventually all your indexing time is being spent doing\u003cbr\\/\u003e\\nhighly sub-optimal merges.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520181_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520181_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 09:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T09:17:57+0000\'\u003e16\\/Aug\\/07 09:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n &gt; This increases file descriptor usage in some cases, right? In the \\n&gt; old scheme, if you set mergeFactor to 10 and maxBufferedDocs to \\n&gt; 1000, you\'d only get 10 segments with size &lt;= 1000. But with this \\n&gt; code, you can\'t bound that anymore. If I create single doc segments \\n&gt; (perhaps by flushing based on latency), I can get 30 of them? \\n\\n Right, the # segments allowed in the index will be more than it is w\\/ \\nthe current merge policy if you consistently flush with  &#91;far&#93;  fewer \\ndocs than maxBufferedDocs is set to. \\n\\n But, this is actually the essense of the bug.  The case we\'re trying \\nto fix is where you set maxBufferedDocs to something really large (say \\n1,000,000) to avoid flushing by doc count, and you setRamBufferSizeMB \\nto something like 32 MB.  In this case, the current merge policy would \\njust keep merging any set of 10 segments with &lt; 1,000,000 docs each, \\nsuch that eventually all your indexing time is being spent doing \\nhighly sub-optimal merges. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520268\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520268&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520268\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520268_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520268_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 15:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T15:03:09+0000\'\u003e16\\/Aug\\/07 15:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI understand the merge problem but I\'m still concerned about the increased number of file descriptors. Is this a concern?\u003c\\/p\u003e\\n\\n\u003cp\u003eIt seems like there are ways of approaching this, that might be able to fix both problems?\u003c\\/p\u003e\\n\\n\u003cp\u003eFor example, right now (pre-fix), if you have maxBufferedDocs set to 1000, mergeFactor set to 10, and add (for the sake of obvious example) 10 single doc segments, it\'s going to do a merge to one segment of size 1010, which is not great.\u003c\\/p\u003e\\n\\n\u003cp\u003eOne solution to this would be in cases like this to merge the small segments to one but not include the big segments. So you get \u003cspan class=\\\"error\\\"\u003e&#91;1000 10&#93;\u003c\\/span\u003e where the last segment keeps growing until it reaches 1000. This does more copies than the current case, but always on small segments, with the advantage of a lower bound on the number of file descriptors?\u003c\\/p\u003e\\n\\n\u003cp\u003eOf course, if no one\'s worried about this \\\"moderate\\\" (not exactly large, not exactly small) change in file descriptor usage, then it\'s not a big deal. It doesn\'t impact my work but I\'m not sure about the greater community.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520268_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520268_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 15:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T15:03:09+0000\'\u003e16\\/Aug\\/07 15:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I understand the merge problem but I\'m still concerned about the increased number of file descriptors. Is this a concern? \\n\\n It seems like there are ways of approaching this, that might be able to fix both problems? \\n\\n For example, right now (pre-fix), if you have maxBufferedDocs set to 1000, mergeFactor set to 10, and add (for the sake of obvious example) 10 single doc segments, it\'s going to do a merge to one segment of size 1010, which is not great. \\n\\n One solution to this would be in cases like this to merge the small segments to one but not include the big segments. So you get  &#91;1000 10&#93;  where the last segment keeps growing until it reaches 1000. This does more copies than the current case, but always on small segments, with the advantage of a lower bound on the number of file descriptors? \\n\\n Of course, if no one\'s worried about this \\\"moderate\\\" (not exactly large, not exactly small) change in file descriptor usage, then it\'s not a big deal. It doesn\'t impact my work but I\'m not sure about the greater community.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520271\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520271&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520271\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520271_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520271_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 15:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T15:12:16+0000\'\u003e16\\/Aug\\/07 15:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIs there a change in filedescriptor use if you don\'t use setRamBufferSizeMB?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520271_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520271_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 15:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T15:12:16+0000\'\u003e16\\/Aug\\/07 15:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Is there a change in filedescriptor use if you don\'t use setRamBufferSizeMB?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520328\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520328&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520328\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520328_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520328_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T18:28:27+0000\'\u003e16\\/Aug\\/07 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003e&gt; Is there a change in filedescriptor use if you don\'t use setRamBufferSizeMB?\u003c\\/p\u003e\\n\\n\u003cp\u003eYes.  EG, if you set maxBufferedDocs to 1000 but then flush after\u003cbr\\/\u003e\\nevery added doc, and you add 1000 docs, with the current merge policy,\u003cbr\\/\u003e\\nevery 10 flushes you will merge all segments together.  Ie, first\u003cbr\\/\u003e\\nsegment has 10 docs, then 20, 30, 40, 50, ..., 1000.  This is where\u003cbr\\/\u003e\\nO(N^2) cost on merging comes from.  But, you will never have more than\u003cbr\\/\u003e\\n10 segments in your index.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhereas the new merge policy will make levels (segments of size 100,\u003cbr\\/\u003e\\n10, 1) and merge only segments from the same level together.  So merge\u003cbr\\/\u003e\\ncost will be much less (not O(N^2)), but, you will have more max segments\u003cbr\\/\u003e\\nin the index (up to 1 + (mergeFactor-1) * log_mergeFactor(numDocs)),\u003cbr\\/\u003e\\nor 28 segments in this example (I think).\u003c\\/p\u003e\\n\\n\u003cp\u003eBasically the new merge policy tries to make levels \\\"all the way\u003cbr\\/\u003e\\ndown\\\" rather than forcefully stopping when the levels get smaller than\u003cbr\\/\u003e\\nmaxBufferedDocs, to avoid the O(N^2) merge cost.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; One solution to this would be in cases like this to merge the small\u003cbr\\/\u003e\\n&gt; segments to one but not include the big segments. So you get [1000\u003cbr\\/\u003e\\n&gt; 10] where the last segment keeps growing until it reaches 1000. This\u003cbr\\/\u003e\\n&gt; does more copies than the current case, but always on small\u003cbr\\/\u003e\\n&gt; segments, with the advantage of a lower bound on the number of file\u003cbr\\/\u003e\\n&gt; descriptors?\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m not sure that helps?  Because that \\\"small segment\\\" will have to\u003cbr\\/\u003e\\ngrow bit by bit up to 1000 (causing the O(N^2) cost).\u003c\\/p\u003e\\n\\n\u003cp\u003eNote that the goal here is to be able to switch to flushing by RAM\u003cbr\\/\u003e\\nbuffer size instead of docCount (and also merge by byte-size of\u003cbr\\/\u003e\\nsegments not doc count), by default, in IndexWriter.  But, even once\u003cbr\\/\u003e\\nwe do that, if you always flush tiny segments the new merge policy\u003cbr\\/\u003e\\nwill still build levels \\\"all the way down\\\".\u003c\\/p\u003e\\n\\n\u003cp\u003eHere\'s an idea: maybe we can accept the O(N^2) merge cost, when the\u003cbr\\/\u003e\\nsegments are \\\"small\\\"?  Ie, maybe doing 100 sub-optimal merges (in the\u003cbr\\/\u003e\\nexample above) does not amount to that much actual cost in practice.\u003cbr\\/\u003e\\n(After all nobody has complained about this \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003eI will run some tests.  Clearly at some point the O(N^2) cost will\u003cbr\\/\u003e\\ndominate your indexing time, but maybe we can set a \\\"rough\\\" docCount\u003cbr\\/\u003e\\nbelow which all segments are counted as a single level and not take\u003cbr\\/\u003e\\ntoo much of a indexing performance hit.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520328_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520328_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T18:28:27+0000\'\u003e16\\/Aug\\/07 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n &gt; Is there a change in filedescriptor use if you don\'t use setRamBufferSizeMB? \\n\\n Yes.  EG, if you set maxBufferedDocs to 1000 but then flush after \\nevery added doc, and you add 1000 docs, with the current merge policy, \\nevery 10 flushes you will merge all segments together.  Ie, first \\nsegment has 10 docs, then 20, 30, 40, 50, ..., 1000.  This is where \\nO(N^2) cost on merging comes from.  But, you will never have more than \\n10 segments in your index. \\n\\n Whereas the new merge policy will make levels (segments of size 100, \\n10, 1) and merge only segments from the same level together.  So merge \\ncost will be much less (not O(N^2)), but, you will have more max segments \\nin the index (up to 1 + (mergeFactor-1) * log_mergeFactor(numDocs)), \\nor 28 segments in this example (I think). \\n\\n Basically the new merge policy tries to make levels \\\"all the way \\ndown\\\" rather than forcefully stopping when the levels get smaller than \\nmaxBufferedDocs, to avoid the O(N^2) merge cost. \\n\\n &gt; One solution to this would be in cases like this to merge the small \\n&gt; segments to one but not include the big segments. So you get [1000 \\n&gt; 10] where the last segment keeps growing until it reaches 1000. This \\n&gt; does more copies than the current case, but always on small \\n&gt; segments, with the advantage of a lower bound on the number of file \\n&gt; descriptors? \\n\\n I\'m not sure that helps?  Because that \\\"small segment\\\" will have to \\ngrow bit by bit up to 1000 (causing the O(N^2) cost). \\n\\n Note that the goal here is to be able to switch to flushing by RAM \\nbuffer size instead of docCount (and also merge by byte-size of \\nsegments not doc count), by default, in IndexWriter.  But, even once \\nwe do that, if you always flush tiny segments the new merge policy \\nwill still build levels \\\"all the way down\\\". \\n\\n Here\'s an idea: maybe we can accept the O(N^2) merge cost, when the \\nsegments are \\\"small\\\"?  Ie, maybe doing 100 sub-optimal merges (in the \\nexample above) does not amount to that much actual cost in practice. \\n(After all nobody has complained about this  . \\n\\n I will run some tests.  Clearly at some point the O(N^2) cost will \\ndominate your indexing time, but maybe we can set a \\\"rough\\\" docCount \\nbelow which all segments are counted as a single level and not take \\ntoo much of a indexing performance hit.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520334\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520334&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520334\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520334_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520334_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 18:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T18:53:06+0000\'\u003e16\\/Aug\\/07 18:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eYou may avoid the cost of a bunch of small merges, but then you pay the price in searching performance.  I\'m not sure that\'s the right tradeoff because if someone wanted to optimize for indexing performance, they would do more in batches.\u003c\\/p\u003e\\n\\n\u003cp\u003eHow does this work when flushing by MB?  If you set setRamBufferSizeMB(32), are you guaranteed that you never have more than 10 segments less than 32MB (ignoring LEVEL_LOG_SPAN for now) if mergeFactor is 10?\u003c\\/p\u003e\\n\\n\u003cp\u003eAlmost seems like we need a minSegmentSize parameter too - using setRamBufferSizeMB confuses two different but related issues.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520334_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520334_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 18:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T18:53:06+0000\'\u003e16\\/Aug\\/07 18:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    You may avoid the cost of a bunch of small merges, but then you pay the price in searching performance.  I\'m not sure that\'s the right tradeoff because if someone wanted to optimize for indexing performance, they would do more in batches. \\n\\n How does this work when flushing by MB?  If you set setRamBufferSizeMB(32), are you guaranteed that you never have more than 10 segments less than 32MB (ignoring LEVEL_LOG_SPAN for now) if mergeFactor is 10? \\n\\n Almost seems like we need a minSegmentSize parameter too - using setRamBufferSizeMB confuses two different but related issues.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520336\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520336&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520336\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520336_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520336_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 19:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T19:05:03+0000\'\u003e16\\/Aug\\/07 19:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e \\tHere\'s an idea: maybe we can accept the O(N^2) merge cost, when the\u003cbr\\/\u003e\\n\\tsegments are \\\"small\\\"?\u003c\\/p\u003e\\n\\n\u003cp\u003eThat\'s basically the underlying idea I was trying to get at.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520336_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520336_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 19:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T19:05:03+0000\'\u003e16\\/Aug\\/07 19:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     \\tHere\'s an idea: maybe we can accept the O(N^2) merge cost, when the \\n\\tsegments are \\\"small\\\"? \\n\\n That\'s basically the underlying idea I was trying to get at.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520343\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520343&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520343\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520343_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520343_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 19:42\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T19:42:31+0000\'\u003e16\\/Aug\\/07 19:42\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003e&gt; You may avoid the cost of a bunch of small merges, but then you pay\u003cbr\\/\u003e\\n&gt; the price in searching performance. I\'m not sure that\'s the right\u003cbr\\/\u003e\\n&gt; tradeoff because if someone wanted to optimize for indexing\u003cbr\\/\u003e\\n&gt; performance, they would do more in batches.\u003c\\/p\u003e\\n\\n\u003cp\u003eAgreed.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt\'s like we would want to run \\\"partial optimize\\\" (ie, merge the tail\u003cbr\\/\u003e\\nof \\\"small\\\" segments) on demand, only when a reader is about to\u003cbr\\/\u003e\\nrefresh.\u003c\\/p\u003e\\n\\n\u003cp\u003eOr here\'s another random idea: maybe IndexReaders should load the tail\u003cbr\\/\u003e\\nof \\\"small segments\\\" into a RAMDirectory, for each one.  Ie, an\u003cbr\\/\u003e\\nIndexReader is given a RAM buffer \\\"budget\\\" and it spends it on any\u003cbr\\/\u003e\\nnumerous small segments in the index....?\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; How does this work when flushing by MB? If you set\u003cbr\\/\u003e\\n&gt; setRamBufferSizeMB(32), are you guaranteed that you never have more\u003cbr\\/\u003e\\n&gt; than 10 segments less than 32MB (ignoring LEVEL_LOG_SPAN for now) if\u003cbr\\/\u003e\\n&gt; mergeFactor is 10?\u003c\\/p\u003e\\n\\n\u003cp\u003eNo, we have the same challenge of avoiding O(N^2) merge cost.  When\u003cbr\\/\u003e\\nmerging by \\\"byte size\\\" of the segments, I don\'t look at the current\u003cbr\\/\u003e\\nRAM buffer size of the writer.\u003c\\/p\u003e\\n\\n\u003cp\u003eI feel like there should be a strong separation of \\\"flush params\\\" from\u003cbr\\/\u003e\\n\\\"merge params\\\".\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Almost seems like we need a minSegmentSize parameter too - using\u003cbr\\/\u003e\\n&gt; setRamBufferSizeMB confuses two different but related issues.\u003c\\/p\u003e\\n\\n\u003cp\u003eExactly!  I\'m thinking that I add \\\"minSegmentSize\\\" to the\u003cbr\\/\u003e\\nLogMergePolicy, which is separate from \\\"maxBufferedDocs\\\" and\u003cbr\\/\u003e\\n\\\"ramBufferSizeMB\\\".  And, we default it to values that seem like an\u003cbr\\/\u003e\\n\\\"acceptable\\\" tradeoff of the cost of O(N^2) merging (based on tests I\u003cbr\\/\u003e\\nwill run) vs the cost of slowdown to readers...\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'ll run some perf tests.  O(N^2) should be acceptable for certain\u003cbr\\/\u003e\\nsegment sizes....\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520343_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520343_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 19:42\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T19:42:31+0000\'\u003e16\\/Aug\\/07 19:42\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n &gt; You may avoid the cost of a bunch of small merges, but then you pay \\n&gt; the price in searching performance. I\'m not sure that\'s the right \\n&gt; tradeoff because if someone wanted to optimize for indexing \\n&gt; performance, they would do more in batches. \\n\\n Agreed. \\n\\n It\'s like we would want to run \\\"partial optimize\\\" (ie, merge the tail \\nof \\\"small\\\" segments) on demand, only when a reader is about to \\nrefresh. \\n\\n Or here\'s another random idea: maybe IndexReaders should load the tail \\nof \\\"small segments\\\" into a RAMDirectory, for each one.  Ie, an \\nIndexReader is given a RAM buffer \\\"budget\\\" and it spends it on any \\nnumerous small segments in the index....? \\n\\n &gt; How does this work when flushing by MB? If you set \\n&gt; setRamBufferSizeMB(32), are you guaranteed that you never have more \\n&gt; than 10 segments less than 32MB (ignoring LEVEL_LOG_SPAN for now) if \\n&gt; mergeFactor is 10? \\n\\n No, we have the same challenge of avoiding O(N^2) merge cost.  When \\nmerging by \\\"byte size\\\" of the segments, I don\'t look at the current \\nRAM buffer size of the writer. \\n\\n I feel like there should be a strong separation of \\\"flush params\\\" from \\n\\\"merge params\\\". \\n\\n &gt; Almost seems like we need a minSegmentSize parameter too - using \\n&gt; setRamBufferSizeMB confuses two different but related issues. \\n\\n Exactly!  I\'m thinking that I add \\\"minSegmentSize\\\" to the \\nLogMergePolicy, which is separate from \\\"maxBufferedDocs\\\" and \\n\\\"ramBufferSizeMB\\\".  And, we default it to values that seem like an \\n\\\"acceptable\\\" tradeoff of the cost of O(N^2) merging (based on tests I \\nwill run) vs the cost of slowdown to readers... \\n\\n I\'ll run some perf tests.  O(N^2) should be acceptable for certain \\nsegment sizes....              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520344\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520344&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520344\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520344_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520344_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 19:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T19:43:11+0000\'\u003e16\\/Aug\\/07 19:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; &gt; Here\'s an idea: maybe we can accept the O(N^2) merge cost, when\u003cbr\\/\u003e\\n&gt; &gt; the segments are \\\"small\\\"?\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; That\'s basically the underlying idea I was trying to get at.\u003c\\/p\u003e\\n\\n\u003cp\u003eAhh, good!  We agree \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520344_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520344_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 19:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T19:43:11+0000\'\u003e16\\/Aug\\/07 19:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; &gt; Here\'s an idea: maybe we can accept the O(N^2) merge cost, when \\n&gt; &gt; the segments are \\\"small\\\"? \\n&gt; \\n&gt; That\'s basically the underlying idea I was trying to get at. \\n\\n Ahh, good!  We agree                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520351\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520351&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520351\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520351_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520351_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 20:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T20:01:53+0000\'\u003e16\\/Aug\\/07 20:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; Or here\'s another random idea: maybe IndexReaders should load the\u003cbr\\/\u003e\\n&gt; tail of \\\"small segments\\\" into a RAMDirectory, for each one. Ie, an\u003cbr\\/\u003e\\n&gt; IndexReader is given a RAM buffer \\\"budget\\\" and it spends it on any\u003cbr\\/\u003e\\n&gt; numerous small segments in the index....?\u003c\\/p\u003e\\n\\n\u003cp\u003eFollowing up on this ... I think IndexReader could load \\\"small tail\u003cbr\\/\u003e\\nsegments\\\" into RAMDirectory and then do a merge on them to make\u003cbr\\/\u003e\\nsearch even faster.  It should typically be extremely fast if we set the\u003cbr\\/\u003e\\ndefaults right, and RAM usage should be quite low since merging\u003cbr\\/\u003e\\nsmall segments usually gives great compression in net bytes used.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis would allow us to avoid (or, minimize) the O(N^2) cost on merging\u003cbr\\/\u003e\\nto ensure that an index is \\\"at all instants\\\" ready for a reader to\u003cbr\\/\u003e\\ndirectly load it.  This basically gives us our \\\"merge tail segments on\u003cbr\\/\u003e\\ndemand when a reader refreshes\\\".\u003c\\/p\u003e\\n\\n\u003cp\u003eWe can do a combination of these two approaches, whereby the\u003cbr\\/\u003e\\nIndexWriter is free to make use a \\\"long tail\\\" of segments so it\u003cbr\\/\u003e\\ndoesn\'t have O(N^2) slowdown on merge cost, yet a reader pays very\u003cbr\\/\u003e\\nsmall (one-time) cost for such segments.\u003c\\/p\u003e\\n\\n\u003cp\u003eI think the combination of these two changes should give a net\\/net\u003cbr\\/\u003e\\nsizable improvement on \\\"low latency\\\" apps.... because IndexWriter is\u003cbr\\/\u003e\\nfree to make miniscule segments (document by document even) and\u003cbr\\/\u003e\\nIndexReader (especially combined with \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-743\\\" title=\\\"IndexReader.reopen()\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-743\\\"\u003e\u003cdel\u003eLUCENE-743\u003c\\/del\u003e\u003c\\/a\u003e) can quickly\u003cbr\\/\u003e\\nre-open and do a \\\"mini-optimize\\\" on the tail segments and have\u003cbr\\/\u003e\\ngreat performance.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520351_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520351_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 20:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T20:01:53+0000\'\u003e16\\/Aug\\/07 20:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; Or here\'s another random idea: maybe IndexReaders should load the \\n&gt; tail of \\\"small segments\\\" into a RAMDirectory, for each one. Ie, an \\n&gt; IndexReader is given a RAM buffer \\\"budget\\\" and it spends it on any \\n&gt; numerous small segments in the index....? \\n\\n Following up on this ... I think IndexReader could load \\\"small tail \\nsegments\\\" into RAMDirectory and then do a merge on them to make \\nsearch even faster.  It should typically be extremely fast if we set the \\ndefaults right, and RAM usage should be quite low since merging \\nsmall segments usually gives great compression in net bytes used. \\n\\n This would allow us to avoid (or, minimize) the O(N^2) cost on merging \\nto ensure that an index is \\\"at all instants\\\" ready for a reader to \\ndirectly load it.  This basically gives us our \\\"merge tail segments on \\ndemand when a reader refreshes\\\". \\n\\n We can do a combination of these two approaches, whereby the \\nIndexWriter is free to make use a \\\"long tail\\\" of segments so it \\ndoesn\'t have O(N^2) slowdown on merge cost, yet a reader pays very \\nsmall (one-time) cost for such segments. \\n\\n I think the combination of these two changes should give a net\\/net \\nsizable improvement on \\\"low latency\\\" apps.... because IndexWriter is \\nfree to make miniscule segments (document by document even) and \\nIndexReader (especially combined with   LUCENE-743  ) can quickly \\nre-open and do a \\\"mini-optimize\\\" on the tail segments and have \\ngreat performance.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520360\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520360&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520360\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520360_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520360_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 20:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T20:33:04+0000\'\u003e16\\/Aug\\/07 20:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\\tI think the combination of these two changes should give a net\\/net\u003cbr\\/\u003e\\n\\tsizable improvement on \\\"low latency\\\" apps....\u003c\\/p\u003e\\n\\n\u003cp\u003eI think this would be great. It\'s always been a pet peeve of mine that even in low pressure\\/activity environments, there is often a delay from write to read.\u003c\\/p\u003e\\n\\n\u003cp\u003eSounds like this would help take most of the work\\/risk off the developer.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"steven_parkes\\\" id=\\\"commentauthor_12520360_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=steven_parkes\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"steven_parkes\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Steven Parkes\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520360_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 20:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T20:33:04+0000\'\u003e16\\/Aug\\/07 20:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\tI think the combination of these two changes should give a net\\/net \\n\\tsizable improvement on \\\"low latency\\\" apps.... \\n\\n I think this would be great. It\'s always been a pet peeve of mine that even in low pressure\\/activity environments, there is often a delay from write to read. \\n\\n Sounds like this would help take most of the work\\/risk off the developer.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520378\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520378&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520378\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520378_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520378_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 21:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T21:32:21+0000\'\u003e16\\/Aug\\/07 21:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; I think this would be great. It\'s always been a pet peeve of mine\u003cbr\\/\u003e\\n&gt; that even in low pressure\\/activity environments, there is often a\u003cbr\\/\u003e\\n&gt; delay from write to read.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'ll open a new issue.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Sounds like this would help take most of the work\\/risk off the\u003cbr\\/\u003e\\n&gt; developer.\u003c\\/p\u003e\\n\\n\u003cp\u003ePrecisely!  Out of the box we can have very low latency from\u003cbr\\/\u003e\\nIndexWriter flushing single doc segments, and not having to pay the\u003cbr\\/\u003e\\nO(N^2) merge cost of merging down such segments to be \\\"at all moments\\\"\u003cbr\\/\u003e\\nready for an IndexReader to open the index, while IndexReader can load\u003cbr\\/\u003e\\nsuch an index (or re-open by loading only the \\\"new\\\" segments) and very\u003cbr\\/\u003e\\nquickly reduce the # segments so that searching is still fast.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520378_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520378_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Aug\\/07 21:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-16T21:32:21+0000\'\u003e16\\/Aug\\/07 21:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; I think this would be great. It\'s always been a pet peeve of mine \\n&gt; that even in low pressure\\/activity environments, there is often a \\n&gt; delay from write to read. \\n\\n I\'ll open a new issue. \\n\\n &gt; Sounds like this would help take most of the work\\/risk off the \\n&gt; developer. \\n\\n Precisely!  Out of the box we can have very low latency from \\nIndexWriter flushing single doc segments, and not having to pay the \\nO(N^2) merge cost of merging down such segments to be \\\"at all moments\\\" \\nready for an IndexReader to open the index, while IndexReader can load \\nsuch an index (or re-open by loading only the \\\"new\\\" segments) and very \\nquickly reduce the # segments so that searching is still fast. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520611\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520611&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520611\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520611_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520611_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 17:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T17:34:56+0000\'\u003e17\\/Aug\\/07 17:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMerging small segments in the reader seems like a cool idea on it\'s own.\u003cbr\\/\u003e\\nBut if it\'s an acceptable hit to merge in the reader, why is it not in the writer?\u003c\\/p\u003e\\n\\n\u003cp\u003eThink about a writer flushing 10 small segments and a new reader opened each time:\u003cbr\\/\u003e\\nThe reader would do ~10*10\\/2 merges if it just merged the small segments.\u003cbr\\/\u003e\\nIf the writer were to do the merging instead, it would need to merge ~10 segments.\u003c\\/p\u003e\\n\\n\u003cp\u003eThinking about it anotherway... if there were no separation between reader and writer, and small segments were merged on an open, why not just write out the result so it wouldn\'t have to be done again?  Now move \\\"merge on an open\\\" to \\\"merge on the close\\\" and that\'s what IndexWriter currently does.  Why is it OK for a reader to pay the price but not the writer?\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, would this tail merging on an open be able to reduce the peak number of file descriptors?\u003cbr\\/\u003e\\nIt seems like to do so, the tail would have to be merged \u003cb\u003ebefore\u003c\\/b\u003e other index files were opened, further complicating matters.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520611_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520611_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 17:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T17:34:56+0000\'\u003e17\\/Aug\\/07 17:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Merging small segments in the reader seems like a cool idea on it\'s own. \\nBut if it\'s an acceptable hit to merge in the reader, why is it not in the writer? \\n\\n Think about a writer flushing 10 small segments and a new reader opened each time: \\nThe reader would do ~10*10\\/2 merges if it just merged the small segments. \\nIf the writer were to do the merging instead, it would need to merge ~10 segments. \\n\\n Thinking about it anotherway... if there were no separation between reader and writer, and small segments were merged on an open, why not just write out the result so it wouldn\'t have to be done again?  Now move \\\"merge on an open\\\" to \\\"merge on the close\\\" and that\'s what IndexWriter currently does.  Why is it OK for a reader to pay the price but not the writer? \\n\\n Also, would this tail merging on an open be able to reduce the peak number of file descriptors? \\nIt seems like to do so, the tail would have to be merged  before  other index files were opened, further complicating matters.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520649\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520649&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520649\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520649_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520649_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 19:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T19:33:56+0000\'\u003e17\\/Aug\\/07 19:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; Merging small segments in the reader seems like a cool idea on it\'s\u003cbr\\/\u003e\\n&gt; own.  But if it\'s an acceptable hit to merge in the reader, why is\u003cbr\\/\u003e\\n&gt; it not in the writer?\u003c\\/p\u003e\\n\\n\u003cp\u003eGood point.  I think it comes down to how often we expect readers to\u003cbr\\/\u003e\\nrefresh vs writers flushing.\u003c\\/p\u003e\\n\\n\u003cp\u003eIf indeed it\'s 1 to 1 (as the truest \\\"low latency\\\" app would in fact\u003cbr\\/\u003e\\nbe, or a \\\"single writer + reader with no separation\\\"), then the writer\u003cbr\\/\u003e\\nshould merge them because although it\'s paying an O(N^2) cost to keep\u003cbr\\/\u003e\\nthe tail \\\"short\\\", merging on open would pay even more cost.\u003c\\/p\u003e\\n\\n\u003cp\u003eBut if writer flushes frequently and reader re-opens less frequently\u003cbr\\/\u003e\\nthen it\'s better to merge on open.\u003c\\/p\u003e\\n\\n\u003cp\u003eOf course, if the O(N^2) cost for IndexWriter to keep a short tail is\u003cbr\\/\u003e\\nin practice not too costly then we should just leave this in\u003cbr\\/\u003e\\nIndexWriter.  I still need to run that test for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-845\\\" title=\\\"If you &quot;flush by RAM usage&quot; then IndexWriter may over-merge\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-845\\\"\u003e\u003cdel\u003eLUCENE-845\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Also, would this tail merging on an open be able to reduce the peak\u003cbr\\/\u003e\\n&gt; number of file descriptors?  It seems like to do so, the tail would\u003cbr\\/\u003e\\n&gt; have to be merged \u003cb\u003ebefore\u003c\\/b\u003e other index files were opened, further\u003cbr\\/\u003e\\n&gt; complicating matters.\u003c\\/p\u003e\\n\\n\u003cp\u003eRight I think to keep peak descriptor usage capped we must merge the\u003cbr\\/\u003e\\ntail, first, then open the remaining segments, which definitely\u003cbr\\/\u003e\\ncomplicate things...\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520649_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520649_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 19:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T19:33:56+0000\'\u003e17\\/Aug\\/07 19:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; Merging small segments in the reader seems like a cool idea on it\'s \\n&gt; own.  But if it\'s an acceptable hit to merge in the reader, why is \\n&gt; it not in the writer? \\n\\n Good point.  I think it comes down to how often we expect readers to \\nrefresh vs writers flushing. \\n\\n If indeed it\'s 1 to 1 (as the truest \\\"low latency\\\" app would in fact \\nbe, or a \\\"single writer + reader with no separation\\\"), then the writer \\nshould merge them because although it\'s paying an O(N^2) cost to keep \\nthe tail \\\"short\\\", merging on open would pay even more cost. \\n\\n But if writer flushes frequently and reader re-opens less frequently \\nthen it\'s better to merge on open. \\n\\n Of course, if the O(N^2) cost for IndexWriter to keep a short tail is \\nin practice not too costly then we should just leave this in \\nIndexWriter.  I still need to run that test for   LUCENE-845  . \\n\\n &gt; Also, would this tail merging on an open be able to reduce the peak \\n&gt; number of file descriptors?  It seems like to do so, the tail would \\n&gt; have to be merged  before  other index files were opened, further \\n&gt; complicating matters. \\n\\n Right I think to keep peak descriptor usage capped we must merge the \\ntail, first, then open the remaining segments, which definitely \\ncomplicate things...              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520655\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520655&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520655\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520655_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520655_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 20:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T20:12:58+0000\'\u003e17\\/Aug\\/07 20:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; But if writer flushes frequently and reader re-opens less frequently\u003cbr\\/\u003e\\n&gt; then it\'s better to merge on open.\u003c\\/p\u003e\\n\\n\u003cp\u003eSeems like an odd case though, because if readers aren\'t opened frequently, then it\'s a wast to flush small segments so often (and much slower for the writer than not doing so).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12520655_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520655_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 20:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T20:12:58+0000\'\u003e17\\/Aug\\/07 20:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; But if writer flushes frequently and reader re-opens less frequently \\n&gt; then it\'s better to merge on open. \\n\\n Seems like an odd case though, because if readers aren\'t opened frequently, then it\'s a wast to flush small segments so often (and much slower for the writer than not doing so).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12520667\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12520667&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12520667\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520667_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520667_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 20:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T20:44:35+0000\'\u003e17\\/Aug\\/07 20:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAgreed.  OK, I think this is a dead end: it adds complexity and won\'t\u003cbr\\/\u003e\\nhelp in \\\"typical\\\" uses of Lucene.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo ... my plan of action is to assess the \\\"actual\\\" O(N^2) cost for\u003cbr\\/\u003e\\nIndexWriter to keep the tail short, add a parameter to LogMergePolicy\u003cbr\\/\u003e\\nso that it \\\"floors\\\" the level and always merges segments less than\u003cbr\\/\u003e\\nthis floor together, despite the O(N^2) cost.  And then pick a\u003cbr\\/\u003e\\nreasonable default for this floor.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12520667_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12520667_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Aug\\/07 20:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-08-17T20:44:35+0000\'\u003e17\\/Aug\\/07 20:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Agreed.  OK, I think this is a dead end: it adds complexity and won\'t \\nhelp in \\\"typical\\\" uses of Lucene. \\n\\n So ... my plan of action is to assess the \\\"actual\\\" O(N^2) cost for \\nIndexWriter to keep the tail short, add a parameter to LogMergePolicy \\nso that it \\\"floors\\\" the level and always merges segments less than \\nthis floor together, despite the O(N^2) cost.  And then pick a \\nreasonable default for this floor.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12526403\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12526403&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12526403\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12526403_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12526403_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/07 10:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-09-11T10:16:43+0000\'\u003e11\\/Sep\\/07 10:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIn the latest patch on \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-847\\\" title=\\\"Factor merge policy out of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-847\\\"\u003e\u003cdel\u003eLUCENE-847\u003c\\/del\u003e\u003c\\/a\u003e I\'ve added methods to\u003cbr\\/\u003e\\nLogDocMergePolicy (setMinMergeDocs) and LogByteSizeMergePolicy\u003cbr\\/\u003e\\n(setMinMergeMB) to set a floor on the segment levels such that all\u003cbr\\/\u003e\\nsegments below this min size are aggressively merged as if they were in\u003cbr\\/\u003e\\none level.  This effectively \\\"truncates\\\" what would otherwise be a\u003cbr\\/\u003e\\nlong tail of segment sizes, when you are flushing many tiny segments\u003cbr\\/\u003e\\ninto your index.\u003c\\/p\u003e\\n\\n\u003cp\u003eIn order to pick reasonable defaults for the min segment size, I ran\u003cbr\\/\u003e\\nsome benchmarks to measure the indexing cost of truncating the tail.\u003c\\/p\u003e\\n\\n\u003cp\u003eI processed Wiki content into ~4 KB plain text documents and then\u003cbr\\/\u003e\\nindexed the first 10,000 docs using this alg:\u003c\\/p\u003e\\n\\n\u003cp\u003e  analyzer=org.apache.lucene.analysis.SimpleAnalyzer\u003cbr\\/\u003e\\n  doc.maker=org.apache.lucene.benchmark.byTask.feeds.LineDocMaker\u003cbr\\/\u003e\\n  directory=FSDirectory\u003cbr\\/\u003e\\n  docs.file=\\/lucene\\/wiki4K.txt\u003cbr\\/\u003e\\n  max.buffered = 500\u003c\\/p\u003e\\n\\n\u003cp\u003e  ResetSystemErase\u003cbr\\/\u003e\\n  CreateIndex\u003cbr\\/\u003e\\n  {AddDoc &gt;: 10000\u003cbr\\/\u003e\\n  CloseIndex\u003c\\/p\u003e\\n\\n\u003cp\u003e  RepSumByName\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m using the SerialMergeScheduler.\u003c\\/p\u003e\\n\\n\u003cp\u003eI modified contrib\\/benchmark to always flush a new segment after each\u003cbr\\/\u003e\\nadded document: this simulates the \\\"worst case\\\" of tiny segments, ie,\u003cbr\\/\u003e\\nlowest latency indexing where every added doc must then be visible to\u003cbr\\/\u003e\\nsearchers.\u003c\\/p\u003e\\n\\n\u003cp\u003eEach time is best of 2 runs.  This is run on Linux (2.6.22.1) Core II\u003cbr\\/\u003e\\nDuo 2.4 Ghz machine with 4 GB RAM, RAID 5 IO system using Java 1.5\u003cbr\\/\u003e\\n-server.\u003c\\/p\u003e\\n\\n\u003cp\u003e    maxBufferedDocs   seconds    slowdown\u003cbr\\/\u003e\\n    10                40         1.0\u003cbr\\/\u003e\\n    100               50         1.3\u003cbr\\/\u003e\\n    200               59         1.5\u003cbr\\/\u003e\\n    300               64         1.6\u003cbr\\/\u003e\\n    400               72         1.8\u003cbr\\/\u003e\\n    500               80         2.0\u003cbr\\/\u003e\\n    750               97         2.4\u003cbr\\/\u003e\\n   1000              114         2.9\u003cbr\\/\u003e\\n   1500              138         3.5\u003cbr\\/\u003e\\n   2000              169         4.2\u003cbr\\/\u003e\\n   3000              205         5.1\u003cbr\\/\u003e\\n   4000              264         6.6\u003cbr\\/\u003e\\n   5000              320         8.0\u003cbr\\/\u003e\\n   7500              404        10.1\u003cbr\\/\u003e\\n  10000              645        16.1\u003c\\/p\u003e\\n\\n\u003cp\u003eHere\'s my thinking:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eIf you are flushing zillions of such tiny segments I think it\'s OK\u003cbr\\/\u003e\\n    to accept a net\\/net sizable slowdown of your overall indexing\u003cbr\\/\u003e\\n    speed.  I\'ll choose a 4X slowdown \\\"tolerance\\\" to choose default\u003cbr\\/\u003e\\n    values.  This corresponds roughly to the \\\"2000\\\" line above.\u003cbr\\/\u003e\\n    However, because I tested on a fairly fast CPU &amp; IO system I\'ll\u003cbr\\/\u003e\\n    multiply the numbers by 0.5.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eGiven this, I propose we default the minMergeMB\u003cbr\\/\u003e\\n    (LogByteSizeMergePolicy) to 1.6 MB (avg size of real segments at\u003cbr\\/\u003e\\n    the 2000 point above was 3.2 MB) and default minMergeDocs\u003cbr\\/\u003e\\n    (LogDocMergePolicy) to 1000.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eNote that when you are flushing large segments (larger than these\u003cbr\\/\u003e\\n    min size settings) then there is no slowdown at all because the\u003cbr\\/\u003e\\n    flushed segments are already above the minimum size.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eThese are just defaults, so a given application can always change\u003cbr\\/\u003e\\ntheir \\\"min merge size\\\" as needed.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12526403_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12526403_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/07 10:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-09-11T10:16:43+0000\'\u003e11\\/Sep\\/07 10:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    In the latest patch on   LUCENE-847   I\'ve added methods to \\nLogDocMergePolicy (setMinMergeDocs) and LogByteSizeMergePolicy \\n(setMinMergeMB) to set a floor on the segment levels such that all \\nsegments below this min size are aggressively merged as if they were in \\none level.  This effectively \\\"truncates\\\" what would otherwise be a \\nlong tail of segment sizes, when you are flushing many tiny segments \\ninto your index. \\n\\n In order to pick reasonable defaults for the min segment size, I ran \\nsome benchmarks to measure the indexing cost of truncating the tail. \\n\\n I processed Wiki content into ~4 KB plain text documents and then \\nindexed the first 10,000 docs using this alg: \\n\\n   analyzer=org.apache.lucene.analysis.SimpleAnalyzer \\n  doc.maker=org.apache.lucene.benchmark.byTask.feeds.LineDocMaker \\n  directory=FSDirectory \\n  docs.file=\\/lucene\\/wiki4K.txt \\n  max.buffered = 500 \\n\\n   ResetSystemErase \\n  CreateIndex \\n  {AddDoc &gt;: 10000 \\n  CloseIndex \\n\\n   RepSumByName \\n\\n I\'m using the SerialMergeScheduler. \\n\\n I modified contrib\\/benchmark to always flush a new segment after each \\nadded document: this simulates the \\\"worst case\\\" of tiny segments, ie, \\nlowest latency indexing where every added doc must then be visible to \\nsearchers. \\n\\n Each time is best of 2 runs.  This is run on Linux (2.6.22.1) Core II \\nDuo 2.4 Ghz machine with 4 GB RAM, RAID 5 IO system using Java 1.5 \\n-server. \\n\\n     maxBufferedDocs   seconds    slowdown \\n    10                40         1.0 \\n    100               50         1.3 \\n    200               59         1.5 \\n    300               64         1.6 \\n    400               72         1.8 \\n    500               80         2.0 \\n    750               97         2.4 \\n   1000              114         2.9 \\n   1500              138         3.5 \\n   2000              169         4.2 \\n   3000              205         5.1 \\n   4000              264         6.6 \\n   5000              320         8.0 \\n   7500              404        10.1 \\n  10000              645        16.1 \\n\\n Here\'s my thinking: \\n\\n \\n\\t If you are flushing zillions of such tiny segments I think it\'s OK \\n    to accept a net\\/net sizable slowdown of your overall indexing \\n    speed.  I\'ll choose a 4X slowdown \\\"tolerance\\\" to choose default \\n    values.  This corresponds roughly to the \\\"2000\\\" line above. \\n    However, because I tested on a fairly fast CPU &amp; IO system I\'ll \\n    multiply the numbers by 0.5. \\n \\n\\n\\n \\n\\t Given this, I propose we default the minMergeMB \\n    (LogByteSizeMergePolicy) to 1.6 MB (avg size of real segments at \\n    the 2000 point above was 3.2 MB) and default minMergeDocs \\n    (LogDocMergePolicy) to 1000. \\n \\n\\n\\n \\n\\t Note that when you are flushing large segments (larger than these \\n    min size settings) then there is no slowdown at all because the \\n    flushed segments are already above the minimum size. \\n \\n\\n\\n These are just defaults, so a given application can always change \\ntheir \\\"min merge size\\\" as needed.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12526435\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12526435&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12526435\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12526435_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12526435_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/07 11:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-09-11T11:57:18+0000\'\u003e11\\/Sep\\/07 11:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Yonik Seeley - 11\\/Sep\\/07 11:57\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for adding minMergeMB, the default seems fine.\u003cbr\\/\u003e\\nShound minMergeDocs default to maxBufferedDocs (that should yield the old behavior)?\u003cbr\\/\u003e\\nAlthough 1000 isn\'t bad... much better to slow indexing a little in the odd app than to break it by running it out of descriptors.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"yseeley@gmail.com\\\" id=\\\"commentauthor_12526435_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=yseeley%40gmail.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"yseeley@gmail.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Yonik Seeley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12526435_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/07 11:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-09-11T11:57:18+0000\'\u003e11\\/Sep\\/07 11:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Yonik Seeley - 11\\/Sep\\/07 11:57\\\"\u003eedited\u003c\\/span\u003e                   Thanks for adding minMergeMB, the default seems fine. \\nShound minMergeDocs default to maxBufferedDocs (that should yield the old behavior)? \\nAlthough 1000 isn\'t bad... much better to slow indexing a little in the odd app than to break it by running it out of descriptors.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12526460\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-845?focusedCommentId=12526460&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12526460\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12526460_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12526460_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/07 14:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-09-11T14:00:35+0000\'\u003e11\\/Sep\\/07 14:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; Shound minMergeDocs default to maxBufferedDocs (that should yield\u003cbr\\/\u003e\\n&gt; the old behavior)?\u003c\\/p\u003e\\n\\n\u003cp\u003eGood idea &#8211; I think we could do this dynamically so that whenever\u003cbr\\/\u003e\\nIndexWriter is flushing by doc count and the merge policy is\u003cbr\\/\u003e\\nLogDocMergePolicy we \\\"write through\\\" any changes to maxBufferedDocs\u003cbr\\/\u003e\\n--&gt; LogDocMergePolicy.setMinMergeDocs?  I\'ll take that approach to\u003cbr\\/\u003e\\nkeep backwards compatibility.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Although 1000 isn\'t bad... much better to slow indexing a little in\u003cbr\\/\u003e\\n&gt; the odd app than to break it by running it out of descriptors.\u003c\\/p\u003e\\n\\n\u003cp\u003eAgreed, that\'s the right direction to \\\"err\\\" here.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12526460_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12526460_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/07 14:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-09-11T14:00:35+0000\'\u003e11\\/Sep\\/07 14:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; Shound minMergeDocs default to maxBufferedDocs (that should yield \\n&gt; the old behavior)? \\n\\n Good idea &#8211; I think we could do this dynamically so that whenever \\nIndexWriter is flushing by doc count and the merge policy is \\nLogDocMergePolicy we \\\"write through\\\" any changes to maxBufferedDocs \\n--&gt; LogDocMergePolicy.setMinMergeDocs?  I\'ll take that approach to \\nkeep backwards compatibility. \\n\\n &gt; Although 1000 isn\'t bad... much better to slow indexing a little in \\n&gt; the odd app than to break it by running it out of descriptors. \\n\\n Agreed, that\'s the right direction to \\\"err\\\" here.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="12310110";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/LUCENE\\/summary\\\" title=\\\"Lucene - Core\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=12310110&amp;avatarId=10061\\\" alt=\\\"Lucene - Core\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/LUCENE\\/summary\\\" title=\\\"Lucene - Core\\\"\u003eLucene - Core\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1520242543182"> 
    <input type="hidden" title="jira.request.server.time" value="223"> 
    <input type="hidden" title="jira.request.id" value="575x94509195x6"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="4"> 
    <input type="hidden" title="db.reads.time.in.ms" value="28"> 
    <input type="hidden" title="db.conns.time.in.ms" value="33"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 575x94509195x6
	          REQUEST TIMESTAMP : [05/Mar/2018:09:35:43 +0000]
	               REQUEST TIME : 0.2230
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 4

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=25, elapsedTotal=28110622, elapsedMin=357256, elapsedMax=10100257, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=29, elapsedTotal=33402480, elapsedMin=376339, elapsedMax=10128160, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>