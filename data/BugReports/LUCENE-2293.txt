<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|414e56db4c2c5356c5895e70f3121f0d016e8d2f|lout"> 
  <link rel="shortcut icon" href="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"jira.instrumentation.laas\":false,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"com.atlassian.jira.issuetable.draggable\":true,\"jira.create.linked.issue\":true,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"jira.jql.suggestrecentfields\":false,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"jira.jql.smartautoselectfirst\":false,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.priorities.per.project\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"jira.renderer.consider.variable.format\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/vnd.wap.wbmp,image/png,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"bf54988c5533c4\"";
WRM._unparsedData["project-id"]="12310110";
WRM._unparsedData["project-key"]="\"LUCENE\"";
WRM._unparsedData["project-name"]="\"Lucene - Core\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="12310110";
WRM._unparsedData["projectKey"]="\"LUCENE\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/74ac580603ca910fff0cfdf319e54add-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/98ceb006e504d7924d5ffc411626c6bc-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/c1e4d26ea276469807c3dc0918df482c-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/6bf9253c8d533109c3b02e26794be24e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/ccd2e67b523185973473e8bd5735c8f9-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/33e5e0166867c8c9228d44506f60b2e8/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/6579b6b8ba67abaa496e39b9242a18a4-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="LUCENE-2293"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[LUCENE-2293] IndexWriter has hard limit on max concurrency - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[LUCENE-2293] IndexWriter has hard limit on max concurrency - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/LUCENE" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FLUCENE-2293">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="12310110" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Lucene - Core'" src="https://issues.apache.org/jira/secure/projectavatar?pid=12310110&amp;avatarId=10061"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/LUCENE">Lucene - Core</a></li>
                 <li><a class="issue-link" data-issue-key="LUCENE-2293" href="/jira/browse/LUCENE-2293" id="key-val" rel="12458038">LUCENE-2293</a></li>
                </ol>
                <h1 id="summary-val">IndexWriter has hard limit on max concurrency</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FLUCENE-2293"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/LUCENE-2293/LUCENE-2293.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/LUCENE-2293/LUCENE-2293.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/LUCENE-2293/LUCENE-2293.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/LUCENE-2293/LUCENE-2293.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" title="Bug - A problem which impairs or prevents the functions of the product." width="16"> Bug </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/major.svg" title="Major - Major loss of function." width="16"> Major </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> None </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+LUCENE+AND+fixVersion+%3D+4.0-ALPHA" title="4.0-ALPHA Alpha release of the 4.x series">4.0-ALPHA</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> <span class="shorten" id="components-field"> <a href="/jira/issues/?jql=project+%3D+LUCENE+AND+component+%3D+%22core%2Findex%22" title="core/index issues with indexing code">core/index</a> </span> </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <span class="labels" id="labels-12458038-value">None</span> 
                   </div> 
                  </div> </li> 
                </ul> 
                <div id="customfieldmodule"> 
                 <div class="aui-tabs horizontal-tabs" id="customfield-tabs"> 
                  <div id="customfield-panel-1" class="tabs-pane active-pane"> 
                   <ul class="property-list"> 
                    <li id="rowForcustomfield_12310120" class="item"> 
                     <div class="wrap"> 
                      <strong title="Lucene Fields" class="name">Lucene Fields:</strong> 
                      <div id="customfield_12310120-val" class="value type-multicheckboxes" data-fieldtype="multicheckboxes" data-fieldtypecompletekey="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes"> 
                       <div class="shorten" id="customfield_12310120-field"> 
                        <span>New</span> 
                       </div> 
                      </div> 
                     </div> </li> 
                   </ul> 
                  </div> 
                 </div>
                </div> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p>DocumentsWriter has this nasty hardwired constant:</p> 
                  <div class="code panel" style="border-width: 1px;">
                   <div class="codeContent panelContent"> 
                    <pre class="code-java"><span class="code-keyword">private</span> <span class="code-keyword">final</span> <span class="code-keyword">static</span> <span class="code-object">int</span> MAX_THREAD_STATE = 5;
</pre> 
                   </div>
                  </div> 
                  <p>which probably I should have attached a //nocommit to the moment I<br> wrote it <img class="emoticon" src="/jira/images/icons/emoticons/wink.png" height="16" width="16" align="absmiddle" alt="" border="0"></p> 
                  <p>That constant sets the max number of thread states to 5. This means,<br> if more than 5 threads enter IndexWriter at once, they will "share"<br> only 5 thread states, meaning we gate CPU concurrency to 5 running<br> threads inside IW (each thread must first wait for the last thread to<br> finish using the thread state before grabbing it).</p> 
                  <p>This is bad because modern hardware can make use of more than 5<br> threads. So I think an immediate fix is to make this settable<br> (expert), and increase the default (8?).</p> 
                  <p>It's tricky, though, because the more thread states, the less RAM<br> efficiency you have, meaning the worse indexing throughput. So you<br> shouldn't up and set this to 50: you'll be flushing too often.</p> 
                  <p>But... I think a better fix is to re-think how threads write state<br> into DocumentsWriter. Today, a single docID stream is assigned across<br> threads (eg one thread gets docID=0, next one docID=1, etc.), and each<br> thread writes to a private RAM buffer (living in the thread state),<br> and then on flush we do a merge sort. The merge sort is inefficient<br> (does not currently use a PQ)... and, wasteful because we must<br> re-decode every posting byte.</p> 
                  <p>I think we could change this, so that threads write to private RAM<br> buffers, with a private docID stream, but then instead of merging on<br> flush, we directly flush each thread as its own segment (and, allocate<br> private docIDs to each thread). We can then leave merging to CMS<br> which can already run merges in the BG without blocking ongoing<br> indexing (unlike the merge we do in flush, today).</p> 
                  <p>This would also allow us to separately flush thread states. Ie, we<br> need not flush all thread states at once – we can flush one when it<br> gets too big, and then let the others keep running. This should be a<br> good concurrency gain since is uses IO &amp; CPU resources "throughout"<br> indexing instead of "big burst of CPU only" then "big burst of IO<br> only" that we have today (flush today "stops the world").</p> 
                  <p>One downside I can think of is... docIDs would now be "less<br> monotonic", meaning if N threads are indexing, you'll roughly get<br> in-time-order assignment of docIDs. But with this change, all of one<br> thread state would get 0..N docIDs, the next thread state'd get<br> N+1...M docIDs, etc. However, a single thread would still get<br> monotonic assignment of docIDs.</p> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/LUCENE-2293?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/LUCENE-2293?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/LUCENE-2293?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/LUCENE-2293?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12438683" data-issue-id="12458038" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12438683/LUCENE-2293.patch" draggable="true" data-downloadurl="text/plain:LUCENE-2293.patch:https://issues.apache.org/jira/secure/attachment/12438683/LUCENE-2293.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12438683/LUCENE-2293.patch" title="Latest  13/Mar/10 16:04 - Michael McCandless" draggable="true" data-downloadurl="text/plain:LUCENE-2293.patch:https://issues.apache.org/jira/secure/attachment/12438683/LUCENE-2293.patch">LUCENE-2293.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-03-13T16:04:43.652Z">13/Mar/10 16:04</time>
                   </dd>
                   <dd class="attachment-size">
                    6 kB
                   </dd>
                   <dd class="attachment-author">
                    Michael McCandless
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="linkingmodule" class="module toggle-wrap">
               <div id="linkingmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Issue Links</h2>
               </div>
               <div class="mod-content"> 
                <div class="links-container" data-default-link-icon="/jira/images/icons/generic_link_16.png"> 
                 <dl class="links-list "> 
                  <dt title="is blocked by">
                   is blocked by
                  </dt> 
                  <dd id="internal-12458093_10032"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="LUCENE-2294: Create IndexWriterConfiguration and store all of IW configuration there"> <a href="/jira/browse/LUCENE-2294" data-issue-key="LUCENE-2294" class="issue-link link-title resolution">LUCENE-2294</a> <span class="link-summary">Create IndexWriterConfiguration and store all of IW configuration there</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                 <dl class="links-list "> 
                  <dt title="relates to">
                   relates to
                  </dt> 
                  <dd id="internal-12459100_10030"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="LUCENE-2324: Per thread DocumentsWriters that write their own private segments"> <a href="/jira/browse/LUCENE-2324" data-issue-key="LUCENE-2324" class="issue-link link-title resolution">LUCENE-2324</a> <span class="link-summary">Per thread DocumentsWriters that write their own private segments</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/minor.svg" width="16" height="16" title="Minor - Minor loss of function, or other problem where easy workaround is present." alt="Minor - Minor loss of function, or other problem where easy workaround is present."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Resolved</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.</span>">Resolved</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                </div> 
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_mikemccand" rel="mikemccand" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Michael McCandless&quot;,&quot;emailAddress&quot;:&quot;lucene@mikemccandless.com&quot;,&quot;username&quot;:&quot;mikemccand&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mikemccand"></span></span> Michael McCandless </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_mikemccand" rel="mikemccand" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Michael McCandless&quot;,&quot;emailAddress&quot;:&quot;lucene@mikemccandless.com&quot;,&quot;username&quot;:&quot;mikemccand&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mikemccand"></span></span> Michael McCandless </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">3</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">4</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="03/Mar/10 20:58"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2010-03-03T20:58:13+0000">03/Mar/10 20:58</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="10/May/13 10:44"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2013-05-10T10:44:51+0000">10/May/13 10:44</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="15/Mar/10 14:13"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2010-03-15T14:13:07+0000">15/Mar/10 14:13</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-2293?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/LUCENE-2293?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-12840911\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12840911&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12840911\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12840911_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840911_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 22:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T22:02:12+0000\'\u003e03\\/Mar\\/10 22:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eGood timing - a couple days ago I was thinking about how threading could be changed in the indexer.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe other downside is that you would have to buffer deleted docs and queries separately for each thread state, because you have to keep the private docID? So that would nee a bit more memory.\u003c\\/p\u003e\\n\\n\u003cp\u003eCouldn\'t we make the DocumentsWriter and all related down-stream classes single-threaded then? The IndexWriter (or a new class) would have the doc queue, basically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document?\u003c\\/p\u003e\\n\\n\u003cp\u003eThis would allow us to simplify the indexer chain a lot - we could get rid of all the *PerThread classes. We\'d also have to separate then the docstores from the DocumentsWriter, so that multiple DocumentsWriter instances could share it. (what I\'d like to do anyway for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-2026\\\" title=\\\"Refactoring of IndexWriter\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-2026\\\"\u003eLUCENE-2026\u003c\\/a\u003e anyway).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12840911_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840911_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 22:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T22:02:12+0000\'\u003e03\\/Mar\\/10 22:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Good timing - a couple days ago I was thinking about how threading could be changed in the indexer. \\n\\n The other downside is that you would have to buffer deleted docs and queries separately for each thread state, because you have to keep the private docID? So that would nee a bit more memory. \\n\\n Couldn\'t we make the DocumentsWriter and all related down-stream classes single-threaded then? The IndexWriter (or a new class) would have the doc queue, basically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document? \\n\\n This would allow us to simplify the indexer chain a lot - we could get rid of all the *PerThread classes. We\'d also have to separate then the docstores from the DocumentsWriter, so that multiple DocumentsWriter instances could share it. (what I\'d like to do anyway for  LUCENE-2026  anyway).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12840918\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12840918&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12840918\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12840918_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840918_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 22:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T22:21:19+0000\'\u003e03\\/Mar\\/10 22:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMike, good one!  Would having a doc id stream per thread make implementing a searchable RAM buffer easier?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12840918_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840918_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 22:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T22:21:19+0000\'\u003e03\\/Mar\\/10 22:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Mike, good one!  Would having a doc id stream per thread make implementing a searchable RAM buffer easier?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12840949\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12840949&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12840949\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"earwin\\\" id=\\\"commentauthor_12840949_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=earwin\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"earwin\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Earwin Burrfoot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840949_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 23:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T23:35:51+0000\'\u003e03\\/Mar\\/10 23:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eThe IndexWriter (or a new class) would have the doc queue, basically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\u003cp\u003eI hope we won\'t lose monotonic docIDs for a singlethreaded indexation somewhere along that path.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"earwin\\\" id=\\\"commentauthor_12840949_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=earwin\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"earwin\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Earwin Burrfoot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840949_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 23:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T23:35:51+0000\'\u003e03\\/Mar\\/10 23:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     The IndexWriter (or a new class) would have the doc queue, basically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document?  \\n I hope we won\'t lose monotonic docIDs for a singlethreaded indexation somewhere along that path.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12840952\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12840952&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12840952\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12840952_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840952_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 23:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T23:48:29+0000\'\u003e03\\/Mar\\/10 23:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eI hope we won\'t lose monotonic docIDs for a singlethreaded indexation somewhere along that path.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eNo. The order in the single threaded case won\'t be different from today with the changes Mike is proposing.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12840952_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12840952_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'03\\/Mar\\/10 23:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-03T23:48:29+0000\'\u003e03\\/Mar\\/10 23:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     I hope we won\'t lose monotonic docIDs for a singlethreaded indexation somewhere along that path.  \\n\\n No. The order in the single threaded case won\'t be different from today with the changes Mike is proposing.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841106\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841106&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841106\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841106_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841106_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 07:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T07:25:21+0000\'\u003e04\\/Mar\\/10 07:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eThe IndexWriter (or a new class) would have the doc queue, basically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eToday, DW enforces thread binding - the same thread will always receive the same ThreadState. This allows applications who distribute the documents between threads based on some criteria, to get a locality of Documents indexed by each thread. I can\'t think of why an application would rely on that, but still that\'s something that happens.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, in the pull approach, Lucene would introduce another place where it allocates threads. Not only would we need to allow setting that concurrency level, we\'d also need to allow overriding how a thread is instantiated. That will change the way applications are written today - I assume lots of applications that are multi-threaded rely on the multiple threads to index the documents. But now those threads won\'t do anything besides register a document in a queue. Therefore such applications will need to move to single-threaded indexing (because multi-threaded gives them nothing), and control the threads IW allocates.\u003c\\/p\u003e\\n\\n\u003cp\u003eI personally prefer to leave multi-threaded indexing to the application. If it anyway contains a queue of incoming documents (from the outside) and allocates threads to process them in parallel (for example to parse rich text documents, fetch content from remote machines etc.), we wouldn\'t want them to do all this just to waste those threads at the end and let IW control another level of concurrency.\u003c\\/p\u003e\\n\\n\u003cp\u003eAnother downside of such approach is that it breaks backward compatibility in a new way we\'ve never considered. If the application allocates threads from a pool, and we introduce a new IW\\/DW w\\/ concurrency level=3 (for example), then the application will suddenly spawn more threads that it intended to. Perhaps it chose to use SMS, or overrode CMS to handle the threads allocation, but it\'s definitely not ready to handle another thread allocator.\u003c\\/p\u003e\\n\\n\u003cp\u003eAnother thing is that the queue cannot be of just Document objects, but a DocAndOp objects to account for add\\/delete\\/updates ... another complication.\u003c\\/p\u003e\\n\\n\u003cp\u003eMy preference is to keep the queue to the application.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eThe other downside is that you would have to buffer deleted docs and queries separately for each thread state\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eJust for clarity - you\'ll need to do it with the queue approach as well, right? I mean, a DW which pulled an operation from the queue, which is a DELETE op, will need to cache that DELETE so that it will be executed on all documents that were indexed up until flush. So that does not save anything vs. if we change DW to flush by ThreadState.\u003c\\/p\u003e\\n\\n\u003cp\u003eInstead, I prefer to take advantage of the application\'s concurrency level in the following way:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eEach thread will continue to write documents to a ThreadState. We\'ll allow changing the MAX_LEVEL, so if an app wants to get more concurrency, it can.\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eMAX_LEVEL will set the number of ThreadState objects available.\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003eAll threads will obtain memory buffers from a pull which will be limited by IW\'s RAM limit.\u003c\\/li\u003e\\n\\t\u003cli\u003eWhen a thread finishes indexing a document and realizes the pool has been exhausted, it flushes its ThreadState.\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eAt that moment, that ThreadState is pulled out of the \'active\' list and is flushed. When it\'s done, it reclaims its used buffers and being put again in the active list.\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eNew threads that come in will simply pick a ThreadState from the pool (but we\'ll bind them to that instance until it\'s flushed) and add documents to them.\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eThat way, we hijack an application thread to do the flushing, which is anyway what happens today.\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eThat way we are less likely to reach a state like Mike described - \\\"big burst of CPU only\\\" then \\\"big burst of IO only\\\" - and more likely to balance the two.\u003c\\/p\u003e\\n\\n\u003cp\u003eIf the application wants to be single threaded, we allow it to be like that all the way through, not introducing more thread allocations. Otherwise, we let it control its concurrency level and use it to our needs.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841106_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841106_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 07:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T07:25:21+0000\'\u003e04\\/Mar\\/10 07:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     The IndexWriter (or a new class) would have the doc queue, basically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document?  \\n\\n Today, DW enforces thread binding - the same thread will always receive the same ThreadState. This allows applications who distribute the documents between threads based on some criteria, to get a locality of Documents indexed by each thread. I can\'t think of why an application would rely on that, but still that\'s something that happens. \\n\\n Also, in the pull approach, Lucene would introduce another place where it allocates threads. Not only would we need to allow setting that concurrency level, we\'d also need to allow overriding how a thread is instantiated. That will change the way applications are written today - I assume lots of applications that are multi-threaded rely on the multiple threads to index the documents. But now those threads won\'t do anything besides register a document in a queue. Therefore such applications will need to move to single-threaded indexing (because multi-threaded gives them nothing), and control the threads IW allocates. \\n\\n I personally prefer to leave multi-threaded indexing to the application. If it anyway contains a queue of incoming documents (from the outside) and allocates threads to process them in parallel (for example to parse rich text documents, fetch content from remote machines etc.), we wouldn\'t want them to do all this just to waste those threads at the end and let IW control another level of concurrency. \\n\\n Another downside of such approach is that it breaks backward compatibility in a new way we\'ve never considered. If the application allocates threads from a pool, and we introduce a new IW\\/DW w\\/ concurrency level=3 (for example), then the application will suddenly spawn more threads that it intended to. Perhaps it chose to use SMS, or overrode CMS to handle the threads allocation, but it\'s definitely not ready to handle another thread allocator. \\n\\n Another thing is that the queue cannot be of just Document objects, but a DocAndOp objects to account for add\\/delete\\/updates ... another complication. \\n\\n My preference is to keep the queue to the application. \\n\\n  The other downside is that you would have to buffer deleted docs and queries separately for each thread state  \\n\\n Just for clarity - you\'ll need to do it with the queue approach as well, right? I mean, a DW which pulled an operation from the queue, which is a DELETE op, will need to cache that DELETE so that it will be executed on all documents that were indexed up until flush. So that does not save anything vs. if we change DW to flush by ThreadState. \\n\\n Instead, I prefer to take advantage of the application\'s concurrency level in the following way: \\n \\n\\t Each thread will continue to write documents to a ThreadState. We\'ll allow changing the MAX_LEVEL, so if an app wants to get more concurrency, it can.\\n\\t \\n\\t\\t MAX_LEVEL will set the number of ThreadState objects available. \\n\\t \\n\\t \\n\\t All threads will obtain memory buffers from a pull which will be limited by IW\'s RAM limit. \\n\\t When a thread finishes indexing a document and realizes the pool has been exhausted, it flushes its ThreadState.\\n\\t \\n\\t\\t At that moment, that ThreadState is pulled out of the \'active\' list and is flushed. When it\'s done, it reclaims its used buffers and being put again in the active list. \\n\\t\\t New threads that come in will simply pick a ThreadState from the pool (but we\'ll bind them to that instance until it\'s flushed) and add documents to them. \\n\\t\\t That way, we hijack an application thread to do the flushing, which is anyway what happens today. \\n\\t \\n\\t \\n \\n\\n\\n That way we are less likely to reach a state like Mike described - \\\"big burst of CPU only\\\" then \\\"big burst of IO only\\\" - and more likely to balance the two. \\n\\n If the application wants to be single threaded, we allow it to be like that all the way through, not introducing more thread allocations. Otherwise, we let it control its concurrency level and use it to our needs.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841120\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841120&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841120\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841120_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841120_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 08:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T08:18:43+0000\'\u003e04\\/Mar\\/10 08:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\\n\u003cp\u003eAlso, in the pull approach, Lucene would introduce another place where it allocates threads.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eWhat I described is not much different from what\'s happening today. DocumentsWriter has already a WaitQueue, that ensures that the docs are written in the right order.\u003c\\/p\u003e\\n\\n\u003cp\u003eI simply tried to suggest a way to refactor our classes... functionally the same as what Mike suggested. I shouldn\'t have said \\\"pulled from\\\" (the queue).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841120_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841120_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 08:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T08:18:43+0000\'\u003e04\\/Mar\\/10 08:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n Also, in the pull approach, Lucene would introduce another place where it allocates threads.  \\n\\n What I described is not much different from what\'s happening today. DocumentsWriter has already a WaitQueue, that ensures that the docs are written in the right order. \\n\\n I simply tried to suggest a way to refactor our classes... functionally the same as what Mike suggested. I shouldn\'t have said \\\"pulled from\\\" (the queue).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841127\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841127&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841127\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841127_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841127_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 08:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T08:48:12+0000\'\u003e04\\/Mar\\/10 08:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eWhat I described is not much different from what\'s happening today.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eMaybe I didn\'t understand then:\u003c\\/p\u003e\\n\u003cblockquote\u003e\\n\u003cp\u003ebasically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eWho adds documents to that queue and what are the DW instances? The way I read it, I understood those are different threads than the application threads. If I misunderstood that, could you please clarify?\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, I thought that each thread writes to different ThreadState does not ensure documents are written in order, but that finally when DW flushes, the different ThreadStates are merged together and one segment is written, somehow restores the orderness ...\u003c\\/p\u003e\\n\\n\u003cp\u003eIf only WaitQueue was documented \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003eI obviously don\'t know that part of the code as well as you. So if I misunderstood your meaning, I\'d appreciate if you clarify it for me. What I would like to avoid is having Lucene allocate indexing threads on its own.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, is my proposal above different than what you suggest?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841127_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841127_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 08:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T08:48:12+0000\'\u003e04\\/Mar\\/10 08:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     What I described is not much different from what\'s happening today.  \\n\\n Maybe I didn\'t understand then: \\n \\n basically a load balancer, that multiple DocumentsWriter instances would pull from as soon as they are done inverting the previous document?  \\n\\n Who adds documents to that queue and what are the DW instances? The way I read it, I understood those are different threads than the application threads. If I misunderstood that, could you please clarify? \\n\\n Also, I thought that each thread writes to different ThreadState does not ensure documents are written in order, but that finally when DW flushes, the different ThreadStates are merged together and one segment is written, somehow restores the orderness ... \\n\\n If only WaitQueue was documented  . \\n\\n I obviously don\'t know that part of the code as well as you. So if I misunderstood your meaning, I\'d appreciate if you clarify it for me. What I would like to avoid is having Lucene allocate indexing threads on its own. \\n\\n Also, is my proposal above different than what you suggest?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841135\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841135&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841135\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841135_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841135_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 09:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T09:11:47+0000\'\u003e04\\/Mar\\/10 09:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eSorry - after reading my comment again I can see why it was confusing. Loadbalancer wasn\'t a very good analogy.\u003c\\/p\u003e\\n\\n\u003cp\u003eI totally agree that Lucene should still piggyback on the application\'s threads and not start its own thread for document inversion.\u003c\\/p\u003e\\n\\n\u003cp\u003eToday, as you said, does the DocumentsWriter manage a certain number of thread states, has the WaitQueue, and its own memory management.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhat I was thinking was that it would be simpler if the DocumentsWriter was only used by a single thread. The IndexWriter would have multiple DocumentsWriters and do the thread binding (+waitqueue). This would make the code in DocumentsWriter and the downstream classes simpler. The side-effect is that each DocumentsWriter would manage its own memory. \u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\\n\u003cp\u003eAlso, I thought that each thread writes to different ThreadState does not ensure documents are written in order, but that finally when DW flushes, the different ThreadStates are merged together and one segment is written, somehow restores the orderness ...\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eStored fields are written to an on-disk stream (docstore) in order. The WaitQueue takes care of finishing the docs in the right order. \u003cbr\\/\u003e\\nThe postings are written into TermHashes per threadstate in parallel. The doc ids are in increasing order, but can have gaps. E.g. Threadstate 1 inverts doc 1 and 3, Threadstate 2 inverts doc 2. When it\'s time to flush the whole buffer these different TermHash postingslists get interleaved.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841135_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841135_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 09:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T09:11:47+0000\'\u003e04\\/Mar\\/10 09:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Sorry - after reading my comment again I can see why it was confusing. Loadbalancer wasn\'t a very good analogy. \\n\\n I totally agree that Lucene should still piggyback on the application\'s threads and not start its own thread for document inversion. \\n\\n Today, as you said, does the DocumentsWriter manage a certain number of thread states, has the WaitQueue, and its own memory management. \\n\\n What I was thinking was that it would be simpler if the DocumentsWriter was only used by a single thread. The IndexWriter would have multiple DocumentsWriters and do the thread binding (+waitqueue). This would make the code in DocumentsWriter and the downstream classes simpler. The side-effect is that each DocumentsWriter would manage its own memory.  \\n\\n \\n Also, I thought that each thread writes to different ThreadState does not ensure documents are written in order, but that finally when DW flushes, the different ThreadStates are merged together and one segment is written, somehow restores the orderness ...  \\n\\n Stored fields are written to an on-disk stream (docstore) in order. The WaitQueue takes care of finishing the docs in the right order.  \\nThe postings are written into TermHashes per threadstate in parallel. The doc ids are in increasing order, but can have gaps. E.g. Threadstate 1 inverts doc 1 and 3, Threadstate 2 inverts doc 2. When it\'s time to flush the whole buffer these different TermHash postingslists get interleaved.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841140\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841140&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841140\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841140_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841140_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 09:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T09:22:48+0000\'\u003e04\\/Mar\\/10 09:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eOk so I think I understand now. You propose to change IW to bind a Thread to a DW, instead of that being done inside DW. And therefore it will simplify DW\'s code ... I wonder if that won\'t complicate IW code in return? Perhaps we\'ll gain a lot of simplification on DW, so a bit of complexity on IW will be ok.\u003c\\/p\u003e\\n\\n\u003cp\u003eIf we do that .. why not renaming DW to SegmentWriter? If each DW will eventually flush its own Segment, the name would make more sense?\u003c\\/p\u003e\\n\\n\u003cp\u003eBTW, I was thinking that an application can emulate this sort of thing even today (well ... to some extent - w\\/o deletes). It can create an IW for each indexing thread and at the end call addIndexes. What we\'d need to introduce on IW to make it efficient though is something like addRawIndexes, which will just update the segments file about the new segments, but won\'t attempt to merge them and clean deletes out of them.\u003cbr\\/\u003e\\nI think I want this API anyway for being able to add segments faster to an index, if e.g. you don\'t care about the merges at the moment ... but that is separate issue.\u003c\\/p\u003e\\n\\n\u003cp\u003eThen I think what I proposed is more or less the same as you propose, therefore I\'m fine with that approach. When a DW\\/SW realizes it exhausted its memory pool, it just flushes and new threads will bind to other DW\\/SW.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks for the explanation on WaitQueue.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841140_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841140_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 09:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T09:22:48+0000\'\u003e04\\/Mar\\/10 09:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Ok so I think I understand now. You propose to change IW to bind a Thread to a DW, instead of that being done inside DW. And therefore it will simplify DW\'s code ... I wonder if that won\'t complicate IW code in return? Perhaps we\'ll gain a lot of simplification on DW, so a bit of complexity on IW will be ok. \\n\\n If we do that .. why not renaming DW to SegmentWriter? If each DW will eventually flush its own Segment, the name would make more sense? \\n\\n BTW, I was thinking that an application can emulate this sort of thing even today (well ... to some extent - w\\/o deletes). It can create an IW for each indexing thread and at the end call addIndexes. What we\'d need to introduce on IW to make it efficient though is something like addRawIndexes, which will just update the segments file about the new segments, but won\'t attempt to merge them and clean deletes out of them. \\nI think I want this API anyway for being able to add segments faster to an index, if e.g. you don\'t care about the merges at the moment ... but that is separate issue. \\n\\n Then I think what I proposed is more or less the same as you propose, therefore I\'m fine with that approach. When a DW\\/SW realizes it exhausted its memory pool, it just flushes and new threads will bind to other DW\\/SW. \\n\\n Thanks for the explanation on WaitQueue.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841193\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841193&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841193\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"earwin\\\" id=\\\"commentauthor_12841193_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=earwin\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"earwin\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Earwin Burrfoot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841193_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 11:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T11:24:51+0000\'\u003e04\\/Mar\\/10 11:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eI wonder if that won\'t complicate IW code in return? Perhaps we\'ll gain a lot of simplification on DW, so a bit of complexity on IW will be ok.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\u003cp\u003eThat will get rid of all that *PerThread insanity for each DW component, if I\'m getting it right. That\'s -13 classes. Yay for the issue!\u003c\\/p\u003e\\n\\n\u003cp\u003eOn a random sidenote, can we group things like these into subpackages? Having 132 files in oal.index is somewhat intimidating when trying to read\\/understand things.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"earwin\\\" id=\\\"commentauthor_12841193_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=earwin\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"earwin\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Earwin Burrfoot\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841193_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 11:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T11:24:51+0000\'\u003e04\\/Mar\\/10 11:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     I wonder if that won\'t complicate IW code in return? Perhaps we\'ll gain a lot of simplification on DW, so a bit of complexity on IW will be ok.  \\n That will get rid of all that *PerThread insanity for each DW component, if I\'m getting it right. That\'s -13 classes. Yay for the issue! \\n\\n On a random sidenote, can we group things like these into subpackages? Having 132 files in oal.index is somewhat intimidating when trying to read\\/understand things.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841225\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841225&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841225\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841225_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841225_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 12:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T12:58:07+0000\'\u003e04\\/Mar\\/10 12:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI agree IW should not spawn its own threads.  It should piggy back on\u003cbr\\/\u003e\\nincoming threads.\u003c\\/p\u003e\\n\\n\u003cp\u003eOn whether we can remove the \\\"perThread\\\" layer throughout the chain &#8211;\u003cbr\\/\u003e\\nthat would be compelling.  But, we should scrutinize what that layer\u003cbr\\/\u003e\\ndoes throughout the current chain to assess what we might lose.\u003c\\/p\u003e\\n\\n\u003cp\u003eBut, I was proposing a bigger change (call it \\\"private RAM segments\\\"):\u003cbr\\/\u003e\\nthere would be multiple DWs, each one writing to its own private RAM\u003cbr\\/\u003e\\nsegment (each one getting private docID assignment) \u003cb\u003eand\u003c\\/b\u003e its own doc\u003cbr\\/\u003e\\nstores.\u003c\\/p\u003e\\n\\n\u003cp\u003eThere would be no more WaitQueue in IW.\u003c\\/p\u003e\\n\\n\u003cp\u003eEach DW would flush its own segment privately.  They would not all\u003cbr\\/\u003e\\nflush at once (merging their postings) like we must do today because\u003cbr\\/\u003e\\nthey \\\"share\\\" a single docID space.\u003c\\/p\u003e\\n\\n\u003cp\u003eAs I understand it, this would be step towards how Lucy handles\u003cbr\\/\u003e\\nconcurrency during indexing.  Ie, it\'d make the DWs nearly fully\u003cbr\\/\u003e\\nindependent from one another, and then IW is just there to dispatch\\/do\u003cbr\\/\u003e\\nmerging\\/etc.  (In Lucy each writer is a separate process, I think &#8211;\u003cbr\\/\u003e\\nVERY independent).\u003c\\/p\u003e\\n\\n\u003cp\u003eWe could do both changes, too (remove the \\\"perThread\\\" layer of\u003cbr\\/\u003e\\nindexing chaing and switch to private RAM segments) &#8211; I think they\u003cbr\\/\u003e\\nare actually orthogonal.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eThe other downside is that you would have to buffer deleted docs and queries separately for each thread state, because you have to keep the private docID? So that would nee a bit more memory.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eRight.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eMike, good one! Would having a doc id stream per thread make implementing a searchable RAM buffer easier?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eYes &#8211; they would just appear like sub segments.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eI hope we won\'t lose monotonic docIDs for a singlethreaded indexation somewhere along that path.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eWe won\'t.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\\n\u003cp\u003eInstead, I prefer to take advantage of the application\'s concurrency level in the following way:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eEach thread will continue to write documents to a ThreadState. We\'ll allow changing the MAX_LEVEL, so if an app wants to get more concurrency, it can.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eMAX_LEVEL will set the number of ThreadState objects available.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eAll threads will obtain memory buffers from a pull which will be limited by IW\'s RAM limit.\u003c\\/li\u003e\\n\\t\u003cli\u003eWhen a thread finishes indexing a document and realizes the pool has been exhausted, it flushes its ThreadState.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eAt that moment, that ThreadState is pulled out of the \'active\' list and is flushed. When it\'s done, it reclaims its used buffers and being put again in the active list.\u003c\\/li\u003e\\n\\t\u003cli\u003eNew threads that come in will simply pick a ThreadState from the pool (but we\'ll bind them to that instance until it\'s flushed) and add documents to them.\u003c\\/li\u003e\\n\\t\u003cli\u003eThat way, we hijack an application thread to do the flushing, which is anyway what happens today.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\u003c\\/blockquote\u003e\\n\\n\u003cp\u003e+1 &#8211; this I think matches what I was thinking.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eIf only WaitQueue was documented\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eSorry \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/sad.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eBut WaitQueue would go away with this change.  We would no longer have\u003cbr\\/\u003e\\nshared doc stores!\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841225_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841225_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 12:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T12:58:07+0000\'\u003e04\\/Mar\\/10 12:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I agree IW should not spawn its own threads.  It should piggy back on \\nincoming threads. \\n\\n On whether we can remove the \\\"perThread\\\" layer throughout the chain &#8211; \\nthat would be compelling.  But, we should scrutinize what that layer \\ndoes throughout the current chain to assess what we might lose. \\n\\n But, I was proposing a bigger change (call it \\\"private RAM segments\\\"): \\nthere would be multiple DWs, each one writing to its own private RAM \\nsegment (each one getting private docID assignment)  and  its own doc \\nstores. \\n\\n There would be no more WaitQueue in IW. \\n\\n Each DW would flush its own segment privately.  They would not all \\nflush at once (merging their postings) like we must do today because \\nthey \\\"share\\\" a single docID space. \\n\\n As I understand it, this would be step towards how Lucy handles \\nconcurrency during indexing.  Ie, it\'d make the DWs nearly fully \\nindependent from one another, and then IW is just there to dispatch\\/do \\nmerging\\/etc.  (In Lucy each writer is a separate process, I think &#8211; \\nVERY independent). \\n\\n We could do both changes, too (remove the \\\"perThread\\\" layer of \\nindexing chaing and switch to private RAM segments) &#8211; I think they \\nare actually orthogonal. \\n\\n  The other downside is that you would have to buffer deleted docs and queries separately for each thread state, because you have to keep the private docID? So that would nee a bit more memory.  \\n\\n Right. \\n\\n  Mike, good one! Would having a doc id stream per thread make implementing a searchable RAM buffer easier?  \\n\\n Yes &#8211; they would just appear like sub segments. \\n\\n  I hope we won\'t lose monotonic docIDs for a singlethreaded indexation somewhere along that path.  \\n\\n We won\'t. \\n\\n \\n Instead, I prefer to take advantage of the application\'s concurrency level in the following way: \\n\\n \\n\\t Each thread will continue to write documents to a ThreadState. We\'ll allow changing the MAX_LEVEL, so if an app wants to get more concurrency, it can. \\n \\n \\n\\t MAX_LEVEL will set the number of ThreadState objects available. \\n \\n \\n\\t All threads will obtain memory buffers from a pull which will be limited by IW\'s RAM limit. \\n\\t When a thread finishes indexing a document and realizes the pool has been exhausted, it flushes its ThreadState. \\n \\n \\n\\t At that moment, that ThreadState is pulled out of the \'active\' list and is flushed. When it\'s done, it reclaims its used buffers and being put again in the active list. \\n\\t New threads that come in will simply pick a ThreadState from the pool (but we\'ll bind them to that instance until it\'s flushed) and add documents to them. \\n\\t That way, we hijack an application thread to do the flushing, which is anyway what happens today. \\n \\n \\n\\n +1 &#8211; this I think matches what I was thinking. \\n\\n  If only WaitQueue was documented  \\n\\n Sorry   \\n\\n But WaitQueue would go away with this change.  We would no longer have \\nshared doc stores!              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841235\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841235&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841235\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841235_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841235_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 13:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T13:21:37+0000\'\u003e04\\/Mar\\/10 13:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ePerhaps instead of buffering the delete Terms\\/Queries somewhere central, when a delete by term is performed by a certain DW, it can register it immediately on all existing DWs. Each DW will record the doc ID up until which this term delete should be executed, and when it\'s its time to flush, will apply all the deletes that were accumulated on itself. It\'ll be like doing a Parallel segment deletes (but maybe I\'m too into Parallel Indexing \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e).\u003c\\/p\u003e\\n\\n\u003cp\u003eThis should not affect any documents that were added to any DW after the delete happened, and if we simply do it (sycned) across all active DWs, I think we should be fine?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841235_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841235_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 13:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T13:21:37+0000\'\u003e04\\/Mar\\/10 13:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Perhaps instead of buffering the delete Terms\\/Queries somewhere central, when a delete by term is performed by a certain DW, it can register it immediately on all existing DWs. Each DW will record the doc ID up until which this term delete should be executed, and when it\'s its time to flush, will apply all the deletes that were accumulated on itself. It\'ll be like doing a Parallel segment deletes (but maybe I\'m too into Parallel Indexing  ). \\n\\n This should not affect any documents that were added to any DW after the delete happened, and if we simply do it (sycned) across all active DWs, I think we should be fine?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841342\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841342&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841342\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12841342_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841342_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 15:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T15:44:02+0000\'\u003e04\\/Mar\\/10 15:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eBut WaitQueue would go away with this change.  We would no longer have shared doc stores!\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eCool, most of the DW code is intuitive except the shared doc stores because it\'s hard to when see when a doc store ends.  Also the interleaving is a bit difficult to visualize.  I look forward to checking out DW after this change.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12841342_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841342_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 15:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T15:44:02+0000\'\u003e04\\/Mar\\/10 15:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     But WaitQueue would go away with this change.  We would no longer have shared doc stores!  \\n\\n Cool, most of the DW code is intuitive except the shared doc stores because it\'s hard to when see when a doc store ends.  Also the interleaving is a bit difficult to visualize.  I look forward to checking out DW after this change.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841347\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841347&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841347\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841347_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841347_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 15:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T15:50:54+0000\'\u003e04\\/Mar\\/10 15:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eYes, I think each DW will have to record its own buffered delete Term\\/Query, mapping to its docID at the time the delete arrived.\u003c\\/p\u003e\\n\\n\u003cp\u003eSyncing across all of them would work but may be overkill.  I think we could instead have a lock free collection (need not even be FIFO &#8211; the order doesn\'t matter) into which we add all Term\\/Query that are deleted.  Then, any time a thread hits that DW to add a document, it must first service that queue, by popping out all Term\\/Query stored in it and enrolling them the un-synchronized map of Term\\/Query -&gt; docID).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841347_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841347_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 15:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T15:50:54+0000\'\u003e04\\/Mar\\/10 15:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Yes, I think each DW will have to record its own buffered delete Term\\/Query, mapping to its docID at the time the delete arrived. \\n\\n Syncing across all of them would work but may be overkill.  I think we could instead have a lock free collection (need not even be FIFO &#8211; the order doesn\'t matter) into which we add all Term\\/Query that are deleted.  Then, any time a thread hits that DW to add a document, it must first service that queue, by popping out all Term\\/Query stored in it and enrolling them the un-synchronized map of Term\\/Query -&gt; docID).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841388\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841388&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841388\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841388_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841388_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 17:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T17:06:58+0000\'\u003e04\\/Mar\\/10 17:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\\n\u003cp\u003eBut, I was proposing a bigger change (call it \\\"private RAM segments\\\"):\u003cbr\\/\u003e\\nthere would be multiple DWs, each one writing to its own private RAM\u003cbr\\/\u003e\\nsegment (each one getting private docID assignment) and its own doc\u003cbr\\/\u003e\\nstores.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eCool! I wasn\'t sure if you wanted to give them private doc stores too. +1, I like it.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841388_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841388_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 17:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T17:06:58+0000\'\u003e04\\/Mar\\/10 17:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n But, I was proposing a bigger change (call it \\\"private RAM segments\\\"): \\nthere would be multiple DWs, each one writing to its own private RAM \\nsegment (each one getting private docID assignment) and its own doc \\nstores.  \\n\\n Cool! I wasn\'t sure if you wanted to give them private doc stores too. +1, I like it. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841395\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841395&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841395\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841395_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841395_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 17:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T17:31:13+0000\'\u003e04\\/Mar\\/10 17:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eCool! I wasn\'t sure if you wanted to give them private doc stores too. +1, I like it.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI wasn\'t sure either \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/wink.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e  Ie, I forgot about that aspect of my proposal until it was raised in the discussion... but I think that\'d be necessary.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis will be a perf hit, when building up a big new index.  But since doc stores now merge by bulk copy (when there are no deletions) hopefully the impact isn\'t too much.  And, hopefully it\'s more than made up for by the improvement in IO\\/CPU interleaved concurrency.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'ll work out a patch to at least make the hardwired 5 configurable... but does anyone out there wanna work out the \\\"private RAM segments\\\"?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841395_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841395_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 17:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T17:31:13+0000\'\u003e04\\/Mar\\/10 17:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Cool! I wasn\'t sure if you wanted to give them private doc stores too. +1, I like it.  \\n\\n I wasn\'t sure either    Ie, I forgot about that aspect of my proposal until it was raised in the discussion... but I think that\'d be necessary. \\n\\n This will be a perf hit, when building up a big new index.  But since doc stores now merge by bulk copy (when there are no deletions) hopefully the impact isn\'t too much.  And, hopefully it\'s more than made up for by the improvement in IO\\/CPU interleaved concurrency. \\n\\n I\'ll work out a patch to at least make the hardwired 5 configurable... but does anyone out there wanna work out the \\\"private RAM segments\\\"?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841407\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841407&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841407\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841407_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841407_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 17:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T17:47:35+0000\'\u003e04\\/Mar\\/10 17:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eYes, I think each DW will have to record its own buffered delete Term\\/Query, mapping to its docID at the time the delete arrived. \u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI think in the future deletes in DW could work like this:\u003c\\/p\u003e\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eDW keeps of course track of a private sequence id, which gets incremented in the add, delete, update calls\u003c\\/li\u003e\\n\\t\u003cli\u003ea DW has a getReader() call, the reader can search the ram buffer\u003c\\/li\u003e\\n\\t\u003cli\u003ewhen DW.gerReader() gets called, then the new reader remembers the current seqID at the time it was opened - let\'s call it RAMReader.seqID; if such a reader gets reopened, simply its seqID gets updated.\u003c\\/li\u003e\\n\\t\u003cli\u003ewe keep an growing int array with the size of DW\'s maxDoc, which replaces the usual deletes bitset\u003c\\/li\u003e\\n\\t\u003cli\u003ewhen DW.updateDocument() or .deleteDocument() needs to delete a doc we do that right away, before inverting the new doc. We can do that by running a query using a RAMReader to find all docs that must be deleted. Instead of flipping a bit in a bitset, for each hit we now keep track of when it was deleted:\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e\u003cspan class=\\\"code-comment\\\"\u003e\\/\\/ init each slot in deletes array with -1\\n\u003c\\/span\u003e\u003cspan class=\\\"code-keyword\\\"\u003estatic\u003c\\/span\u003e \u003cspan class=\\\"code-keyword\\\"\u003efinal\u003c\\/span\u003e \u003cspan class=\\\"code-object\\\"\u003eint\u003c\\/span\u003e NOT_DELETED = \u003cspan class=\\\"code-object\\\"\u003eInteger\u003c\\/span\u003e.MAX_INT;\\n...\\nArrays.fill(deletes, NOT_DELETED);\\n\\n...\\n\\n\u003cspan class=\\\"code-keyword\\\"\u003epublic\u003c\\/span\u003e void deleteDocument(Query q) {\\n  reopen RAMReader\\n  run query q using RAMReader\\n  \u003cspan class=\\\"code-keyword\\\"\u003efor\u003c\\/span\u003e each hit {\\n    \u003cspan class=\\\"code-object\\\"\u003eint\u003c\\/span\u003e hitDocId = ...\\n    \u003cspan class=\\\"code-keyword\\\"\u003eif\u003c\\/span\u003e (deletes[hitDocId] == NOT_DELETED) {\\n      deletes[hitDocId] = DW.seqID;\\n    }\\n  }\\n...\\n  DW.seqID++;\\n}\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eNow no matter of how often you (re)open RAMReaders, they can share the deletes array. No cloning like with the BitSet approach would be necessary:\u003c\\/p\u003e\\n\\n\u003cp\u003eWhen the RAMReader iterates posting lists it\'s as simple as this to treat deletes docs correctly. Instead of doing this in RAMTermDocs.next():\u003c\\/p\u003e\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e  \u003cspan class=\\\"code-keyword\\\"\u003eif\u003c\\/span\u003e (deletedDocsBitSet.get(doc)) {\\n    skip \u003cspan class=\\\"code-keyword\\\"\u003ethis\u003c\\/span\u003e doc\\n }\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003ewe can now do:\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e  \u003cspan class=\\\"code-keyword\\\"\u003eif\u003c\\/span\u003e (deletes[doc] &lt; ramReader.seqID) {\\n    skip \u003cspan class=\\\"code-keyword\\\"\u003ethis\u003c\\/span\u003e doc\\n  }\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eHere is an example:\u003cbr\\/\u003e\\n1. Add 3 docs with DW.addDocument() \u003cbr\\/\u003e\\n2. User opens ramReader_a\u003cbr\\/\u003e\\n3. Delete doc 1\u003cbr\\/\u003e\\n4. User opens ramReader_b\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eAfter 1: DW.seqID = 2; deletes[]=\u003c\\/p\u003e\\n{MAX_INT, MAX_INT, MAX_INT}\\n\u003cp\u003eAfter 2: ramReader_a.seqID = 2\u003cbr\\/\u003e\\nAfter 3: DW.seqID = 3; deletes[]=\u003c\\/p\u003e\\n{MAX_INT, 2, MAX_INT}\\n\u003cp\u003eAfter 3: ramReader_b.seqID = 3\u003c\\/p\u003e\\n\\n\u003cp\u003eNote that both ramReader_a and ramReader_b share the same deletes[] array. Now when ramReader_a is used to read posting lists, it will not treat doc 1 as deleted, because (deletes\u003cspan class=\\\"error\\\"\u003e&#91;1&#93;\u003c\\/span\u003e &lt; ramReader_a.seqID) = (2 &lt; 2) = false; But ramReader_b will see it as deleted, because (deletes\u003cspan class=\\\"error\\\"\u003e&#91;1&#93;\u003c\\/span\u003e &lt; ramReader_b.seqID) = (2 &lt; 3) = true.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhat do you think about this approach for the future when we have a searchable DW buffer?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841407_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841407_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 17:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T17:47:35+0000\'\u003e04\\/Mar\\/10 17:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Yes, I think each DW will have to record its own buffered delete Term\\/Query, mapping to its docID at the time the delete arrived.   \\n\\n I think in the future deletes in DW could work like this: \\n \\n\\t DW keeps of course track of a private sequence id, which gets incremented in the add, delete, update calls \\n\\t a DW has a getReader() call, the reader can search the ram buffer \\n\\t when DW.gerReader() gets called, then the new reader remembers the current seqID at the time it was opened - let\'s call it RAMReader.seqID; if such a reader gets reopened, simply its seqID gets updated. \\n\\t we keep an growing int array with the size of DW\'s maxDoc, which replaces the usual deletes bitset \\n\\t when DW.updateDocument() or .deleteDocument() needs to delete a doc we do that right away, before inverting the new doc. We can do that by running a query using a RAMReader to find all docs that must be deleted. Instead of flipping a bit in a bitset, for each hit we now keep track of when it was deleted: \\n \\n\\n\\n  \\n  \\/\\/ init each slot in deletes array with -1\\n  static   final   int  NOT_DELETED =  Integer .MAX_INT;\\n...\\nArrays.fill(deletes, NOT_DELETED);\\n\\n...\\n\\n public  void deleteDocument(Query q) {\\n  reopen RAMReader\\n  run query q using RAMReader\\n   for  each hit {\\n     int  hitDocId = ...\\n     if  (deletes[hitDocId] == NOT_DELETED) {\\n      deletes[hitDocId] = DW.seqID;\\n    }\\n  }\\n...\\n  DW.seqID++;\\n}\\n \\n  \\n\\n Now no matter of how often you (re)open RAMReaders, they can share the deletes array. No cloning like with the BitSet approach would be necessary: \\n\\n When the RAMReader iterates posting lists it\'s as simple as this to treat deletes docs correctly. Instead of doing this in RAMTermDocs.next(): \\n  \\n    if  (deletedDocsBitSet.get(doc)) {\\n    skip  this  doc\\n }\\n \\n  \\n\\n we can now do: \\n\\n  \\n    if  (deletes[doc] &lt; ramReader.seqID) {\\n    skip  this  doc\\n  }\\n \\n  \\n\\n Here is an example: \\n1. Add 3 docs with DW.addDocument()  \\n2. User opens ramReader_a \\n3. Delete doc 1 \\n4. User opens ramReader_b \\n\\n\\n After 1: DW.seqID = 2; deletes[]= \\n{MAX_INT, MAX_INT, MAX_INT}\\n After 2: ramReader_a.seqID = 2 \\nAfter 3: DW.seqID = 3; deletes[]= \\n{MAX_INT, 2, MAX_INT}\\n After 3: ramReader_b.seqID = 3 \\n\\n Note that both ramReader_a and ramReader_b share the same deletes[] array. Now when ramReader_a is used to read posting lists, it will not treat doc 1 as deleted, because (deletes &#91;1&#93;  &lt; ramReader_a.seqID) = (2 &lt; 2) = false; But ramReader_b will see it as deleted, because (deletes &#91;1&#93;  &lt; ramReader_b.seqID) = (2 &lt; 3) = true. \\n\\n What do you think about this approach for the future when we have a searchable DW buffer?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841463\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841463&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841463\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841463_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841463_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 19:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T19:24:18+0000\'\u003e04\\/Mar\\/10 19:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWhat about the following scenario:\u003c\\/p\u003e\\n\u003col\u003e\\n\\t\u003cli\u003eA document is added w\\/ term A to DW1\u003c\\/li\u003e\\n\\t\u003cli\u003eA document is added w\\/ term A to DW2 (by another thread)\u003c\\/li\u003e\\n\\t\u003cli\u003eA deleteDocuments(Term-A) is issued against DW1 (could be even 3, where A does not exist)\u003c\\/li\u003e\\n\u003c\\/ol\u003e\\n\\n\\n\u003cp\u003eI thought that when (3) happens, the delete-by-term needs to be issued against all DWs, so that later when they apply their deletes they\'ll \u003cb\u003eremember\u003c\\/b\u003e to do so. Issuing that against all DWs will record the docID of each DW up until which the delete should apply.\u003c\\/p\u003e\\n\\n\u003cp\u003eWe could move to doing the delete right-away, by reopening a DW reader, and we could move to storing deletes in int[] rather than bit set. But I\'m not sure I understand how your proposal will handle the scenario I\'ve described.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, I don\'t see the advantage of moving to store the deletes in int[] rather than bitset ... is it just to avoid calling the get(doc)?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841463_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841463_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 19:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T19:24:18+0000\'\u003e04\\/Mar\\/10 19:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    What about the following scenario: \\n \\n\\t A document is added w\\/ term A to DW1 \\n\\t A document is added w\\/ term A to DW2 (by another thread) \\n\\t A deleteDocuments(Term-A) is issued against DW1 (could be even 3, where A does not exist) \\n \\n\\n\\n I thought that when (3) happens, the delete-by-term needs to be issued against all DWs, so that later when they apply their deletes they\'ll  remember  to do so. Issuing that against all DWs will record the docID of each DW up until which the delete should apply. \\n\\n We could move to doing the delete right-away, by reopening a DW reader, and we could move to storing deletes in int[] rather than bit set. But I\'m not sure I understand how your proposal will handle the scenario I\'ve described. \\n\\n Also, I don\'t see the advantage of moving to store the deletes in int[] rather than bitset ... is it just to avoid calling the get(doc)?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841545\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841545&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841545\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841545_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841545_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 21:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T21:43:50+0000\'\u003e04\\/Mar\\/10 21:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\\n\u003cp\u003eI thought that when (3) happens, the delete-by-term needs to be issued against all DWs, so that later when they apply their deletes they\'ll remember to do so. Issuing that against all DWs will record the docID of each DW up until which the delete should apply.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eYes, you still need to apply deletes on all DWs. My approach is not different in that regard.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\\n\u003cp\u003eAlso, I don\'t see the advantage of moving to store the deletes in int[] rather than bitset ... is it just to avoid calling the get(doc)?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eThe big advantage is that all (re)opened readers can share the single int[] array. If you use a bitset you need to clone it for each reader. With the int[] reopening becomes basically free from a deletes perspective.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841545_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841545_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 21:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T21:43:50+0000\'\u003e04\\/Mar\\/10 21:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n I thought that when (3) happens, the delete-by-term needs to be issued against all DWs, so that later when they apply their deletes they\'ll remember to do so. Issuing that against all DWs will record the docID of each DW up until which the delete should apply.  \\n\\n Yes, you still need to apply deletes on all DWs. My approach is not different in that regard. \\n\\n \\n Also, I don\'t see the advantage of moving to store the deletes in int[] rather than bitset ... is it just to avoid calling the get(doc)?  \\n\\n The big advantage is that all (re)opened readers can share the single int[] array. If you use a bitset you need to clone it for each reader. With the int[] reopening becomes basically free from a deletes perspective.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841617\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841617&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841617\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841617_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841617_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 23:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T23:49:58+0000\'\u003e04\\/Mar\\/10 23:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eThe big advantage is that all (re)opened readers can share the single int[] array.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eDirty reads will be a problem with sharing the array. An AtomicIntegerArray could be used. We need to experiment how expensive that would be. \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841617_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841617_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Mar\\/10 23:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-04T23:49:58+0000\'\u003e04\\/Mar\\/10 23:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     The big advantage is that all (re)opened readers can share the single int[] array.  \\n\\n Dirty reads will be a problem with sharing the array. An AtomicIntegerArray could be used. We need to experiment how expensive that would be.               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841697\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841697&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841697\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841697_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841697_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 04:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T04:13:07+0000\'\u003e05\\/Mar\\/10 04:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eBut if each DW maintains its own doc IDs, separately from the others, what will be stored in the int[]? DW1 deleted docID 0 (its 0) and DW4 deleted the same. The two documents are not the same one ... no?\u003c\\/p\u003e\\n\\n\u003cp\u003eWon\'t this complicate the entire solution? What I liked about keeping each DW separate (and call it SegmentWriter) is that it really operates on its own. When a delete happens on IW, it is synced so that it could be registered on all DWs. But besides that, the DWs don\'t know about each other nor care. Code should be really simple that way - the only thing that will be shared is the pool of buffers.\u003c\\/p\u003e\\n\\n\u003cp\u003eI guess I\'m missing something, because you\'re far more knowledgeable in this code than I am ... \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841697_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841697_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 04:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T04:13:07+0000\'\u003e05\\/Mar\\/10 04:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    But if each DW maintains its own doc IDs, separately from the others, what will be stored in the int[]? DW1 deleted docID 0 (its 0) and DW4 deleted the same. The two documents are not the same one ... no? \\n\\n Won\'t this complicate the entire solution? What I liked about keeping each DW separate (and call it SegmentWriter) is that it really operates on its own. When a delete happens on IW, it is synced so that it could be registered on all DWs. But besides that, the DWs don\'t know about each other nor care. Code should be really simple that way - the only thing that will be shared is the pool of buffers. \\n\\n I guess I\'m missing something, because you\'re far more knowledgeable in this code than I am ...                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841744\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841744&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841744\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841744_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841744_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 08:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T08:18:44+0000\'\u003e05\\/Mar\\/10 08:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\\n\u003cp\u003eBut if each DW maintains its own doc IDs, separately from the others, what will be stored in the int[]? DW1 deleted docID 0 (its 0) and DW4 deleted the same. The two documents are not the same one ... no? \u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eIn DW you don\'t delete by docID. You can only delete by term or query. You have to run the (term)query in all DWs to determine if any of the DWs have one or more matching docs that have to be deleted.\u003c\\/p\u003e\\n\\n\u003cp\u003eToday the queries and\\/or terms are buffered, along with the maxDocID at the time the delete or update was called. They are applied just after the DW buffer was flushed to a segment, be cause that\'s the first time the docs are searchable and the delete queries can be executed.\u003c\\/p\u003e\\n\\n\u003cp\u003eIn the future, when we can search the DW buffer(s), you can apply the deletes right away. Using this int[] approach for deletes will avoid the need of cloning bitsets in each reopen. \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841744_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841744_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 08:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T08:18:44+0000\'\u003e05\\/Mar\\/10 08:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n But if each DW maintains its own doc IDs, separately from the others, what will be stored in the int[]? DW1 deleted docID 0 (its 0) and DW4 deleted the same. The two documents are not the same one ... no?   \\n\\n In DW you don\'t delete by docID. You can only delete by term or query. You have to run the (term)query in all DWs to determine if any of the DWs have one or more matching docs that have to be deleted. \\n\\n Today the queries and\\/or terms are buffered, along with the maxDocID at the time the delete or update was called. They are applied just after the DW buffer was flushed to a segment, be cause that\'s the first time the docs are searchable and the delete queries can be executed. \\n\\n In the future, when we can search the DW buffer(s), you can apply the deletes right away. Using this int[] approach for deletes will avoid the need of cloning bitsets in each reopen.               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841745\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841745&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841745\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841745_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841745_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 08:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T08:27:21+0000\'\u003e05\\/Mar\\/10 08:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\\n\u003cp\u003eWon\'t this complicate the entire solution? What I liked about keeping each DW separate (and call it SegmentWriter) is that it really operates on its own. When a delete happens on IW, it is synced so that it could be registered on all DWs. But besides that, the DWs don\'t know about each other nor care. Code should be really simple that way - the only thing that will be shared is the pool of buffers.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eWhat I\'m proposing is not different or makes it more complicated. Either way, you have to apply all deletes on all DWs, because you delete by query or term.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis might not be the right time for this proposal, because it\'ll only work with searchable DW buffers. But I wanted to mention this idea already, so that we can keep it in mind. And hopefully we can work on searchable DW buffers soon.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\\n\u003cp\u003ebut does anyone out there wanna work out the \\\"private RAM segments\\\"?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI would like to try to help, but I\'m likely not going to have enough time right now to write an entire patch for this big change myself.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841745_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841745_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 08:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T08:27:21+0000\'\u003e05\\/Mar\\/10 08:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n Won\'t this complicate the entire solution? What I liked about keeping each DW separate (and call it SegmentWriter) is that it really operates on its own. When a delete happens on IW, it is synced so that it could be registered on all DWs. But besides that, the DWs don\'t know about each other nor care. Code should be really simple that way - the only thing that will be shared is the pool of buffers.  \\n\\n What I\'m proposing is not different or makes it more complicated. Either way, you have to apply all deletes on all DWs, because you delete by query or term. \\n\\n This might not be the right time for this proposal, because it\'ll only work with searchable DW buffers. But I wanted to mention this idea already, so that we can keep it in mind. And hopefully we can work on searchable DW buffers soon. \\n\\n \\n but does anyone out there wanna work out the \\\"private RAM segments\\\"?  \\n\\n I would like to try to help, but I\'m likely not going to have enough time right now to write an entire patch for this big change myself.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841800\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841800&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841800\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841800_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841800_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 10:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T10:23:16+0000\'\u003e05\\/Mar\\/10 10:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eI think in the future deletes in DW could work like this: \u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eThis approach looks great Michael! Allows you to efficiently share a single int[] for deletions across many reopened RAM segment readers. \u003c\\/p\u003e\\n\\n\u003cp\u003eHow will we handle flushing? Ie, when a RAM segment is flushed to disk, it\'d have to remain alive so long as a reader is still using it? Which means we can\'t recycle its buffers until all open readers using it are closed? Or... we could forcefully somehow cut it over to the identical now-on-disk segment? \u003c\\/p\u003e\\n\\n\u003cp\u003eThis is a great approach for speeding up NRT &#8211; NRT readers will no longer have to flush. It\'s similar in spirit to \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-1313\\\" title=\\\"Near Realtime Search (using a built in RAMDirectory)\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-1313\\\"\u003e\u003cdel\u003eLUCENE-1313\u003c\\/del\u003e\u003c\\/a\u003e, but that issue is still flushing segments (but, into an intermediate RAMDir).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12841800_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841800_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 10:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T10:23:16+0000\'\u003e05\\/Mar\\/10 10:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     I think in the future deletes in DW could work like this:   \\n\\n This approach looks great Michael! Allows you to efficiently share a single int[] for deletions across many reopened RAM segment readers.  \\n\\n How will we handle flushing? Ie, when a RAM segment is flushed to disk, it\'d have to remain alive so long as a reader is still using it? Which means we can\'t recycle its buffers until all open readers using it are closed? Or... we could forcefully somehow cut it over to the identical now-on-disk segment?  \\n\\n This is a great approach for speeding up NRT &#8211; NRT readers will no longer have to flush. It\'s similar in spirit to   LUCENE-1313  , but that issue is still flushing segments (but, into an intermediate RAMDir).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841821\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841821&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841821\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841821_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841821_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 11:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T11:34:15+0000\'\u003e05\\/Mar\\/10 11:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMichael - I see that we were on the same page. Probably I misread your description. I know that in IW deletes are applied by Term\\/Query and I thought that that delete should be registered on all DWs so they can apply it later. I\'m glad that you think like that as well.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo about the int[], would that be of the size of the index (flushed and unflushed) segments? Suppose that:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eI\'ve indexed 5 documents, flushed. (IDs 0-4)\u003c\\/li\u003e\\n\\t\u003cli\u003eIndexed 2 on DW1. (IDs 0,1)\u003c\\/li\u003e\\n\\t\u003cli\u003eIndexed 2 on DW2. (IDs 0,1)\u003c\\/li\u003e\\n\\t\u003cli\u003eDelete by term which affects: flushed IDs 1, 4, DW1-0, DW2 - 0, 1\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eWould the int[] be of size 9, and the deleted IDs be 1, 4, 5, 7, 8? How would DW1- be mapped to 5, and DW2-0,1 be mapped to 7 and 8? Will the int[] be initially of size 5 and after DW1 flushes expand to 7, and ID=5 will be set (and afterwards expand to 9 with IDs 7,8)? If so then I understand.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhy would using an int[] be any better than sharing a bitset?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841821_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841821_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 11:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T11:34:15+0000\'\u003e05\\/Mar\\/10 11:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Michael - I see that we were on the same page. Probably I misread your description. I know that in IW deletes are applied by Term\\/Query and I thought that that delete should be registered on all DWs so they can apply it later. I\'m glad that you think like that as well. \\n\\n So about the int[], would that be of the size of the index (flushed and unflushed) segments? Suppose that: \\n \\n\\t I\'ve indexed 5 documents, flushed. (IDs 0-4) \\n\\t Indexed 2 on DW1. (IDs 0,1) \\n\\t Indexed 2 on DW2. (IDs 0,1) \\n\\t Delete by term which affects: flushed IDs 1, 4, DW1-0, DW2 - 0, 1 \\n \\n\\n\\n Would the int[] be of size 9, and the deleted IDs be 1, 4, 5, 7, 8? How would DW1- be mapped to 5, and DW2-0,1 be mapped to 7 and 8? Will the int[] be initially of size 5 and after DW1 flushes expand to 7, and ID=5 will be set (and afterwards expand to 9 with IDs 7,8)? If so then I understand. \\n\\n Why would using an int[] be any better than sharing a bitset?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841915\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841915&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841915\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841915_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841915_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 16:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T16:30:06+0000\'\u003e05\\/Mar\\/10 16:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\\n\u003cp\u003eThis is a great approach for speeding up NRT - NRT readers will no longer have to flush. It\'s similar in spirit to \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-1313\\\" title=\\\"Near Realtime Search (using a built in RAMDirectory)\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-1313\\\"\u003e\u003cdel\u003eLUCENE-1313\u003c\\/del\u003e\u003c\\/a\u003e, but that issue is still flushing segments (but, into an intermediate RAMDir).\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI agree! Thinking further about this: Each (re)opened RAM segment reader needs to also remember the maxDoc of the corresponding DW at the time it was (re)opened. This way we can prevent a RAM reader to read postinglists beyond that maxDoc, even if the writer thread keeps building the lists in parallel. This allows us to guarantee the point-in-time requirements.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, the PostingList objects we store in the TermHash already contain a lastDocID (if I remember correctly). So when a RAM reader termEnum iterates the dictionary it can skip all terms where term.lastDocID &gt; RAMReader.maxDoc.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt\'s quite neat that all we have to do in reopen then is to update ramReader.maxDoc and ramReader.seqID.\u003c\\/p\u003e\\n\\n\u003cp\u003eOf course one big thing is still missing: keeping the term dictionary sorted. In order to implement the full IndexReader interface, specifically TermEnum, it\'s necessary to give each RAM reader a point-in-time sorted dictionary. At least in one direction, as a TermEnum only seeks forward.\u003c\\/p\u003e\\n\\n\u003cp\u003eI think we have two options here: Either we try to keep the dictionary always sorted, whenever a term is added. I guess then we\'d have to implement a b-tree or something similar?\u003c\\/p\u003e\\n\\n\u003cp\u003eThe second option I can think of is to add a \\\"nextTerm\\\" pointer to TermHash.Postinglist. This allows us to build up a linked list across all terms. When a ramReader is opened we would sort all terms, but not by changing their position in the hash - instead by building the single-linked list in sorted order.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhen a new reader gets (re)opened we need to mergesort the new terms into the linked list. I guess it\'s easy to get this implemented lock-free. E.g. if you have the linked list a-&gt;c, and you want to add b in the middle, you set b-&gt;c before changing a-&gt;c. Then it\'s undefined if an in-flight older reader would see term b. The old reader must not return b, since b was added after the old reader was (re)opened. So either case is fine: either it doesn\'t see b cause the link wasn\'t updated yet, or it sees it but doesn\'t return it, because b.lastDocID&gt;ramReader.maxDoc.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe downside is that we will have to pay the price of sorting in reader.reopen, which however should be cheap if readers are reopened frequently. Not sure though if this linkedlist approach is more or less compelling than something like a btree?\u003c\\/p\u003e\\n\\n\u003cp\u003eBtw: Shall we open a new \\\"searchable DW buffer\\\" issue or continue using this issue for these discussions?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841915_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841915_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 16:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T16:30:06+0000\'\u003e05\\/Mar\\/10 16:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n This is a great approach for speeding up NRT - NRT readers will no longer have to flush. It\'s similar in spirit to   LUCENE-1313  , but that issue is still flushing segments (but, into an intermediate RAMDir).  \\n\\n I agree! Thinking further about this: Each (re)opened RAM segment reader needs to also remember the maxDoc of the corresponding DW at the time it was (re)opened. This way we can prevent a RAM reader to read postinglists beyond that maxDoc, even if the writer thread keeps building the lists in parallel. This allows us to guarantee the point-in-time requirements. \\n\\n Also, the PostingList objects we store in the TermHash already contain a lastDocID (if I remember correctly). So when a RAM reader termEnum iterates the dictionary it can skip all terms where term.lastDocID &gt; RAMReader.maxDoc. \\n\\n It\'s quite neat that all we have to do in reopen then is to update ramReader.maxDoc and ramReader.seqID. \\n\\n Of course one big thing is still missing: keeping the term dictionary sorted. In order to implement the full IndexReader interface, specifically TermEnum, it\'s necessary to give each RAM reader a point-in-time sorted dictionary. At least in one direction, as a TermEnum only seeks forward. \\n\\n I think we have two options here: Either we try to keep the dictionary always sorted, whenever a term is added. I guess then we\'d have to implement a b-tree or something similar? \\n\\n The second option I can think of is to add a \\\"nextTerm\\\" pointer to TermHash.Postinglist. This allows us to build up a linked list across all terms. When a ramReader is opened we would sort all terms, but not by changing their position in the hash - instead by building the single-linked list in sorted order. \\n\\n When a new reader gets (re)opened we need to mergesort the new terms into the linked list. I guess it\'s easy to get this implemented lock-free. E.g. if you have the linked list a-&gt;c, and you want to add b in the middle, you set b-&gt;c before changing a-&gt;c. Then it\'s undefined if an in-flight older reader would see term b. The old reader must not return b, since b was added after the old reader was (re)opened. So either case is fine: either it doesn\'t see b cause the link wasn\'t updated yet, or it sees it but doesn\'t return it, because b.lastDocID&gt;ramReader.maxDoc. \\n\\n The downside is that we will have to pay the price of sorting in reader.reopen, which however should be cheap if readers are reopened frequently. Not sure though if this linkedlist approach is more or less compelling than something like a btree? \\n\\n Btw: Shall we open a new \\\"searchable DW buffer\\\" issue or continue using this issue for these discussions?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841923\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841923&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841923\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841923_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841923_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 16:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T16:40:28+0000\'\u003e05\\/Mar\\/10 16:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eSo about the int[], would that be of the size of the index (flushed and unflushed) segments? Suppose that:\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eEach DW would have its own int[]. The size would correspond to the number of docs the DW has in its buffer.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\\n\u003cp\u003eI\'ve indexed 5 documents, flushed. (IDs 0-4)\u003cbr\\/\u003e\\nIndexed 2 on DW1. (IDs 0,1)\u003cbr\\/\u003e\\nIndexed 2 on DW2. (IDs 0,1)\u003cbr\\/\u003e\\nDelete by term which affects: flushed IDs 1, 4, DW1-0, DW2 - 0, 1\u003cbr\\/\u003e\\nWould the int[] be of size 9, and the deleted IDs be 1, 4, 5, 7, 8? How would DW1- be mapped to 5, and DW2-0,1 be mapped to 7 and 8? Will the int[] be initially of size 5 and after DW1 flushes expand to 7, and ID=5 will be set (and afterwards expand to 9 with IDs 7,8)? If so then I understand.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eDW1 will have an int[] of size 2, and DW2 will also have a separate int[] of size 2.\u003c\\/p\u003e\\n\\n\u003cp\u003eI think you were thinking of one big int[] across the entire index? I believe you will understand the whole approach now when you think of the int[]s as per ram segment.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12841923_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841923_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 16:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T16:40:28+0000\'\u003e05\\/Mar\\/10 16:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     So about the int[], would that be of the size of the index (flushed and unflushed) segments? Suppose that:  \\n\\n Each DW would have its own int[]. The size would correspond to the number of docs the DW has in its buffer. \\n\\n \\n I\'ve indexed 5 documents, flushed. (IDs 0-4) \\nIndexed 2 on DW1. (IDs 0,1) \\nIndexed 2 on DW2. (IDs 0,1) \\nDelete by term which affects: flushed IDs 1, 4, DW1-0, DW2 - 0, 1 \\nWould the int[] be of size 9, and the deleted IDs be 1, 4, 5, 7, 8? How would DW1- be mapped to 5, and DW2-0,1 be mapped to 7 and 8? Will the int[] be initially of size 5 and after DW1 flushes expand to 7, and ID=5 will be set (and afterwards expand to 9 with IDs 7,8)? If so then I understand.  \\n\\n DW1 will have an int[] of size 2, and DW2 will also have a separate int[] of size 2. \\n\\n I think you were thinking of one big int[] across the entire index? I believe you will understand the whole approach now when you think of the int[]s as per ram segment.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841942\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841942&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841942\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841942_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841942_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 17:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T17:31:26+0000\'\u003e05\\/Mar\\/10 17:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks Michael. If the int[] are per DW then it\'s starting to make sense \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e. I will read this issue again, especially the last several posts.\u003c\\/p\u003e\\n\\n\u003cp\u003eI wanted to propose earlier to move the discussion to a seperate issue and close this one by allowing better control over the concurrency level. So a +1 from me on that.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"shaie\\\" id=\\\"commentauthor_12841942_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=shaie\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"shaie\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Shai Erera\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841942_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 17:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T17:31:26+0000\'\u003e05\\/Mar\\/10 17:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks Michael. If the int[] are per DW then it\'s starting to make sense  . I will read this issue again, especially the last several posts. \\n\\n I wanted to propose earlier to move the discussion to a seperate issue and close this one by allowing better control over the concurrency level. So a +1 from me on that.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12841960\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12841960&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12841960\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12841960_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841960_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 18:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T18:05:02+0000\'\u003e05\\/Mar\\/10 18:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eI think we have two options here: Either we try to keep the dictionary always sorted, whenever a term is added. I guess then we\'d have to implement a b-tree or something similar?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eThe int[] for deletes makes sense, I guess because we\'re assuming the number of docs in the RAM buffer won\'t be too large.  Can\'t we simply instantiate a new terms array (merging in the new terms) for each reopen?  \u003c\\/p\u003e\\n\\n\u003cp\u003eWon\'t we need to wait for flex and this issue to be completed before tackling this?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12841960_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12841960_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Mar\\/10 18:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-05T18:05:02+0000\'\u003e05\\/Mar\\/10 18:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     I think we have two options here: Either we try to keep the dictionary always sorted, whenever a term is added. I guess then we\'d have to implement a b-tree or something similar?  \\n\\n The int[] for deletes makes sense, I guess because we\'re assuming the number of docs in the RAM buffer won\'t be too large.  Can\'t we simply instantiate a new terms array (merging in the new terms) for each reopen?   \\n\\n Won\'t we need to wait for flex and this issue to be completed before tackling this?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12844495\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12844495&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12844495\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844495_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844495_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Mar\\/10 13:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-12T13:36:01+0000\'\u003e12\\/Mar\\/10 13:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWe\'ll add this (max internal concurrency, now hardwired to 5) to IWC once it\'s in...\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844495_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844495_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Mar\\/10 13:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-12T13:36:01+0000\'\u003e12\\/Mar\\/10 13:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    We\'ll add this (max internal concurrency, now hardwired to 5) to IWC once it\'s in...              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12844828\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12844828&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12844828\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12844828_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844828_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 07:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T07:45:58+0000\'\u003e13\\/Mar\\/10 07:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003ebut does anyone out there wanna work out the \\\"private RAM\u003cbr\\/\u003e\\nsegments\\\"?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI didn\'t see this before, I figured private RAM segments was on\u003cbr\\/\u003e\\nthe roadmap for this issue, it sounds like it\'ll be a different\u003cbr\\/\u003e\\none? \u003c\\/p\u003e\\n\\n\u003cp\u003eMike, can you outline what would need to change? It seems like\u003cbr\\/\u003e\\nlarge amounts of code could be removed (i.e.\u003cbr\\/\u003e\\nFreqProxFieldMergeState)? The *PerThread classes? If so, I think\u003cbr\\/\u003e\\nit would go over my head (because I don\'t have a mental mapping\u003cbr\\/\u003e\\nof how all the classes tie together). \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12844828_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844828_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 07:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T07:45:58+0000\'\u003e13\\/Mar\\/10 07:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     but does anyone out there wanna work out the \\\"private RAM \\nsegments\\\"?  \\n\\n I didn\'t see this before, I figured private RAM segments was on \\nthe roadmap for this issue, it sounds like it\'ll be a different \\none?  \\n\\n Mike, can you outline what would need to change? It seems like \\nlarge amounts of code could be removed (i.e. \\nFreqProxFieldMergeState)? The *PerThread classes? If so, I think \\nit would go over my head (because I don\'t have a mental mapping \\nof how all the classes tie together).               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12844848\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12844848&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12844848\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844848_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844848_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 10:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T10:25:15+0000\'\u003e13\\/Mar\\/10 10:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI think this issue has these steps:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eAllow the 5 to be changed (trivial first step) &#8211; I\'ll do this\u003cbr\\/\u003e\\n    after \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-2294\\\" title=\\\"Create IndexWriterConfiguration and store all of IW configuration there\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-2294\\\"\u003e\u003cdel\u003eLUCENE-2294\u003c\\/del\u003e\u003c\\/a\u003e is in\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eChange the approach for how we buffer in RAM to a more isolated\u003cbr\\/\u003e\\n    approach, whereby IW has N fully independent RAM segments\u003cbr\\/\u003e\\n    in-process and when a doc needs to be indexed it\'s added to one of\u003cbr\\/\u003e\\n    them.  Each segment would also write its own doc stores and\u003cbr\\/\u003e\\n    \\\"normal\\\" segment merging (not the inefficient merge we now do on\u003cbr\\/\u003e\\n    flush) would merge them.  This should be a good simplification in\u003cbr\\/\u003e\\n    the chain (eg maybe we can remove the *PerThread classes).  The\u003cbr\\/\u003e\\n    segments can flush independently, letting us make much better\u003cbr\\/\u003e\\n    concurrent use of IO &amp; CPU.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eEnable NRT readers to directly search these RAM segments.  This\u003cbr\\/\u003e\\n    entails recording deletes on the RAM segments as an int[].  We\u003cbr\\/\u003e\\n    need to solve the Term sorting issue... (b-tree, or, simply\u003cbr\\/\u003e\\n    sort-on-demand the first time a query needs it, though that cost\u003cbr\\/\u003e\\n    increases the larger your RAM segments get, ie, not incremental to\u003cbr\\/\u003e\\n    the # docs you just added).  Also, we have to solve what happens\u003cbr\\/\u003e\\n    to a reader using a RAM segment that\'s been flushed.  Perhaps we\u003cbr\\/\u003e\\n    don\'t reuse RAM at that point, ie, rely on GC to reclaim once all\u003cbr\\/\u003e\\n    readers using that RAM segmeent have closed.  We should do this\u003cbr\\/\u003e\\n    part under a separate issue (\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-2312\\\" title=\\\"Search on IndexWriter&#39;s RAM Buffer\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-2312\\\"\u003eLUCENE-2312\u003c\\/a\u003e).\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844848_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844848_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 10:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T10:25:15+0000\'\u003e13\\/Mar\\/10 10:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I think this issue has these steps: \\n\\n \\n\\t Allow the 5 to be changed (trivial first step) &#8211; I\'ll do this \\n    after   LUCENE-2294   is in \\n \\n\\n\\n \\n\\t Change the approach for how we buffer in RAM to a more isolated \\n    approach, whereby IW has N fully independent RAM segments \\n    in-process and when a doc needs to be indexed it\'s added to one of \\n    them.  Each segment would also write its own doc stores and \\n    \\\"normal\\\" segment merging (not the inefficient merge we now do on \\n    flush) would merge them.  This should be a good simplification in \\n    the chain (eg maybe we can remove the *PerThread classes).  The \\n    segments can flush independently, letting us make much better \\n    concurrent use of IO &amp; CPU. \\n \\n\\n\\n \\n\\t Enable NRT readers to directly search these RAM segments.  This \\n    entails recording deletes on the RAM segments as an int[].  We \\n    need to solve the Term sorting issue... (b-tree, or, simply \\n    sort-on-demand the first time a query needs it, though that cost \\n    increases the larger your RAM segments get, ie, not incremental to \\n    the # docs you just added).  Also, we have to solve what happens \\n    to a reader using a RAM segment that\'s been flushed.  Perhaps we \\n    don\'t reuse RAM at that point, ie, rely on GC to reclaim once all \\n    readers using that RAM segmeent have closed.  We should do this \\n    part under a separate issue ( LUCENE-2312 ). \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12844893\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12844893&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12844893\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12844893_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844893_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 15:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T15:04:45+0000\'\u003e13\\/Mar\\/10 15:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eChange the approach for how we buffer in RAM to a more\u003cbr\\/\u003e\\nisolated approach\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eWould we reuse the DocumentsWriter class, and assign one to each\u003cbr\\/\u003e\\nthread? Then start to rework DW on down in the code tree,\u003cbr\\/\u003e\\nremoving the per thread logic? Or do we need to do something\u003cbr\\/\u003e\\nmore dramatic?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12844893_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844893_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 15:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T15:04:45+0000\'\u003e13\\/Mar\\/10 15:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Change the approach for how we buffer in RAM to a more \\nisolated approach  \\n\\n Would we reuse the DocumentsWriter class, and assign one to each \\nthread? Then start to rework DW on down in the code tree, \\nremoving the per thread logic? Or do we need to do something \\nmore dramatic?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12844900\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12844900&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12844900\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844900_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844900_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 15:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T15:20:56+0000\'\u003e13\\/Mar\\/10 15:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eProbably one DW instance per thread?  Seems like that\'d work?\u003c\\/p\u003e\\n\\n\u003cp\u003eAnd possibly remove *PerThread throughout the default indexing chain?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844900_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844900_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 15:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T15:20:56+0000\'\u003e13\\/Mar\\/10 15:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Probably one DW instance per thread?  Seems like that\'d work? \\n\\n And possibly remove *PerThread throughout the default indexing chain?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12844911\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12844911&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12844911\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844911_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844911_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 16:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T16:04:43+0000\'\u003e13\\/Mar\\/10 16:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eSimple patch, just adds maxThreadStates setting to IndexWriterConfig.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12844911_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844911_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 16:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T16:04:43+0000\'\u003e13\\/Mar\\/10 16:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Simple patch, just adds maxThreadStates setting to IndexWriterConfig.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12844926\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12844926&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12844926\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12844926_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844926_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 17:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T17:35:53+0000\'\u003e13\\/Mar\\/10 17:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eProbably one DW instance per thread? Seems like that\'d work? \u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eOk\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eAnd possibly remove *PerThread throughout the default indexing chain?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI like removing this as there\'s many loops per thread right now, it\'s not easy to glance at and know what\'s going on.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jasonrutherglen\\\" id=\\\"commentauthor_12844926_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jasonrutherglen\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jasonrutherglen\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Jason Rutherglen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12844926_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Mar\\/10 17:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-13T17:35:53+0000\'\u003e13\\/Mar\\/10 17:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Probably one DW instance per thread? Seems like that\'d work?   \\n\\n Ok \\n\\n  And possibly remove *PerThread throughout the default indexing chain?  \\n\\n I like removing this as there\'s many loops per thread right now, it\'s not easy to glance at and know what\'s going on.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12845047\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12845047&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12845047\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845047_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845047_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 08:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T08:19:29+0000\'\u003e14\\/Mar\\/10 08:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\\n\u003cp\u003ebut does anyone out there wanna work out the \\\"private RAM segments\\\"?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eShall we use this issue for the private RAM segments? Or do you want to commit the simple patch, close this one and open a new issue?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845047_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845047_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 08:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T08:19:29+0000\'\u003e14\\/Mar\\/10 08:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    \\n but does anyone out there wanna work out the \\\"private RAM segments\\\"?  \\n\\n Shall we use this issue for the private RAM segments? Or do you want to commit the simple patch, close this one and open a new issue?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12845048\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12845048&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12845048\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845048_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845048_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 08:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T08:24:58+0000\'\u003e14\\/Mar\\/10 08:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI\'m tempted to get rid of the pooling for PostingLIst objects.  The objects are very small and Java does a good job since 1.5 with object creation and gc.  I even read that the JVM guys think that pooling can be slower than not-pooling.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, I\'ve mostly seen gc performance problems so far if there were a big number of long-living objects - it makes the mark time of the garbage collection very long.  Pooling of course exactly gets you in such a situation.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo what do you think about removing the pooling of the PostingList objects?  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845048_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845048_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 08:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T08:24:58+0000\'\u003e14\\/Mar\\/10 08:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I\'m tempted to get rid of the pooling for PostingLIst objects.  The objects are very small and Java does a good job since 1.5 with object creation and gc.  I even read that the JVM guys think that pooling can be slower than not-pooling. \\n\\n Also, I\'ve mostly seen gc performance problems so far if there were a big number of long-living objects - it makes the mark time of the garbage collection very long.  Pooling of course exactly gets you in such a situation. \\n\\n So what do you think about removing the pooling of the PostingList objects?                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12845056\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12845056&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12845056\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12845056_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845056_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 09:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T09:44:28+0000\'\u003e14\\/Mar\\/10 09:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eOr do you want to commit the simple patch, close this one and open a new issue?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eHow about a new issue?\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eAlso, I\'ve mostly seen gc performance problems so far if there were a big number of long-living objects - So what do you think about removing the pooling of the PostingList objects?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eIt\'s not only the GC cost, it\'s also the cost of init\'ing these objects.  EG filling in 0s for all the fields, when we\'re gonna overwrite them anyway.\u003c\\/p\u003e\\n\\n\u003cp\u003eBut, let\'s test on modern JREs to confirm this?  I do agree pooling adds code complexity, so, if it\'s not buying us anything (or very little) we should remove it.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe worst case should be docs with many unique terms...  Though... to reduce our per-unique-term RAM cost, we may want to move away from separate postings object per term to parallel arrays.  We also could do something different for singleton terms vs the rest (if Zipf\'s law is applying, half the terms should be singletons; if it\'s not, you could have many more singleton terms...).  I\'d do this as an experimental indexing chain \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12845056_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845056_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 09:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T09:44:28+0000\'\u003e14\\/Mar\\/10 09:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Or do you want to commit the simple patch, close this one and open a new issue?  \\n\\n How about a new issue? \\n\\n  Also, I\'ve mostly seen gc performance problems so far if there were a big number of long-living objects - So what do you think about removing the pooling of the PostingList objects?  \\n\\n It\'s not only the GC cost, it\'s also the cost of init\'ing these objects.  EG filling in 0s for all the fields, when we\'re gonna overwrite them anyway. \\n\\n But, let\'s test on modern JREs to confirm this?  I do agree pooling adds code complexity, so, if it\'s not buying us anything (or very little) we should remove it. \\n\\n The worst case should be docs with many unique terms...  Though... to reduce our per-unique-term RAM cost, we may want to move away from separate postings object per term to parallel arrays.  We also could do something different for singleton terms vs the rest (if Zipf\'s law is applying, half the terms should be singletons; if it\'s not, you could have many more singleton terms...).  I\'d do this as an experimental indexing chain                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12845159\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12845159&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12845159\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845159_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845159_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 23:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T23:33:37+0000\'\u003e14\\/Mar\\/10 23:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eHow about a new issue?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eOK, will open one.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003e(if Zipf\'s law is applying, half the terms should be singletons; if it\'s not, you could have many more singleton terms...)\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eYeah we should utilize our knowledge of term distribution to optimize in-memory postings.  For example, currently a nice optimization would be to store the first posting in the PostingList object and only allocate slices once you see the second occurrence (similar to the pulsing codec)?\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eThough... to reduce our per-unique-term RAM cost, we may want to move away from separate postings object per term to parallel arrays.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eWhat exactly do you mean with parallel arrays? Parallel to the termHash array?  Then the termsHash array would not be an array of PostingList objects anymore, but an array of pointers into the char[] array?  And you\'d have e.g. a parallel int[] array for df, another int[] for pointers into the postings byte pool, etc? Something like that?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845159_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845159_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Mar\\/10 23:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-14T23:33:37+0000\'\u003e14\\/Mar\\/10 23:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     How about a new issue?  \\n\\n OK, will open one. \\n\\n  (if Zipf\'s law is applying, half the terms should be singletons; if it\'s not, you could have many more singleton terms...)  \\n\\n Yeah we should utilize our knowledge of term distribution to optimize in-memory postings.  For example, currently a nice optimization would be to store the first posting in the PostingList object and only allocate slices once you see the second occurrence (similar to the pulsing codec)? \\n\\n  Though... to reduce our per-unique-term RAM cost, we may want to move away from separate postings object per term to parallel arrays.  \\n\\n What exactly do you mean with parallel arrays? Parallel to the termHash array?  Then the termsHash array would not be an array of PostingList objects anymore, but an array of pointers into the char[] array?  And you\'d have e.g. a parallel int[] array for df, another int[] for pointers into the postings byte pool, etc? Something like that?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12845190\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12845190&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12845190\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845190_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845190_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/10 05:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-15T05:43:13+0000\'\u003e15\\/Mar\\/10 05:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eOK I opened \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-2324\\\" title=\\\"Per thread DocumentsWriters that write their own private segments\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-2324\\\"\u003e\u003cdel\u003eLUCENE-2324\u003c\\/del\u003e\u003c\\/a\u003e.  We can close this one after you committed your patch, Mike.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845190_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845190_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/10 05:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-15T05:43:13+0000\'\u003e15\\/Mar\\/10 05:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    OK I opened   LUCENE-2324  .  We can close this one after you committed your patch, Mike.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12845263\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12845263&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12845263\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12845263_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845263_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/10 09:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-15T09:58:07+0000\'\u003e15\\/Mar\\/10 09:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cblockquote\u003e\u003cp\u003eFor example, currently a nice optimization would be to store the first posting in the PostingList object and only allocate slices once you see the second occurrence (similar to the pulsing codec)?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI think we can do even better, ie, that class wastes RAM for the single posting case (intStart, byteStart, lastDocID, docFreq, lastDocCode, lastDocPosition are not needed).\u003c\\/p\u003e\\n\\n\u003cp\u003eEG we could have a separate class dedicated to the singleton case.  When term is first encountered it\'s enrolled there.  We\'d probably need a separate hash to store these (though not necessarily?).  If it\'s seen again it\'s switched to the full posting.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eWhat exactly do you mean with parallel arrays? Parallel to the termHash array? Then the termsHash array would not be an array of PostingList objects anymore, but an array of pointers into the char[] array? And you\'d have e.g. a parallel int[] array for df, another int[] for pointers into the postings byte pool, etc? Something like that?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI mean instead of allocating an instance per unique term, we assign an integer ID (dense, ie, 0, 1, 2...).\u003c\\/p\u003e\\n\\n\u003cp\u003eAnd then we have an array for each member now in FreqProxTermsWriter.PostingList, ie int[] docFreqs, int [] lastDocIDs, etc.  Then to look up say the lastDocID for a given postingID you just get lastDocIDs\u003cspan class=\\\"error\\\"\u003e&#91;postingID&#93;\u003c\\/span\u003e.  If we\'re worried about oversize allocation overhead, we can make these arrays paged... but that\'d slow down each access.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12845263_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845263_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/10 09:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-15T09:58:07+0000\'\u003e15\\/Mar\\/10 09:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     For example, currently a nice optimization would be to store the first posting in the PostingList object and only allocate slices once you see the second occurrence (similar to the pulsing codec)?  \\n\\n I think we can do even better, ie, that class wastes RAM for the single posting case (intStart, byteStart, lastDocID, docFreq, lastDocCode, lastDocPosition are not needed). \\n\\n EG we could have a separate class dedicated to the singleton case.  When term is first encountered it\'s enrolled there.  We\'d probably need a separate hash to store these (though not necessarily?).  If it\'s seen again it\'s switched to the full posting. \\n\\n  What exactly do you mean with parallel arrays? Parallel to the termHash array? Then the termsHash array would not be an array of PostingList objects anymore, but an array of pointers into the char[] array? And you\'d have e.g. a parallel int[] array for df, another int[] for pointers into the postings byte pool, etc? Something like that?  \\n\\n I mean instead of allocating an instance per unique term, we assign an integer ID (dense, ie, 0, 1, 2...). \\n\\n And then we have an array for each member now in FreqProxTermsWriter.PostingList, ie int[] docFreqs, int [] lastDocIDs, etc.  Then to look up say the lastDocID for a given postingID you just get lastDocIDs &#91;postingID&#93; .  If we\'re worried about oversize allocation overhead, we can make these arrays paged... but that\'d slow down each access.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12845391\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-2293?focusedCommentId=12845391&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12845391\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845391_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845391_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/10 16:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-15T16:14:33+0000\'\u003e15\\/Mar\\/10 16:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI\'ll reply on \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-2324\\\" title=\\\"Per thread DocumentsWriters that write their own private segments\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-2324\\\"\u003e\u003cdel\u003eLUCENE-2324\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12845391_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12845391_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/10 16:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-15T16:14:33+0000\'\u003e15\\/Mar\\/10 16:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I\'ll reply on   LUCENE-2324  .              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="12310110";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/LUCENE\\/summary\\\" title=\\\"Lucene - Core\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=12310110&amp;avatarId=10061\\\" alt=\\\"Lucene - Core\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/LUCENE\\/summary\\\" title=\\\"Lucene - Core\\\"\u003eLucene - Core\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1520243363385"> 
    <input type="hidden" title="jira.request.server.time" value="387"> 
    <input type="hidden" title="jira.request.id" value="589x94539427x1"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="1"> 
    <input type="hidden" title="db.reads.time.in.ms" value="35"> 
    <input type="hidden" title="db.conns.time.in.ms" value="41"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 589x94539427x1
	          REQUEST TIMESTAMP : [05/Mar/2018:09:49:23 +0000]
	               REQUEST TIME : 0.3870
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 1

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=28, elapsedTotal=35004221, elapsedMin=526367, elapsedMax=6275357, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=32, elapsedTotal=41265888, elapsedMin=553454, elapsedMax=6312246, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>