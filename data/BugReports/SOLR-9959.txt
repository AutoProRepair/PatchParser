<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|6bf7b08486d67f37fe745e992c440a99cc1e6f6f|lout"> 
  <link rel="shortcut icon" href="/jira/s/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"sd.customer.profile.multi.languages\":true,\"sd.customer.portal.transitions\":true,\"sd.customer.portal.transitions.config\":true,\"sd.custom.email.stripping.rules\":false,\"sd.sla.lucene.issue.id.callback.performance\":true,\"sd.new.settings.sidebar.location\":true,\"sd.workload.report.paginator\":true,\"sd.experimental.portal.search.algorithm.default.1\":false,\"sd.customer.portal.help.center.agent.announcement\":true,\"sd.sla.improved.rendering\":false,\"sd.experimental.portal.search.algorithm.default.2\":false,\"sd.customer.feedback.validate.reporter.on.token\":true,\"sd.custom.email.notifications.utf8.csat.star\":true,\"sd.who.create.customers.by.email.setting\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.renderer.consider.variable.format\":true,\"sd.stats.event.tracking\":true,\"sd.password.helper.dialog\":true,\"sd.canned.responses\":false,\"sd.portal.help.center.customer.signup.secondary.email\":true,\"sd.custom.email.notifications.manage.language\":true,\"sd.use.search.by.permissions\":true,\"sd.slavalue.record.updated.date\":false,\"sd.report.custom.date.range\":false,\"sd.kb.article.helpfulness.report\":false,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"sd.custom.email.notifications.styling\":true,\"sd.workinghours.new.page.bulldog.1\":false,\"sd.customer.portal.two.step.login\":false,\"sd.automation.psmq.async.executor\":true,\"sd.customer.org.list.page.lazy.search\":true,\"sd.approval.requested.when.handler\":true,\"sd.request.type.field.rest.api.filtering.bugfix\":true,\"sd.automation.then.action.auto.answer.approval\":true,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"sla.will.only.be.paused.if.they.are.already.started\":true,\"sd.kb.comment.share.stats.collection\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"sd.customer.orgs.group.participants\":true,\"sd.portal.help.center.customer.signup\":true,\"sd.sla.agent.jql.security.restricted\":true,\"sd.test.feature.flag.x\":true,\"sd.test.feature.flag.y\":false,\"sd.cluster.safe.mail.channel.shutdown\":true,\"sd.email.channel.folders\":false,\"sd.email.analytics.open\":false,\"sd.kb.project.creation.create.link.space\":true,\"sd.workinghours.new.page\":false,\"sd.confluence.anonymous.permission.fix\":true,\"com.atlassian.jira.issuetable.draggable\":true,\"sd.customer.portal.project.agent.announcement\":true,\"sd.automation.audit.log\":true,\"jira.jql.suggestrecentfields\":false,\"sd.canned.responses.check.index.startup\":false,\"sd.new.project.templates\":true,\"sd.custom.email.notifications.custom.rules.simple.ui\":false,\"sd.custom.email.notifications.cut.over\":true,\"sd.dismiss.all.misconfiguration.warnings.setting\":true,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"sd.sla.configurations.export\":true,\"sd.canned.responses.variable.substitution\":true,\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"sd.customer.portal.prioties.per.project.fix\":true,\"jira.instrumentation.laas\":false,\"sd.kb.self.service.report\":false,\"sla.improved.request.handling\":true,\"sd.no.schedule.async.upgrade.tasks\":true,\"sd.kb.primary.nav\":true,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"sd.kb.issueview.panel.phase2\":true,\"sd.email.outsider.comments\":true,\"jira.create.linked.issue\":true,\"sd.kb.issueview.panel\":true,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"sd.approvals.light.weight\":false,\"sd.automation.then.webhook\":true,\"sd.respect.inline.edit.issue.off\":true,\"jira.jql.smartautoselectfirst\":false,\"sd.global.portal.search.atlassian.only.tracking\":false,\"sd.automation.if.condition.comment.primary.action\":true,\"jira.priorities.per.project\":true,\"sd.inline.noformat.renderer\":true,\"sd.customer.request.type.create.edit.screens\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/png,image/vnd.wap.wbmp,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["com.atlassian.servicedesk.servicedesk-canned-responses-plugin:canned-responses-data-provider.data"]="{\"substitutionVariables\":{\"issue.summary\":\"Issue summary\",\"issue.description\":\"Issue description\",\"issue.key\":\"Issue key\",\"issue.reporter.name\":\"Issue reporter\",\"issue.resolution\":\"Issue resolution\",\"request.url\":\"Request URL\",\"request.status\":\"Request status\"}}";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.servicedesk.core-ui:util-help-links.help-links"]="{\"help\":{\"email.settings\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email\",\"managing.queues\":\"https://docs.atlassian.com/jira/jsd-docs-039/Setting+up+queues+for+your+team\",\"email.setup\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email\",\"request.settings.help.bubble\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+access+to+your+service+desk\",\"email.settings.suitablerequest\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email#Receivingrequestsbyemail-suitablerequest\",\"sla.import.help\":\"https://docs.atlassian.com/jira/jsd-docs-039/Importing+SLAs\",\"documentation.home\":\"https://docs.atlassian.com/jira/jsd-docs-039/JIRA+Service+Desk+Documentation\",\"default\":\"https://docs.atlassian.com/jira/jsd-docs-039/\",\"create.space.help\":\"https://docs.atlassian.com/jira/jsd-docs-039/Serving+customers+with+a+knowledge+base#serving-customers-with-a-knowledge-base-createpermission\",\"email.settings.troubleshooting\":\"https://docs.atlassian.com/jira/jsd-docs-039/Troubleshooting+issues+with+the+email+channel\",\"admin.notifications.config\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+service+desk+notifications\",\"troubleshoot.requesttype\":\"https://docs.atlassian.com/jira/jsd-docs-039/Troubleshooting+issues+with+request+types\",\"approvals.configuration\":\"https://docs.atlassian.com/jira/jsd-docs-039/Configuring+JIRA+Service+Desk+approvals\",\"setting.up.reports\":\"https://docs.atlassian.com/jira/jsd-docs-039/Setting+up+service+desk+reports\",\"public.signup\":\"https://docs.atlassian.com/jira/jsd-docs-039/Configuring+public+signup\",\"knowledge.base\":\"https://docs.atlassian.com/jira/jsd-docs-039/Serving+customers+with+a+knowledge+base\",\"resolve.permission.scheme.errors\":\"https://docs.atlassian.com/jira/jsd-docs-039/Resolving+permission+scheme+errors\",\"getting.started\":\"https://docs.atlassian.com/jira/jsd-docs-039/Getting+started+with+JIRA+Service+Desk\",\"getting.started.agent\":\"https://docs.atlassian.com/jira/jsd-docs-039/Getting+started+for+service+desk+agents\",\"invite.customers\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+access+to+your+service+desk\"},\"kb\":{\"default\":\"https://confluence.atlassian.com/display/SDKB/\",\"troubleshooting.user.management.issues\":\"https://confluence.atlassian.com/display/SDKB/Troubleshooting+issues+with+service+desk+user+management\",\"legacytransition\":\"https://confluence.atlassian.com/display/SDKB/Replacing+legacy+automatic+transitions+with+automation+rules\",\"umtroubleshoot\":\"https://confluence.atlassian.com/display/SDKB/Troubleshooting+issues+with+service+desk+user+management\"}}";
WRM._unparsedData["com.atlassian.servicedesk.core-ui:util-base-url.base-url"]="\"https://issues.apache.org/jira\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"d090c6872d696e\"";
WRM._unparsedData["project-id"]="12310230";
WRM._unparsedData["project-key"]="\"SOLR\"";
WRM._unparsedData["project-name"]="\"Solr\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="12310230";
WRM._unparsedData["projectKey"]="\"SOLR\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/1a6b21131945f6f49ff48336b49ca3fe-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/37a6e594cbbfd462a8a54d5aa11475c1/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/d8484c9183f546511a8e336a8779bcd9-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d3b35d835f8f46fc3b53bb4db7f85158-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/37a6e594cbbfd462a8a54d5aa11475c1/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/71d42e74136d842a3ef4d5d136484843-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/95a4826c265852f4904f1e0e7300df68-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/944bb39eced1b35cfc7194aa02eb5a5a/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/5a8f0f8b8aa8f96a4f0f7e9e248d62f3-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true&amp;sd_operational=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="SOLR-9959"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[SOLR-9959] SolrInfoMBean-s category and hierarchy cleanup - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[SOLR-9959] SolrInfoMBean-s category and hierarchy cleanup - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/SOLR" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FSOLR-9959">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="12310230" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Solr'" src="https://issues.apache.org/jira/secure/projectavatar?pid=12310230&amp;avatarId=22151"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/SOLR">Solr</a></li>
                 <li><a class="issue-link" data-issue-key="SOLR-9959" href="/jira/browse/SOLR-9959" id="key-val" rel="13034561">SOLR-9959</a></li>
                </ol>
                <h1 id="summary-val">SolrInfoMBean-s category and hierarchy cleanup</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FSOLR-9959"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/SOLR-9959/SOLR-9959.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/SOLR-9959/SOLR-9959.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/SOLR-9959/SOLR-9959.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/SOLR-9959/SOLR-9959.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" title="Improvement - An improvement or enhancement to an existing feature or task." width="16"> Improvement </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Resolved</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.</span>">Resolved</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/blocker.svg" title="Blocker - Blocks development and/or testing work, production could not run" width="16"> Blocker </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> <span class="shorten" id="versions-field"> <span title="7.0 First 7x release, major release after 6.6">7.0</span> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+SOLR+AND+fixVersion+%3D+7.0" title="7.0 First 7x release, major release after 6.6">7.0</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> <span class="shorten" id="components-field"> <a href="/jira/issues/?jql=project+%3D+SOLR+AND+component+%3D+metrics" title="metrics ">metrics</a> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Security Level:</strong> 
                   <span id="security-val" class="value"> <span class="note">Public</span> (Default Security Level. Issues are Public) </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <span class="labels" id="labels-13034561-value">None</span> 
                   </div> 
                  </div> </li> 
                </ul> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p><a href="https://issues.apache.org/jira/browse/SOLR-9947" title="Miscellaneous metrics cleanup" class="issue-link" data-issue-key="SOLR-9947"><del>SOLR-9947</del></a> changed categories of some of <tt>SolrInfoMBean-s</tt>, and it also added an alternative view in JMX, similar to the one produced by <tt>SolrJmxReporter</tt>.</p> 
                  <p>Some changes were left out from that issue because they would break the back-compatibility in 6.x, but they should be done before 7.0:</p> 
                  <ul> 
                   <li>remove the old JMX view of <tt>SolrInfoMBean</tt>-s and improve the new one so that it's more readable and useful.</li> 
                   <li>in many cases <tt>SolrInfoMBean.getName()</tt> just returns a FQCN, but it could be more informative - eg. for highlighter or query plugins this could be the symbolic name of a plugin that users know and use in configuration.</li> 
                   <li>top-level categories need more thought. On one hand it's best to minimize their number, on the other hand they need to meaningfully represent the functionality of components that use them. <a href="https://issues.apache.org/jira/browse/SOLR-9947" title="Miscellaneous metrics cleanup" class="issue-link" data-issue-key="SOLR-9947"><del>SOLR-9947</del></a> made some cosmetic changes, but more discussion is necessary (eg. QUERY vs. SEARCHHANDLER)</li> 
                   <li>we should consider removing some of the methods in <tt>SolrInfoMBean</tt> that usually don't return any useful information, eg. <tt>getDocs</tt>, <tt>getSource()</tt> and <tt>getVersion()</tt>.</li> 
                  </ul> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/SOLR-9959?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/SOLR-9959?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/SOLR-9959?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/SOLR-9959?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12862736" data-issue-id="13034561" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12862736/SOLR-9959.patch" draggable="true" data-downloadurl="text/plain:SOLR-9959.patch:https://issues.apache.org/jira/secure/attachment/12862736/SOLR-9959.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12862736/SOLR-9959.patch" title="Latest  10/Apr/17 20:16 - Andrzej Bialecki " draggable="true" data-downloadurl="text/plain:SOLR-9959.patch:https://issues.apache.org/jira/secure/attachment/12862736/SOLR-9959.patch">SOLR-9959.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2017-04-10T20:16:51.651Z">10/Apr/17 20:16</time>
                   </dd>
                   <dd class="attachment-size">
                    476 kB
                   </dd>
                   <dd class="attachment-author">
                    Andrzej Bialecki 
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment earlier-version" data-attachment-id="12861909" data-issue-id="13034561" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12861909/SOLR-9959.patch" draggable="true" data-downloadurl="text/plain:SOLR-9959.patch:https://issues.apache.org/jira/secure/attachment/12861909/SOLR-9959.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12861909/SOLR-9959.patch" title=" 04/Apr/17 16:32 - Andrzej Bialecki " draggable="true" data-downloadurl="text/plain:SOLR-9959.patch:https://issues.apache.org/jira/secure/attachment/12861909/SOLR-9959.patch">SOLR-9959.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2017-04-04T16:32:22.938Z">04/Apr/17 16:32</time>
                   </dd>
                   <dd class="attachment-size">
                    415 kB
                   </dd>
                   <dd class="attachment-author">
                    Andrzej Bialecki 
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment earlier-version" data-attachment-id="12860125" data-issue-id="13034561" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12860125/SOLR-9959.patch" draggable="true" data-downloadurl="text/plain:SOLR-9959.patch:https://issues.apache.org/jira/secure/attachment/12860125/SOLR-9959.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12860125/SOLR-9959.patch" title=" 23/Mar/17 12:23 - Andrzej Bialecki " draggable="true" data-downloadurl="text/plain:SOLR-9959.patch:https://issues.apache.org/jira/secure/attachment/12860125/SOLR-9959.patch">SOLR-9959.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2017-03-23T12:23:08.782Z">23/Mar/17 12:23</time>
                   </dd>
                   <dd class="attachment-size">
                    324 kB
                   </dd>
                   <dd class="attachment-author">
                    Andrzej Bialecki 
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="linkingmodule" class="module toggle-wrap">
               <div id="linkingmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Issue Links</h2>
               </div>
               <div class="mod-content"> 
                <div class="links-container" data-default-link-icon="/jira/images/icons/generic_link_16.png"> 
                 <dl class="links-list "> 
                  <dt title="is related to">
                   is related to
                  </dt> 
                  <dd id="internal-13033062_10030"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="SOLR-9947: Miscellaneous metrics cleanup"> <a href="/jira/browse/SOLR-9947" data-issue-key="SOLR-9947" class="issue-link link-title resolution">SOLR-9947</a> <span class="link-summary">Miscellaneous metrics cleanup</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/minor.svg" width="16" height="16" title="Minor - Minor loss of function, or other problem where easy workaround is present." alt="Minor - Minor loss of function, or other problem where easy workaround is present."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Resolved</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.</span>">Resolved</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                </div> 
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_ab" rel="ab" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Andrzej Bialecki &quot;,&quot;emailAddress&quot;:&quot;ab@apache.org&quot;,&quot;username&quot;:&quot;ab&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="ab"></span></span> Andrzej Bialecki </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_ab" rel="ab" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Andrzej Bialecki &quot;,&quot;emailAddress&quot;:&quot;ab@apache.org&quot;,&quot;username&quot;:&quot;ab&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="ab"></span></span> Andrzej Bialecki </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">0</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">8</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="13/Jan/17 09:49"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2017-01-13T09:49:30+0000">13/Jan/17 09:49</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="20/Sep/17 16:07"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2017-09-20T16:07:47+0000">20/Sep/17 16:07</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="18/Apr/17 16:09"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2017-04-18T16:09:24+0000">18/Apr/17 16:09</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for n/a, Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/SOLR-9959?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/SOLR-9959?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-15903382\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15903382&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15903382\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15903382_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15903382_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/Mar\\/17 16:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-09T16:57:39+0000\'\u003e09\\/Mar\\/17 16:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThere\'s also considerable duplication of code responsible for reporting metrics in components that implement both \u003ctt\u003eSolrInfoMBean\u003c\\/tt\u003e and \u003ctt\u003eSolrMetricProducer\u003c\\/tt\u003e. We should investigate whether \u003ctt\u003eSolrInfoMBean.getStatistics()\u003c\\/tt\u003e is needed at all - statistics reported by this method theoretically can be equally well reported using the metrics API.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15903382_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15903382_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/Mar\\/17 16:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-09T16:57:39+0000\'\u003e09\\/Mar\\/17 16:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    There\'s also considerable duplication of code responsible for reporting metrics in components that implement both  SolrInfoMBean  and  SolrMetricProducer . We should investigate whether  SolrInfoMBean.getStatistics()  is needed at all - statistics reported by this method theoretically can be equally well reported using the metrics API.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15926798\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15926798&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15926798\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15926798_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15926798_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/17 19:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-15T19:19:46+0000\'\u003e15\\/Mar\\/17 19:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe first round of changes removed getDocs, getSource and getVersion, which rarely (if ever) provided any useful information. The old JMX reporting mechanism via \u003ctt\u003eJmxMonitoredMap\u003c\\/tt\u003e has been removed as well in favor of the new \u003ctt\u003eJmxReporter\u003c\\/tt\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003eAfter initial investigation it looks like it\'s possible to completely replace \u003ctt\u003eSolrInfoMBean.getStatistics()\u003c\\/tt\u003e with metrics. There will be some back-compat breakage (e.g. it\'s unlikely that the bean names will be preserved in the output of \\/admin\\/mbeans) but the benefit will be a great simplification of the code and bringing all statistics under the same metrics API umbrella. I\'ll continue making changes towards that goal.\u003c\\/p\u003e\\n\\n\u003cp\u003eI created a branch \u003ctt\u003ejira\\/solr-9959\u003c\\/tt\u003e where I keep the current state of changes - I welcome all interested parties (\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=otis\\\" class=\\\"user-hover\\\" rel=\\\"otis\\\"\u003eOtis Gospodnetic\u003c\\/a\u003e, \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=wunder\\\" class=\\\"user-hover\\\" rel=\\\"wunder\\\"\u003eWalter Underwood\u003c\\/a\u003e, \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=yonik%40apache.org\\\" class=\\\"user-hover\\\" rel=\\\"yonik@apache.org\\\"\u003eYonik Seeley\u003c\\/a\u003e, \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=romseygeek\\\" class=\\\"user-hover\\\" rel=\\\"romseygeek\\\"\u003eAlan Woodward\u003c\\/a\u003e, others?) to review and chime in, the sooner the better \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15926798_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15926798_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Mar\\/17 19:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-15T19:19:46+0000\'\u003e15\\/Mar\\/17 19:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The first round of changes removed getDocs, getSource and getVersion, which rarely (if ever) provided any useful information. The old JMX reporting mechanism via  JmxMonitoredMap  has been removed as well in favor of the new  JmxReporter . \\n\\n After initial investigation it looks like it\'s possible to completely replace  SolrInfoMBean.getStatistics()  with metrics. There will be some back-compat breakage (e.g. it\'s unlikely that the bean names will be preserved in the output of \\/admin\\/mbeans) but the benefit will be a great simplification of the code and bringing all statistics under the same metrics API umbrella. I\'ll continue making changes towards that goal. \\n\\n I created a branch  jira\\/solr-9959  where I keep the current state of changes - I welcome all interested parties ( Otis Gospodnetic ,  Walter Underwood ,  Yonik Seeley ,  Alan Woodward , others?) to review and chime in, the sooner the better                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15938183\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15938183&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15938183\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15938183_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15938183_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Mar\\/17 12:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-23T12:19:56+0000\'\u003e23\\/Mar\\/17 12:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThis second round removes \u003ctt\u003eSolrInfoMBean.getStatistics()\u003c\\/tt\u003e and replaces it with metrics. Even though the diff is sizeable it was a pretty straightforward replacement. All tests and precommit pass.\u003c\\/p\u003e\\n\\n\u003cp\u003eHowever, there are some aspects of this round of changes that may raise a few eyebrows \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/wink.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e so please speak up if they concern you:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eback-compatibility is NOT preserved, in fact it\'s broken both at the level of Java APIs and REST APIs. I made sure that all statistics that were available via \\/admin\\/mbeans are also present in the metrics API, but metric paths are different from the \\/admin\\/mbeans paths, even though the metric names (their last elements) are almost always the same (I changed a few nonCamelCase names).\u003c\\/li\u003e\\n\\t\u003cli\u003eSolrCache implementations used to return snapshots of their internal state as statistics, including optional details such as cache entries. This didn\'t play well with the metrics API, where all individual metrics should be registered in advance, and then unregistered when they are no longer necessary, because we didn\'t know when cache entries would be evicted. The solution was to implement a dynamic map-like metric \u003ctt\u003eMetricsMap\u003c\\/tt\u003e that is registered as a single metric but returns a \u003ctt\u003eMap\u003c\\/tt\u003e value. We may want to use the same approach for jetty metrics, too.\u003c\\/li\u003e\\n\\t\u003cli\u003emetrics API doesn\'t maintain the origin of metric instances, ie. the mapping back from a particular metric to a component that registered the metric is not supported. This makes it impossible to ask the API for all metrics for a component, which is what the \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e used to provide. On the other hand, the \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e API provides a much more structured view of related metrics even if they come from different components.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eTODOs:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003e\u003ctt\u003eSolrCore.infoRegistry\u003c\\/tt\u003e used to be central to the JMX reporting. Now that this functionality has been separated to JmxReporter and metrics API it only serves a limited purpose as an informative registry of plugins (plugin lifecycle is not managed by this registry). This information is then provided via PluginInfoHandler and SolrInfoMBeanHandler. We should decide whether to add more useful information here or to remove it completely.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15938183_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15938183_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Mar\\/17 12:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-23T12:19:56+0000\'\u003e23\\/Mar\\/17 12:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    This second round removes  SolrInfoMBean.getStatistics()  and replaces it with metrics. Even though the diff is sizeable it was a pretty straightforward replacement. All tests and precommit pass. \\n\\n However, there are some aspects of this round of changes that may raise a few eyebrows   so please speak up if they concern you: \\n \\n\\t back-compatibility is NOT preserved, in fact it\'s broken both at the level of Java APIs and REST APIs. I made sure that all statistics that were available via \\/admin\\/mbeans are also present in the metrics API, but metric paths are different from the \\/admin\\/mbeans paths, even though the metric names (their last elements) are almost always the same (I changed a few nonCamelCase names). \\n\\t SolrCache implementations used to return snapshots of their internal state as statistics, including optional details such as cache entries. This didn\'t play well with the metrics API, where all individual metrics should be registered in advance, and then unregistered when they are no longer necessary, because we didn\'t know when cache entries would be evicted. The solution was to implement a dynamic map-like metric  MetricsMap  that is registered as a single metric but returns a  Map  value. We may want to use the same approach for jetty metrics, too. \\n\\t metrics API doesn\'t maintain the origin of metric instances, ie. the mapping back from a particular metric to a component that registered the metric is not supported. This makes it impossible to ask the API for all metrics for a component, which is what the  \\/admin\\/mbeans  used to provide. On the other hand, the  \\/admin\\/metrics  API provides a much more structured view of related metrics even if they come from different components. \\n \\n\\n\\n TODOs: \\n \\n\\t  SolrCore.infoRegistry  used to be central to the JMX reporting. Now that this functionality has been separated to JmxReporter and metrics API it only serves a limited purpose as an informative registry of plugins (plugin lifecycle is not managed by this registry). This information is then provided via PluginInfoHandler and SolrInfoMBeanHandler. We should decide whether to add more useful information here or to remove it completely. \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15938187\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15938187&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15938187\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15938187_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15938187_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Mar\\/17 12:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-23T12:21:29+0000\'\u003e23\\/Mar\\/17 12:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eLatest patch, which is sizeable - it\'s probably better to review this as individual commits in branch \u003ctt\u003ejira\\/solr-9959\u003c\\/tt\u003e.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15938187_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15938187_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Mar\\/17 12:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-23T12:21:29+0000\'\u003e23\\/Mar\\/17 12:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Latest patch, which is sizeable - it\'s probably better to review this as individual commits in branch  jira\\/solr-9959 .              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15940224\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15940224&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15940224\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dsmiley\\\" id=\\\"commentauthor_15940224_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dsmiley\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dsmiley\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e David Smiley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15940224_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/Mar\\/17 12:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-24T12:10:54+0000\'\u003e24\\/Mar\\/17 12:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eSince this back-compat break is for 7.0, I think it\'s fine.  (I didn\'t review the patch)\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dsmiley\\\" id=\\\"commentauthor_15940224_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dsmiley\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dsmiley\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e David Smiley\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15940224_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/Mar\\/17 12:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-24T12:10:54+0000\'\u003e24\\/Mar\\/17 12:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Since this back-compat break is for 7.0, I think it\'s fine.  (I didn\'t review the patch)              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15944393\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15944393&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15944393\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15944393_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15944393_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Mar\\/17 01:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-28T01:56:51+0000\'\u003e28\\/Mar\\/17 01:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\\n\u003cp\u003eI don\'t understand this comment...\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003e... This makes it impossible to ask the API for all metrics for a component, which is what the \\/admin\\/mbeans used to provide. On the other hand, the \\/admin\\/metrics API provides a much more structured view of related metrics even if they come from different components.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eWhy is this impossible?\u003c\\/p\u003e\\n\\n\u003cp\u003eI see that on the jira\\/solr-9959 branch, using \u003ctt\u003e\\/admin\\/mbeans?stats=true\u003c\\/tt\u003e (and the Plugin\\/Stats screen in the UI) is useless (the stats param is now completely ignored) but meanwhile if I go to \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e I can \\\"ask\\\" for all of the stats for all components (or filter the list a variety of ways) ... so why can\'t \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e use the same code \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e to loop\\/filter over the reported metrics for each \\\"mbean\\\" ?\u003c\\/p\u003e\\n\\n\u003cp\u003eSpecifically...\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eSince I (as a user) can do these:\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003e\u003ca href=\\\"http:\\/\\/localhost:8983\\/solr\\/admin\\/metrics?group=solr.core.techproducts&amp;prefix=CACHE\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/localhost:8983\\/solr\\/admin\\/metrics?group=solr.core.techproducts&amp;prefix=CACHE\u003c\\/a\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ca href=\\\"http:\\/\\/localhost:8983\\/solr\\/admin\\/metrics?group=solr.core.techproducts&amp;prefix=CACHE.searcher.queryResultCache\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/localhost:8983\\/solr\\/admin\\/metrics?group=solr.core.techproducts&amp;prefix=CACHE.searcher.queryResultCache\u003c\\/a\u003e\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003eWhy can\'t I get the same info from these:\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003e\u003ca href=\\\"http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;cat=CACHE\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;cat=CACHE\u003c\\/a\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ca href=\\\"http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;cat=CACHE&amp;key=queryResultCache\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;cat=CACHE&amp;key=queryResultCache\u003c\\/a\u003e\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e?\u003c\\/p\u003e\\n\\n\u003cp\u003eI don\'t mind breaking back compat (particularly for internal java APIs) when needed to make overall improvements but in this case it seems like we\'re breaking HTTP request\\/param level APIs (and the Admin UI) unneccessarily if the underlying info is still accessible from \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003eAt worst it seems like maybe we could add a new \u003ctt\u003eSolrMetricManager.SuffixFilter\u003c\\/tt\u003e to let \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e \\\"search\\\" for metrics assocaited with the \u003ctt\u003ecat\u003c\\/tt\u003e and \u003ctt\u003ekey\u003c\\/tt\u003e combo it\'s currently dealing with as it loops over items?\u003c\\/p\u003e\\n\\n\u003cp\u003eBut AFAICT an even cleaner\\/simpler solution would be:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eadd a {{default MetricsMap getMetricsMap() \\n{return null;}\\n\u003cp\u003e }} to \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e (to replace \u003ctt\u003egetStatistics()\u003c\\/tt\u003e)\u003c\\/p\u003e\u003c\\/li\u003e\\n\\t\u003cli\u003eany class implementing both \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e and \u003ctt\u003eSolrMetricProducer\u003c\\/tt\u003e \u003cem\u003ecould\u003c\\/em\u003e implement \u003ctt\u003einitializeMetrics(...)\u003c\\/tt\u003e such that it keeps a private reference to a \u003ctt\u003eMetricsMap\u003c\\/tt\u003e it registers &amp; return that from \u003ctt\u003egetMetricsMap()\u003c\\/tt\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003emany of the \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e classes already seem to be maintaining a \u003ctt\u003eprivate MetricsMap metricsMap;\u003c\\/tt\u003e that is assigned in \u003ctt\u003einitializeMetrics(...)\u003c\\/tt\u003e but never used (in the class) after that\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e can call \u003ctt\u003egetMetricsMap()\u003c\\/tt\u003e on each \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e it loops over if \u003ctt\u003estats=true\u003c\\/tt\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e(I realize even if we do this a lot of things available from \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e still wouldn\'t be available from \u003ctt\u003e\\/admin\\/mbeans?stats=true\u003c\\/tt\u003e &#8211; but that\'s totally reasonable.  More significantly, this would &#8211; IIUC &#8211; let us ensure everything \u003cb\u003ecurrently\u003c\\/b\u003e available from \u003ctt\u003e\\/admin\\/mbeans?stats=true\u003c\\/tt\u003e is \u003cb\u003estill\u003c\\/b\u003e available moving forward, minimizing breakage for existing consumers of \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e.  If\\/when they want more advanced stuff, they can switch to \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e)\u003c\\/p\u003e\\n\\n\u003chr \\/\u003e\\n\\n\u003cp\u003eOther misc quesions\\/comments about the branch in no particular order...\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003ein general it would be helpful if this branch\\/jira included a text file listing all the major release-note\\/ref-guide updates needed once this lands so people can fully grasp whats changing from a users perspective: \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e vs \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e, enabling JMX, JMX config options no longer supported (see below), etc...\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003e\u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eWhy doesn\'t \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e expose an param for the \u003ctt\u003eSolrMetricManager.RegexFilter\u003c\\/tt\u003e ?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eMaybe it does and it\'s just not obvious?\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e(When) Are we going to expose \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e via the Admin UI?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eEven if we \\\"fix\\\" the problems w\\/ \u003ctt\u003e\\/admin\\/mbeans?stats=true\u003c\\/tt\u003e mentioned above (so that the Plugins\\/Stats screen starts working) having some sort of UI screen exposting \u003cb\u003eall\u003c\\/b\u003e the metrics now supported seems like a good idea.\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eIf we can\'t fix the \u003ctt\u003e\\/admin\\/mbeans?stats=true\u003c\\/tt\u003e the way i suggested above, then adding a roughly equivilent UI screens using \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e seems like it should be a blocker for landing this branch.\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eThis branch modifies the \u003ctt\u003eivy.xml\u003c\\/tt\u003e and IDE config files for dataimporthandler to have a compile dependency on \u003ctt\u003eio.dropwizard.metrics\\/metrics-core\u003c\\/tt\u003e &#8211; but that doesn\'t actaully seem to be neccessary to compile\\/test DIH\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003etemp\\/abandondoned API refactorying that needs reverted?\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003e\u003ctt\u003eLFUCache\u003c\\/tt\u003e and \u003ctt\u003eFastLRUCache\u003c\\/tt\u003e still have comments that refer to the (removed) \u003ctt\u003egetStatistics()\u003c\\/tt\u003e method.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eI see this comment about \u003ctt\u003efieldCache\u003c\\/tt\u003e registration in SolrCore...\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003eSolrFieldCacheBean solrFieldCacheBean = \u003cspan class=\\\"code-keyword\\\"\u003enew\u003c\\/span\u003e SolrFieldCacheBean();\\n\u003cspan class=\\\"code-comment\\\"\u003e\\/\\/ XXX \u003cspan class=\\\"code-keyword\\\"\u003ethis\u003c\\/span\u003e should be registered at the CONTAINER level because it\'s not core-specific!\\n\u003c\\/span\u003esolrFieldCacheBean.initializeMetrics(metricManager, coreMetricManager.getRegistryName(), \u003cspan class=\\\"code-keyword\\\"\u003enull\u003c\\/span\u003e);\\ninfoRegistry.put(\u003cspan class=\\\"code-quote\\\"\u003e\\\"fieldCache\\\"\u003c\\/span\u003e, solrFieldCacheBean);\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eSince \u003ctt\u003eUninvertingReader\u003c\\/tt\u003e is now a solr level class, and we\'re making non-compat changes for 7.0 anyway, why don\'t we:\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eRegister a \\\"global\\\" \u003ctt\u003enew SolrFieldCacheBean()\u003c\\/tt\u003e at the container level as the comment suggests we should.\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eAdd a new verion of \u003ctt\u003eUninvertinterReader.getUninvertedStats(IndexReader)\u003c\\/tt\u003e that filters the \u003ctt\u003eCacheEntry[]\u003c\\/tt\u003e based on the \u003ctt\u003eIndexReader.CacheKey\u003c\\/tt\u003e of the reader passed in ... \u003cem\u003eand any of it\'s leaf readers!\u003c\\/em\u003e\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eOr ... I suppose technically we should recursively use \u003ctt\u003ereader.getContext().getChildren()\u003c\\/tt\u003e because there might be intermediate wrappers? maybe?\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003euse the new \u003ctt\u003eUninvertinterReader.getUninvertedStats(IndexReader)\u003c\\/tt\u003e in a \u003ctt\u003enew SolrFieldCacheBean(searcher.getIndexReader())\u003c\\/tt\u003e registered at the core\\/searcher level via \u003ctt\u003eCACHE.searcher.fieldCache\u003c\\/tt\u003e (like all the other searcher\\/reader related caches)\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eEven if we want to punt the idea for a new \u003ctt\u003eUninvertinterReader.getUninvertedStats(IndexReader)\u003c\\/tt\u003e method to a new jira and wory about it later, I don\'t see any reason why \u003cem\u003ethis\u003c\\/em\u003e jira\\/branch shouldn\'t go ahead and move the \u003ctt\u003efieldCache\u003c\\/tt\u003e metrics to be a the container level (like the comment suggests)\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003efor backcompat, we can still (for now) put a \u003ctt\u003enew SolrFieldCacheBean()\u003c\\/tt\u003e in the \u003ctt\u003einfoRegistry\u003c\\/tt\u003e of every core ... assuming we \u003cem\u003ealso\u003c\\/em\u003e fix \u003ctt\u003e\\/admin\\/mbeans?stats=true\u003c\\/tt\u003e as i suggested above, then those \u003ctt\u003efieldCache\u003c\\/tt\u003e \\\"stats\\\" should still be available as they always have been \u003ctt\u003e\\/admin\\/mbean\u003c\\/tt\u003e users.\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eMetricType\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003ethis error (String) shouldn\'t be hardcoded, we should build it up from \u003ctt\u003eEnumSet.allOf(MetricType.class)\u003c\\/tt\u003e...\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e    } \u003cspan class=\\\"code-keyword\\\"\u003ecatch\u003c\\/span\u003e (IllegalArgumentException e) {\\n      \u003cspan class=\\\"code-keyword\\\"\u003ethrow\u003c\\/span\u003e \u003cspan class=\\\"code-keyword\\\"\u003enew\u003c\\/span\u003e SolrException(SolrException.ErrorCode.BAD_REQUEST, \u003cspan class=\\\"code-quote\\\"\u003e\\\"Invalid metric type in: \\\"\u003c\\/span\u003e + types + \u003cspan class=\\\"code-quote\\\"\u003e\\\" specified. Must be one of (all, meter, timer, histogram, counter, gauge)\\\"\u003c\\/span\u003e, e);\\n    }\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eWe could have a \u003ctt\u003epublic static final String SUPPORTED_TYPES_MSG = ...\u003c\\/tt\u003e in \u003ctt\u003eMetricType\u003c\\/tt\u003e to create this String-ified list only once on class load.\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eJMX, in general, doesn\'t seem to be working as documented (in the ref guide) for the examples on this branch\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eie: \u003ctt\u003ebin\\/solr -e techproducts -Dcom.sun.management.jmxremote\u003c\\/tt\u003e + jconsole shows no (solr) level metrics\\/stats.\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eIt appears this is because (on this branch) solr metrics are only exposed via JMX if there is a \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e configured in \u003ctt\u003esolr.xml\u003c\\/tt\u003e ?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eif so this is a pretty big change, and definitely needs some docs\\/release noting it.\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eIt also raises some big questions:\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eShould \u003ctt\u003esolr\\/server\\/solr\\/solr.xml\u003c\\/tt\u003e be updated to include \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e so it works with the examples ?\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eAt a minimum should it be updated to conditionally set a reporter based on sysprops by \u003ctt\u003ebin\\/solr\u003c\\/tt\u003e based on \u003ctt\u003eENABLE_REMOTE_JMX_OPTS\u003c\\/tt\u003e ?\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ePersonally, I think we should consider implicitly registering a \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e based on the same criteria that are currently checked on master when an empty \u003ctt\u003e&lt;jmx\\/&gt;\u003c\\/tt\u003e is found: \u003ctt\u003enull!=JmxUtil.findFirstMBeanServer()\u003c\\/tt\u003e\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003ethat way if users configure a JMX MBeanServer via \u003ctt\u003ebin\\/solr\u003c\\/tt\u003e or \u003ctt\u003esolr.in.sh\u003c\\/tt\u003e options, they\'ll automatically get Solr Metrics exposed via JMX\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003ethe only reason the \u003cem\u003e\u003cb\u003every\u003c\\/b\u003e\u003c\\/em\u003e legacy \u003ctt\u003eJmxMonitoredMap\u003c\\/tt\u003e based code was written to require \u003ctt\u003e&lt;jmx\\/&gt;\u003c\\/tt\u003e before doing any of this was in case a user was deplying Solr to an appserver along with many other apps, and you \u003cb\u003eonly\u003c\\/b\u003e wanted JMX stats from your appserver or other apps &#8211; but not Solr.\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eThat ship has sailed and I don\'t think we need to worry about it.\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eif people start \u003ctt\u003ebin\\/solr\u003c\\/tt\u003e with options to enable JMX, let\'s go ahead and expose Solr Metrics via JMX\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eif, for some reason, some users really want jetty level JMX stats, but not solr level JMX, then let\'s offer some type of option to \u003cem\u003edisable\u003c\\/em\u003e Solr level JMX metric reporting ... perhaps a \u003ctt\u003eNoopSolrJmxReporter\u003c\\/tt\u003e they can be configure in \u003ctt\u003esolr.xml\u003c\\/tt\u003e ?\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eSolrConfig &amp; JmxMonitoredMap\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003ewith these changes, it\'s very clear that \u003ctt\u003e&lt;jmx ...\\/&gt;\u003c\\/tt\u003e configuration in \u003ctt\u003esolrconfig.xml\u003c\\/tt\u003e is now deliberately ignored, but...\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003enearly all of the sample (and many of the test) \u003ctt\u003esolrconfig.xml\u003c\\/tt\u003e files on this branch still include\\/document \u003ctt\u003e&lt;jmx ...\\/&gt;\u003c\\/tt\u003e and it\'s varous options.  All of that still needs cleaned up on this branch before merging to master.\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eat a minimum: if a \u003ctt\u003e&lt;jmx\\/&gt;\u003c\\/tt\u003e XML node is found in a \u003ctt\u003esolrconfig.xml\u003c\\/tt\u003e file, Solr should log a WARN\\/ERROR w\\/message indicating that syntax is no longer supported &amp; being ignored (and give people a pointer to the new way to configure JMX)\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ehow much of the existing config options that \u003ctt\u003e&lt;jmx ...\\/&gt;\u003c\\/tt\u003e supports are\\/should be available with \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e in \u003ctt\u003esolr.xml\u003c\\/tt\u003e ?\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ethe old style config supported \u003cb\u003eper-core\u003c\\/b\u003e \u003ctt\u003eagentId\u003c\\/tt\u003e, \u003ctt\u003eserviceUrl\u003c\\/tt\u003e, or \u003ctt\u003erootName\u003c\\/tt\u003e attributes...\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003e\u003ctt\u003erootName\u003c\\/tt\u003e doesn\'t seem to be supported in \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003ethis is probably fine.\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003ethat option dates back to deploying multiple solr.war files to a single appserver, something we\'re not supporting anymore\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003ethe \u003ctt\u003eagentId\u003c\\/tt\u003e option was created to address the possibility of multiple JMX MBeanServers existing in the JVM on startup (possible because multiple apps each launched their own) and this way you could deterministicly indicate which one Solr should service it\'s stats from.\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eit looks like this is currently supported by \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e, but i\'m not sure if it needs to be? i guess it doesn\'t hurt?\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003ehow \u003ctt\u003eserviceUrl\u003c\\/tt\u003e is handled is something I\'m more on the concerned about...\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003ethe use case motivation of supporting this attribute in the \u003ctt\u003e&lt;jmx ... \\/&gt;\u003c\\/tt\u003e config syntax was that the JVM might\\/might-not be configured to service a platform level MBeanServer and serve jVM metrics, but each individual core could individually run it\'s own MBeanServer (w\\/it\'s own port &amp; security options) &#8211; to better isolate what stats diff JMX clients could see.\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eThis \u003ctt\u003eserviceUrl\u003c\\/tt\u003e feature never really evolved with SolrCloud, but perhaps now is the time when it should?\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eAs implemented in \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e this appears (AFAICT) to now only be configurable at a \\\"container wide\\\" level (in \u003ctt\u003esolr.xml\u003c\\/tt\u003e)\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eIt would be nice if there was a way to configure multiple JMX MBeanServer instances (on each solr node) that only expose metrics from specific collections (such that metrics from those collections would not be available via the platform MBeanServer even if it was enabled via started by the command line options).\\n\\t\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\\t\u003cli\u003eNot sure if\\/where\\/how it would make sense to expose some configuration like this, or even if it\'s worth pursuing (let alone pursuing right now) but I wanted to point out the original point of \u003ctt\u003eserviceUrl\u003c\\/tt\u003e in case anyone has any ideas.\u003c\\/li\u003e\\n\\t\\t\\t\\t\\t\u003cli\u003eCould we perhaps enhance the \u003ctt\u003eSolrMetricReporter\u003c\\/tt\u003e base class so that all types of reporters could be configured with inclusion\\/exclusion rules based on collection name?\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eTesting JMX w\\/solr.xml changes...\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eI manually modified \u003ctt\u003esolr\\/server\\/solr\\/solr.xml\u003c\\/tt\u003e to include a \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e to continue to test JMX support\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eWith this change, using \u003ctt\u003ebin\\/solr -e techproducts -Dcom.sun.management.jmxremote\u003c\\/tt\u003e + jconsole did start to expose a lot of metrics via JMX &#8211; but many of the solr realated MBeans exposed don\'t seem very useful...\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eNotably: when I went to look at the \u003ctt\u003eCACHE\u003c\\/tt\u003e related MBeans (ex: filterCache), each one was exposing only a single \\\"Attribute\\\" named \\\"Value\\\" (with MBeanAttributeValueInfo.Type==Object) which appears to contain the toString (or perhaps an array of name=value strings?) of the various cache stats (ie: lookups, cumulative_lookups, hitratio, etc...)\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eThis is vastly different from master where this sort of toString info is used as the MBean\'s \u003cem\u003eDescription\u003c\\/em\u003e but each one of those individual \\\"metrics\\\" are exposed as individual MBean \u003cem\u003eAttributes\u003c\\/em\u003e with the expected MBeanAttributeValueInfo.Type (Long, Long, Float, etc...)\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eEven in the single \\\"Value\\\" Attribute that is exposed, some really useful info currently available as MBean Attributes seems to be missing, notably: \\\"description\\\" (from the toString()), and \\\"name\\\" (the class implementing the cache)\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eNot being able to access the individual (strongly typed!) cache \\\"stats\\\" as MBean Attributes seems like a major step backwards?\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eperplexingly, w\\/ the modified \u003ctt\u003esolr.xml\u003c\\/tt\u003e file, running \u003ctt\u003ebin\\/solr -e techproducts\u003c\\/tt\u003e (NOTE: no command line args to use JMX) still caused Solr to run an MBeanServer that I could connect to with jconsole and use to view the same solr metrics.\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003epresumably this is because of the this code in \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e which doesn\'t really make sense to me....\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e      ManagementFactory.getPlatformMBeanServer(); \u003cspan class=\\\"code-comment\\\"\u003e\\/\\/ Ensure at least one MBeanServer is available.\u003c\\/span\u003e\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eSetting asside my earlier suggestions that we should consider changing our \\\"default\\\" behavior when \u003ctt\u003ebin\\/solr\u003c\\/tt\u003e \\/ \u003ctt\u003esolr.in.sh\u003c\\/tt\u003e is configured to run the JVM with JMX enabled, this code as is doesn\'t follow the existing precendent of \u003ctt\u003eJmxMonitoredMap\u003c\\/tt\u003e to be a no-op unless:\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003ean MBeanServer is started at the process\\/appserver level (ie: command line args)\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003ean agentId or serviceUrl is explicitly configured\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eIn general it seems like the the \u003cem\u003eintended\u003c\\/em\u003e where\\/how\\/why to configure Solr to publish metrics via JMX is now fairly confusing...\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eif the intent here is that moving forward users \u003cem\u003emust\u003c\\/em\u003e configure a \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e in \u003ctt\u003esolr.xml\u003c\\/tt\u003e, and they \u003cem\u003emust\u003c\\/em\u003e configure a \u003ctt\u003eserviceUrl\u003c\\/tt\u003e at that point to control access, then we definitely need to think through how we\'re deprecating\\/replacing the various things \u003ctt\u003ebin\\/solr\u003c\\/tt\u003e currently does with \u003ctt\u003eENABLE_REMOTE_JMX_OPTS=true\u003c\\/tt\u003e (and if\\/how serviceUrl\'s can support configuration of things like \u003ctt\u003ecom.sun.management.jmxremote.local.only\u003c\\/tt\u003e, etc...  &#8211; i have no idea if they can)\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eMy 2cents: expanding on my suggestion above regarding solr\'s default JMX behavior...\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eI think all calls to \u003ctt\u003eManagementFactory.getPlatformMBeanServer()\u003c\\/tt\u003e should be removed from \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e, and that class should be a No-Op unless: either agentId\\/serviceUrl is explicitly configured \u003cb\u003eOR\u003c\\/b\u003e an already existing MBeanServer is found (via \u003ctt\u003eJmxUtil.findFirstMBeanServer()\u003c\\/tt\u003e)\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eI think that if no metrics reporters (or perhaps specifically no \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e instances?) are configured in \u003ctt\u003esolr.xml\u003c\\/tt\u003e, CoreContainer (or some equivilent) should check \u003ctt\u003eJmxUtil.findFirstMBeanServer()\u003c\\/tt\u003e and implicily register an \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e instance if the MBeanServer is non-null.\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003ethat way command line JVM options (should be) the end all be decider as to whether a Platform MBeanServer is launched, and if so: then Solr metrics be exposed via JMX by default.  If users want something more fancy they can override with explicit \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e \\/ \u003ctt\u003eSolrJmxNoopReporter\u003c\\/tt\u003e configurations\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eother uses of \u003ctt\u003eManagementFactory.getPlatformMBeanServer()\u003c\\/tt\u003e ...\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eI see now that as part of the earlier metrics work, \u003ctt\u003eSolrDispatchFilter\u003c\\/tt\u003e was also modified to call \u003ctt\u003eManagementFactory.getPlatformMBeanServer()\u003c\\/tt\u003e &#8211; evidently so that the Metrics API can access JVM level MBeans?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eThis explains why (on both this branch and on master) running \u003ctt\u003ebin\\/solr\u003c\\/tt\u003e is all it takes to be able to connect to the process via jconsole &#8211; even w\\/o \u003ctt\u003esolr.xml\u003c\\/tt\u003e changes or command line args requesting that the JVM enable JMX services.\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eI don\'t think it\'s a good idea for Solr to be forcing the JVM to spin up MBeanServer instances &amp; accepting JMX connections, w\\/o the user running\\/configuring solr explicitly requesting that &#8211; particularly in the case of this \u003ctt\u003eSolrDispatchFilter\u003c\\/tt\u003e code which seems to run even if the user doesn\'t care about metrics\\/JMX at all!\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eIt seems like the \u003ctt\u003eBufferPoolMetricSet\u003c\\/tt\u003e and \u003ctt\u003eOperatingSystemMetricSet\u003c\\/tt\u003e classes used in \u003ctt\u003eSolrDispatchFilter\u003c\\/tt\u003e should probably be using the various \u003ctt\u003e*MXBean\u003c\\/tt\u003e impls available directly from \u003ctt\u003eManagementFactory\u003c\\/tt\u003e w\\/o needing an MBeanServer to be running\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003esee examples of doing this in \u003ctt\u003eSystemInfoHandler\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003ebut if an \u003ctt\u003eMBeanServer\u003c\\/tt\u003e is really the only way to bridge these type of OS\\/JVM level info into the metrics code then at a minimum we should change \u003ctt\u003eSolrDispatchFilter\u003c\\/tt\u003e to also use \u003ctt\u003eJmxUtil.findFirstMBeanServer()\u003c\\/tt\u003e and if the \u003ctt\u003eMBeanServer\u003c\\/tt\u003e returned is null skip registering these metrics (in their place: log an info message, and\\/or register a simple String constnat metric, that certain metrics are only available if JMX is enabled)\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eIn general, I think it\'s a really bad idea for any (non-test) Solr level code to be calling \u003ctt\u003eManagementFactory.getPlatformMBeanServer()\u003c\\/tt\u003e ... we should probably consider marking it as a forbidden-api!\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eI\'m -1 on removing \u003ctt\u003eTestJmxIntegration\u003c\\/tt\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eif we need to change the JMX ObjectNames we look for to match the new metrics based code, and\\/or change the test init to ensure \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e is used by the CoreContainer (depending on what decisions are made about default behavior) &#8211; then so be it.\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ebut it seems really important to have a simple test like this sanity checking some simple Solr metrics via a JMX \u003ctt\u003eMBeanServer\u003c\\/tt\u003e\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eYes i see \u003ctt\u003eCollectionsAPIDistributedZkTest\u003c\\/tt\u003e and \u003ctt\u003eSolrJmxReporterTest\u003c\\/tt\u003e...\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003e\u003ctt\u003eCollectionsAPIDistributedZkTest\u003c\\/tt\u003e is trusting the JMX stats to check that instanceDirs don\'t collide, not doing anything to ensure that JMX is reutrning expected values.   (Independent of the current Jira, this test should almost certaily be re-written to check this some other way)\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003e\u003ctt\u003eSolrJmxReporterTest\u003c\\/tt\u003e creates some random metrics &#8211; that\'s not really a good \u003cem\u003eintegration\u003c\\/em\u003e test of the metrics\\/JMX code to check that external clients can find specific Solr metrics like Searcher\'s \\\"numDocs\\\" (or filterCache\'s \\\"lookups\\\"), or that the values of those metrics are updated when expected (and to the expected value) based on actions that happen in solr (ie: docs added to the index, queries executed with an fq, etc...)\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eRequestHandlersTest\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003etestStatistics has been removed, but why isn\'t there a new equivilent replacement test\\/asserts using some internal metrics API?\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eCollectionsAPIDistributedZkTest\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eNote this change...\\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003e         } catch (Exception e) {\\n+          log.info(e.toString());\\n           \\/\\/ ignore, just continue - probably a \\\"category\\\" or \\\"source\\\" attribute\\n           \\/\\/ not found\\n         }\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eif this comment is still valid: then logging the exception here seems like shot term debuging code that should not be committed\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eif this comment is no longer valid based on the other changes in the loop above this, then the comment should be deleted\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eif the log message is still useful, then it should log the \u003ctt\u003eException\u003c\\/tt\u003e (w\\/stack trace), not the \u003ctt\u003etoString()\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eMetricUtils\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eall of these (newly) public methods should have javadocs explaining their function \\/ intended purpose\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eSolrCore\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eusing \u003ctt\u003e&#95;notset&#95;\u003c\\/tt\u003e and \u003ctt\u003e&#95;auto&#95;\u003c\\/tt\u003e as special values here for the collection &amp; shardId metrics seems like a really bad idea.  In both cases...\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eif we\'re not in cloud mode, then it seems like we shouldn\'t report a collection name or a shardId as part of the metrics at all\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eif we\'re in cloud mode, then isn\'t it an error if either collection name or shardId are null?\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eeven if there is some situation i\'m not thinking of where these might be legitimately null (in cloud mode), can\'t\\/shouldn\'t we just return \u003ctt\u003eNULL\u003c\\/tt\u003e for these metric instead of trying to use magic string values that client code might missinterpret?\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eif \u003ctt\u003eNULL\u003c\\/tt\u003e isn\'t an option, then throwing an exception seems better then using magic strings that might be missinterpreted\\/missused by client code\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eIE: I\'d rather some automated client code get a failure trying to access the metric named \\\"collection\\\" then get a value that the client code might try to use down the line to query for a collection and gets a weird 404 error later.\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15944393_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15944393_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Mar\\/17 01:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-28T01:56:51+0000\'\u003e28\\/Mar\\/17 01:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n\\n I don\'t understand this comment... \\n\\n  ... This makes it impossible to ask the API for all metrics for a component, which is what the \\/admin\\/mbeans used to provide. On the other hand, the \\/admin\\/metrics API provides a much more structured view of related metrics even if they come from different components.  \\n\\n Why is this impossible? \\n\\n I see that on the jira\\/solr-9959 branch, using  \\/admin\\/mbeans?stats=true  (and the Plugin\\/Stats screen in the UI) is useless (the stats param is now completely ignored) but meanwhile if I go to  \\/admin\\/metrics  I can \\\"ask\\\" for all of the stats for all components (or filter the list a variety of ways) ... so why can\'t  \\/admin\\/mbeans  use the same code  \\/admin\\/metrics  to loop\\/filter over the reported metrics for each \\\"mbean\\\" ? \\n\\n Specifically... \\n\\n \\n\\t Since I (as a user) can do these:\\n\\t \\n\\t\\t  http:\\/\\/localhost:8983\\/solr\\/admin\\/metrics?group=solr.core.techproducts&amp;prefix=CACHE  \\n\\t\\t  http:\\/\\/localhost:8983\\/solr\\/admin\\/metrics?group=solr.core.techproducts&amp;prefix=CACHE.searcher.queryResultCache  \\n\\t \\n\\t \\n\\t Why can\'t I get the same info from these:\\n\\t \\n\\t\\t  http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;cat=CACHE  \\n\\t\\t  http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;cat=CACHE&amp;key=queryResultCache  \\n\\t \\n\\t \\n \\n\\n\\n ? \\n\\n I don\'t mind breaking back compat (particularly for internal java APIs) when needed to make overall improvements but in this case it seems like we\'re breaking HTTP request\\/param level APIs (and the Admin UI) unneccessarily if the underlying info is still accessible from  \\/admin\\/metrics . \\n\\n At worst it seems like maybe we could add a new  SolrMetricManager.SuffixFilter  to let  \\/admin\\/mbeans  \\\"search\\\" for metrics assocaited with the  cat  and  key  combo it\'s currently dealing with as it loops over items? \\n\\n But AFAICT an even cleaner\\/simpler solution would be: \\n \\n\\t add a {{default MetricsMap getMetricsMap() \\n{return null;}\\n  }} to  SolrInfoBean  (to replace  getStatistics() )  \\n\\t any class implementing both  SolrInfoBean  and  SolrMetricProducer   could  implement  initializeMetrics(...)  such that it keeps a private reference to a  MetricsMap  it registers &amp; return that from  getMetricsMap() \\n\\t \\n\\t\\t many of the  SolrInfoBean  classes already seem to be maintaining a  private MetricsMap metricsMap;  that is assigned in  initializeMetrics(...)  but never used (in the class) after that \\n\\t \\n\\t \\n\\t  \\/admin\\/mbeans  can call  getMetricsMap()  on each  SolrInfoBean  it loops over if  stats=true  \\n \\n\\n\\n (I realize even if we do this a lot of things available from  \\/admin\\/metrics  still wouldn\'t be available from  \\/admin\\/mbeans?stats=true  &#8211; but that\'s totally reasonable.  More significantly, this would &#8211; IIUC &#8211; let us ensure everything  currently  available from  \\/admin\\/mbeans?stats=true  is  still  available moving forward, minimizing breakage for existing consumers of  \\/admin\\/mbeans .  If\\/when they want more advanced stuff, they can switch to  \\/admin\\/metrics ) \\n\\n \\n\\n Other misc quesions\\/comments about the branch in no particular order... \\n\\n \\n\\t in general it would be helpful if this branch\\/jira included a text file listing all the major release-note\\/ref-guide updates needed once this lands so people can fully grasp whats changing from a users perspective:  \\/admin\\/mbeans  vs  \\/admin\\/metrics , enabling JMX, JMX config options no longer supported (see below), etc... \\n \\n\\n\\n \\n\\t  \\/admin\\/metrics \\n\\t \\n\\t\\t Why doesn\'t  \\/admin\\/metrics  expose an param for the  SolrMetricManager.RegexFilter  ?\\n\\t\\t \\n\\t\\t\\t Maybe it does and it\'s just not obvious? \\n\\t\\t \\n\\t\\t \\n\\t\\t (When) Are we going to expose  \\/admin\\/metrics  via the Admin UI?\\n\\t\\t \\n\\t\\t\\t Even if we \\\"fix\\\" the problems w\\/  \\/admin\\/mbeans?stats=true  mentioned above (so that the Plugins\\/Stats screen starts working) having some sort of UI screen exposting  all  the metrics now supported seems like a good idea. \\n\\t\\t\\t If we can\'t fix the  \\/admin\\/mbeans?stats=true  the way i suggested above, then adding a roughly equivilent UI screens using  \\/admin\\/metrics  seems like it should be a blocker for landing this branch. \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t This branch modifies the  ivy.xml  and IDE config files for dataimporthandler to have a compile dependency on  io.dropwizard.metrics\\/metrics-core  &#8211; but that doesn\'t actaully seem to be neccessary to compile\\/test DIH\\n\\t \\n\\t\\t temp\\/abandondoned API refactorying that needs reverted? \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t  LFUCache  and  FastLRUCache  still have comments that refer to the (removed)  getStatistics()  method. \\n \\n\\n\\n \\n\\t I see this comment about  fieldCache  registration in SolrCore...\\n  \\n SolrFieldCacheBean solrFieldCacheBean =  new  SolrFieldCacheBean();\\n \\/\\/ XXX  this  should be registered at the CONTAINER level because it\'s not core-specific!\\n solrFieldCacheBean.initializeMetrics(metricManager, coreMetricManager.getRegistryName(),  null );\\ninfoRegistry.put( \\\"fieldCache\\\" , solrFieldCacheBean);\\n \\n  \\n\\t \\n\\t\\t Since  UninvertingReader  is now a solr level class, and we\'re making non-compat changes for 7.0 anyway, why don\'t we:\\n\\t\\t \\n\\t\\t\\t Register a \\\"global\\\"  new SolrFieldCacheBean()  at the container level as the comment suggests we should. \\n\\t\\t\\t Add a new verion of  UninvertinterReader.getUninvertedStats(IndexReader)  that filters the  CacheEntry[]  based on the  IndexReader.CacheKey  of the reader passed in ...  and any of it\'s leaf readers! \\n\\t\\t\\t \\n\\t\\t\\t\\t Or ... I suppose technically we should recursively use  reader.getContext().getChildren()  because there might be intermediate wrappers? maybe? \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t use the new  UninvertinterReader.getUninvertedStats(IndexReader)  in a  new SolrFieldCacheBean(searcher.getIndexReader())  registered at the core\\/searcher level via  CACHE.searcher.fieldCache  (like all the other searcher\\/reader related caches) \\n\\t\\t \\n\\t\\t \\n\\t\\t Even if we want to punt the idea for a new  UninvertinterReader.getUninvertedStats(IndexReader)  method to a new jira and wory about it later, I don\'t see any reason why  this  jira\\/branch shouldn\'t go ahead and move the  fieldCache  metrics to be a the container level (like the comment suggests)\\n\\t\\t \\n\\t\\t\\t for backcompat, we can still (for now) put a  new SolrFieldCacheBean()  in the  infoRegistry  of every core ... assuming we  also  fix  \\/admin\\/mbeans?stats=true  as i suggested above, then those  fieldCache  \\\"stats\\\" should still be available as they always have been  \\/admin\\/mbean  users. \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t MetricType\\n\\t \\n\\t\\t this error (String) shouldn\'t be hardcoded, we should build it up from  EnumSet.allOf(MetricType.class) ...\\n  \\n     }  catch  (IllegalArgumentException e) {\\n       throw   new  SolrException(SolrException.ErrorCode.BAD_REQUEST,  \\\"Invalid metric type in: \\\"  + types +  \\\" specified. Must be one of (all, meter, timer, histogram, counter, gauge)\\\" , e);\\n    }\\n \\n   \\n\\t\\t We could have a  public static final String SUPPORTED_TYPES_MSG = ...  in  MetricType  to create this String-ified list only once on class load. \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t JMX, in general, doesn\'t seem to be working as documented (in the ref guide) for the examples on this branch\\n\\t \\n\\t\\t ie:  bin\\/solr -e techproducts -Dcom.sun.management.jmxremote  + jconsole shows no (solr) level metrics\\/stats. \\n\\t\\t It appears this is because (on this branch) solr metrics are only exposed via JMX if there is a  SolrJmxReporter  configured in  solr.xml  ?\\n\\t\\t \\n\\t\\t\\t if so this is a pretty big change, and definitely needs some docs\\/release noting it. \\n\\t\\t\\t It also raises some big questions:\\n\\t\\t\\t \\n\\t\\t\\t\\t Should  solr\\/server\\/solr\\/solr.xml  be updated to include  SolrJmxReporter  so it works with the examples ? \\n\\t\\t\\t\\t At a minimum should it be updated to conditionally set a reporter based on sysprops by  bin\\/solr  based on  ENABLE_REMOTE_JMX_OPTS  ? \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t Personally, I think we should consider implicitly registering a  SolrJmxReporter  based on the same criteria that are currently checked on master when an empty  &lt;jmx\\/&gt;  is found:  null!=JmxUtil.findFirstMBeanServer() \\n\\t\\t \\n\\t\\t\\t that way if users configure a JMX MBeanServer via  bin\\/solr  or  solr.in.sh  options, they\'ll automatically get Solr Metrics exposed via JMX \\n\\t\\t\\t the only reason the   very   legacy  JmxMonitoredMap  based code was written to require  &lt;jmx\\/&gt;  before doing any of this was in case a user was deplying Solr to an appserver along with many other apps, and you  only  wanted JMX stats from your appserver or other apps &#8211; but not Solr.\\n\\t\\t\\t \\n\\t\\t\\t\\t That ship has sailed and I don\'t think we need to worry about it. \\n\\t\\t\\t\\t if people start  bin\\/solr  with options to enable JMX, let\'s go ahead and expose Solr Metrics via JMX \\n\\t\\t\\t\\t if, for some reason, some users really want jetty level JMX stats, but not solr level JMX, then let\'s offer some type of option to  disable  Solr level JMX metric reporting ... perhaps a  NoopSolrJmxReporter  they can be configure in  solr.xml  ? \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n\\n \\n\\t SolrConfig &amp; JmxMonitoredMap\\n\\t \\n\\t\\t with these changes, it\'s very clear that  &lt;jmx ...\\/&gt;  configuration in  solrconfig.xml  is now deliberately ignored, but...\\n\\t\\t \\n\\t\\t\\t nearly all of the sample (and many of the test)  solrconfig.xml  files on this branch still include\\/document  &lt;jmx ...\\/&gt;  and it\'s varous options.  All of that still needs cleaned up on this branch before merging to master. \\n\\t\\t\\t at a minimum: if a  &lt;jmx\\/&gt;  XML node is found in a  solrconfig.xml  file, Solr should log a WARN\\/ERROR w\\/message indicating that syntax is no longer supported &amp; being ignored (and give people a pointer to the new way to configure JMX) \\n\\t\\t \\n\\t\\t \\n\\t\\t how much of the existing config options that  &lt;jmx ...\\/&gt;  supports are\\/should be available with  SolrJmxReporter  in  solr.xml  ? \\n\\t\\t the old style config supported  per-core   agentId ,  serviceUrl , or  rootName  attributes...\\n\\t\\t \\n\\t\\t\\t  rootName  doesn\'t seem to be supported in  SolrJmxReporter \\n\\t\\t\\t \\n\\t\\t\\t\\t this is probably fine. \\n\\t\\t\\t\\t that option dates back to deploying multiple solr.war files to a single appserver, something we\'re not supporting anymore \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t the  agentId  option was created to address the possibility of multiple JMX MBeanServers existing in the JVM on startup (possible because multiple apps each launched their own) and this way you could deterministicly indicate which one Solr should service it\'s stats from.\\n\\t\\t\\t \\n\\t\\t\\t\\t it looks like this is currently supported by  SolrJmxReporter , but i\'m not sure if it needs to be? i guess it doesn\'t hurt? \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t how  serviceUrl  is handled is something I\'m more on the concerned about...\\n\\t\\t\\t \\n\\t\\t\\t\\t the use case motivation of supporting this attribute in the  &lt;jmx ... \\/&gt;  config syntax was that the JVM might\\/might-not be configured to service a platform level MBeanServer and serve jVM metrics, but each individual core could individually run it\'s own MBeanServer (w\\/it\'s own port &amp; security options) &#8211; to better isolate what stats diff JMX clients could see. \\n\\t\\t\\t\\t This  serviceUrl  feature never really evolved with SolrCloud, but perhaps now is the time when it should? \\n\\t\\t\\t\\t As implemented in  SolrJmxReporter  this appears (AFAICT) to now only be configurable at a \\\"container wide\\\" level (in  solr.xml ) \\n\\t\\t\\t\\t It would be nice if there was a way to configure multiple JMX MBeanServer instances (on each solr node) that only expose metrics from specific collections (such that metrics from those collections would not be available via the platform MBeanServer even if it was enabled via started by the command line options).\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t Not sure if\\/where\\/how it would make sense to expose some configuration like this, or even if it\'s worth pursuing (let alone pursuing right now) but I wanted to point out the original point of  serviceUrl  in case anyone has any ideas. \\n\\t\\t\\t\\t\\t Could we perhaps enhance the  SolrMetricReporter  base class so that all types of reporters could be configured with inclusion\\/exclusion rules based on collection name? \\n\\t\\t\\t\\t \\n\\t\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t Testing JMX w\\/solr.xml changes...\\n\\t \\n\\t\\t I manually modified  solr\\/server\\/solr\\/solr.xml  to include a  SolrJmxReporter  to continue to test JMX support \\n\\t\\t With this change, using  bin\\/solr -e techproducts -Dcom.sun.management.jmxremote  + jconsole did start to expose a lot of metrics via JMX &#8211; but many of the solr realated MBeans exposed don\'t seem very useful...\\n\\t\\t \\n\\t\\t\\t Notably: when I went to look at the  CACHE  related MBeans (ex: filterCache), each one was exposing only a single \\\"Attribute\\\" named \\\"Value\\\" (with MBeanAttributeValueInfo.Type==Object) which appears to contain the toString (or perhaps an array of name=value strings?) of the various cache stats (ie: lookups, cumulative_lookups, hitratio, etc...) \\n\\t\\t\\t This is vastly different from master where this sort of toString info is used as the MBean\'s  Description  but each one of those individual \\\"metrics\\\" are exposed as individual MBean  Attributes  with the expected MBeanAttributeValueInfo.Type (Long, Long, Float, etc...) \\n\\t\\t\\t Even in the single \\\"Value\\\" Attribute that is exposed, some really useful info currently available as MBean Attributes seems to be missing, notably: \\\"description\\\" (from the toString()), and \\\"name\\\" (the class implementing the cache) \\n\\t\\t\\t Not being able to access the individual (strongly typed!) cache \\\"stats\\\" as MBean Attributes seems like a major step backwards? \\n\\t\\t \\n\\t\\t \\n\\t\\t perplexingly, w\\/ the modified  solr.xml  file, running  bin\\/solr -e techproducts  (NOTE: no command line args to use JMX) still caused Solr to run an MBeanServer that I could connect to with jconsole and use to view the same solr metrics.\\n\\t\\t \\n\\t\\t\\t presumably this is because of the this code in  SolrJmxReporter  which doesn\'t really make sense to me....\\n  \\n       ManagementFactory.getPlatformMBeanServer();  \\/\\/ Ensure at least one MBeanServer is available. \\n \\n   \\n\\t\\t\\t Setting asside my earlier suggestions that we should consider changing our \\\"default\\\" behavior when  bin\\/solr  \\/  solr.in.sh  is configured to run the JVM with JMX enabled, this code as is doesn\'t follow the existing precendent of  JmxMonitoredMap  to be a no-op unless:\\n\\t\\t\\t \\n\\t\\t\\t\\t an MBeanServer is started at the process\\/appserver level (ie: command line args) \\n\\t\\t\\t\\t an agentId or serviceUrl is explicitly configured \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t In general it seems like the the  intended  where\\/how\\/why to configure Solr to publish metrics via JMX is now fairly confusing...\\n\\t\\t\\t \\n\\t\\t\\t\\t if the intent here is that moving forward users  must  configure a  SolrJmxReporter  in  solr.xml , and they  must  configure a  serviceUrl  at that point to control access, then we definitely need to think through how we\'re deprecating\\/replacing the various things  bin\\/solr  currently does with  ENABLE_REMOTE_JMX_OPTS=true  (and if\\/how serviceUrl\'s can support configuration of things like  com.sun.management.jmxremote.local.only , etc...  &#8211; i have no idea if they can) \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t My 2cents: expanding on my suggestion above regarding solr\'s default JMX behavior...\\n\\t\\t\\t \\n\\t\\t\\t\\t I think all calls to  ManagementFactory.getPlatformMBeanServer()  should be removed from  SolrJmxReporter , and that class should be a No-Op unless: either agentId\\/serviceUrl is explicitly configured  OR  an already existing MBeanServer is found (via  JmxUtil.findFirstMBeanServer() ) \\n\\t\\t\\t\\t I think that if no metrics reporters (or perhaps specifically no  SolrJmxReporter  instances?) are configured in  solr.xml , CoreContainer (or some equivilent) should check  JmxUtil.findFirstMBeanServer()  and implicily register an  SolrJmxReporter  instance if the MBeanServer is non-null. \\n\\t\\t\\t\\t that way command line JVM options (should be) the end all be decider as to whether a Platform MBeanServer is launched, and if so: then Solr metrics be exposed via JMX by default.  If users want something more fancy they can override with explicit  SolrJmxReporter  \\/  SolrJmxNoopReporter  configurations \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t other uses of  ManagementFactory.getPlatformMBeanServer()  ...\\n\\t \\n\\t\\t I see now that as part of the earlier metrics work,  SolrDispatchFilter  was also modified to call  ManagementFactory.getPlatformMBeanServer()  &#8211; evidently so that the Metrics API can access JVM level MBeans?\\n\\t\\t \\n\\t\\t\\t This explains why (on both this branch and on master) running  bin\\/solr  is all it takes to be able to connect to the process via jconsole &#8211; even w\\/o  solr.xml  changes or command line args requesting that the JVM enable JMX services. \\n\\t\\t\\t I don\'t think it\'s a good idea for Solr to be forcing the JVM to spin up MBeanServer instances &amp; accepting JMX connections, w\\/o the user running\\/configuring solr explicitly requesting that &#8211; particularly in the case of this  SolrDispatchFilter  code which seems to run even if the user doesn\'t care about metrics\\/JMX at all! \\n\\t\\t\\t It seems like the  BufferPoolMetricSet  and  OperatingSystemMetricSet  classes used in  SolrDispatchFilter  should probably be using the various  *MXBean  impls available directly from  ManagementFactory  w\\/o needing an MBeanServer to be running\\n\\t\\t\\t \\n\\t\\t\\t\\t see examples of doing this in  SystemInfoHandler  \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t but if an  MBeanServer  is really the only way to bridge these type of OS\\/JVM level info into the metrics code then at a minimum we should change  SolrDispatchFilter  to also use  JmxUtil.findFirstMBeanServer()  and if the  MBeanServer  returned is null skip registering these metrics (in their place: log an info message, and\\/or register a simple String constnat metric, that certain metrics are only available if JMX is enabled) \\n\\t\\t \\n\\t\\t \\n\\t\\t In general, I think it\'s a really bad idea for any (non-test) Solr level code to be calling  ManagementFactory.getPlatformMBeanServer()  ... we should probably consider marking it as a forbidden-api! \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t I\'m -1 on removing  TestJmxIntegration \\n\\t \\n\\t\\t if we need to change the JMX ObjectNames we look for to match the new metrics based code, and\\/or change the test init to ensure  SolrJmxReporter  is used by the CoreContainer (depending on what decisions are made about default behavior) &#8211; then so be it. \\n\\t\\t but it seems really important to have a simple test like this sanity checking some simple Solr metrics via a JMX  MBeanServer \\n\\t\\t \\n\\t\\t\\t Yes i see  CollectionsAPIDistributedZkTest  and  SolrJmxReporterTest ...\\n\\t\\t\\t \\n\\t\\t\\t\\t  CollectionsAPIDistributedZkTest  is trusting the JMX stats to check that instanceDirs don\'t collide, not doing anything to ensure that JMX is reutrning expected values.   (Independent of the current Jira, this test should almost certaily be re-written to check this some other way) \\n\\t\\t\\t\\t  SolrJmxReporterTest  creates some random metrics &#8211; that\'s not really a good  integration  test of the metrics\\/JMX code to check that external clients can find specific Solr metrics like Searcher\'s \\\"numDocs\\\" (or filterCache\'s \\\"lookups\\\"), or that the values of those metrics are updated when expected (and to the expected value) based on actions that happen in solr (ie: docs added to the index, queries executed with an fq, etc...) \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t RequestHandlersTest\\n\\t \\n\\t\\t testStatistics has been removed, but why isn\'t there a new equivilent replacement test\\/asserts using some internal metrics API? \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t CollectionsAPIDistributedZkTest\\n\\t \\n\\t\\t Note this change...\\n  \\n          } catch (Exception e) {\\n+          log.info(e.toString());\\n           \\/\\/ ignore, just continue - probably a \\\"category\\\" or \\\"source\\\" attribute\\n           \\/\\/ not found\\n         }\\n \\n   \\n\\t\\t if this comment is still valid: then logging the exception here seems like shot term debuging code that should not be committed \\n\\t\\t if this comment is no longer valid based on the other changes in the loop above this, then the comment should be deleted \\n\\t\\t if the log message is still useful, then it should log the  Exception  (w\\/stack trace), not the  toString()  \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t MetricUtils\\n\\t \\n\\t\\t all of these (newly) public methods should have javadocs explaining their function \\/ intended purpose \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t SolrCore\\n\\t \\n\\t\\t using  &#95;notset&#95;  and  &#95;auto&#95;  as special values here for the collection &amp; shardId metrics seems like a really bad idea.  In both cases...\\n\\t\\t \\n\\t\\t\\t if we\'re not in cloud mode, then it seems like we shouldn\'t report a collection name or a shardId as part of the metrics at all \\n\\t\\t\\t if we\'re in cloud mode, then isn\'t it an error if either collection name or shardId are null?\\n\\t\\t\\t \\n\\t\\t\\t\\t even if there is some situation i\'m not thinking of where these might be legitimately null (in cloud mode), can\'t\\/shouldn\'t we just return  NULL  for these metric instead of trying to use magic string values that client code might missinterpret? \\n\\t\\t\\t\\t if  NULL  isn\'t an option, then throwing an exception seems better then using magic strings that might be missinterpreted\\/missused by client code \\n\\t\\t\\t\\t IE: I\'d rather some automated client code get a failure trying to access the metric named \\\"collection\\\" then get a value that the client code might try to use down the line to query for a collection and gets a weird 404 error later. \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15945158\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15945158&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15945158\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15945158_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15945158_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Mar\\/17 13:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-28T13:29:17+0000\'\u003e28\\/Mar\\/17 13:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWow, thanks Hoss for a really thorough review!\u003c\\/p\u003e\\n\u003cblockquote\u003e\u003cp\u003eWhy is this impossible?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\u003cp\u003eEverything\'s possible, it\'s just bits and bytes \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/wink.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e but it\'s not always convenient. Components that register metrics are free to do so under different categories and keys, and in fact some of them already do register metrics under eg. CORE, DIRECTORY, and INDEX (from one component) - that\'s why I wrote that there\'s no natural 1:1 mapping from metric name back to a component that registered it - we would have to maintain this in a separate structure (which we can do, but it takes some additional space). So it\'s not true that exactly the same info is still available from \u003ctt\u003e\\/admin\\/metrics\u003c\\/tt\u003e as in \u003ctt\u003e\\/admin\\/mbeans?stats=true\u003c\\/tt\u003e.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eusing \\/admin\\/mbeans?stats=true (and the Plugin\\/Stats screen in the UI) is useless\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\u003cp\u003eThis can be replaced in the UI with a view of \\/admin\\/metrics, split by registry and category - but as explained above it won\'t map back 1:1 to specific components. Since \\/admin\\/mbeans is centered around individual mbeans we can\'t easily get back per-mbean stats unless we maintain some additional mapping, no matter what filtering criteria we use.\u003c\\/p\u003e\\n\\n\u003cp\u003eOne way to minimize this back-compat breakage would be to pretend that all metrics under a specific \u003ctt\u003eCATEGORY.key\u003c\\/tt\u003e map back to a particular component. This holds true for 90% of metrics and it would allow us to populate back the \\\"stats\\\" output from mbeans.\u003c\\/p\u003e\\n\\n\u003cp\u003eOther comments:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eagreed on adding some release note  \\/ guide material on this branch. I usually do this as a separate JIRA once the code is stable, but I can equally well put it in a file.\u003c\\/li\u003e\\n\\t\u003cli\u003eI\'ll add support for using regex filters in \\/admin\\/metrics\u003c\\/li\u003e\\n\\t\u003cli\u003eI added metrics-core as a dep. to DIH because IntelliJ complained about not being able to access it when registering a \u003ctt\u003eMetricsMap\u003c\\/tt\u003e, which is a \u003ctt\u003eGauge\u003c\\/tt\u003e - I guess it wants to be able to access all parent classes of the classes referenced here?\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003ctt\u003eMetricType\u003c\\/tt\u003e and SolrCore \u003ctt\u003e\u003cem\u003enotset\u003c\\/em\u003e\u003c\\/tt\u003e \\/ \u003ctt\u003e\u003cem\u003eauto\u003c\\/em\u003e\u003c\\/tt\u003e are issues inherited from master, I can fix them here or in a separate issue.\u003c\\/li\u003e\\n\\t\u003cli\u003eMBeanServer creation and back-compat sysprop and solrconfig options - very good points, we should make it work in a similar way, eg. instantiating the reporter and server when a \u003ctt\u003e&lt;jmx\\/&gt;\u003c\\/tt\u003e element is present even if no explicit \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e config is present.\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003esome of the metrics that we really wanted to report (eg. number of open file descriptors) used to be accessible via reflection, which is a no-no in JDK 9 - but they are exposed via platform MBeans. If we need to be more careful about starting up the server then we have to make these metrics optional (which unfortunately also means that we can\'t depend on them being always present).\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003etest changes - good points, I\'ll work on that.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cblockquote\u003e\u003cp\u003eCACHE related MBeans (ex: filterCache),\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\u003cp\u003eI knew it would be contentious \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/wink.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e That\'s the thing I mentioned above about \u003ctt\u003eMetricsMap\u003c\\/tt\u003e - and in fact if you click on this string representation in JConsole it will expand to a proper map. The pro of this approach is that we don\'t have to manage the lifecycle of cacheEntry -&gt; metric registration, the con is that we lose the type info.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15945158_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15945158_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Mar\\/17 13:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-28T13:29:17+0000\'\u003e28\\/Mar\\/17 13:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Wow, thanks Hoss for a really thorough review! \\n  Why is this impossible?  \\n Everything\'s possible, it\'s just bits and bytes   but it\'s not always convenient. Components that register metrics are free to do so under different categories and keys, and in fact some of them already do register metrics under eg. CORE, DIRECTORY, and INDEX (from one component) - that\'s why I wrote that there\'s no natural 1:1 mapping from metric name back to a component that registered it - we would have to maintain this in a separate structure (which we can do, but it takes some additional space). So it\'s not true that exactly the same info is still available from  \\/admin\\/metrics  as in  \\/admin\\/mbeans?stats=true . \\n\\n  using \\/admin\\/mbeans?stats=true (and the Plugin\\/Stats screen in the UI) is useless  \\n This can be replaced in the UI with a view of \\/admin\\/metrics, split by registry and category - but as explained above it won\'t map back 1:1 to specific components. Since \\/admin\\/mbeans is centered around individual mbeans we can\'t easily get back per-mbean stats unless we maintain some additional mapping, no matter what filtering criteria we use. \\n\\n One way to minimize this back-compat breakage would be to pretend that all metrics under a specific  CATEGORY.key  map back to a particular component. This holds true for 90% of metrics and it would allow us to populate back the \\\"stats\\\" output from mbeans. \\n\\n Other comments: \\n \\n\\t agreed on adding some release note  \\/ guide material on this branch. I usually do this as a separate JIRA once the code is stable, but I can equally well put it in a file. \\n\\t I\'ll add support for using regex filters in \\/admin\\/metrics \\n\\t I added metrics-core as a dep. to DIH because IntelliJ complained about not being able to access it when registering a  MetricsMap , which is a  Gauge  - I guess it wants to be able to access all parent classes of the classes referenced here? \\n\\t  MetricType  and SolrCore   notset   \\/   auto   are issues inherited from master, I can fix them here or in a separate issue. \\n\\t MBeanServer creation and back-compat sysprop and solrconfig options - very good points, we should make it work in a similar way, eg. instantiating the reporter and server when a  &lt;jmx\\/&gt;  element is present even if no explicit  SolrJmxReporter  config is present.\\n\\t \\n\\t\\t some of the metrics that we really wanted to report (eg. number of open file descriptors) used to be accessible via reflection, which is a no-no in JDK 9 - but they are exposed via platform MBeans. If we need to be more careful about starting up the server then we have to make these metrics optional (which unfortunately also means that we can\'t depend on them being always present). \\n\\t \\n\\t \\n\\t test changes - good points, I\'ll work on that. \\n \\n\\n\\n  CACHE related MBeans (ex: filterCache),  \\n I knew it would be contentious   That\'s the thing I mentioned above about  MetricsMap  - and in fact if you click on this string representation in JConsole it will expand to a proper map. The pro of this approach is that we don\'t have to manage the lifecycle of cacheEntry -&gt; metric registration, the con is that we lose the type info.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15946139\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15946139&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15946139\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15946139_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15946139_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Mar\\/17 23:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-28T23:02:29+0000\'\u003e28\\/Mar\\/17 23:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cblockquote\u003e\u003cp\u003eSo it\'s not true that exactly the same info is still available from \\/admin\\/metrics as in \\/admin\\/mbeans?stats=true.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eSure &#8211; i wasn\'t suggesting that the \u003cb\u003eexact\u003c\\/b\u003e same info was available (with the exact same names) &#8211; my point is that as things stand on the branch, from a users point of view:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003e\u003ctt\u003eadmin\\/mbeans\u003c\\/tt\u003e is virtually useless\u003c\\/li\u003e\\n\\t\u003cli\u003ethe \u003ctt\u003estats=true\u003c\\/tt\u003e param was explicitly removed\u003c\\/li\u003e\\n\\t\u003cli\u003ethere is no obviously straight forward replacement for users (particularly for the UI, and in conjunction with the \u003ctt\u003ediff\u003c\\/tt\u003e) option.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003emeanwhile, as a developer: there seems to be a relatively straight forward way to keep \u003cb\u003emost\u003c\\/b\u003e of the existing \u003ctt\u003eadmin\\/mbeans\u003c\\/tt\u003e functionality working (probably requiring clients to only some make some minor tweaks to the \\\"stat\\\" names they expect from each \\\"key\\\" in the \u003ctt\u003einfoRegistry\u003c\\/tt\u003e) for the foreseeable future &#8211; so why not make it work...\u003c\\/p\u003e\\n\u003cblockquote\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eadd a \u003ctt\u003edefault MetricsMap getMetricsMap() {return null;\u003c\\/tt\u003e} to \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e (to replace \u003ctt\u003egetStatistics()\u003c\\/tt\u003e)\u003c\\/li\u003e\\n\\t\u003cli\u003eany class implementing both \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e and \u003ctt\u003eSolrMetricProducer\u003c\\/tt\u003e \u003cem\u003ecould\u003c\\/em\u003e implement \u003ctt\u003einitializeMetrics(...)\u003c\\/tt\u003e such that it keeps a private reference to a \u003ctt\u003eMetricsMap\u003c\\/tt\u003e it registers &amp; return that from \u003ctt\u003egetMetricsMap()\u003c\\/tt\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003emany of the \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e classes already seem to be maintaining a \u003ctt\u003eprivate MetricsMap metricsMap;\u003c\\/tt\u003e that is assigned in \u003ctt\u003einitializeMetrics(...)\u003c\\/tt\u003e but never used (in the class) after that\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e can call \u003ctt\u003egetMetricsMap()\u003c\\/tt\u003e on each \u003ctt\u003eSolrInfoBean\u003c\\/tt\u003e it loops over if \u003ctt\u003estats=true\u003c\\/tt\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\u003c\\/blockquote\u003e\\n\u003cp\u003e...that seems easier then implementing equivalent Admin UI functionality based on \u003ctt\u003eadmin\\/metrics\u003c\\/tt\u003e (particularly in combination with the \\\"diff\\\" support) and would have other wins for other existing programtica consumers of \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eI added metrics-core as a dep. to DIH because IntelliJ complained about not being able to access it when registering a MetricsMap, which is a Gauge - I guess it wants to be able to access all parent classes of the classes referenced here?\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI don\'t know about IntelliJ orwhat it was trying to do, but you may want to double check that - it definitely wasn\'t needed in ivy (i tried removing it and everything compiled fine) \u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003e...very good points, we should make it work in a similar way, eg. instantiating the reporter and server when a &lt;jmx\\/&gt; element is present even if no explicit SolrJmxReporter config is present. \u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eTo be clear: the \u003ctt\u003e&lt;jmx\\/&gt;\u003c\\/tt\u003e element is solrconfig.xml specific, and the existing \\\"default\\\" logic is (whne no \u003ctt\u003e&lt;jmx\\/&gt;\u003c\\/tt\u003e exists) is probably \u003cem\u003enot\u003c\\/em\u003e the best given solr is now a standalone app.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt seems like moving forward it makes sense to keep metrics reporters like \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e configured at the solr.xml\\/container level &#8211; so moving forward with 7.0 and on, I definitely don\'t think we should use \u003cb\u003eexactly\u003c\\/b\u003e the same defaults as how it\'s worked in the past.  We can let our defaults be driven by the existince of an existing MBeanServer created by the JVM based on startup options, but we definitely should \u003cb\u003eNOT\u003c\\/b\u003e be calling \u003ctt\u003eManagementFactory.getPlatformMBeanServer()\u003c\\/tt\u003e and \u003cem\u003eforcing\u003c\\/em\u003e the JVM to create a platform MBeanServer.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003esome of the metrics that we really wanted to report (eg. number of open file descriptors) used to be accessible via reflection, which is a no-no in JDK 9 - but they are exposed via platform MBeans. If we need to be more careful about starting up the server then we have to make these metrics optional (which unfortunately also means that we can\'t depend on them being always present).\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003ePlease note there is an important difference between the platform \u003cb\u003eMBeans\u003c\\/b\u003e APIs and the (virtually identical) platform \u003cb\u003eMXBeans\u003c\\/b\u003e APIS ... i\'m not an expert but one thing i do know is that accessing the platform \u003cb\u003eMBeans\u003c\\/b\u003e requires an MBeanServer, but you can access MXBeans directly from the individual static methods in \u003ctt\u003eManagementFactory\u003c\\/tt\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eHence my point about taking a look at SystemInfoHandler: it uses \u003ctt\u003eManagementFactory.getOperatingSystemMXBean();\u003c\\/tt\u003e to fetch and \u003ctt\u003eOperatingSystemMXBean\u003c\\/tt\u003e (as well as using \u003ctt\u003eClass.forName()\u003c\\/tt\u003e to try and load some JVM vendor specific MXBeans as well) which gives access to all the same info as an \u003ctt\u003eOperatingSystemMBean\u003c\\/tt\u003e currently used in the \u003ctt\u003eOperatingSystemMetricSet\u003c\\/tt\u003e &#8211; \u003cb\u003ew\\/o needing an MbeanServer to be running\u003c\\/b\u003e.  This bean introspection code works in jdk9 just fine...\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003e...\\n  &lt;str name=\\\"name\\\"&gt;Linux&lt;\\/str&gt;\\n  &lt;str name=\\\"arch\\\"&gt;amd64&lt;\\/str&gt;\\n  &lt;int name=\\\"availableProcessors\\\"&gt;4&lt;\\/int&gt;\\n  &lt;double name=\\\"systemLoadAverage\\\"&gt;0.74&lt;\\/double&gt;\\n  &lt;str name=\\\"version\\\"&gt;3.19.0-51-generic&lt;\\/str&gt;\\n  &lt;long name=\\\"committedVirtualMemorySize\\\"&gt;4325052416&lt;\\/long&gt;\\n  &lt;long name=\\\"freePhysicalMemorySize\\\"&gt;3611639808&lt;\\/long&gt;\\n  &lt;long name=\\\"freeSwapSpaceSize\\\"&gt;16437768192&lt;\\/long&gt;\\n  &lt;double name=\\\"processCpuLoad\\\"&gt;0.010957238841522514&lt;\\/double&gt;\\n  &lt;long name=\\\"processCpuTime\\\"&gt;11510000000&lt;\\/long&gt;\\n  &lt;double name=\\\"systemCpuLoad\\\"&gt;0.19951374172457412&lt;\\/double&gt;\\n  &lt;long name=\\\"totalPhysicalMemorySize\\\"&gt;16513077248&lt;\\/long&gt;\\n  &lt;long name=\\\"totalSwapSpaceSize\\\"&gt;16860049408&lt;\\/long&gt;\\n  &lt;long name=\\\"maxFileDescriptorCount\\\"&gt;65536&lt;\\/long&gt;\\n  &lt;long name=\\\"openFileDescriptorCount\\\"&gt;170&lt;\\/long&gt;\\n...\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eSimilar info about BufferPools (the other place \u003ctt\u003eSolrDispatchFilter.setupJvmMetrics()\u003c\\/tt\u003e uses the MBeanServer) should be available via \u003ctt\u003eBufferPoolMXBean\u003c\\/tt\u003e , see example of how to get a list of these in the javadocs: \u003ca href=\\\"https:\\/\\/docs.oracle.com\\/javase\\/7\\/docs\\/api\\/java\\/lang\\/management\\/BufferPoolMXBean.html\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/docs.oracle.com\\/javase\\/7\\/docs\\/api\\/java\\/lang\\/management\\/BufferPoolMXBean.html\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003e... The pro of this approach is that we don\'t have to manage the lifecycle of cacheEntry -&gt; metric registration, the con is that we lose the type info.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eLosing type info for cache metrics is inconvinient, but losing and the ability to monitor individual cache metrics as individual JMX Attributes seems like a big loss.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15946139_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15946139_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Mar\\/17 23:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-03-28T23:02:29+0000\'\u003e28\\/Mar\\/17 23:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n  So it\'s not true that exactly the same info is still available from \\/admin\\/metrics as in \\/admin\\/mbeans?stats=true.  \\n\\n Sure &#8211; i wasn\'t suggesting that the  exact  same info was available (with the exact same names) &#8211; my point is that as things stand on the branch, from a users point of view: \\n \\n\\t  admin\\/mbeans  is virtually useless \\n\\t the  stats=true  param was explicitly removed \\n\\t there is no obviously straight forward replacement for users (particularly for the UI, and in conjunction with the  diff ) option. \\n \\n\\n\\n meanwhile, as a developer: there seems to be a relatively straight forward way to keep  most  of the existing  admin\\/mbeans  functionality working (probably requiring clients to only some make some minor tweaks to the \\\"stat\\\" names they expect from each \\\"key\\\" in the  infoRegistry ) for the foreseeable future &#8211; so why not make it work... \\n \\n \\n\\t add a  default MetricsMap getMetricsMap() {return null; } to  SolrInfoBean  (to replace  getStatistics() ) \\n\\t any class implementing both  SolrInfoBean  and  SolrMetricProducer   could  implement  initializeMetrics(...)  such that it keeps a private reference to a  MetricsMap  it registers &amp; return that from  getMetricsMap() \\n\\t \\n\\t\\t many of the  SolrInfoBean  classes already seem to be maintaining a  private MetricsMap metricsMap;  that is assigned in  initializeMetrics(...)  but never used (in the class) after that \\n\\t \\n\\t \\n\\t  \\/admin\\/mbeans  can call  getMetricsMap()  on each  SolrInfoBean  it loops over if  stats=true  \\n \\n \\n ...that seems easier then implementing equivalent Admin UI functionality based on  admin\\/metrics  (particularly in combination with the \\\"diff\\\" support) and would have other wins for other existing programtica consumers of  \\/admin\\/mbeans  \\n\\n  I added metrics-core as a dep. to DIH because IntelliJ complained about not being able to access it when registering a MetricsMap, which is a Gauge - I guess it wants to be able to access all parent classes of the classes referenced here?  \\n\\n I don\'t know about IntelliJ orwhat it was trying to do, but you may want to double check that - it definitely wasn\'t needed in ivy (i tried removing it and everything compiled fine)  \\n\\n  ...very good points, we should make it work in a similar way, eg. instantiating the reporter and server when a &lt;jmx\\/&gt; element is present even if no explicit SolrJmxReporter config is present.   \\n\\n To be clear: the  &lt;jmx\\/&gt;  element is solrconfig.xml specific, and the existing \\\"default\\\" logic is (whne no  &lt;jmx\\/&gt;  exists) is probably  not  the best given solr is now a standalone app. \\n\\n It seems like moving forward it makes sense to keep metrics reporters like  SolrJmxReporter  configured at the solr.xml\\/container level &#8211; so moving forward with 7.0 and on, I definitely don\'t think we should use  exactly  the same defaults as how it\'s worked in the past.  We can let our defaults be driven by the existince of an existing MBeanServer created by the JVM based on startup options, but we definitely should  NOT  be calling  ManagementFactory.getPlatformMBeanServer()  and  forcing  the JVM to create a platform MBeanServer. \\n\\n  some of the metrics that we really wanted to report (eg. number of open file descriptors) used to be accessible via reflection, which is a no-no in JDK 9 - but they are exposed via platform MBeans. If we need to be more careful about starting up the server then we have to make these metrics optional (which unfortunately also means that we can\'t depend on them being always present).  \\n\\n Please note there is an important difference between the platform  MBeans  APIs and the (virtually identical) platform  MXBeans  APIS ... i\'m not an expert but one thing i do know is that accessing the platform  MBeans  requires an MBeanServer, but you can access MXBeans directly from the individual static methods in  ManagementFactory  \\n\\n Hence my point about taking a look at SystemInfoHandler: it uses  ManagementFactory.getOperatingSystemMXBean();  to fetch and  OperatingSystemMXBean  (as well as using  Class.forName()  to try and load some JVM vendor specific MXBeans as well) which gives access to all the same info as an  OperatingSystemMBean  currently used in the  OperatingSystemMetricSet  &#8211;  w\\/o needing an MbeanServer to be running .  This bean introspection code works in jdk9 just fine... \\n\\n  \\n ...\\n  &lt;str name=\\\"name\\\"&gt;Linux&lt;\\/str&gt;\\n  &lt;str name=\\\"arch\\\"&gt;amd64&lt;\\/str&gt;\\n  &lt;int name=\\\"availableProcessors\\\"&gt;4&lt;\\/int&gt;\\n  &lt;double name=\\\"systemLoadAverage\\\"&gt;0.74&lt;\\/double&gt;\\n  &lt;str name=\\\"version\\\"&gt;3.19.0-51-generic&lt;\\/str&gt;\\n  &lt;long name=\\\"committedVirtualMemorySize\\\"&gt;4325052416&lt;\\/long&gt;\\n  &lt;long name=\\\"freePhysicalMemorySize\\\"&gt;3611639808&lt;\\/long&gt;\\n  &lt;long name=\\\"freeSwapSpaceSize\\\"&gt;16437768192&lt;\\/long&gt;\\n  &lt;double name=\\\"processCpuLoad\\\"&gt;0.010957238841522514&lt;\\/double&gt;\\n  &lt;long name=\\\"processCpuTime\\\"&gt;11510000000&lt;\\/long&gt;\\n  &lt;double name=\\\"systemCpuLoad\\\"&gt;0.19951374172457412&lt;\\/double&gt;\\n  &lt;long name=\\\"totalPhysicalMemorySize\\\"&gt;16513077248&lt;\\/long&gt;\\n  &lt;long name=\\\"totalSwapSpaceSize\\\"&gt;16860049408&lt;\\/long&gt;\\n  &lt;long name=\\\"maxFileDescriptorCount\\\"&gt;65536&lt;\\/long&gt;\\n  &lt;long name=\\\"openFileDescriptorCount\\\"&gt;170&lt;\\/long&gt;\\n...\\n \\n  \\n\\n Similar info about BufferPools (the other place  SolrDispatchFilter.setupJvmMetrics()  uses the MBeanServer) should be available via  BufferPoolMXBean  , see example of how to get a list of these in the javadocs:  https:\\/\\/docs.oracle.com\\/javase\\/7\\/docs\\/api\\/java\\/lang\\/management\\/BufferPoolMXBean.html  \\n\\n  ... The pro of this approach is that we don\'t have to manage the lifecycle of cacheEntry -&gt; metric registration, the con is that we lose the type info.  \\n\\n Losing type info for cache metrics is inconvinient, but losing and the ability to monitor individual cache metrics as individual JMX Attributes seems like a big loss.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15955352\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15955352&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15955352\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15955352_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15955352_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Apr\\/17 16:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-04T16:32:22+0000\'\u003e04\\/Apr\\/17 16:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eLatest patch which fixes most of the problems identified in the review:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eadmin\\/mbeans and admin\\/plugins stats are back, and consequently they are visible in the UI.\u003c\\/li\u003e\\n\\t\u003cli\u003eJMX reporting is turned on only when MBean server is specified or running.\u003c\\/li\u003e\\n\\t\u003cli\u003emetrics reported using \u003ctt\u003eMetricsMap\u003c\\/tt\u003e provide now type-specific attributes via JMX.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15955352_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15955352_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Apr\\/17 16:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-04T16:32:22+0000\'\u003e04\\/Apr\\/17 16:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Latest patch which fixes most of the problems identified in the review: \\n \\n\\t admin\\/mbeans and admin\\/plugins stats are back, and consequently they are visible in the UI. \\n\\t JMX reporting is turned on only when MBean server is specified or running. \\n\\t metrics reported using  MetricsMap  provide now type-specific attributes via JMX. \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15956053\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15956053&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15956053\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15956053_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15956053_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Apr\\/17 23:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-04T23:31:27+0000\'\u003e04\\/Apr\\/17 23:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003e(NOTE: comments below are in a mishmash order as i jumped around the code, so they can be somewhat redundent as i re-thought about diff concepts while looking at diff classes)\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eSolrJmxReporter\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eshould these really be warnings, or just info?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003e\u003ctt\u003elog.warn(\\\"No serviceUrl or agentId was configured, using first MBeanServer.\\\", mBeanServer);\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003e\u003ctt\u003elog.warn(\\\"No JMX server found. Not exposing Solr metrics via JMX.\\\");\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003e....in the prior code, warning might have made sense &#8211; but in the new code,  seems like it should only be a warning if agentId is specified, or if serviceUrl can\'t be created?\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eit didn\'t occur to me the last time i reviewed this code, but if it\'s possible for people to configure multiple SolrJmxReporter instances in solr.xml, then we should almost certainly support \u003ctt\u003erootName\u003c\\/tt\u003e like JmxMonitorMap did, otherwise won\'t the multiple SolrJmxReporter instances overwrite eachother if they use the same MBeanServer?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003esee related comments below regarding JmxObjectNameFactory\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eas for \u003cb\u003ewhy\u003c\\/b\u003e a person might want to configure multiple SolrJmxReporter instances, that goes back to my previous question about if\\/why we should support \u003ctt\u003eserviceUrl\u003c\\/tt\u003e in SolrJmxReporter...\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003esince SolrJmxReporter is now at the container level, the only value i see is if there\'s a way to configure Reporters to filter which collections they expose\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eso people might configure multiple SolrJmxReporter instances w\\/diff serviceUrls that expose the metrics for diff solr collections to diff end consumers\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eis this currently possible?\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eNOTE: there is some sort of bug &#8211; i didn\'t trace down the root cause &#8211; causing multiple SolrJmxReporter instances to be inited on startup,\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003erun \u003ctt\u003ebin\\/solr -e techproducts -Dcom.sun.management.jmxremote\u003c\\/tt\u003e and very early in the logs you\'ll see...\\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003eINFO  - 2017-04-04 22:46:40.787; [   ] org.apache.solr.core.SolrXmlConfig; Loading container configuration from \\/home\\/hossman\\/lucene\\/dev\\/solr\\/example\\/techproducts\\/solr\\/solr.xml\\nINFO  - 2017-04-04 22:46:40.833; [   ] org.apache.solr.core.SolrXmlConfig; MBean server found: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, but no JMX reporters were configured - adding default JMX reporter.\\nWARN  - 2017-04-04 22:46:41.252; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:41.269; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\nWARN  - 2017-04-04 22:46:41.269; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:41.270; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\nWARN  - 2017-04-04 22:46:41.270; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:41.276; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eand later in the logs, once the techproducts core is added...\\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003eWARN  - 2017-04-04 22:46:43.608; [   x:techproducts] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:43.609; [   x:techproducts] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eisn\'t there only suppose to be \u003cb\u003eONE\u003c\\/b\u003e (implicit) SolrJmxReporter ? ... and why would a\\/each new core cause a new SolrJmxReporter to be created\\/init\'ed ?\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eJmxObjectNameFactory\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eNOTE: i realize some of these comments aren\'t specific to changes on this branch, but i noticed them while reviewing the JMX stuff a bit more...\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eI\'m confused as to why the \\\"reporter\\\" name is being include in all the ObjectNames ?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eit\'s going to be the same for every bean reported by the (same) SolrJmxReporter (so pracitcally speaking with teh default implicit SolrJmxReporter instance there\'s this weird \\\"default\\\" somewhere in the hierarchical drill down of every MBean)\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eif we expect there to be multiple SolrJmxReporter instances (thus needing to disambiguate the beans), then that\'s exactly what the point of \u003ctt\u003erootName\u003c\\/tt\u003e was inthe existing code &#8211; and giving each reporter it\'s own prefix\\/hierarchy in the MBean server seems better then having their beans intermixed and needing to look for the \\\"reporter\\\" attribute of the name to disambiguate\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eso i would suggest either we should add the \u003ctt\u003erootName\u003c\\/tt\u003e option to SolrJmxReporter, \u003cem\u003eOR\u003c\\/em\u003e perhaps automatically use the (sanitized) reporter name as the \u003cem\u003eprefix\u003c\\/em\u003e of all the MBean names (in place of \\\"solr:\\\" in the current names (although at first glance i\'m not even clear on where that\'s currently coming from ... i don\'t see domain being set?)\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eeither way, the if\\/when we add the implicit default SolrJmxReporter it should still use an effective rootName\\/prefix\\/domain\\/reportName\\/whatever of \\\"solr\\\" in it\'s ObjectNames\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eif we don\'t expect there to be multiple SolrJmxReporter instances, then it seems silly to bother putting \\\"reporter\\\" in the name at all\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003elikewise: i don\'t understand why SolrJmxReporter is passing \u003ctt\u003ethis.hashCode()\u003c\\/tt\u003e as an \\\"instance\\\" property to include in all ofthe ObjectNames\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003e(assuming we fix the bug mentioned above about multiple SolrJmxReporter instances being init\'ed automatically on startup) all MBeans registered by the same JmxObjectNameFactory will have the same \\\"instance\\\" value &#8211; so there doesn\'t seem to be any need for it in the name\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eand even worse then the \\\"reporter\\\" name, this is something that will change every time the node is restarted, making it impossible for JMX clients to programatically access (expected) objects at \\\"known\\\" names\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003ethe commit when this was added is 4249c8: It\'s not 100% clear but I suspect the reason relates to the part of the commit msg that mentions \\\"multiple core containers in a JVM\\\"\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003efor \u003cb\u003eend users\u003c\\/b\u003e that doesn\'t seem like a use case we should really worry much about since we\'re not viewing solr as a \\\"WAR\\\" but a standalone app.\\n\\t\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\\t\u003cli\u003eif we did want to worry about this use case, then that\'s exactly what setting the \u003ctt\u003erootName\u003c\\/tt\u003e on JmxMonitoredMap enabled users to do in the past to avoid collisions &#8211; and we could likewise support that on SolrJmxReporter (or by using the reporter name as the prefix as suggested above) and the burden is on these advanced users to configure the SolrJmxReporter\'s in their multiple CoreContainer instances with unique names\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003cli\u003eif the concern is about our (cloud) \u003cb\u003etest\u003c\\/b\u003e code (and having unique ObjectNames even when we\'re spinning up multiple jetty+CoreContainer instance in a single JVM process) then it seems like we should really solve that in our test code\\/scaffolding and not \\\"pollute\\\" the JMX MBean names usres see in production with numeric values that unique every time hte process is restarted.\\n\\t\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\\t\u003cli\u003efirst idea that comes to mind: the \u003ctt\u003esolr.xml\u003c\\/tt\u003e files used in cloud tests (where we want to do JMX testing) can explicitly declare a SolrJmxReporter (rather then getting the implicit default) using a rootName\\/prefix\\/domain\\/reportName\\/whatever that includes{{\\\"\\\\${hostPort}\\\"}} ?\u003c\\/li\u003e\\n\\t\\t\\t\\t\\t\u003cli\u003eCloud tests that aren\'t explicitly planning on checking JMX metrics (ie: don\'t force the creation of the platform MBeanServer before creating the MiniSolrCluster) don\'t need to worry about it\u003c\\/li\u003e\\n\\t\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eOperatingSystemMetricSet + MetricsUtils.addMXBeanMetrics (vs. SystemInfoHandler)\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eis there anyway we can refactor this so we\'re not copy\\/pasting so much code from SystemInfoHandler?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003emaybe a \u003ctt\u003edoOperatingSystemMXBeanIterator\u003c\\/tt\u003e utility method somewhere that takes in a lambda to run for each bean property?\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eat a minimum: we should staticly declare the list of class names we try once and re-use in both places &#8211; so if we ever add more (new JVMs, OpenJDK renames the com.sun.* MXBeans, etc..) we don\'t overlook one list.\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eJvmMetricsTest\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003ewon\'t some of these tests fail on some (non-oracle) JVMs where those platform specific OS metrics may not be available?\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eeven if we hardcode a list of expected metrics, the test should probably group them based on the MXBean they are expected from (\u003ctt\u003ejava.*\u003cb\u003e.OperatingSystemMXBean\u003c\\/tt\u003e vs \u003ctt\u003ecom.sun.\u003c\\/b\u003e\u003cb\u003e.OperatingSystemMXBean\u003c\\/tt\u003e vs \u003ctt\u003ecom.sun.\u003c\\/b\u003e*.UnixOperatingSystemMXBean\u003c\\/tt\u003e etc...) and only check them (against the solr metrics API) if that source MXBean class can be found in the current classpath\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eSolrInfoBean\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003egetMetrics()\u003c\\/tt\u003e might be a missleadingly simplistic name for what this method does?\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eperhaps something like \u003ctt\u003egetMetricsSnapshot()\u003c\\/tt\u003e (since it\'s a snapshot of the current values)\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eor \u003ctt\u003egetSimplifiedMetricsMap()\u003c\\/tt\u003e ?\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eor maybe \u003ctt\u003egetMetricsAsSimpleStats()\u003c\\/tt\u003e since that\'s the ultimate end purpose (ie: describe the usage, not the internals)\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eif \u003ctt\u003egetMetricRegistry()\u003c\\/tt\u003e is going to \u003ctt\u003edefault\u003c\\/tt\u003e to \u003ctt\u003ereturn null\u003c\\/tt\u003e, then shouldn\'t \u003ctt\u003egetMetricNames()\u003c\\/tt\u003e also \u003ctt\u003edefault\u003c\\/tt\u003e to \u003ctt\u003ereturn null;\u003c\\/tt\u003e ?\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ein general can we please beef up the javadocs of \u003ctt\u003egetMetricNames\u003c\\/tt\u003e &amp; \u003ctt\u003eregisterMetricName\u003c\\/tt\u003e to make their relationship and intended use more obvious (that was the most confusing part for me of reading through the recent changes)...\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003ewhen\\/who calls \u003ctt\u003eregisterMetricName\u003c\\/tt\u003e (IIUC: metrics manager via callback when a SolrInfoBean register a new metric)\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003ewhen\\/who calls \u003ctt\u003egetMetricNames\u003c\\/tt\u003e &amp; why (IIUC: by default, \u003ctt\u003eregisterMetricName\u003c\\/tt\u003e calls method to populate the map when new metrics are registered, and by default \u003ctt\u003egetMetrics()\u003c\\/tt\u003e calls to read from the map to convert metrics to their simplified form)\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ewe may also want to make it clear in these javadocs that SolrInfoBeans can\\/should override these various methods to prevent some\\/all metric names from being added to this map if they don\'t want them exposed as part of the \\\"SolrInfoBean stats\\\" (ie: some plugins might want to only expose a handful a simple numeric\\/string stats via \\/admin\\/mbeans because of the limited API, but via the metrics reporting they report a lot more robust things.\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003e\u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003ethere\'s still a small disconnect between the expected\\/existing \u003cem\u003estructure\u003c\\/em\u003e of what \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e returns and the code currently on the branch (which breaks the admin UI) ... there\'s an extra \\\"map\\\" with a single key (which looks like the global metric name?), whose value is a map with the actual stats as\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003emaster: \u003ca href=\\\"http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;key=queryResultCache&amp;indent=true&amp;wt=json&amp;cat=CACHE\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;key=queryResultCache&amp;indent=true&amp;wt=json&amp;cat=CACHE\u003c\\/a\u003e \\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003e{\\n  \\\"responseHeader\\\":{\\n    \\\"status\\\":0,\\n    \\\"QTime\\\":0},\\n  \\\"solr-mbeans\\\":[\\n    \\\"CACHE\\\",{\\n      \\\"queryResultCache\\\":{\\n        \\\"class\\\":\\\"org.apache.solr.search.LRUCache\\\",\\n        \\\"version\\\":\\\"1.0\\\",\\n        \\\"description\\\":\\\"LRU Cache(maxSize=512, initialSize=512)\\\",\\n        \\\"src\\\":null,\\n-&gt;      \\\"stats\\\":{\\n          \\\"lookups\\\":1,\\n          \\\"hits\\\":0,\\n          \\\"hitratio\\\":0.0,\\n          \\\"inserts\\\":1,\\n          \\\"evictions\\\":0,\\n          \\\"size\\\":1,\\n          \\\"warmupTime\\\":0,\\n          \\\"cumulative_lookups\\\":1,\\n          \\\"cumulative_hits\\\":0,\\n          \\\"cumulative_hitratio\\\":0.0,\\n          \\\"cumulative_inserts\\\":1,\\n          \\\"cumulative_evictions\\\":0}}}]}\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003ebranch: \u003ca href=\\\"http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;key=queryResultCache&amp;indent=true&amp;wt=json&amp;cat=CACHE\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;key=queryResultCache&amp;indent=true&amp;wt=json&amp;cat=CACHE\u003c\\/a\u003e \\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003e{\\n  \\\"responseHeader\\\":{\\n    \\\"status\\\":0,\\n    \\\"QTime\\\":0},\\n  \\\"solr-mbeans\\\":[\\n    \\\"CACHE\\\",{\\n      \\\"queryResultCache\\\":{\\n        \\\"class\\\":\\\"org.apache.solr.search.LRUCache\\\",\\n        \\\"description\\\":\\\"LRU Cache(maxSize=512, initialSize=512)\\\",\\n-&gt;      \\\"stats\\\":{\\\"CACHE.searcher.queryResultCache\\\":{              \\/\\/ NOTE: NESTED MAP\\n            \\\"lookups\\\":3,\\n            \\\"hits\\\":2,\\n            \\\"cumulative_evictions\\\":0,\\n            \\\"size\\\":1,\\n            \\\"hitratio\\\":0.67,\\n            \\\"evictions\\\":0,\\n            \\\"cumulative_lookups\\\":3,\\n            \\\"cumulative_hitratio\\\":0.67,\\n            \\\"warmupTime\\\":0,\\n            \\\"inserts\\\":1,\\n            \\\"cumulative_inserts\\\":1,\\n            \\\"cumulative_hits\\\":2}}}}]}\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eI\'m not entirely sure if this is a bug in \u003ctt\u003eSolrInfoMBeanHandler\u003c\\/tt\u003e or \u003ctt\u003eSolrInfoBean.getMetrics()\u003c\\/tt\u003e or \u003ctt\u003eMetricUtils.convertMetrics\u003c\\/tt\u003e\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003eI\'m guessing maybe the expectation is that \u003ctt\u003eSolrInfoBean.getMetrics()\u003c\\/tt\u003e should be unwinding the map returned by \u003ctt\u003eMetricUtils.convertMetrics\u003c\\/tt\u003e ?\\n\\t\\t\\t\u003cul\u003e\\n\\t\\t\\t\\t\u003cli\u003eBecause IIUC \u003ctt\u003egetMetrics()\u003c\\/tt\u003e should know that based on it\'s usage of \u003ctt\u003econvertMetrics\u003c\\/tt\u003e there should only be one key in the map returned?\u003c\\/li\u003e\\n\\t\\t\\t\u003c\\/ul\u003e\\n\\t\\t\\t\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eMBeansHandlerTest\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003esince we\'re still using \u003ctt\u003e\\/admin\\/mbeans\u003c\\/tt\u003e in the UI, this test sshould prbably added back to the branch\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ei suspect as is it probably would hav caught the map-in-a-map bug as part of it\'s \\\"diff\\\" checking\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ewe should also go ahead and beef it up to do a simple spot check of an explicit cache stat value to verify has the correct NamedList\\/Map structure for accessing individual stat values.\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eMetricUtils\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eeven if these methods aren\'t public (anymore), it\'s helpful to have javadocs so future developers understand the intent of a method (and don\'t acidently missues\\/break them in the future)\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eStatsReloadRaceTest\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003ethis smells bad...\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e    \u003cspan class=\\\"code-comment\\\"\u003e\\/\\/ \u003cspan class=\\\"code-keyword\\\"\u003ethis\u003c\\/span\u003e is not guaranteed to exist right away after core reload - there\'s a\\n\u003c\\/span\u003e    \u003cspan class=\\\"code-comment\\\"\u003e\\/\\/ small window between core load and before searcher metrics are registered\\n\u003c\\/span\u003e    \u003cspan class=\\\"code-keyword\\\"\u003eif\u003c\\/span\u003e (metrics.get(key) != \u003cspan class=\\\"code-keyword\\\"\u003enull\u003c\\/span\u003e) {\\n      assertTrue(metrics.get(key) \u003cspan class=\\\"code-keyword\\\"\u003einstanceof\u003c\\/span\u003e \u003cspan class=\\\"code-object\\\"\u003eLong\u003c\\/span\u003e);\\n    }\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\u003cp\u003e...shouldn\'t we at least poll that \u003ctt\u003e!= null\u003c\\/tt\u003e check in a loop to ensure \u003cb\u003eeventually\u003c\\/b\u003e the metrics are available and have the correct type?  (otherwise the test won\'t be useful in the event that something breaks down the road)\u003c\\/p\u003e\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eDisabling JMX for solr, but having it on for the JVM\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003enow that SolrXmlConfig implicitly adds a SolrJmxReporter if (at least) one is not declared, don\'t we need a \u003ctt\u003eNoopSolrJmxReporter extends SolrJmxReporter\u003c\\/tt\u003e (or marker interface) option so people who only want JVM level JMX metrics don\'t have to deal with the overhead of Solr level metrics in JMX?\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ethat would also eliminate the need for the \u003ctt\u003eprivate int jmxReporter\u003c\\/tt\u003e hack in \u003ctt\u003eSolrMetricsIntegrationTest\u003c\\/tt\u003e &amp; similar tests\\n\\t\\t\u003cul\u003e\\n\\t\\t\\t\u003cli\u003ejust include a \u003ctt\u003eNoopSolrJmxReporter\u003c\\/tt\u003e in the \u003ctt\u003esolr-*reporter.xml\u003c\\/tt\u003e files\u003c\\/li\u003e\\n\\t\\t\\t\u003cli\u003eor maybe the tests are just simpler this way with the extra \\\"+1\\\" ? ... not sure how i feel.\u003c\\/li\u003e\\n\\t\\t\u003c\\/ul\u003e\\n\\t\\t\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15956053_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15956053_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Apr\\/17 23:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-04T23:31:27+0000\'\u003e04\\/Apr\\/17 23:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n (NOTE: comments below are in a mishmash order as i jumped around the code, so they can be somewhat redundent as i re-thought about diff concepts while looking at diff classes) \\n\\n \\n\\t SolrJmxReporter\\n\\t \\n\\t\\t should these really be warnings, or just info?\\n\\t\\t \\n\\t\\t\\t  log.warn(\\\"No serviceUrl or agentId was configured, using first MBeanServer.\\\", mBeanServer);  \\n\\t\\t\\t  log.warn(\\\"No JMX server found. Not exposing Solr metrics via JMX.\\\");  \\n\\t\\t\\t ....in the prior code, warning might have made sense &#8211; but in the new code,  seems like it should only be a warning if agentId is specified, or if serviceUrl can\'t be created? \\n\\t\\t \\n\\t\\t \\n\\t\\t it didn\'t occur to me the last time i reviewed this code, but if it\'s possible for people to configure multiple SolrJmxReporter instances in solr.xml, then we should almost certainly support  rootName  like JmxMonitorMap did, otherwise won\'t the multiple SolrJmxReporter instances overwrite eachother if they use the same MBeanServer?\\n\\t\\t \\n\\t\\t\\t see related comments below regarding JmxObjectNameFactory \\n\\t\\t \\n\\t\\t \\n\\t\\t as for  why  a person might want to configure multiple SolrJmxReporter instances, that goes back to my previous question about if\\/why we should support  serviceUrl  in SolrJmxReporter...\\n\\t\\t \\n\\t\\t\\t since SolrJmxReporter is now at the container level, the only value i see is if there\'s a way to configure Reporters to filter which collections they expose \\n\\t\\t\\t so people might configure multiple SolrJmxReporter instances w\\/diff serviceUrls that expose the metrics for diff solr collections to diff end consumers \\n\\t\\t\\t is this currently possible? \\n\\t\\t \\n\\t\\t \\n\\t\\t NOTE: there is some sort of bug &#8211; i didn\'t trace down the root cause &#8211; causing multiple SolrJmxReporter instances to be inited on startup,\\n\\t\\t \\n\\t\\t\\t run  bin\\/solr -e techproducts -Dcom.sun.management.jmxremote  and very early in the logs you\'ll see...\\n  \\n INFO  - 2017-04-04 22:46:40.787; [   ] org.apache.solr.core.SolrXmlConfig; Loading container configuration from \\/home\\/hossman\\/lucene\\/dev\\/solr\\/example\\/techproducts\\/solr\\/solr.xml\\nINFO  - 2017-04-04 22:46:40.833; [   ] org.apache.solr.core.SolrXmlConfig; MBean server found: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, but no JMX reporters were configured - adding default JMX reporter.\\nWARN  - 2017-04-04 22:46:41.252; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:41.269; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\nWARN  - 2017-04-04 22:46:41.269; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:41.270; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\nWARN  - 2017-04-04 22:46:41.270; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:41.276; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\n \\n   \\n\\t\\t\\t and later in the logs, once the techproducts core is added...\\n  \\n WARN  - 2017-04-04 22:46:43.608; [   x:techproducts] org.apache.solr.metrics.reporters.SolrJmxReporter; No serviceUrl or agentId was configured, using first MBeanServer.\\nINFO  - 2017-04-04 22:46:43.609; [   x:techproducts] org.apache.solr.metrics.reporters.SolrJmxReporter; JMX monitoring enabled at server: com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617\\n \\n   \\n\\t\\t\\t isn\'t there only suppose to be  ONE  (implicit) SolrJmxReporter ? ... and why would a\\/each new core cause a new SolrJmxReporter to be created\\/init\'ed ? \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n\\n \\n\\t JmxObjectNameFactory\\n\\t \\n\\t\\t NOTE: i realize some of these comments aren\'t specific to changes on this branch, but i noticed them while reviewing the JMX stuff a bit more... \\n\\t\\t I\'m confused as to why the \\\"reporter\\\" name is being include in all the ObjectNames ?\\n\\t\\t \\n\\t\\t\\t it\'s going to be the same for every bean reported by the (same) SolrJmxReporter (so pracitcally speaking with teh default implicit SolrJmxReporter instance there\'s this weird \\\"default\\\" somewhere in the hierarchical drill down of every MBean) \\n\\t\\t\\t if we expect there to be multiple SolrJmxReporter instances (thus needing to disambiguate the beans), then that\'s exactly what the point of  rootName  was inthe existing code &#8211; and giving each reporter it\'s own prefix\\/hierarchy in the MBean server seems better then having their beans intermixed and needing to look for the \\\"reporter\\\" attribute of the name to disambiguate\\n\\t\\t\\t \\n\\t\\t\\t\\t so i would suggest either we should add the  rootName  option to SolrJmxReporter,  OR  perhaps automatically use the (sanitized) reporter name as the  prefix  of all the MBean names (in place of \\\"solr:\\\" in the current names (although at first glance i\'m not even clear on where that\'s currently coming from ... i don\'t see domain being set?) \\n\\t\\t\\t\\t either way, the if\\/when we add the implicit default SolrJmxReporter it should still use an effective rootName\\/prefix\\/domain\\/reportName\\/whatever of \\\"solr\\\" in it\'s ObjectNames \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t if we don\'t expect there to be multiple SolrJmxReporter instances, then it seems silly to bother putting \\\"reporter\\\" in the name at all \\n\\t\\t \\n\\t\\t \\n\\t\\t likewise: i don\'t understand why SolrJmxReporter is passing  this.hashCode()  as an \\\"instance\\\" property to include in all ofthe ObjectNames\\n\\t\\t \\n\\t\\t\\t (assuming we fix the bug mentioned above about multiple SolrJmxReporter instances being init\'ed automatically on startup) all MBeans registered by the same JmxObjectNameFactory will have the same \\\"instance\\\" value &#8211; so there doesn\'t seem to be any need for it in the name\\n\\t\\t\\t \\n\\t\\t\\t\\t and even worse then the \\\"reporter\\\" name, this is something that will change every time the node is restarted, making it impossible for JMX clients to programatically access (expected) objects at \\\"known\\\" names \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t the commit when this was added is 4249c8: It\'s not 100% clear but I suspect the reason relates to the part of the commit msg that mentions \\\"multiple core containers in a JVM\\\"\\n\\t\\t\\t \\n\\t\\t\\t\\t for  end users  that doesn\'t seem like a use case we should really worry much about since we\'re not viewing solr as a \\\"WAR\\\" but a standalone app.\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t if we did want to worry about this use case, then that\'s exactly what setting the  rootName  on JmxMonitoredMap enabled users to do in the past to avoid collisions &#8211; and we could likewise support that on SolrJmxReporter (or by using the reporter name as the prefix as suggested above) and the burden is on these advanced users to configure the SolrJmxReporter\'s in their multiple CoreContainer instances with unique names \\n\\t\\t\\t\\t \\n\\t\\t\\t\\t \\n\\t\\t\\t\\t if the concern is about our (cloud)  test  code (and having unique ObjectNames even when we\'re spinning up multiple jetty+CoreContainer instance in a single JVM process) then it seems like we should really solve that in our test code\\/scaffolding and not \\\"pollute\\\" the JMX MBean names usres see in production with numeric values that unique every time hte process is restarted.\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t first idea that comes to mind: the  solr.xml  files used in cloud tests (where we want to do JMX testing) can explicitly declare a SolrJmxReporter (rather then getting the implicit default) using a rootName\\/prefix\\/domain\\/reportName\\/whatever that includes{{\\\"\\\\${hostPort}\\\"}} ? \\n\\t\\t\\t\\t\\t Cloud tests that aren\'t explicitly planning on checking JMX metrics (ie: don\'t force the creation of the platform MBeanServer before creating the MiniSolrCluster) don\'t need to worry about it \\n\\t\\t\\t\\t \\n\\t\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n\\n\\n \\n\\t OperatingSystemMetricSet + MetricsUtils.addMXBeanMetrics (vs. SystemInfoHandler)\\n\\t \\n\\t\\t is there anyway we can refactor this so we\'re not copy\\/pasting so much code from SystemInfoHandler?\\n\\t\\t \\n\\t\\t\\t maybe a  doOperatingSystemMXBeanIterator  utility method somewhere that takes in a lambda to run for each bean property? \\n\\t\\t \\n\\t\\t \\n\\t\\t at a minimum: we should staticly declare the list of class names we try once and re-use in both places &#8211; so if we ever add more (new JVMs, OpenJDK renames the com.sun.* MXBeans, etc..) we don\'t overlook one list. \\n\\t \\n\\t \\n \\n\\n\\n\\n \\n\\t JvmMetricsTest\\n\\t \\n\\t\\t won\'t some of these tests fail on some (non-oracle) JVMs where those platform specific OS metrics may not be available? \\n\\t\\t even if we hardcode a list of expected metrics, the test should probably group them based on the MXBean they are expected from ( java.* .OperatingSystemMXBean  vs  com.sun.  .OperatingSystemMXBean  vs  com.sun. *.UnixOperatingSystemMXBean  etc...) and only check them (against the solr metrics API) if that source MXBean class can be found in the current classpath \\n\\t \\n\\t \\n \\n\\n\\n\\n \\n\\t SolrInfoBean\\n\\t \\n\\t\\t  getMetrics()  might be a missleadingly simplistic name for what this method does?\\n\\t\\t \\n\\t\\t\\t perhaps something like  getMetricsSnapshot()  (since it\'s a snapshot of the current values) \\n\\t\\t\\t or  getSimplifiedMetricsMap()  ? \\n\\t\\t\\t or maybe  getMetricsAsSimpleStats()  since that\'s the ultimate end purpose (ie: describe the usage, not the internals) \\n\\t\\t \\n\\t\\t \\n\\t\\t if  getMetricRegistry()  is going to  default  to  return null , then shouldn\'t  getMetricNames()  also  default  to  return null;  ? \\n\\t\\t in general can we please beef up the javadocs of  getMetricNames  &amp;  registerMetricName  to make their relationship and intended use more obvious (that was the most confusing part for me of reading through the recent changes)...\\n\\t\\t \\n\\t\\t\\t when\\/who calls  registerMetricName  (IIUC: metrics manager via callback when a SolrInfoBean register a new metric) \\n\\t\\t\\t when\\/who calls  getMetricNames  &amp; why (IIUC: by default,  registerMetricName  calls method to populate the map when new metrics are registered, and by default  getMetrics()  calls to read from the map to convert metrics to their simplified form) \\n\\t\\t \\n\\t\\t \\n\\t\\t we may also want to make it clear in these javadocs that SolrInfoBeans can\\/should override these various methods to prevent some\\/all metric names from being added to this map if they don\'t want them exposed as part of the \\\"SolrInfoBean stats\\\" (ie: some plugins might want to only expose a handful a simple numeric\\/string stats via \\/admin\\/mbeans because of the limited API, but via the metrics reporting they report a lot more robust things. \\n\\t \\n\\t \\n \\n\\n\\n\\n \\n\\t  \\/admin\\/mbeans \\n\\t \\n\\t\\t there\'s still a small disconnect between the expected\\/existing  structure  of what  \\/admin\\/mbeans  returns and the code currently on the branch (which breaks the admin UI) ... there\'s an extra \\\"map\\\" with a single key (which looks like the global metric name?), whose value is a map with the actual stats as\\n\\t\\t \\n\\t\\t\\t master:  http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;key=queryResultCache&amp;indent=true&amp;wt=json&amp;cat=CACHE  \\n  \\n {\\n  \\\"responseHeader\\\":{\\n    \\\"status\\\":0,\\n    \\\"QTime\\\":0},\\n  \\\"solr-mbeans\\\":[\\n    \\\"CACHE\\\",{\\n      \\\"queryResultCache\\\":{\\n        \\\"class\\\":\\\"org.apache.solr.search.LRUCache\\\",\\n        \\\"version\\\":\\\"1.0\\\",\\n        \\\"description\\\":\\\"LRU Cache(maxSize=512, initialSize=512)\\\",\\n        \\\"src\\\":null,\\n-&gt;      \\\"stats\\\":{\\n          \\\"lookups\\\":1,\\n          \\\"hits\\\":0,\\n          \\\"hitratio\\\":0.0,\\n          \\\"inserts\\\":1,\\n          \\\"evictions\\\":0,\\n          \\\"size\\\":1,\\n          \\\"warmupTime\\\":0,\\n          \\\"cumulative_lookups\\\":1,\\n          \\\"cumulative_hits\\\":0,\\n          \\\"cumulative_hitratio\\\":0.0,\\n          \\\"cumulative_inserts\\\":1,\\n          \\\"cumulative_evictions\\\":0}}}]}\\n \\n   \\n\\t\\t\\t branch:  http:\\/\\/localhost:8983\\/solr\\/techproducts\\/admin\\/mbeans?stats=true&amp;key=queryResultCache&amp;indent=true&amp;wt=json&amp;cat=CACHE  \\n  \\n {\\n  \\\"responseHeader\\\":{\\n    \\\"status\\\":0,\\n    \\\"QTime\\\":0},\\n  \\\"solr-mbeans\\\":[\\n    \\\"CACHE\\\",{\\n      \\\"queryResultCache\\\":{\\n        \\\"class\\\":\\\"org.apache.solr.search.LRUCache\\\",\\n        \\\"description\\\":\\\"LRU Cache(maxSize=512, initialSize=512)\\\",\\n-&gt;      \\\"stats\\\":{\\\"CACHE.searcher.queryResultCache\\\":{              \\/\\/ NOTE: NESTED MAP\\n            \\\"lookups\\\":3,\\n            \\\"hits\\\":2,\\n            \\\"cumulative_evictions\\\":0,\\n            \\\"size\\\":1,\\n            \\\"hitratio\\\":0.67,\\n            \\\"evictions\\\":0,\\n            \\\"cumulative_lookups\\\":3,\\n            \\\"cumulative_hitratio\\\":0.67,\\n            \\\"warmupTime\\\":0,\\n            \\\"inserts\\\":1,\\n            \\\"cumulative_inserts\\\":1,\\n            \\\"cumulative_hits\\\":2}}}}]}\\n \\n   \\n\\t\\t \\n\\t\\t \\n\\t\\t I\'m not entirely sure if this is a bug in  SolrInfoMBeanHandler  or  SolrInfoBean.getMetrics()  or  MetricUtils.convertMetrics \\n\\t\\t \\n\\t\\t\\t I\'m guessing maybe the expectation is that  SolrInfoBean.getMetrics()  should be unwinding the map returned by  MetricUtils.convertMetrics  ?\\n\\t\\t\\t \\n\\t\\t\\t\\t Because IIUC  getMetrics()  should know that based on it\'s usage of  convertMetrics  there should only be one key in the map returned? \\n\\t\\t\\t \\n\\t\\t\\t \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t MBeansHandlerTest\\n\\t \\n\\t\\t since we\'re still using  \\/admin\\/mbeans  in the UI, this test sshould prbably added back to the branch \\n\\t\\t i suspect as is it probably would hav caught the map-in-a-map bug as part of it\'s \\\"diff\\\" checking \\n\\t\\t we should also go ahead and beef it up to do a simple spot check of an explicit cache stat value to verify has the correct NamedList\\/Map structure for accessing individual stat values. \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t MetricUtils\\n\\t \\n\\t\\t even if these methods aren\'t public (anymore), it\'s helpful to have javadocs so future developers understand the intent of a method (and don\'t acidently missues\\/break them in the future) \\n\\t \\n\\t \\n \\n\\n\\n \\n\\t StatsReloadRaceTest\\n\\t \\n\\t\\t this smells bad...\\n  \\n      \\/\\/  this  is not guaranteed to exist right away after core reload - there\'s a\\n      \\/\\/ small window between core load and before searcher metrics are registered\\n      if  (metrics.get(key) !=  null ) {\\n      assertTrue(metrics.get(key)  instanceof   Long );\\n    }\\n \\n  \\n ...shouldn\'t we at least poll that  != null  check in a loop to ensure  eventually  the metrics are available and have the correct type?  (otherwise the test won\'t be useful in the event that something breaks down the road)  \\n\\t \\n\\t \\n \\n\\n\\n\\n \\n\\t Disabling JMX for solr, but having it on for the JVM\\n\\t \\n\\t\\t now that SolrXmlConfig implicitly adds a SolrJmxReporter if (at least) one is not declared, don\'t we need a  NoopSolrJmxReporter extends SolrJmxReporter  (or marker interface) option so people who only want JVM level JMX metrics don\'t have to deal with the overhead of Solr level metrics in JMX? \\n\\t\\t that would also eliminate the need for the  private int jmxReporter  hack in  SolrMetricsIntegrationTest  &amp; similar tests\\n\\t\\t \\n\\t\\t\\t just include a  NoopSolrJmxReporter  in the  solr-*reporter.xml  files \\n\\t\\t\\t or maybe the tests are just simpler this way with the extra \\\"+1\\\" ? ... not sure how i feel. \\n\\t\\t \\n\\t\\t \\n\\t \\n\\t \\n \\n\\n\\n\\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15956597\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15956597&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15956597\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15956597_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15956597_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Apr\\/17 09:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-05T09:45:26+0000\'\u003e05\\/Apr\\/17 09:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAgain, thanks a lot for the detailed review, most of these issues are straightforward to fix.\u003c\\/p\u003e\\n\\n\u003cp\u003eSome clarification only about how reporters are now configured in \u003ctt\u003esolr.xml\u003c\\/tt\u003e: each \u003ctt\u003e&lt;reporter&gt;\u003c\\/tt\u003e element defines a configuration and not an instance. The config can specify multiple groups or registry names, or registry name prefixes that it applies to, and for each matching unique registry name a separate reporter instance will be created. This indeed allows you to configure per-collection reporters that report to different destinations, or multiple reporters for the same collection that report to different destinations. So the multiple reporter instances that you saw are normal and expected.\u003c\\/p\u003e\\n\\n\u003cp\u003eJmxObjectNameFactory uses registry name as domain (if domain is not set), and it also inserts reporter\'s name (as configured in the plugin config) in the hierarchy, so for each reporter instance and for each registry the hierarchy is unique. This should not require the \\\"instance\\\" attribute - I added it to solve conflicts for MiniSolrCloudCluster where multiple reporters with the same name and for the same registry name were created under different classloaders, but I agree with you about the unpredictability of the name hierarchy that it creates, so I\'ll change it.\u003c\\/p\u003e\\n\\n\u003cp\u003eNew patch coming shortly.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15956597_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15956597_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Apr\\/17 09:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-05T09:45:26+0000\'\u003e05\\/Apr\\/17 09:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Again, thanks a lot for the detailed review, most of these issues are straightforward to fix. \\n\\n Some clarification only about how reporters are now configured in  solr.xml : each  &lt;reporter&gt;  element defines a configuration and not an instance. The config can specify multiple groups or registry names, or registry name prefixes that it applies to, and for each matching unique registry name a separate reporter instance will be created. This indeed allows you to configure per-collection reporters that report to different destinations, or multiple reporters for the same collection that report to different destinations. So the multiple reporter instances that you saw are normal and expected. \\n\\n JmxObjectNameFactory uses registry name as domain (if domain is not set), and it also inserts reporter\'s name (as configured in the plugin config) in the hierarchy, so for each reporter instance and for each registry the hierarchy is unique. This should not require the \\\"instance\\\" attribute - I added it to solve conflicts for MiniSolrCloudCluster where multiple reporters with the same name and for the same registry name were created under different classloaders, but I agree with you about the unpredictability of the name hierarchy that it creates, so I\'ll change it. \\n\\n New patch coming shortly.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15957234\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15957234&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15957234\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15957234_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15957234_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Apr\\/17 16:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-05T16:56:44+0000\'\u003e05\\/Apr\\/17 16:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cblockquote\u003e\u003cp\u003eThe config can specify multiple groups or registry names, or registry name prefixes that it applies to, and for each matching unique registry name a separate reporter instance will be created.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eok ... seems weird, but i\'ll take your word for it that it\'s expected ... my main concern was that we weren\'t excessively and unneccessarily \\\"re-registering\\\" equivilent MBeans with the MBean server every time a (seemingly duplicate) SolrJmxReporter was created ... if you\'re saying that\'s not happening then i\'ll take your word for it.\u003c\\/p\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eJmxObjectNameFactory uses registry name as domain (if domain is not set), and it also inserts reporter\'s name (as configured in the plugin config) in the hierarchy, so for each reporter instance and for each registry the hierarchy is unique.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI\'m not sure i follow &#8211; largely because i\'m still not really clear what you mean by \\\"registry name\\\" and \\\"domain\\\" &#8211; to be clear about what I saw (as an end user) and what i\'m suggesting:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eSample current ObjectNames (with implicit default reporter) ...\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003esolr:dom1=core,dom2=techproducts,reporter=default,instance=6fd59eb3,category=CACHE,name=fieldCache\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003esolr:dom1=core,dom2=techproducts,reporter=default,instance=6fd59eb3,category=SEARCHER,scope=searcher,name=maxDoc\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003esolr:dom1=node,reporter=default,instance=4007f65e,category=CONTAINER,scope=threadPool,name=coreContainerWorkExecutor.completed\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003eSuggested replacement ObjectNames for the same MBeans (with implicit default JMX reporter) ...\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003esolr:dom1=core,dom2=techproducts,category=CACHE,name=fieldCache\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003esolr:dom1=core,dom2=techproducts,category=SEARCHER,scope=searcher,name=maxDoc\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003esolr:dom1=node,category=CONTAINER,scope=threadPool,name=coreContainerWorkExecutor.completed\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003eSuggested replacement ObjectNames for the same MBeans (with explicitly configured JMX reporter using reporter name \\\"HOSSJMX\\\") ...\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003eHOSSJMX:dom1=core,dom2=techproducts,category=CACHE,name=fieldCache\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003eHOSSJMX:dom1=core,dom2=techproducts,category=SEARCHER,scope=searcher,name=maxDoc\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\\t\u003cli\u003e\u003ctt\u003eHOSSJMX:dom1=node,category=CONTAINER,scope=threadPool,name=coreContainerWorkExecutor.completed\u003c\\/tt\u003e\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15957234_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15957234_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Apr\\/17 16:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-05T16:56:44+0000\'\u003e05\\/Apr\\/17 16:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n  The config can specify multiple groups or registry names, or registry name prefixes that it applies to, and for each matching unique registry name a separate reporter instance will be created.  \\n\\n ok ... seems weird, but i\'ll take your word for it that it\'s expected ... my main concern was that we weren\'t excessively and unneccessarily \\\"re-registering\\\" equivilent MBeans with the MBean server every time a (seemingly duplicate) SolrJmxReporter was created ... if you\'re saying that\'s not happening then i\'ll take your word for it. \\n\\n  JmxObjectNameFactory uses registry name as domain (if domain is not set), and it also inserts reporter\'s name (as configured in the plugin config) in the hierarchy, so for each reporter instance and for each registry the hierarchy is unique.  \\n\\n I\'m not sure i follow &#8211; largely because i\'m still not really clear what you mean by \\\"registry name\\\" and \\\"domain\\\" &#8211; to be clear about what I saw (as an end user) and what i\'m suggesting: \\n\\n \\n\\t Sample current ObjectNames (with implicit default reporter) ...\\n\\t \\n\\t\\t  solr:dom1=core,dom2=techproducts,reporter=default,instance=6fd59eb3,category=CACHE,name=fieldCache  \\n\\t\\t  solr:dom1=core,dom2=techproducts,reporter=default,instance=6fd59eb3,category=SEARCHER,scope=searcher,name=maxDoc  \\n\\t\\t  solr:dom1=node,reporter=default,instance=4007f65e,category=CONTAINER,scope=threadPool,name=coreContainerWorkExecutor.completed  \\n\\t \\n\\t \\n\\t Suggested replacement ObjectNames for the same MBeans (with implicit default JMX reporter) ...\\n\\t \\n\\t\\t  solr:dom1=core,dom2=techproducts,category=CACHE,name=fieldCache  \\n\\t\\t  solr:dom1=core,dom2=techproducts,category=SEARCHER,scope=searcher,name=maxDoc  \\n\\t\\t  solr:dom1=node,category=CONTAINER,scope=threadPool,name=coreContainerWorkExecutor.completed  \\n\\t \\n\\t \\n\\t Suggested replacement ObjectNames for the same MBeans (with explicitly configured JMX reporter using reporter name \\\"HOSSJMX\\\") ...\\n\\t \\n\\t\\t  HOSSJMX:dom1=core,dom2=techproducts,category=CACHE,name=fieldCache  \\n\\t\\t  HOSSJMX:dom1=core,dom2=techproducts,category=SEARCHER,scope=searcher,name=maxDoc  \\n\\t\\t  HOSSJMX:dom1=node,category=CONTAINER,scope=threadPool,name=coreContainerWorkExecutor.completed  \\n\\t \\n\\t \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15958673\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15958673&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15958673\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15958673_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15958673_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Apr\\/17 09:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-06T09:50:46+0000\'\u003e06\\/Apr\\/17 09:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003ctt\u003eSolrMetricManager.registerReporter\u003c\\/tt\u003e takes care of registering only a single reporter for a given hierarchy, using among others the reporter\'s name as a key.\u003c\\/p\u003e\\n\\n\u003cp\u003eOn the change to ObjectNames: \\\"instance\\\" is gone in the latest patch. I think it\'s more confusing to use reporter\'s name as JMX domain than to always use \\\"solr\\\" for mbeans reported by Solr. \\\"Registry name\\\" that I referred to is the name of a metric registry where metrics are maintained, and each SolrCore (and each CoreContainer) gets its own unique registry eg. \\\"solr.core.techproducts.shard1.replica1\\\", and the \\\"solr.\\\" prefix is enforced. This is already a hierarchical name, so it makes sense to use it at the top level of hierarchy. Then, since you can configure multiple reporters for each registry, it stands to reason that the next element in the hierarchy should be the reporter\'s name, and finally followed by the metric name.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15958673_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15958673_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Apr\\/17 09:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-06T09:50:46+0000\'\u003e06\\/Apr\\/17 09:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     SolrMetricManager.registerReporter  takes care of registering only a single reporter for a given hierarchy, using among others the reporter\'s name as a key. \\n\\n On the change to ObjectNames: \\\"instance\\\" is gone in the latest patch. I think it\'s more confusing to use reporter\'s name as JMX domain than to always use \\\"solr\\\" for mbeans reported by Solr. \\\"Registry name\\\" that I referred to is the name of a metric registry where metrics are maintained, and each SolrCore (and each CoreContainer) gets its own unique registry eg. \\\"solr.core.techproducts.shard1.replica1\\\", and the \\\"solr.\\\" prefix is enforced. This is already a hierarchical name, so it makes sense to use it at the top level of hierarchy. Then, since you can configure multiple reporters for each registry, it stands to reason that the next element in the hierarchy should be the reporter\'s name, and finally followed by the metric name.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15958757\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15958757&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15958757\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15958757_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15958757_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Apr\\/17 11:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-06T11:15:27+0000\'\u003e06\\/Apr\\/17 11:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eRegarding the disabling of JMX reporting from Solr but not from JVM - I think a more elegant approach is a boolean flag \\\"enabled\\\" in a SolrJmxReporter config - if the config is present in solr.xml but the flag is false then this turns off the reporter, no need for yet another class.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15958757_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15958757_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Apr\\/17 11:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-06T11:15:27+0000\'\u003e06\\/Apr\\/17 11:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Regarding the disabling of JMX reporting from Solr but not from JVM - I think a more elegant approach is a boolean flag \\\"enabled\\\" in a SolrJmxReporter config - if the config is present in solr.xml but the flag is false then this turns off the reporter, no need for yet another class.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15960052\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15960052&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15960052\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15960052_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15960052_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'07\\/Apr\\/17 00:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-07T00:20:54+0000\'\u003e07\\/Apr\\/17 00:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cblockquote\u003e\\n\u003cp\u003eOn the change to ObjectNames: \\\"instance\\\" is gone in the latest patch. I think it\'s more confusing to use reporter\'s name as JMX domain than to always use \\\"solr\\\" for mbeans reported by Solr. \\\"Registry name\\\" that I referred to is the name of a metric registry where metrics are maintained, and each SolrCore (and each CoreContainer) gets its own unique registry eg. \\\"solr.core.techproducts.shard1.replica1\\\", and the \\\"solr.\\\" prefix is enforced. This is already a hierarchical name, so it makes sense to use it at the top level of hierarchy. Then, since you can configure multiple reporters for each registry, it stands to reason that the next element in the hierarchy should be the reporter\'s name, and finally followed by the metric name.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eI\'m sorry &#8211; but that still just doesn\'t make any sense to me.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor an \\\"inside looking out\\\" perspective, as someone who really understands the metrics code and the reporting internals, it might make a lot of sense to you to put the \\\"registry\\\" hierarchy first, and then put the reporter name after that &#8211; but from \\\"outside looking in\\\" perspective of an end user who is monitoring solr via a JMX client, I don\'t see how that helps them at all.\u003c\\/p\u003e\\n\\n\u003cp\u003eHere\'s some use cases I\'m imagining...\u003c\\/p\u003e\\n\\n\u003cp\u003eAssume a basic setup, w\\/o any explicitly configured metrics reporters, and JMX is enabled at the JVM level so the implicit \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e starts up:  If I\'m using a JMX tool like jconsole, and I\'m drilling looking at MBeans and browsing the info that\'s availale.  As I drill down evetually &#8211; For \u003cb\u003eevery\u003c\\/b\u003e MBean I encounter &#8211; there is at some seemingly arbitrary (to me) point in the hierarchy a \u003ctt\u003ereporter=default\u003c\\/tt\u003e aspect of it\'s name, making the hierarchy one level deeper ... for no aparent reason.\u003c\\/p\u003e\\n\\n\u003cp\u003eNow let\'s asume that there are multiple \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e configurations defined in solr.xml (that I as the outside user may not know\\/care about that) that are filtering\\/limiting what metrics are reported to the local MBeanServer....\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003e\u003ctt\u003ename=\\\"CACHE_STATS\\\"\u003c\\/tt\u003e is only exposing (all) the metrics from all the internal \u003ctt\u003eCACHE\u003c\\/tt\u003e s\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003ctt\u003ename=\\\"QUERY_TIMES\\\"\u003c\\/tt\u003e is only exposing the \u003ctt\u003erequestTime\u003c\\/tt\u003e metrics from all \u003ctt\u003eQUERY\u003c\\/tt\u003e handlers\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e...so now ss i\'m drilling down into the hierarchy of MBeans, how does it help me that at some (again seemingly arbitrary) point in the hierarchy, every object has either \u003ctt\u003ereporter=CACHE_STATS\u003c\\/tt\u003e in it\'s name, or \u003ctt\u003ereporter=QUERY_TIMES\u003c\\/tt\u003e in it\'s name?  Even if there was overlap in filtering, such that some metrics were being redundently exposed by both reporters, how does it help me if the disambuiation of those (otherwise identical) MBeans happens at some point in the middle of the hierarchical ObjectName.  If those portions of the name were at the \u003cb\u003ebegining\u003c\\/b\u003e then at least I (as an outside user) would have some visibility into the \\\"sets\\\" of metrics that this Solr instance was making available, so right off the bat i could choose to drill down into \\\"QUERY_TIMES\\\" or \\\"CACHE_STATS\\\" depending on what I\'m interested in.\u003c\\/p\u003e\\n\\n\u003cp\u003eThat idea &#8211; grouping the metrics together at the top level \\/ begining of the ObjectName &#8211; is really the only use case I can think of where including the \\\"reporter\\\" in the ObjectName is particularly beneficial to the end users.  Given that you\'ve added back the \u003ctt\u003erootName\u003c\\/tt\u003e config option, that use case has another solution, and I\'m starting to think that we should just eliminate the \\\"reporter\\\" part of the name completely.  Any \u003ctt\u003eObjectName\u003c\\/tt\u003e collision that might result from multiple (overlapping) \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e should still ultimately be pointing to the same MBean ... so what\'s the upside of including the \\\"reporter\\\" portion of the name?\u003c\\/p\u003e\\n\\n\u003cp\u003eCan you help me understand your position by giving me an example usecase where it would be helpful to the person monitoring Solr (via JMX) that these reporter names are in the \\\"middle\\\" of the ObjectName instead of at the begining?\u003c\\/p\u003e\\n\\n\u003chr \\/\u003e\\n\\n\u003cp\u003eFWIW: I actually tried to cobble together that situation I described above, with two \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e configurations exposing a diff subset of metrics, based on what I saw in some test configurations.  This is what I had in my solr.xml...\u003c\\/p\u003e\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e  &lt;metrics&gt;\\n    &lt;reporter class=\u003cspan class=\\\"code-quote\\\"\u003e\\\"org.apache.solr.metrics.reporters.SolrJmxReporter\\\"\u003c\\/span\u003e name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"FOO\\\"\u003c\\/span\u003e&gt;\\n      &lt;str name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"filter\\\"\u003c\\/span\u003e&gt;QUERY\\\\.\\/select.*requests&lt;\\/str&gt;\\n    &lt;\\/reporter&gt;\\n    &lt;reporter class=\u003cspan class=\\\"code-quote\\\"\u003e\\\"org.apache.solr.metrics.reporters.SolrJmxReporter\\\"\u003c\\/span\u003e name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"BAR\\\"\u003c\\/span\u003e&gt;\\n      &lt;str name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"filter\\\"\u003c\\/span\u003e&gt;CACHE.*&lt;\\/str&gt;\\n    &lt;\\/reporter&gt;\\n  &lt;\\/metrics&gt;\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\u003cp\u003e...but it failed because \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e doesn\'t have a \u003ctt\u003esetFilter\u003c\\/tt\u003e method, and neither does the base class &#8211; it seems like only some special case reporters support filtering?  Shouldn\'t that be a general purpose feature of all reporters?  As is i\'m not sure how to do the type of filtering ab previously described to limit what can be exposed via JMX?\u003c\\/p\u003e\\n\\n\u003cp\u003eWhich leads me to another concern \\/ problem...\u003c\\/p\u003e\\n\\n\u003chr \\/\u003e\\n\\n\u003cblockquote\u003e\\n\u003cblockquote\u003e\u003cp\u003eThe config can specify multiple groups or registry names, or registry name prefixes that it applies to, and for each matching unique registry name a separate reporter instance will be created.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eok ... seems weird, but i\'ll take your word for it that it\'s expected ... my main concern was that we weren\'t excessively and unneccessarily \\\"re-registering\\\" equivilent MBeans with the MBean server every time a (seemingly duplicate) SolrJmxReporter was created ... if you\'re saying that\'s not happening then i\'ll take your word for it.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003eSetting aside my above comment about not being clear how someone would configure the diff prefixes for (multiple) \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e declarations, this notion that multiple \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e instances will be created from a single \u003cem\u003econfig\u003c\\/em\u003e as needed for each \\\"registry\\\" didn\'t sit will with me yesterday ... and today I finally realized why: \u003ctt\u003eserviceUrl\u003c\\/tt\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eFor the default behavior of connecting to the first existing MBeanServer, or if an explicit \u003ctt\u003eagentId\u003c\\/tt\u003e is configured, then creating multiple \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e instances for a single \u003ctt\u003e&lt;reporter&gt;\u003c\\/tt\u003e config is fine &#8211; because ultimately the same \u003ctt\u003eMbeanServer\u003c\\/tt\u003e is still going to be used by each of them.  But as things stand today you can\'t use the \u003ctt\u003eserviceUrl\u003c\\/tt\u003e option because then each \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e \u003cem\u003einstance\u003c\\/em\u003e will (attempt) to create it\'s own \u003ctt\u003eMBeanServer\u003c\\/tt\u003e instance bound to the same service url &#8211; and only the first one will win.\u003c\\/p\u003e\\n\\n\u003cp\u003eOn master, if you\'ve got \u003ctt\u003ermiregistry 9999\u003c\\/tt\u003e running in the background, then you can replace \u003ctt\u003e&lt;jmx \\/&gt;\u003c\\/tt\u003e in the techproducts sample \u003ctt\u003esolrconfig.xml\u003c\\/tt\u003e and everything works fine...\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003e  &lt;jmx serviceUrl=\\\"service:jmx:rmi:\\/\\/\\/jndi\\/rmi:\\/\\/localhost:9999\\/solrjmx\\\" \\/&gt;\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003e...Solr binds to that URL and you can then run \u003ctt\u003ejconsole service:jmx:rmi:\\/\\/\\/jndi\\/rmi:\\/\\/localhost:9999\\/solrjmx\u003c\\/tt\u003e and it will happily connect to that service URL and you\'ve got stats about the techproduct core.\u003c\\/p\u003e\\n\\n\u003cp\u003eBut if you try the same (effective) config on this branch, then you get all sorts of errors on startup because multiple \u003ctt\u003eJMXConnectorServer\u003c\\/tt\u003e instances are trying to bind to the same RMI URL...\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e  &lt;metrics&gt;\\n    &lt;reporter class=\u003cspan class=\\\"code-quote\\\"\u003e\\\"org.apache.solr.metrics.reporters.SolrJmxReporter\\\"\u003c\\/span\u003e name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"BAR\\\"\u003c\\/span\u003e&gt;\\n      &lt;str name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"serviceUrl\\\"\u003c\\/span\u003e&gt;service:jmx:rmi:\u003cspan class=\\\"code-comment\\\"\u003e\\/\\/\\/jndi\\/rmi:\\/\\/localhost:9999\\/solrjmx&lt;\\/str&gt;\\n\u003c\\/span\u003e    &lt;\\/reporter&gt;\\n  &lt;\\/metrics&gt;\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cdiv class=\\\"preformatted panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"preformattedContent panelContent\\\"\u003e\\n\u003cpre\u003eWARN  - 2017-04-06 23:57:08.411; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:529)\\n...\\nWARN  - 2017-04-06 23:57:08.424; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:530)\\n...\\nWARN  - 2017-04-06 23:57:08.430; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:531)\\n...\\nWARN  - 2017-04-06 23:57:10.636; [   x:techproducts] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.metrics.SolrCoreMetricManager.loadReporters(SolrCoreMetricManager.java:86)\\n        at org.apache.solr.core.SolrCore.&lt;init&gt;(SolrCore.java:889)\\n        at org.apache.solr.core.SolrCore.&lt;init&gt;(SolrCore.java:855)\\n        at org.apache.solr.core.CoreContainer.create(CoreContainer.java:975)\\n...\\t\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eSo either the \u003ctt\u003eMBeanServer\u003c\\/tt\u003e \\\"creation\\\" needs to be refactored to ensure it only happens once for a given \u003ctt\u003e&lt;reporter&gt;\u003c\\/tt\u003e configuration, or we need to rethink the question of if\\/how we\'re going to support \u003ctt\u003eserviceUrl\u003c\\/tt\u003e at all?\u003c\\/p\u003e\\n\\n\u003cp\u003e(Off the top of my head: maybe if you want to specify a \u003ctt\u003eserviceUrl\u003c\\/tt\u003e, you must also conifgure an \u003ctt\u003eagentId\u003c\\/tt\u003e and JmxUtil can first search for and existing \u003ctt\u003eMBeanServer\u003c\\/tt\u003e with that \u003ctt\u003eagentId\u003c\\/tt\u003e, if one exists it will use it, if not then it will create a new \u003ctt\u003eMBeanServer\u003c\\/tt\u003e it binds to that \u003ctt\u003eserviceUrl\u003c\\/tt\u003e and sets the \u003ctt\u003eagentId\u003c\\/tt\u003e on so future \\\"instances\\\" of the same \u003ctt\u003eSolrJmxReporter\u003c\\/tt\u003e config will find it. ... ????)\u003c\\/p\u003e\\n\\n\u003chr \\/\u003e\\n\\n\u003cblockquote\u003e\u003cp\u003eRegarding the disabling of JMX reporting from Solr but not from JVM - I think a more elegant approach is a boolean flag \\\"enabled\\\" in a SolrJmxReporter config - if the config is present in solr.xml but the flag is false then this turns off the reporter, no need for yet another class.\u003c\\/p\u003e\u003c\\/blockquote\u003e\\n\\n\u003cp\u003e+1\u003c\\/p\u003e\\n\\n\u003cp\u003eWe should be able to have a test that\'s working, right? Something like...\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e\u003cspan class=\\\"code-comment\\\"\u003e\\/\\/ force at least one local MBeanServer,\\n\u003c\\/span\u003e\u003cspan class=\\\"code-comment\\\"\u003e\\/\\/ \u003cspan class=\\\"code-keyword\\\"\u003ethis\u003c\\/span\u003e would normally cause implicit SolrJmxReporter\\n\u003c\\/span\u003eManagementFactory.getPlatformMBeanServer(); \\n\\ninitSolrWithSolrXmlThatHasSolrJmxReporterUsingEnableEqualsFalse();\\n\u003cspan class=\\\"code-keyword\\\"\u003efor\u003c\\/span\u003e(MBeanServer server : MBeanServerFactory.findMBeanServer(\u003cspan class=\\\"code-keyword\\\"\u003enull\u003c\\/span\u003e)) {\\n  assertNoMBeansWithPrefix(\u003cspan class=\\\"code-quote\\\"\u003e\\\"solr\\\"\u003c\\/span\u003e, server);\\n}\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"hossman\\\" id=\\\"commentauthor_15960052_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=hossman\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"hossman\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Hoss Man\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15960052_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'07\\/Apr\\/17 00:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-07T00:20:54+0000\'\u003e07\\/Apr\\/17 00:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n \\n On the change to ObjectNames: \\\"instance\\\" is gone in the latest patch. I think it\'s more confusing to use reporter\'s name as JMX domain than to always use \\\"solr\\\" for mbeans reported by Solr. \\\"Registry name\\\" that I referred to is the name of a metric registry where metrics are maintained, and each SolrCore (and each CoreContainer) gets its own unique registry eg. \\\"solr.core.techproducts.shard1.replica1\\\", and the \\\"solr.\\\" prefix is enforced. This is already a hierarchical name, so it makes sense to use it at the top level of hierarchy. Then, since you can configure multiple reporters for each registry, it stands to reason that the next element in the hierarchy should be the reporter\'s name, and finally followed by the metric name.  \\n\\n I\'m sorry &#8211; but that still just doesn\'t make any sense to me. \\n\\n For an \\\"inside looking out\\\" perspective, as someone who really understands the metrics code and the reporting internals, it might make a lot of sense to you to put the \\\"registry\\\" hierarchy first, and then put the reporter name after that &#8211; but from \\\"outside looking in\\\" perspective of an end user who is monitoring solr via a JMX client, I don\'t see how that helps them at all. \\n\\n Here\'s some use cases I\'m imagining... \\n\\n Assume a basic setup, w\\/o any explicitly configured metrics reporters, and JMX is enabled at the JVM level so the implicit  SolrJmxReporter  starts up:  If I\'m using a JMX tool like jconsole, and I\'m drilling looking at MBeans and browsing the info that\'s availale.  As I drill down evetually &#8211; For  every  MBean I encounter &#8211; there is at some seemingly arbitrary (to me) point in the hierarchy a  reporter=default  aspect of it\'s name, making the hierarchy one level deeper ... for no aparent reason. \\n\\n Now let\'s asume that there are multiple  SolrJmxReporter  configurations defined in solr.xml (that I as the outside user may not know\\/care about that) that are filtering\\/limiting what metrics are reported to the local MBeanServer.... \\n \\n\\t  name=\\\"CACHE_STATS\\\"  is only exposing (all) the metrics from all the internal  CACHE  s \\n\\t  name=\\\"QUERY_TIMES\\\"  is only exposing the  requestTime  metrics from all  QUERY  handlers \\n \\n\\n\\n ...so now ss i\'m drilling down into the hierarchy of MBeans, how does it help me that at some (again seemingly arbitrary) point in the hierarchy, every object has either  reporter=CACHE_STATS  in it\'s name, or  reporter=QUERY_TIMES  in it\'s name?  Even if there was overlap in filtering, such that some metrics were being redundently exposed by both reporters, how does it help me if the disambuiation of those (otherwise identical) MBeans happens at some point in the middle of the hierarchical ObjectName.  If those portions of the name were at the  begining  then at least I (as an outside user) would have some visibility into the \\\"sets\\\" of metrics that this Solr instance was making available, so right off the bat i could choose to drill down into \\\"QUERY_TIMES\\\" or \\\"CACHE_STATS\\\" depending on what I\'m interested in. \\n\\n That idea &#8211; grouping the metrics together at the top level \\/ begining of the ObjectName &#8211; is really the only use case I can think of where including the \\\"reporter\\\" in the ObjectName is particularly beneficial to the end users.  Given that you\'ve added back the  rootName  config option, that use case has another solution, and I\'m starting to think that we should just eliminate the \\\"reporter\\\" part of the name completely.  Any  ObjectName  collision that might result from multiple (overlapping)  SolrJmxReporter  should still ultimately be pointing to the same MBean ... so what\'s the upside of including the \\\"reporter\\\" portion of the name? \\n\\n Can you help me understand your position by giving me an example usecase where it would be helpful to the person monitoring Solr (via JMX) that these reporter names are in the \\\"middle\\\" of the ObjectName instead of at the begining? \\n\\n \\n\\n FWIW: I actually tried to cobble together that situation I described above, with two  SolrJmxReporter  configurations exposing a diff subset of metrics, based on what I saw in some test configurations.  This is what I had in my solr.xml... \\n  \\n   &lt;metrics&gt;\\n    &lt;reporter class= \\\"org.apache.solr.metrics.reporters.SolrJmxReporter\\\"  name= \\\"FOO\\\" &gt;\\n      &lt;str name= \\\"filter\\\" &gt;QUERY\\\\.\\/select.*requests&lt;\\/str&gt;\\n    &lt;\\/reporter&gt;\\n    &lt;reporter class= \\\"org.apache.solr.metrics.reporters.SolrJmxReporter\\\"  name= \\\"BAR\\\" &gt;\\n      &lt;str name= \\\"filter\\\" &gt;CACHE.*&lt;\\/str&gt;\\n    &lt;\\/reporter&gt;\\n  &lt;\\/metrics&gt;\\n \\n  \\n ...but it failed because  SolrJmxReporter  doesn\'t have a  setFilter  method, and neither does the base class &#8211; it seems like only some special case reporters support filtering?  Shouldn\'t that be a general purpose feature of all reporters?  As is i\'m not sure how to do the type of filtering ab previously described to limit what can be exposed via JMX? \\n\\n Which leads me to another concern \\/ problem... \\n\\n \\n\\n \\n  The config can specify multiple groups or registry names, or registry name prefixes that it applies to, and for each matching unique registry name a separate reporter instance will be created.  \\n\\n ok ... seems weird, but i\'ll take your word for it that it\'s expected ... my main concern was that we weren\'t excessively and unneccessarily \\\"re-registering\\\" equivilent MBeans with the MBean server every time a (seemingly duplicate) SolrJmxReporter was created ... if you\'re saying that\'s not happening then i\'ll take your word for it.  \\n\\n Setting aside my above comment about not being clear how someone would configure the diff prefixes for (multiple)  SolrJmxReporter  declarations, this notion that multiple  SolrJmxReporter  instances will be created from a single  config  as needed for each \\\"registry\\\" didn\'t sit will with me yesterday ... and today I finally realized why:  serviceUrl  \\n\\n For the default behavior of connecting to the first existing MBeanServer, or if an explicit  agentId  is configured, then creating multiple  SolrJmxReporter  instances for a single  &lt;reporter&gt;  config is fine &#8211; because ultimately the same  MbeanServer  is still going to be used by each of them.  But as things stand today you can\'t use the  serviceUrl  option because then each  SolrJmxReporter   instance  will (attempt) to create it\'s own  MBeanServer  instance bound to the same service url &#8211; and only the first one will win. \\n\\n On master, if you\'ve got  rmiregistry 9999  running in the background, then you can replace  &lt;jmx \\/&gt;  in the techproducts sample  solrconfig.xml  and everything works fine... \\n\\n  \\n   &lt;jmx serviceUrl=\\\"service:jmx:rmi:\\/\\/\\/jndi\\/rmi:\\/\\/localhost:9999\\/solrjmx\\\" \\/&gt;\\n \\n  \\n\\n ...Solr binds to that URL and you can then run  jconsole service:jmx:rmi:\\/\\/\\/jndi\\/rmi:\\/\\/localhost:9999\\/solrjmx  and it will happily connect to that service URL and you\'ve got stats about the techproduct core. \\n\\n But if you try the same (effective) config on this branch, then you get all sorts of errors on startup because multiple  JMXConnectorServer  instances are trying to bind to the same RMI URL... \\n\\n  \\n   &lt;metrics&gt;\\n    &lt;reporter class= \\\"org.apache.solr.metrics.reporters.SolrJmxReporter\\\"  name= \\\"BAR\\\" &gt;\\n      &lt;str name= \\\"serviceUrl\\\" &gt;service:jmx:rmi: \\/\\/\\/jndi\\/rmi:\\/\\/localhost:9999\\/solrjmx&lt;\\/str&gt;\\n     &lt;\\/reporter&gt;\\n  &lt;\\/metrics&gt;\\n \\n  \\n\\n  \\n WARN  - 2017-04-06 23:57:08.411; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:529)\\n...\\nWARN  - 2017-04-06 23:57:08.424; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:530)\\n...\\nWARN  - 2017-04-06 23:57:08.430; [   ] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:531)\\n...\\nWARN  - 2017-04-06 23:57:10.636; [   x:techproducts] org.apache.solr.metrics.reporters.SolrJmxReporter; findMBeanServerForServiceUrl(%s) exception: %s\\njava.io.IOException: Cannot bind to URL [rmi:\\/\\/localhost:9999\\/solrjmx]: javax.naming.NameAlreadyBoundException: solrjmx [Root exception is java.rmi.AlreadyBoundException: solrjmx]\\n        at javax.management.remote.rmi.RMIConnectorServer.newIOException(RMIConnectorServer.java:827)\\n        at javax.management.remote.rmi.RMIConnectorServer.start(RMIConnectorServer.java:432)\\n        at org.apache.solr.util.JmxUtil.findMBeanServerForServiceUrl(JmxUtil.java:56)\\n        at org.apache.solr.metrics.reporters.SolrJmxReporter.init(SolrJmxReporter.java:94)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporter(SolrMetricManager.java:773)\\n        at org.apache.solr.metrics.SolrMetricManager.loadReporters(SolrMetricManager.java:741)\\n        at org.apache.solr.metrics.SolrCoreMetricManager.loadReporters(SolrCoreMetricManager.java:86)\\n        at org.apache.solr.core.SolrCore.&lt;init&gt;(SolrCore.java:889)\\n        at org.apache.solr.core.SolrCore.&lt;init&gt;(SolrCore.java:855)\\n        at org.apache.solr.core.CoreContainer.create(CoreContainer.java:975)\\n...\\t\\n \\n  \\n\\n So either the  MBeanServer  \\\"creation\\\" needs to be refactored to ensure it only happens once for a given  &lt;reporter&gt;  configuration, or we need to rethink the question of if\\/how we\'re going to support  serviceUrl  at all? \\n\\n (Off the top of my head: maybe if you want to specify a  serviceUrl , you must also conifgure an  agentId  and JmxUtil can first search for and existing  MBeanServer  with that  agentId , if one exists it will use it, if not then it will create a new  MBeanServer  it binds to that  serviceUrl  and sets the  agentId  on so future \\\"instances\\\" of the same  SolrJmxReporter  config will find it. ... ????) \\n\\n \\n\\n  Regarding the disabling of JMX reporting from Solr but not from JVM - I think a more elegant approach is a boolean flag \\\"enabled\\\" in a SolrJmxReporter config - if the config is present in solr.xml but the flag is false then this turns off the reporter, no need for yet another class.  \\n\\n +1 \\n\\n We should be able to have a test that\'s working, right? Something like... \\n\\n  \\n  \\/\\/ force at least one local MBeanServer,\\n  \\/\\/  this  would normally cause implicit SolrJmxReporter\\n ManagementFactory.getPlatformMBeanServer(); \\n\\ninitSolrWithSolrXmlThatHasSolrJmxReporterUsingEnableEqualsFalse();\\n for (MBeanServer server : MBeanServerFactory.findMBeanServer( null )) {\\n  assertNoMBeansWithPrefix( \\\"solr\\\" , server);\\n}\\n \\n               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15963443\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15963443&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15963443\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15963443_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15963443_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Apr\\/17 20:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-10T20:16:51+0000\'\u003e10\\/Apr\\/17 20:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Andrzej Bialecki  - 10\\/Apr\\/17 20:17\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eLatest patch with fixes:\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003ereporters that instantiate clients for the same remote service (JMX, Graphite, Ganglia) now use a local URI-&gt;instance registry for client reuse.\u003c\\/li\u003e\\n\\t\u003cli\u003eJMX reporter supports now \\\"rootName\\\" to separate JMX hierarchies coming from different reporter configs.\u003c\\/li\u003e\\n\\t\u003cli\u003ereporter name no longer is in the object name hierarchy\u003c\\/li\u003e\\n\\t\u003cli\u003ereporters now support multiple prefix filters, for example:\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e&lt;reporter name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"foo\\\"\u003c\\/span\u003e \u003cspan class=\\\"code-keyword\\\"\u003eclass\u003c\u003c\\/span\u003espan class=\\\"code-quote\\\"\u003e\\\"...SolrJmxReporter\\\"\u003c\\/span\u003e&gt;\\n &lt;str name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"filter\\\"\u003c\\/span\u003e&gt;CORE.fs&lt;\\/str&gt;\\n &lt;str name=\u003cspan class=\\\"code-quote\\\"\u003e\\\"filter\\\"\u003c\\/span\u003e&gt;UPDATE&lt;\\/str&gt;\\n&lt;\\/reporter&gt;\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/li\u003e\\n\\t\u003cli\u003eall reporters now support \\\"enabled\\\" flag, which allows turning them off while keeping their config present.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_15963443_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15963443_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Apr\\/17 20:16\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-10T20:16:51+0000\'\u003e10\\/Apr\\/17 20:16\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Andrzej Bialecki  - 10\\/Apr\\/17 20:17\\\"\u003eedited\u003c\\/span\u003e                   Latest patch with fixes: \\n \\n\\t reporters that instantiate clients for the same remote service (JMX, Graphite, Ganglia) now use a local URI-&gt;instance registry for client reuse. \\n\\t JMX reporter supports now \\\"rootName\\\" to separate JMX hierarchies coming from different reporter configs. \\n\\t reporter name no longer is in the object name hierarchy \\n\\t reporters now support multiple prefix filters, for example:\\n  \\n &lt;reporter name= \\\"foo\\\"   class span class=\\\"code-quote\\\"\u003e\\\"...SolrJmxReporter\\\" &gt;\\n &lt;str name= \\\"filter\\\" &gt;CORE.fs&lt;\\/str&gt;\\n &lt;str name= \\\"filter\\\" &gt;UPDATE&lt;\\/str&gt;\\n&lt;\\/reporter&gt;\\n \\n   \\n\\t all reporters now support \\\"enabled\\\" flag, which allows turning them off while keeping their config present. \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15964690\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15964690&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15964690\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15964690_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15964690_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Apr\\/17 17:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-11T17:39:08+0000\'\u003e11\\/Apr\\/17 17:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit e30cc70fddcdd6fddb5eedf9f38e77fcb3f33bd1 in lucene-solr\'s branch refs\\/heads\\/master from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\" class=\\\"user-hover\\\" rel=\\\"ab\\\"\u003eAndrzej Bialecki \u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=e30cc70\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=e30cc70\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-9959\\\" title=\\\"SolrInfoMBean-s category and hierarchy cleanup\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-9959\\\"\u003e\u003cdel\u003eSOLR-9959\u003c\\/del\u003e\u003c\\/a\u003e: SolrInfoMBean-s category and hierarchy cleanup.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15964690_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15964690_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Apr\\/17 17:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-11T17:39:08+0000\'\u003e11\\/Apr\\/17 17:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit e30cc70fddcdd6fddb5eedf9f38e77fcb3f33bd1 in lucene-solr\'s branch refs\\/heads\\/master from  Andrzej Bialecki   \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=e30cc70  ] \\n\\n   SOLR-9959  : SolrInfoMBean-s category and hierarchy cleanup.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15965558\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15965558&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15965558\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15965558_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15965558_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/17 08:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-12T08:41:56+0000\'\u003e12\\/Apr\\/17 08:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 3ba4e73a9052b94d0d878fcd2fdd5f050232a41d in lucene-solr\'s branch refs\\/heads\\/master from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\" class=\\\"user-hover\\\" rel=\\\"ab\\\"\u003eAndrzej Bialecki \u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=3ba4e73\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=3ba4e73\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-9959\\\" title=\\\"SolrInfoMBean-s category and hierarchy cleanup\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-9959\\\"\u003e\u003cdel\u003eSOLR-9959\u003c\\/del\u003e\u003c\\/a\u003e Increase the timeout to allow searcher to register metrics.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_15965558_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15965558_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/17 08:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-04-12T08:41:56+0000\'\u003e12\\/Apr\\/17 08:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 3ba4e73a9052b94d0d878fcd2fdd5f050232a41d in lucene-solr\'s branch refs\\/heads\\/master from  Andrzej Bialecki   \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=3ba4e73  ] \\n\\n   SOLR-9959   Increase the timeout to allow searcher to register metrics.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-15998917\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=15998917&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15998917\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mbraun688\\\" id=\\\"commentauthor_15998917_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mbraun688\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mbraun688\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Braun\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15998917_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/May\\/17 20:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-05-05T20:35:18+0000\'\u003e05\\/May\\/17 20:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\" class=\\\"user-hover\\\" rel=\\\"ab\\\"\u003eAndrzej Bialecki \u003c\\/a\u003e noticed with this commit it fixed an issue where CoreContainer.shutdown() wasn\'t previously closing the jvm and jetty group reporters, so they would leak (and do on 6.5.1). Any chance this can get backported to the 6.5.x and 6.6 branches? \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mbraun688\\\" id=\\\"commentauthor_15998917_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mbraun688\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mbraun688\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Braun\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_15998917_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/May\\/17 20:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-05-05T20:35:18+0000\'\u003e05\\/May\\/17 20:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Andrzej Bialecki   noticed with this commit it fixed an issue where CoreContainer.shutdown() wasn\'t previously closing the jvm and jetty group reporters, so they would leak (and do on 6.5.1). Any chance this can get backported to the 6.5.x and 6.6 branches?               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-16000571\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=16000571&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16000571\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_16000571_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16000571_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'08\\/May\\/17 10:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-05-08T10:28:02+0000\'\u003e08\\/May\\/17 10:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=mbraun688\\\" class=\\\"user-hover\\\" rel=\\\"mbraun688\\\"\u003eMichael Braun\u003c\\/a\u003e - sure, I filed this as \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-10631\\\" title=\\\"Metric reporters leak on 6x\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-10631\\\"\u003e\u003cdel\u003eSOLR-10631\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"ab\\\" id=\\\"commentauthor_16000571_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=ab\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"ab\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrzej Bialecki \u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16000571_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'08\\/May\\/17 10:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-05-08T10:28:02+0000\'\u003e08\\/May\\/17 10:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     Michael Braun  - sure, I filed this as   SOLR-10631  .              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-16173405\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=16173405&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16173405\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_16173405_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16173405_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Sep\\/17 16:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-09-20T16:03:30+0000\'\u003e20\\/Sep\\/17 16:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 2351e3ef1fb44e3a234781fdb5c0589630ee5063 in lucene-solr\'s branch refs\\/heads\\/master from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=ctargett\\\" class=\\\"user-hover\\\" rel=\\\"ctargett\\\"\u003eCassandra Targett\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=2351e3e\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=2351e3e\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-9959\\\" title=\\\"SolrInfoMBean-s category and hierarchy cleanup\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-9959\\\"\u003e\u003cdel\u003eSOLR-9959\u003c\\/del\u003e\u003c\\/a\u003e: Ref Guide changes for JMX and metric name changes\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_16173405_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16173405_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Sep\\/17 16:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-09-20T16:03:30+0000\'\u003e20\\/Sep\\/17 16:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 2351e3ef1fb44e3a234781fdb5c0589630ee5063 in lucene-solr\'s branch refs\\/heads\\/master from  Cassandra Targett  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=2351e3e  ] \\n\\n   SOLR-9959  : Ref Guide changes for JMX and metric name changes              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-16173407\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=16173407&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16173407\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_16173407_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16173407_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Sep\\/17 16:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-09-20T16:03:55+0000\'\u003e20\\/Sep\\/17 16:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 839cb9081cbcda171dd872b5c271d8e2ec72081a in lucene-solr\'s branch refs\\/heads\\/branch_7x from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=ctargett\\\" class=\\\"user-hover\\\" rel=\\\"ctargett\\\"\u003eCassandra Targett\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=839cb90\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=839cb90\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-9959\\\" title=\\\"SolrInfoMBean-s category and hierarchy cleanup\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-9959\\\"\u003e\u003cdel\u003eSOLR-9959\u003c\\/del\u003e\u003c\\/a\u003e: Ref Guide changes for JMX and metric name changes\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_16173407_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16173407_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Sep\\/17 16:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-09-20T16:03:55+0000\'\u003e20\\/Sep\\/17 16:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 839cb9081cbcda171dd872b5c271d8e2ec72081a in lucene-solr\'s branch refs\\/heads\\/branch_7x from  Cassandra Targett  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=839cb90  ] \\n\\n   SOLR-9959  : Ref Guide changes for JMX and metric name changes              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-16173415\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/SOLR-9959?focusedCommentId=16173415&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16173415\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_16173415_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16173415_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Sep\\/17 16:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-09-20T16:07:47+0000\'\u003e20\\/Sep\\/17 16:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 70bffbdf13af5c371d9afe6e9e4159864876af6c in lucene-solr\'s branch refs\\/heads\\/branch_7_0 from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=ctargett\\\" class=\\\"user-hover\\\" rel=\\\"ctargett\\\"\u003eCassandra Targett\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=70bffbd\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=70bffbd\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/SOLR-9959\\\" title=\\\"SolrInfoMBean-s category and hierarchy cleanup\\\" class=\\\"issue-link\\\" data-issue-key=\\\"SOLR-9959\\\"\u003e\u003cdel\u003eSOLR-9959\u003c\\/del\u003e\u003c\\/a\u003e: Ref Guide changes for JMX and metric name changes\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_16173415_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_16173415_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'20\\/Sep\\/17 16:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2017-09-20T16:07:47+0000\'\u003e20\\/Sep\\/17 16:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 70bffbdf13af5c371d9afe6e9e4159864876af6c in lucene-solr\'s branch refs\\/heads\\/branch_7_0 from  Cassandra Targett  \\n[  https:\\/\\/git-wip-us.apache.org\\/repos\\/asf?p=lucene-solr.git;h=70bffbd  ] \\n\\n   SOLR-9959  : Ref Guide changes for JMX and metric name changes              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="12310230";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/SOLR\\/summary\\\" title=\\\"Solr\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=12310230&amp;avatarId=22151\\\" alt=\\\"Solr\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/SOLR\\/summary\\\" title=\\\"Solr\\\"\u003eSolr\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/SOLR\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/SOLR?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/SOLR?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1516227397644"> 
    <input type="hidden" title="jira.request.server.time" value="376"> 
    <input type="hidden" title="jira.request.id" value="1336x8541177x7"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="7"> 
    <input type="hidden" title="db.reads.time.in.ms" value="53"> 
    <input type="hidden" title="db.conns.time.in.ms" value="60"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 1336x8541177x7
	          REQUEST TIMESTAMP : [17/Jan/2018:22:16:37 +0000]
	               REQUEST TIME : 0.3760
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 7

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=35, elapsedTotal=53596029, elapsedMin=487843, elapsedMax=24543258, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=39, elapsedTotal=60230490, elapsedMin=521174, elapsedMax=24621656, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>