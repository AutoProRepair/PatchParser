<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|91d1500b0c335019dfe99a7240697f0505b0a02d|lout"> 
  <link rel="shortcut icon" href="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"jira.instrumentation.laas\":false,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"com.atlassian.jira.issuetable.draggable\":true,\"jira.create.linked.issue\":true,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"jira.jql.suggestrecentfields\":false,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"jira.jql.smartautoselectfirst\":false,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.priorities.per.project\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"jira.renderer.consider.variable.format\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/vnd.wap.wbmp,image/png,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"223c5a5ec95c5e\"";
WRM._unparsedData["project-id"]="10594";
WRM._unparsedData["project-key"]="\"DERBY\"";
WRM._unparsedData["project-name"]="\"Derby\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="10594";
WRM._unparsedData["projectKey"]="\"DERBY\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/74ac580603ca910fff0cfdf319e54add-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/98ceb006e504d7924d5ffc411626c6bc-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/c1e4d26ea276469807c3dc0918df482c-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/6bf9253c8d533109c3b02e26794be24e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/ccd2e67b523185973473e8bd5735c8f9-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/33e5e0166867c8c9228d44506f60b2e8/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/6579b6b8ba67abaa496e39b9242a18a4-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="DERBY-1482"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[DERBY-1482] Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed. - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[DERBY-1482] Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed. - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/DERBY" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FDERBY-1482">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="10594" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Derby'" src="https://issues.apache.org/jira/secure/projectavatar?pid=10594&amp;avatarId=10122"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/DERBY">Derby</a></li>
                 <li><a class="issue-link" data-issue-key="DERBY-1482" href="/jira/browse/DERBY-1482" id="key-val" rel="12345511">DERBY-1482</a></li>
                </ol>
                <h1 id="summary-val">Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed.</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FDERBY-1482"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/DERBY-1482/DERBY-1482.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/DERBY-1482/DERBY-1482.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/DERBY-1482/DERBY-1482.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/DERBY-1482/DERBY-1482.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" title="Bug - A problem which impairs or prevents the functions of the product." width="16"> Bug </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/minor.svg" title="Minor - Minor loss of function, or other problem where easy workaround is present." width="16"> Minor </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> <span class="shorten" id="versions-field"> <span title="10.2.1.6 ">10.2.1.6</span> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.9.1.0" title="10.9.1.0 First release on the 10.9 branch">10.9.1.0</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> <span class="shorten" id="components-field"> <a href="/jira/issues/?jql=project+%3D+DERBY+AND+component+%3D+SQL" title="SQL ">SQL</a> </span> </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <ul class="labels" id="labels-12345511-value"> 
                     <li><a class="lozenge" href="/jira/issues/?jql=labels+%3D+LOB" title="LOB"><span>LOB</span></a></li> 
                     <li><a class="lozenge" href="/jira/issues/?jql=labels+%3D+derby_backport_reject_10_8" title="derby_backport_reject_10_8"><span>derby_backport_reject_10_8</span></a></li> 
                    </ul> 
                   </div> 
                  </div> </li> 
                </ul> 
                <div id="customfieldmodule"> 
                 <div class="aui-tabs horizontal-tabs" id="customfield-tabs"> 
                  <div id="customfield-panel-1" class="tabs-pane active-pane"> 
                   <ul class="property-list"> 
                    <li id="rowForcustomfield_12310050" class="item"> 
                     <div class="wrap"> 
                      <strong title="Urgency" class="name">Urgency:</strong> 
                      <div id="customfield_12310050-val" class="value type-select" data-fieldtype="select" data-fieldtypecompletekey="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        Low 
                      </div> 
                     </div> </li> 
                    <li id="rowForcustomfield_12310090" class="item"> 
                     <div class="wrap"> 
                      <strong title="Issue &amp; fix info" class="name">Issue &amp; fix info:</strong> 
                      <div id="customfield_12310090-val" class="value type-multicheckboxes" data-fieldtype="multicheckboxes" data-fieldtypecompletekey="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes"> 
                       <div class="shorten" id="customfield_12310090-field"> 
                        <span>High Value Fix</span>, 
                        <span>Release Note Needed</span> 
                       </div> 
                      </div> 
                     </div> </li> 
                   </ul> 
                  </div> 
                 </div>
                </div> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p>Suppose I have 1) a table "t1" with blob data in it, and 2) an UPDATE trigger "tr1" defined on that table, where the triggered-SQL-action for "tr1" does NOT reference any of the blob columns in the table. [ Note that this is different from <a href="https://issues.apache.org/jira/browse/DERBY-438" title="Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s)." class="issue-link" data-issue-key="DERBY-438"><del>DERBY-438</del></a> because <a href="https://issues.apache.org/jira/browse/DERBY-438" title="Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s)." class="issue-link" data-issue-key="DERBY-438"><del>DERBY-438</del></a> deals with triggers that <em>do</em> reference the blob column(s), whereas this issue deals with triggers that do <em>not</em> reference the blob columns--but I think they're related, so I'm creating this as subtask to 438 ]. In such a case, if the trigger is fired, the blob data will be streamed into memory and thus consume JVM heap, even though it (the blob data) is never actually referenced/accessed by the trigger statement.</p> 
                  <p>For example, suppose we have the following DDL:</p> 
                  <p> create table t1 (id int, status smallint, bl blob(2G));<br> create table t2 (id int, updated int default 0);<br> create trigger tr1 after update of status on t1 referencing new as n_row for each row mode db2sql update t2 set updated = updated + 1 where t2.id = n_row.id;</p> 
                  <p>Then if t1 and t2 both have data and we make a call to:</p> 
                  <p> update t1 set status = 3;</p> 
                  <p>the trigger tr1 will fire, which will cause the blob column in t1 to be streamed into memory for each row affected by the trigger. The result is that, if the blob data is large, we end up using a lot of JVM memory when we really shouldn't have to (at least, in <em>theory</em> we shouldn't have to...).</p> 
                  <p>Ideally, Derby could figure out whether or not the blob column is referenced, and avoid streaming the lob into memory whenever possible (hence this is probably more of an "enhancement" request than a bug)... </p> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/DERBY-1482?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/DERBY-1482?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/DERBY-1482?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/DERBY-1482?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12475247" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12475247/DERBY_1482_patch4_diff.txt" draggable="true" data-downloadurl="text/plain:DERBY_1482_patch4_diff.txt:https://issues.apache.org/jira/secure/attachment/12475247/DERBY_1482_patch4_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12475247/DERBY_1482_patch4_diff.txt" title="Latest  01/Apr/11 18:33 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:DERBY_1482_patch4_diff.txt:https://issues.apache.org/jira/secure/attachment/12475247/DERBY_1482_patch4_diff.txt">DERBY_1482_patch4_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2011-04-01T18:33:17.627Z">01/Apr/11 18:33</time>
                   </dd>
                   <dd class="attachment-size">
                    22 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12475248" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12475248/DERBY_1482_patch4_stat.txt" draggable="true" data-downloadurl="text/plain:DERBY_1482_patch4_stat.txt:https://issues.apache.org/jira/secure/attachment/12475248/DERBY_1482_patch4_stat.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12475248/DERBY_1482_patch4_stat.txt" title="Latest  01/Apr/11 18:33 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:DERBY_1482_patch4_stat.txt:https://issues.apache.org/jira/secure/attachment/12475248/DERBY_1482_patch4_stat.txt">DERBY_1482_patch4_stat.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2011-04-01T18:33:17.636Z">01/Apr/11 18:33</time>
                   </dd>
                   <dd class="attachment-size">
                    0.9 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12439923" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12439923/derby1482_patch1_diff.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch1_diff.txt:https://issues.apache.org/jira/secure/attachment/12439923/derby1482_patch1_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12439923/derby1482_patch1_diff.txt" title="Latest  26/Mar/10 22:04 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch1_diff.txt:https://issues.apache.org/jira/secure/attachment/12439923/derby1482_patch1_diff.txt">derby1482_patch1_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-03-26T22:04:43.533Z">26/Mar/10 22:04</time>
                   </dd>
                   <dd class="attachment-size">
                    59 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12439924" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12439924/derby1482_patch1_stat.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch1_stat.txt:https://issues.apache.org/jira/secure/attachment/12439924/derby1482_patch1_stat.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12439924/derby1482_patch1_stat.txt" title="Latest  26/Mar/10 22:04 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch1_stat.txt:https://issues.apache.org/jira/secure/attachment/12439924/derby1482_patch1_stat.txt">derby1482_patch1_stat.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-03-26T22:04:43.536Z">26/Mar/10 22:04</time>
                   </dd>
                   <dd class="attachment-size">
                    1 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12440581" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12440581/derby1482_patch2_diff.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch2_diff.txt:https://issues.apache.org/jira/secure/attachment/12440581/derby1482_patch2_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12440581/derby1482_patch2_diff.txt" title="Latest  02/Apr/10 05:33 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch2_diff.txt:https://issues.apache.org/jira/secure/attachment/12440581/derby1482_patch2_diff.txt">derby1482_patch2_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-04-02T05:33:16.154Z">02/Apr/10 05:33</time>
                   </dd>
                   <dd class="attachment-size">
                    50 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12440582" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12440582/derby1482_patch2_stat.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch2_stat.txt:https://issues.apache.org/jira/secure/attachment/12440582/derby1482_patch2_stat.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12440582/derby1482_patch2_stat.txt" title="Latest  02/Apr/10 05:33 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch2_stat.txt:https://issues.apache.org/jira/secure/attachment/12440582/derby1482_patch2_stat.txt">derby1482_patch2_stat.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-04-02T05:33:16.286Z">02/Apr/10 05:33</time>
                   </dd>
                   <dd class="attachment-size">
                    0.9 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12445694" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12445694/derby1482_patch3_diff.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch3_diff.txt:https://issues.apache.org/jira/secure/attachment/12445694/derby1482_patch3_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12445694/derby1482_patch3_diff.txt" title="Latest  27/May/10 20:20 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch3_diff.txt:https://issues.apache.org/jira/secure/attachment/12445694/derby1482_patch3_diff.txt">derby1482_patch3_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-05-27T20:20:50.514Z">27/May/10 20:20</time>
                   </dd>
                   <dd class="attachment-size">
                    102 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12445695" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12445695/derby1482_patch3_stat.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch3_stat.txt:https://issues.apache.org/jira/secure/attachment/12445695/derby1482_patch3_stat.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12445695/derby1482_patch3_stat.txt" title="Latest  27/May/10 20:20 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch3_stat.txt:https://issues.apache.org/jira/secure/attachment/12445695/derby1482_patch3_stat.txt">derby1482_patch3_stat.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-05-27T20:20:50.610Z">27/May/10 20:20</time>
                   </dd>
                   <dd class="attachment-size">
                    1 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12478985" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12478985/derby1482_patch5_diff.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch5_diff.txt:https://issues.apache.org/jira/secure/attachment/12478985/derby1482_patch5_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12478985/derby1482_patch5_diff.txt" title="Latest  12/May/11 16:04 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch5_diff.txt:https://issues.apache.org/jira/secure/attachment/12478985/derby1482_patch5_diff.txt">derby1482_patch5_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2011-05-12T16:04:50.186Z">12/May/11 16:04</time>
                   </dd>
                   <dd class="attachment-size">
                    33 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12478986" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12478986/derby1482_patch5_stat.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch5_stat.txt:https://issues.apache.org/jira/secure/attachment/12478986/derby1482_patch5_stat.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12478986/derby1482_patch5_stat.txt" title="Latest  12/May/11 16:04 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch5_stat.txt:https://issues.apache.org/jira/secure/attachment/12478986/derby1482_patch5_stat.txt">derby1482_patch5_stat.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2011-05-12T16:04:50.202Z">12/May/11 16:04</time>
                   </dd>
                   <dd class="attachment-size">
                    0.9 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12479033" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12479033/derby1482_patch6_diff.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch6_diff.txt:https://issues.apache.org/jira/secure/attachment/12479033/derby1482_patch6_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12479033/derby1482_patch6_diff.txt" title="Latest  12/May/11 23:40 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch6_diff.txt:https://issues.apache.org/jira/secure/attachment/12479033/derby1482_patch6_diff.txt">derby1482_patch6_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2011-05-12T23:40:16.867Z">12/May/11 23:40</time>
                   </dd>
                   <dd class="attachment-size">
                    34 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12479034" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12479034/derby1482_patch6_stat.txt" draggable="true" data-downloadurl="text/plain:derby1482_patch6_stat.txt:https://issues.apache.org/jira/secure/attachment/12479034/derby1482_patch6_stat.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12479034/derby1482_patch6_stat.txt" title="Latest  12/May/11 23:40 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482_patch6_stat.txt:https://issues.apache.org/jira/secure/attachment/12479034/derby1482_patch6_stat.txt">derby1482_patch6_stat.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2011-05-12T23:40:16.878Z">12/May/11 23:40</time>
                   </dd>
                   <dd class="attachment-size">
                    0.9 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12434429" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12434429/derby1482DeepCopyAfterTriggerOnLobColumn.java" draggable="true" data-downloadurl="text/plain:derby1482DeepCopyAfterTriggerOnLobColumn.java:https://issues.apache.org/jira/secure/attachment/12434429/derby1482DeepCopyAfterTriggerOnLobColumn.java"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12434429/derby1482DeepCopyAfterTriggerOnLobColumn.java" title="Latest  01/Feb/10 20:11 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482DeepCopyAfterTriggerOnLobColumn.java:https://issues.apache.org/jira/secure/attachment/12434429/derby1482DeepCopyAfterTriggerOnLobColumn.java">derby1482DeepCopyAfterTriggerOnLobColumn.java</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-02-01T20:11:36.445Z">01/Feb/10 20:11</time>
                   </dd>
                   <dd class="attachment-size">
                    11 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12431091" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12431091/derby1482Repro.java" draggable="true" data-downloadurl="text/plain:derby1482Repro.java:https://issues.apache.org/jira/secure/attachment/12431091/derby1482Repro.java"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12431091/derby1482Repro.java" title="Latest  22/Jan/10 03:32 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482Repro.java:https://issues.apache.org/jira/secure/attachment/12431091/derby1482Repro.java">derby1482Repro.java</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-01-22T03:32:22.946Z">22/Jan/10 03:32</time>
                   </dd>
                   <dd class="attachment-size">
                    3 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12435915" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12435915/derby1482ReproVersion2.java" draggable="true" data-downloadurl="text/plain:derby1482ReproVersion2.java:https://issues.apache.org/jira/secure/attachment/12435915/derby1482ReproVersion2.java"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12435915/derby1482ReproVersion2.java" title="Latest  15/Feb/10 22:38 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:derby1482ReproVersion2.java:https://issues.apache.org/jira/secure/attachment/12435915/derby1482ReproVersion2.java">derby1482ReproVersion2.java</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-02-15T22:38:16.980Z">15/Feb/10 22:38</time>
                   </dd>
                   <dd class="attachment-size">
                    3 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12439922" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12439922/junitUpgradeTestFailureWithPatch1.out" draggable="true" data-downloadurl="application/octet-stream:junitUpgradeTestFailureWithPatch1.out:https://issues.apache.org/jira/secure/attachment/12439922/junitUpgradeTestFailureWithPatch1.out"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-devtools-file" title="File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12439922/junitUpgradeTestFailureWithPatch1.out" title="Latest  26/Mar/10 22:04 - Mamta A. Satoor" draggable="true" data-downloadurl="application/octet-stream:junitUpgradeTestFailureWithPatch1.out:https://issues.apache.org/jira/secure/attachment/12439922/junitUpgradeTestFailureWithPatch1.out">junitUpgradeTestFailureWithPatch1.out</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-03-26T22:04:43.475Z">26/Mar/10 22:04</time>
                   </dd>
                   <dd class="attachment-size">
                    271 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12487570" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12487570/releaseNote.html" draggable="true" data-downloadurl="text/html:releaseNote.html:https://issues.apache.org/jira/secure/attachment/12487570/releaseNote.html"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-code" title="HTML File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12487570/releaseNote.html" title="Latest  22/Jul/11 23:03 - Mamta A. Satoor" draggable="true" data-downloadurl="text/html:releaseNote.html:https://issues.apache.org/jira/secure/attachment/12487570/releaseNote.html">releaseNote.html</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2011-07-22T23:03:09.637Z">22/Jul/11 23:03</time>
                   </dd>
                   <dd class="attachment-size">
                    4 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12436290" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12436290/TriggerTests_ver1_diff.txt" draggable="true" data-downloadurl="text/plain:TriggerTests_ver1_diff.txt:https://issues.apache.org/jira/secure/attachment/12436290/TriggerTests_ver1_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12436290/TriggerTests_ver1_diff.txt" title="Latest  19/Feb/10 06:44 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:TriggerTests_ver1_diff.txt:https://issues.apache.org/jira/secure/attachment/12436290/TriggerTests_ver1_diff.txt">TriggerTests_ver1_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-02-19T06:44:32.990Z">19/Feb/10 06:44</time>
                   </dd>
                   <dd class="attachment-size">
                    64 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12436291" data-issue-id="12345511" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12436291/TriggerTests_ver1_stat.txt" draggable="true" data-downloadurl="text/plain:TriggerTests_ver1_stat.txt:https://issues.apache.org/jira/secure/attachment/12436291/TriggerTests_ver1_stat.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12436291/TriggerTests_ver1_stat.txt" title="Latest  19/Feb/10 06:44 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:TriggerTests_ver1_stat.txt:https://issues.apache.org/jira/secure/attachment/12436291/TriggerTests_ver1_stat.txt">TriggerTests_ver1_stat.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2010-02-19T06:44:32.995Z">19/Feb/10 06:44</time>
                   </dd>
                   <dd class="attachment-size">
                    0.2 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="linkingmodule" class="module toggle-wrap">
               <div id="linkingmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Issue Links</h2>
               </div>
               <div class="mod-content"> 
                <div class="links-container" data-default-link-icon="/jira/images/icons/generic_link_16.png"> 
                 <dl class="links-list "> 
                  <dt title="breaks">
                   breaks
                  </dt> 
                  <dd id="internal-12500978_12310050"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" width="16" height="16" title="Bug - A problem which impairs or prevents the functions of the product." alt="Bug - A problem which impairs or prevents the functions of the product."> <span title="DERBY-5121: Data corruption when executing an UPDATE trigger"> <a href="/jira/browse/DERBY-5121" data-issue-key="DERBY-5121" class="issue-link link-title resolution">DERBY-5121</a> <span class="link-summary">Data corruption when executing an UPDATE trigger</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                 <dl class="links-list "> 
                  <dt title="incorporates">
                   incorporates
                  </dt> 
                  <dd id="internal-12312010_12310010"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21146&amp;avatarType=issuetype" width="16" height="16" title="Sub-task - The sub-task of the issue" alt="Sub-task - The sub-task of the issue"> <span title="DERBY-442: Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed."> <a href="/jira/browse/DERBY-442" data-issue-key="DERBY-442" class="issue-link link-title resolution">DERBY-442</a> <span class="link-summary">Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed.</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/minor.svg" width="16" height="16" title="Minor - Minor loss of function, or other problem where easy workaround is present." alt="Minor - Minor loss of function, or other problem where easy workaround is present."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                 <dl class="links-list "> 
                  <dt title="is blocked by">
                   is blocked by
                  </dt> 
                  <dd id="internal-12408012_10032"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" width="16" height="16" title="Bug - A problem which impairs or prevents the functions of the product." alt="Bug - A problem which impairs or prevents the functions of the product."> <span title="DERBY-3940: Dropping a column does not drop triggers which mention that column"> <a href="/jira/browse/DERBY-3940" data-issue-key="DERBY-3940" class="issue-link link-title resolution">DERBY-3940</a> <span class="link-summary">Dropping a column does not drop triggers which mention that column</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                 <dl class="links-list "> 
                  <dt title="is related to">
                   is related to
                  </dt> 
                  <dd id="internal-12510419_10030"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" width="16" height="16" title="Bug - A problem which impairs or prevents the functions of the product." alt="Bug - A problem which impairs or prevents the functions of the product."> <span title="DERBY-5277: Intermittent OutOfMemoryErrors in BasicSetup.testTriggersWithLOBcolumns()"> <a href="/jira/browse/DERBY-5277" data-issue-key="DERBY-5277" class="issue-link link-title resolution">DERBY-5277</a> <span class="link-summary">Intermittent OutOfMemoryErrors in BasicSetup.testTriggersWithLOBcolumns()</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                  <dd id="internal-12511411_10030"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="DERBY-5294: Enhance compress table to drop and recreate the triggers. This will enable pre-10.9 triggers (after hard upgrade to 10.9) to read only the required columns from the trigger table."> <a href="/jira/browse/DERBY-5294" data-issue-key="DERBY-5294" class="issue-link link-title">DERBY-5294</a> <span class="link-summary">Enhance compress table to drop and recreate the triggers. This will enable pre-10.9 triggers (after hard upgrade to 10.9) to read only the required columns from the trigger table.</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-blue-gray jira-issue-status-lozenge-new aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Open</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is open and ready for the assignee to start work on it.</span>">Open</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                  <dd id="internal-12455381_10030" class="
                                                collapsed-link                    "> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="DERBY-4537: Update on tables with blob columns streams blobs into memory even when the blobs are not updated/accessed."> <a href="/jira/browse/DERBY-4537" data-issue-key="DERBY-4537" class="issue-link link-title resolution">DERBY-4537</a> <span class="link-summary">Update on tables with blob columns streams blobs into memory even when the blobs are not updated/accessed.</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/minor.svg" width="16" height="16" title="Minor - Minor loss of function, or other problem where easy workaround is present." alt="Minor - Minor loss of function, or other problem where easy workaround is present."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                  <dd id="internal-12455390_10030" class="
                                                collapsed-link                    "> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="DERBY-4538: If the CREATE TRIGGER does not have the REFERENCING clause, then there is no need to keep before and after values for the triggering table"> <a href="/jira/browse/DERBY-4538" data-issue-key="DERBY-4538" class="issue-link link-title resolution">DERBY-4538</a> <span class="link-summary">If the CREATE TRIGGER does not have the REFERENCING clause, then there is no need to keep before and after values for the triggering table</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/minor.svg" width="16" height="16" title="Minor - Minor loss of function, or other problem where easy workaround is present." alt="Minor - Minor loss of function, or other problem where easy workaround is present."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                 <div id="show-more-links"> 
                  <button class="aui-button aui-button-link" id="show-more-links-link">Show 2 more links</button> 
                  <span>(2 is related to)</span> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_mamtas" rel="mamtas" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Mamta A. Satoor&quot;,&quot;emailAddress&quot;:&quot;msatoor@gmail.com&quot;,&quot;username&quot;:&quot;mamtas&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mamtas"></span></span> Mamta A. Satoor </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_djd" rel="djd" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Daniel John Debrunner&quot;,&quot;emailAddress&quot;:&quot;djd@apache.org&quot;,&quot;username&quot;:&quot;djd&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="djd"></span></span> Daniel John Debrunner </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">1</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">1</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="06/Jul/06 22:04"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2006-07-06T22:04:48+0000">06/Jul/06 22:04</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="17/Jun/13 09:19"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2013-06-17T09:19:12+0000">17/Jun/13 09:19</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="17/May/11 18:59"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2011-05-17T18:59:40+0000">17/May/11 18:59</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-1482?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/DERBY-1482?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-12419539\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12419539&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12419539\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12419539_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12419539_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Jul\\/06 22:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2006-07-06T22:06:21+0000\'\u003e06\\/Jul\\/06 22:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-442\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-442\\\"\u003e\u003cdel\u003eDERBY-442\u003c\\/del\u003e\u003c\\/a\u003e is marked as a sub-taks of \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-438\\\" title=\\\"Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-438\\\"\u003e\u003cdel\u003eDERBY-438\u003c\\/del\u003e\u003c\\/a\u003e but in reality this is a separate bug.\u003cbr\\/\u003e\\nThe existing comments in \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-442\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-442\\\"\u003e\u003cdel\u003eDERBY-442\u003c\\/del\u003e\u003c\\/a\u003e and repro conttinue to apply for this bug.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12419539_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12419539_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Jul\\/06 22:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2006-07-06T22:06:21+0000\'\u003e06\\/Jul\\/06 22:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                      DERBY-442   is marked as a sub-taks of   DERBY-438   but in reality this is a separate bug. \\nThe existing comments in   DERBY-442   and repro conttinue to apply for this bug.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12435871\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12435871&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12435871\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12435871_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12435871_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Sep\\/06 15:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2006-09-19T15:21:36+0000\'\u003e19\\/Sep\\/06 15:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMoving to 10.2.2.0.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12435871_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12435871_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Sep\\/06 15:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2006-09-19T15:21:36+0000\'\u003e19\\/Sep\\/06 15:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Moving to 10.2.2.0.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12456054\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12456054&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12456054\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12456054_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12456054_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Dec\\/06 14:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2006-12-06T14:45:27+0000\'\u003e06\\/Dec\\/06 14:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMove to 10.2.3.0.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12456054_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12456054_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Dec\\/06 14:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2006-12-06T14:45:27+0000\'\u003e06\\/Dec\\/06 14:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Move to 10.2.3.0.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12467542\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12467542&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12467542\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"fuzzylogic\\\" id=\\\"commentauthor_12467542_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=fuzzylogic\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"fuzzylogic\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrew McIntyre\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12467542_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/Jan\\/07 20:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-01-25T20:36:38+0000\'\u003e25\\/Jan\\/07 20:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eUnsetting Fix Version for unassigned issues.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"fuzzylogic\\\" id=\\\"commentauthor_12467542_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=fuzzylogic\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"fuzzylogic\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Andrew McIntyre\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12467542_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/Jan\\/07 20:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-01-25T20:36:38+0000\'\u003e25\\/Jan\\/07 20:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Unsetting Fix Version for unassigned issues.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546489\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546489&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546489\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12546489_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546489_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Nov\\/07 23:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-28T23:51:06+0000\'\u003e28\\/Nov\\/07 23:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIn \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-442\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-442\\\"\u003e\u003cdel\u003eDERBY-442\u003c\\/del\u003e\u003c\\/a\u003e, Manish said:\u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-442#action_12374273\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-442#action_12374273\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003e\\\"If we want to be smart and not read the columns which are not needed by the trigger, the trigger descriptor and the system table will have to remember which columns are referenced by the trigger. Confusingly, the referencedcolumns column of SYSTRIGGERS actually contains the triggering columns!\\\"\u003c\\/p\u003e\\n\\n\u003cp\u003eDoes this mean that in order to fix this upgrade changes will be required?\u003c\\/p\u003e\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12546489_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546489_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Nov\\/07 23:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-28T23:51:06+0000\'\u003e28\\/Nov\\/07 23:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    In   DERBY-442  , Manish said: \\n https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-442#action_12374273  \\n\\n \\\"If we want to be smart and not read the columns which are not needed by the trigger, the trigger descriptor and the system table will have to remember which columns are referenced by the trigger. Confusingly, the referencedcolumns column of SYSTRIGGERS actually contains the triggering columns!\\\" \\n\\n Does this mean that in order to fix this upgrade changes will be required? \\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546496\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546496&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546496\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546496_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546496_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 00:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T00:05:03+0000\'\u003e29\\/Nov\\/07 00:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ePossibly not, don\'t jump to the conclusion that reading all the columns implies that LOB columns must be loaded into memory.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo while reading all columns for the row is undesirable, it may not be causing the actual problem. The problem is that once a LOB column is read it is being streamed into memory even if it isn\'t referenced.\u003c\\/p\u003e\\n\\n\u003cp\u003eCompare to a SELECT * from a table with LOB columns. All the columns are read from the table, but if the application never fetches the LOB columns they will not be read into memory, so what in the trigger case is causing the LOB values to be fully read.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546496_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546496_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 00:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T00:05:03+0000\'\u003e29\\/Nov\\/07 00:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Possibly not, don\'t jump to the conclusion that reading all the columns implies that LOB columns must be loaded into memory. \\n\\n So while reading all columns for the row is undesirable, it may not be causing the actual problem. The problem is that once a LOB column is read it is being streamed into memory even if it isn\'t referenced. \\n\\n Compare to a SELECT * from a table with LOB columns. All the columns are read from the table, but if the application never fetches the LOB columns they will not be read into memory, so what in the trigger case is causing the LOB values to be fully read.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546768\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546768&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546768\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12546768_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546768_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 15:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T15:41:18+0000\'\u003e29\\/Nov\\/07 15:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMy ultimate goal is to get a patch for 10.1 which will allow triggers on tables with blob columns if none of the blob columns are referenced.   I see three possible approaches.\u003c\\/p\u003e\\n\\n\u003cp\u003e1) Port \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-438\\\" title=\\\"Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-438\\\"\u003e\u003cdel\u003eDERBY-438\u003c\\/del\u003e\u003c\\/a\u003e.  This is a huge change and my initial cursory attempts weren\'t successful, but I could give it another shot.\u003c\\/p\u003e\\n\\n\u003cp\u003e2) Try to fix this bug in the hopes that eliminating the read of the lob columns will allow us to have triggers on non-LOB columns.\u003c\\/p\u003e\\n\\n\u003cp\u003e3) Something completely different for 10.1 to not read LOB columns at all in triggers.\u003c\\/p\u003e\\n\\n\u003cp\u003eDo you think fixing this bug to not fully read the lob values will allow us to have triggers on non-LOB columns?\u003c\\/p\u003e\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12546768_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546768_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 15:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T15:41:18+0000\'\u003e29\\/Nov\\/07 15:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    My ultimate goal is to get a patch for 10.1 which will allow triggers on tables with blob columns if none of the blob columns are referenced.   I see three possible approaches. \\n\\n 1) Port   DERBY-438  .  This is a huge change and my initial cursory attempts weren\'t successful, but I could give it another shot. \\n\\n 2) Try to fix this bug in the hopes that eliminating the read of the lob columns will allow us to have triggers on non-LOB columns. \\n\\n 3) Something completely different for 10.1 to not read LOB columns at all in triggers. \\n\\n Do you think fixing this bug to not fully read the lob values will allow us to have triggers on non-LOB columns? \\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546782\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546782&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546782\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546782_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546782_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 16:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T16:12:55+0000\'\u003e29\\/Nov\\/07 16:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eSorry, misunderstood what you were trying to achieve. I guess I was just pointing out that 2) is one possible fix to \u003cb\u003ethis\u003c\\/b\u003e bug, but will have upgrade costs. Look strictly at the symptoms of this bug there may be an easier fix (for this bug) that reads the columns but does not stream them in. The first action would be to find why the LOB values are being streamed in, that\'s not a requirement for the column be read from the store.\u003c\\/p\u003e\\n\\n\u003cp\u003eAs for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-438\\\" title=\\\"Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-438\\\"\u003e\u003cdel\u003eDERBY-438\u003c\\/del\u003e\u003c\\/a\u003e, maybe the discussion would be better in that issue, since it\'s then clear what is being attempted.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546782_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546782_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 16:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T16:12:55+0000\'\u003e29\\/Nov\\/07 16:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Sorry, misunderstood what you were trying to achieve. I guess I was just pointing out that 2) is one possible fix to  this  bug, but will have upgrade costs. Look strictly at the symptoms of this bug there may be an easier fix (for this bug) that reads the columns but does not stream them in. The first action would be to find why the LOB values are being streamed in, that\'s not a requirement for the column be read from the store. \\n\\n As for   DERBY-438  , maybe the discussion would be better in that issue, since it\'s then clear what is being attempted.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546793\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546793&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546793\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12546793_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546793_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 16:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T16:46:19+0000\'\u003e29\\/Nov\\/07 16:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI came across this relevant comment in DMLWriteResultSet and thought I would post for reference.\u003c\\/p\u003e\\n\\n\u003cp\u003e\\/* We only need to objectify the streams here if they are exposed to the users through the\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003etrigger context.  For \\\"before\\\" trigger, we could just return the stream wrapped in\u003c\\/li\u003e\\n\\t\u003cli\u003eRememberBytesInputStream to the user and reset it after usage, but this wouldn\'t work\u003c\\/li\u003e\\n\\t\u003cli\u003ebecause the user may get the stream in trigger action and do something with it in parallel\u003c\\/li\u003e\\n\\t\u003cli\u003ewith the store doing insert.  We could also delay the materializing until the stream is\u003c\\/li\u003e\\n\\t\u003cli\u003efetched in before trigger but that would complicate the code.  For \\\"after\\\" trigger, we have\u003c\\/li\u003e\\n\\t\u003cli\u003eto materialize it here because store only keeps a page\'s amount for each round.  For other\u003c\\/li\u003e\\n\\t\u003cli\u003ereasons of \\\"deferred\\\" operations we don\'t need to objectify here.  Simply going through a\u003c\\/li\u003e\\n\\t\u003cli\u003etemp table (either in memory part or spilled to disk) is fine for the stream, unless a\u003c\\/li\u003e\\n\\t\u003cli\u003esame stream appears in two rows in the temp table, which could happen for an \\\"update\\\", in\u003c\\/li\u003e\\n\\t\u003cli\u003ewhich case we do the objectifying in UpdateResultSet.  Beetle 4896.  Related bug entries:\u003c\\/li\u003e\\n\\t\u003cli\u003e2432, 3383.\u003cbr\\/\u003e\\n\\t\\t *\\/\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12546793_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546793_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 16:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T16:46:19+0000\'\u003e29\\/Nov\\/07 16:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I came across this relevant comment in DMLWriteResultSet and thought I would post for reference. \\n\\n \\/* We only need to objectify the streams here if they are exposed to the users through the \\n \\n\\t trigger context.  For \\\"before\\\" trigger, we could just return the stream wrapped in \\n\\t RememberBytesInputStream to the user and reset it after usage, but this wouldn\'t work \\n\\t because the user may get the stream in trigger action and do something with it in parallel \\n\\t with the store doing insert.  We could also delay the materializing until the stream is \\n\\t fetched in before trigger but that would complicate the code.  For \\\"after\\\" trigger, we have \\n\\t to materialize it here because store only keeps a page\'s amount for each round.  For other \\n\\t reasons of \\\"deferred\\\" operations we don\'t need to objectify here.  Simply going through a \\n\\t temp table (either in memory part or spilled to disk) is fine for the stream, unless a \\n\\t same stream appears in two rows in the temp table, which could happen for an \\\"update\\\", in \\n\\t which case we do the objectifying in UpdateResultSet.  Beetle 4896.  Related bug entries: \\n\\t 2432, 3383. \\n\\t\\t *\\/ \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546865\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546865&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546865\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546865_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546865_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 20:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T20:09:27+0000\'\u003e29\\/Nov\\/07 20:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eSorry, I\'m confused again:\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt;My ultimate goal is to get a patch for 10.1 which will allow triggers on tables with blob columns if none of the blob columns are referenced. I see three possible approaches.\u003cbr\\/\u003e\\n&gt; 1) Port \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-438\\\" title=\\\"Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-438\\\"\u003e\u003cdel\u003eDERBY-438\u003c\\/del\u003e\u003c\\/a\u003e. \u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-438\\\" title=\\\"Update triggers on tables with BLOB and CLOB columns fail at execution time if the triggered-SQL-statement references the LOB column(s).\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-438\\\"\u003e\u003cdel\u003eDERBY-438\u003c\\/del\u003e\u003c\\/a\u003e is about triggers that reference BLOB columns, how does that relate to the problem you are seeing which is for triggers that do not reference BLOB columns?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546865_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546865_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 20:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T20:09:27+0000\'\u003e29\\/Nov\\/07 20:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Sorry, I\'m confused again: \\n\\n &gt;My ultimate goal is to get a patch for 10.1 which will allow triggers on tables with blob columns if none of the blob columns are referenced. I see three possible approaches. \\n&gt; 1) Port   DERBY-438  .  \\n\\n   DERBY-438   is about triggers that reference BLOB columns, how does that relate to the problem you are seeing which is for triggers that do not reference BLOB columns?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546887\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546887&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546887\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546887_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546887_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 20:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T20:55:18+0000\'\u003e29\\/Nov\\/07 20:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI don\'t think this issue is related to streaming BLOBs into memory. I think the out of memory in the repro is due to the page cache blowing the memory limits.\u003c\\/p\u003e\\n\\n\u003cp\u003eIf I run the repro with a page cache size of 50 then the repro program succeeds with -Xm4m.\u003c\\/p\u003e\\n\\n\u003cp\u003eI put trace code in SQLBlob that would print out if the BLOB values were being converted from a stream to a byte[] and non were printed.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546887_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546887_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 20:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T20:55:18+0000\'\u003e29\\/Nov\\/07 20:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I don\'t think this issue is related to streaming BLOBs into memory. I think the out of memory in the repro is due to the page cache blowing the memory limits. \\n\\n If I run the repro with a page cache size of 50 then the repro program succeeds with -Xm4m. \\n\\n I put trace code in SQLBlob that would print out if the BLOB values were being converted from a stream to a byte[] and non were printed.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546889\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546889&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546889\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546889_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546889_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 20:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T20:57:50+0000\'\u003e29\\/Nov\\/07 20:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eJust to add the page cache is larger in size for the BLOB table case because the page size for the table will have increased to 32k instead of 4k for the table without BLOB columns.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546889_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546889_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 20:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T20:57:50+0000\'\u003e29\\/Nov\\/07 20:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Just to add the page cache is larger in size for the BLOB table case because the page size for the table will have increased to 32k instead of 4k for the table without BLOB columns.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12546904\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12546904&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12546904\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546904_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546904_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 21:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T21:29:24+0000\'\u003e29\\/Nov\\/07 21:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eTurns out this is an issue (BLOBs are streamed into memory) but the repro program does not show it. \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eThe repro uses blobs of 30k which will not be streamed by the store, and even if they were 30k is unlikely to cause any memory issues.\u003c\\/p\u003e\\n\\n\u003cp\u003eChanging the BLOB size to 30Mb showed the problem, here\'s the stack trace of where the BLOB is being serialized:\u003c\\/p\u003e\\n\\n\u003cp\u003e        at org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:219)\u003cbr\\/\u003e\\n        at org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:573)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(DMLWriteResultSet.java:152)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:133)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:437)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:256)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1228)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1650)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)\u003cbr\\/\u003e\\n        at d442.run(d442.java:192)\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"djd\\\" id=\\\"commentauthor_12546904_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=djd\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"djd\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Daniel John Debrunner\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12546904_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Nov\\/07 21:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-11-29T21:29:24+0000\'\u003e29\\/Nov\\/07 21:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Turns out this is an issue (BLOBs are streamed into memory) but the repro program does not show it.   \\n\\n The repro uses blobs of 30k which will not be streamed by the store, and even if they were 30k is unlikely to cause any memory issues. \\n\\n Changing the BLOB size to 30Mb showed the problem, here\'s the stack trace of where the BLOB is being serialized: \\n\\n         at org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:219) \\n        at org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:573) \\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(DMLWriteResultSet.java:152) \\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:133) \\n        at org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:437) \\n        at org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:256) \\n        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370) \\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1228) \\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1650) \\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299) \\n        at d442.run(d442.java:192)              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12803588\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12803588&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12803588\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12803588_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12803588_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jan\\/10 03:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-22T03:32:22+0000\'\u003e22\\/Jan\\/10 03:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIncluding the steps here to reproduce the problem of out of memory.\u003cbr\\/\u003e\\n1)First create the database with 3 populated tables using the attached java program derby1482Repro.java as follows\u003cbr\\/\u003e\\njava org.apache.derbyTesting.functionTests.tests.lang.derby1482Repro\u003cbr\\/\u003e\\nSome information about the 3 tables\u003cbr\\/\u003e\\n   a)Table t1 has a BLOB column along with other columns.\u003cbr\\/\u003e\\n   b)Table t3 is similar to t1 but without a BLOB column\u003cbr\\/\u003e\\n   c)Table t1 has an update trigger defined on it which updates table t2 in the trigger action.\u003cbr\\/\u003e\\n   d)Table t3 also has an update trigger defined on it which also updates table t2 in the trigger action.\u003cbr\\/\u003e\\n2)To reproduce the problem of OutOfMemory, connect to the database using ij with very limited heap\u003cbr\\/\u003e\\njava -Xmx4m -Dij.exceptionTrace=true org.apache.derby.tools.ij\u003cbr\\/\u003e\\nconnect \'jdbc:derby:testDB1482;create=true\';\u003cbr\\/\u003e\\n--following update of table t3 works with no problem. This is the table with no BLOB column\u003cbr\\/\u003e\\nupdate t3 set status = 1 where id = 1;\u003cbr\\/\u003e\\n--But the following update will fail with OOM. This update is on the table with BLOB column\u003cbr\\/\u003e\\nupdate t1 set status = 1 where id = 1;\u003c\\/p\u003e\\n\\n\u003cp\u003eThe attached derby1482Repro.java is subset of the repro provided by Army for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-442\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-442\\\"\u003e\u003cdel\u003eDERBY-442\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12803588_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12803588_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jan\\/10 03:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-22T03:32:22+0000\'\u003e22\\/Jan\\/10 03:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Including the steps here to reproduce the problem of out of memory. \\n1)First create the database with 3 populated tables using the attached java program derby1482Repro.java as follows \\njava org.apache.derbyTesting.functionTests.tests.lang.derby1482Repro \\nSome information about the 3 tables \\n   a)Table t1 has a BLOB column along with other columns. \\n   b)Table t3 is similar to t1 but without a BLOB column \\n   c)Table t1 has an update trigger defined on it which updates table t2 in the trigger action. \\n   d)Table t3 also has an update trigger defined on it which also updates table t2 in the trigger action. \\n2)To reproduce the problem of OutOfMemory, connect to the database using ij with very limited heap \\njava -Xmx4m -Dij.exceptionTrace=true org.apache.derby.tools.ij \\nconnect \'jdbc:derby:testDB1482;create=true\'; \\n--following update of table t3 works with no problem. This is the table with no BLOB column \\nupdate t3 set status = 1 where id = 1; \\n--But the following update will fail with OOM. This update is on the table with BLOB column \\nupdate t1 set status = 1 where id = 1; \\n\\n The attached derby1482Repro.java is subset of the repro provided by Army for   DERBY-442  .              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12805593\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12805593&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12805593\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12805593_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12805593_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Jan\\/10 18:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-27T18:01:52+0000\'\u003e27\\/Jan\\/10 18:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eDoes anyone know what guarantees there are on the \\\"old\\\" and \\\"new\\\" values in\u003cbr\\/\u003e\\nthe trigger action.  I understand they should represent before and after values\u003cbr\\/\u003e\\nwith respect to triggering statement.  But must they be unaffected by actions\u003cbr\\/\u003e\\ntaken in the trigger action.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo for instance you have a before trigger, and the trigger action changes\u003cbr\\/\u003e\\nthe value of the row twice.  Do we guarantee that the \\\"old\\\" value will not\u003cbr\\/\u003e\\nchange?\u003c\\/p\u003e\\n\\n\u003cp\u003eI ask this while trying to understand what is necessary for LOB old and new\u003cbr\\/\u003e\\nvalues.\u003c\\/p\u003e\\n\\n\u003cp\u003eI am trying to understand how this issue could be addressed without doing\u003cbr\\/\u003e\\nthe work Kathey describes to figure out what old and new column values are\u003cbr\\/\u003e\\nreferenced.  Without this info I don\'t think it is possible to guarantee\u003cbr\\/\u003e\\nan old value of a LOB around without somehow saving a copy of the whole stream.\u003cbr\\/\u003e\\nThe easiest to understand case is if someone actually updates the LOB\u003cbr\\/\u003e\\nbetween the time the row was first saved and when the trigger action\u003cbr\\/\u003e\\nreferences it.  In this case if we have not drained the stream before then\u003cbr\\/\u003e\\nit is not guaranteed to still be valid in the store.  The store does not\u003cbr\\/\u003e\\nguarantee access to the old lob if it has been updated.  Maintaining a lock\u003cbr\\/\u003e\\non the row will stop other threads from updating it but it could still be\u003cbr\\/\u003e\\nchanged by the same transaction.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt would not be hard to figure out if the trigger statement could change\u003cbr\\/\u003e\\nvarious columns.  It would be slightly harder to figure out if the trigger\u003cbr\\/\u003e\\naction could change the values, as it could be multiple statements.\u003c\\/p\u003e\\n\\n\u003cp\u003eOn the face of this I only see the following possibilities:\u003cbr\\/\u003e\\n1) do the work to figure out what columns the trigger action accesses.  Then\u003cbr\\/\u003e\\n   we only need to save old\\/new values of those columns referenced.\u003c\\/p\u003e\\n\\n\u003cp\u003e2) Rather than reading the lobs into memory, existing interfaces could be used\u003cbr\\/\u003e\\n   to stream the lobs to temp tables, and then save a stream reference to these.\u003cbr\\/\u003e\\n   But this still would cause a lot of overhead for a trigger that never\u003cbr\\/\u003e\\n   references the lobs.\u003c\\/p\u003e\\n\\n\u003cp\u003e3) Define the behaviour in a subset of the cases such that we can use the\u003cbr\\/\u003e\\n   existing lob in the db, and just maintain a stream reference to it.  Somethin\u003cbr\\/\u003e\\ng like:\u003cbr\\/\u003e\\n   o after trigger uses existing lob if trigger statement does not update\u003cbr\\/\u003e\\n     lob column.  Ignore trigger action possibly changing the lob value.\u003cbr\\/\u003e\\n   o before triggers always use exising lob in db, ignores possibility of\u003cbr\\/\u003e\\n     same xact changing the lob value in trigger action.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12805593_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12805593_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Jan\\/10 18:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-27T18:01:52+0000\'\u003e27\\/Jan\\/10 18:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Does anyone know what guarantees there are on the \\\"old\\\" and \\\"new\\\" values in \\nthe trigger action.  I understand they should represent before and after values \\nwith respect to triggering statement.  But must they be unaffected by actions \\ntaken in the trigger action. \\n\\n So for instance you have a before trigger, and the trigger action changes \\nthe value of the row twice.  Do we guarantee that the \\\"old\\\" value will not \\nchange? \\n\\n I ask this while trying to understand what is necessary for LOB old and new \\nvalues. \\n\\n I am trying to understand how this issue could be addressed without doing \\nthe work Kathey describes to figure out what old and new column values are \\nreferenced.  Without this info I don\'t think it is possible to guarantee \\nan old value of a LOB around without somehow saving a copy of the whole stream. \\nThe easiest to understand case is if someone actually updates the LOB \\nbetween the time the row was first saved and when the trigger action \\nreferences it.  In this case if we have not drained the stream before then \\nit is not guaranteed to still be valid in the store.  The store does not \\nguarantee access to the old lob if it has been updated.  Maintaining a lock \\non the row will stop other threads from updating it but it could still be \\nchanged by the same transaction. \\n\\n It would not be hard to figure out if the trigger statement could change \\nvarious columns.  It would be slightly harder to figure out if the trigger \\naction could change the values, as it could be multiple statements. \\n\\n On the face of this I only see the following possibilities: \\n1) do the work to figure out what columns the trigger action accesses.  Then \\n   we only need to save old\\/new values of those columns referenced. \\n\\n 2) Rather than reading the lobs into memory, existing interfaces could be used \\n   to stream the lobs to temp tables, and then save a stream reference to these. \\n   But this still would cause a lot of overhead for a trigger that never \\n   references the lobs. \\n\\n 3) Define the behaviour in a subset of the cases such that we can use the \\n   existing lob in the db, and just maintain a stream reference to it.  Somethin \\ng like: \\n   o after trigger uses existing lob if trigger statement does not update \\n     lob column.  Ignore trigger action possibly changing the lob value. \\n   o before triggers always use exising lob in db, ignores possibility of \\n     same xact changing the lob value in trigger action.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12805606\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12805606&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12805606\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12805606_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12805606_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Jan\\/10 18:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-27T18:35:35+0000\'\u003e27\\/Jan\\/10 18:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI am working on writing few trigger test cases where it demonstrates various requirements for LOB streaming\\/objectifying because of them being accesses by trigger statement or trigger action or both. Additionally, few trigger test cases where LOB is not accessed at all by the trigger statement or trigger action. I think these test cases will come handy with any work that goes in for this jira. Currently, I am writing them as a standalone java program rather than a junit test.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12805606_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12805606_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Jan\\/10 18:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-27T18:35:35+0000\'\u003e27\\/Jan\\/10 18:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I am working on writing few trigger test cases where it demonstrates various requirements for LOB streaming\\/objectifying because of them being accesses by trigger statement or trigger action or both. Additionally, few trigger test cases where LOB is not accessed at all by the trigger statement or trigger action. I think these test cases will come handy with any work that goes in for this jira. Currently, I am writing them as a standalone java program rather than a junit test.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12805611\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12805611&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12805611\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12805611_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12805611_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Jan\\/10 18:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-27T18:54:48+0000\'\u003e27\\/Jan\\/10 18:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eRegarding the tests that don\'t actually access the LOBs, it would be helpful to have one where the LOB is larger than the Java heap.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhile working on the LOB streaming \\/ cloning issues, I discovered that the sorter always materializes LOBs, causing queries like \'select ... from ... order by length(myLOBs)\' to be either very inefficient (despite that we in many cases have stored information about the length) or to fail with an OOME (depends on whether the code writes the records to temporary disk storage or not).\u003cbr\\/\u003e\\nI\'ll log an issue to track this when I have investigated a bit more.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12805611_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12805611_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Jan\\/10 18:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-01-27T18:54:48+0000\'\u003e27\\/Jan\\/10 18:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Regarding the tests that don\'t actually access the LOBs, it would be helpful to have one where the LOB is larger than the Java heap. \\n\\n While working on the LOB streaming \\/ cloning issues, I discovered that the sorter always materializes LOBs, causing queries like \'select ... from ... order by length(myLOBs)\' to be either very inefficient (despite that we in many cases have stored information about the length) or to fail with an OOME (depends on whether the code writes the records to temporary disk storage or not). \\nI\'ll log an issue to track this when I have investigated a bit more.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12828197\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12828197&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12828197\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12828197_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12828197_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'01\\/Feb\\/10 17:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-01T17:49:05+0000\'\u003e01\\/Feb\\/10 17:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI have been spending some time on this jira writing test cases and researching the code a bit. Also spoke to Mike about the jira in general. Here are the findings so far.\u003c\\/p\u003e\\n\\n\u003cp\u003eFollowing is the Derby behavior that we expect in regards to the lob columns and update triggers\u003cbr\\/\u003e\\n1)In case of an AFTER UPDATE TRIGGER on the LOB column, we expect Derby to do a deep copy of the before and after image of LOB columns in the triggering table. The reason for deep copy is the contents of LOB will be different in store before the update and after the update.  I have a java program conforming this behavior. That java program is attached and the program\'s name is derby1482DeepCopyAfterTriggerOnLobColumn.java\u003cbr\\/\u003e\\n2)If the AFTER UPDATE TRIGGER is defined on non-LOB column, Derby still does a deep copy of before and after image of LOB columns in the triggering table. The possible improvements that can be made to Derby is to detect somehow if there is any need to do deep copy at all if the LOB columns are not getting accessed in the TRIGGER. If they are never accessed, there is no need to any before\\/after update values of the LOB columns thus saving memory requirement and unnecssary time spent in doing copy. I am working on writing a test case conforming that deep copy is being done even though there is really no need to since LOB columns are not getting accessed.\u003cbr\\/\u003e\\n3)In case of BEFORE UPDATE TRIGGER, we should not be doing any deep copy because the before and after images of LOB should be same (which will be the LOB value before update was done). I am working on writing test case for this scenario too.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12828197_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12828197_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'01\\/Feb\\/10 17:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-01T17:49:05+0000\'\u003e01\\/Feb\\/10 17:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I have been spending some time on this jira writing test cases and researching the code a bit. Also spoke to Mike about the jira in general. Here are the findings so far. \\n\\n Following is the Derby behavior that we expect in regards to the lob columns and update triggers \\n1)In case of an AFTER UPDATE TRIGGER on the LOB column, we expect Derby to do a deep copy of the before and after image of LOB columns in the triggering table. The reason for deep copy is the contents of LOB will be different in store before the update and after the update.  I have a java program conforming this behavior. That java program is attached and the program\'s name is derby1482DeepCopyAfterTriggerOnLobColumn.java \\n2)If the AFTER UPDATE TRIGGER is defined on non-LOB column, Derby still does a deep copy of before and after image of LOB columns in the triggering table. The possible improvements that can be made to Derby is to detect somehow if there is any need to do deep copy at all if the LOB columns are not getting accessed in the TRIGGER. If they are never accessed, there is no need to any before\\/after update values of the LOB columns thus saving memory requirement and unnecssary time spent in doing copy. I am working on writing a test case conforming that deep copy is being done even though there is really no need to since LOB columns are not getting accessed. \\n3)In case of BEFORE UPDATE TRIGGER, we should not be doing any deep copy because the before and after images of LOB should be same (which will be the LOB value before update was done). I am working on writing test case for this scenario too.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12828255\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12828255&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12828255\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12828255_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12828255_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'01\\/Feb\\/10 20:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-01T20:11:36+0000\'\u003e01\\/Feb\\/10 20:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eDeleted old derby1482DeepCopyAfterTriggerOnLobColumn.java and attaching a newer version derby1482DeepCopyAfterTriggerOnLobColumn.java which not only shows how available heap memory impact an AFTER UPDATE TRIGGER on a LOB column by making it run into out of memory error, but it also shows that the heap memory change does not impact similar AFTER UPDATE TRIGGER but on a CHAR column rather than a LOB column. I am copying the javadoc comments from the program here to show what it is doing\u003c\\/p\u003e\\n\\n\u003cp\u003e\\/**\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-1482\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-1482\\\"\u003e\u003cdel\u003eDERBY-1482\u003c\\/del\u003e\u003c\\/a\u003e - This program shows that we are successfully doing deepcopy\u003c\\/li\u003e\\n\\t\u003cli\u003eof before and after images of a lob object during an after update\u003c\\/li\u003e\\n\\t\u003cli\u003etrigger(that is provided we are running with enough memory.)\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003c\\/li\u003e\\n\\t\u003cli\u003eIn case of after update trigger, we MUST do a deepcopy since the store\u003c\\/li\u003e\\n\\t\u003cli\u003evalue of lob is going to be different before and after the update.\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003c\\/li\u003e\\n\\t\u003cli\u003eThere are 2 sets of test cases\u003c\\/li\u003e\\n\\t\u003cli\u003e1)The first test case(runLobTest), the AFTER UPDATE TRIGGER has been defined\u003c\\/li\u003e\\n\\t\u003cli\u003eon LOB column which means that Derby has to have enough memory to do the\u003c\\/li\u003e\\n\\t\u003cli\u003edeep copy of the before and after image of the LOB column. With enough\u003c\\/li\u003e\\n\\t\u003cli\u003ememory, the program will run with no OOM errors. Steps to runs the\u003c\\/li\u003e\\n\\t\u003cli\u003eprogram successfully (w\\/o OOM error) for this test case is as follows\u003c\\/li\u003e\\n\\t\u003cli\u003ejava org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load\u003c\\/li\u003e\\n\\t\u003cli\u003ejava org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runLobTest\u003c\\/li\u003e\\n\\t\u003cli\u003eFor this same test case, if we run the test with limited memory, we will run\u003c\\/li\u003e\\n\\t\u003cli\u003einto OOM error showing that there is not enough memory available to do the\u003c\\/li\u003e\\n\\t\u003cli\u003edeep copy. Follow the steps below to see that behavior\u003c\\/li\u003e\\n\\t\u003cli\u003ejava org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load\u003c\\/li\u003e\\n\\t\u003cli\u003ejava -Xmx4m org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runLobTest\u003c\\/li\u003e\\n\\t\u003cli\u003e2)The second test case(runCharTest) shows that there is no issue with OOM\u003c\\/li\u003e\\n\\t\u003cli\u003eeven when running with limited memory when LOB column is not used in the\u003c\\/li\u003e\\n\\t\u003cli\u003etriggering table, meaning Derby does not have any LOB columns to have to\u003c\\/li\u003e\\n\\t\u003cli\u003ecopy in memory. This test case has the AFTER UPDATE TRIGGER on a CHAR\u003c\\/li\u003e\\n\\t\u003cli\u003ecolumn. The steps to run with plenty memory is as follows\u003c\\/li\u003e\\n\\t\u003cli\u003ejava org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load\u003c\\/li\u003e\\n\\t\u003cli\u003ejava org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runCharTest\u003c\\/li\u003e\\n\\t\u003cli\u003eThe steps to run this CHAR trigger with limited memory is as shown below.\u003c\\/li\u003e\\n\\t\u003cli\u003eThe limited memory has no impact (in orther words no OOM) for CHAR trigger\u003c\\/li\u003e\\n\\t\u003cli\u003ejava org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load\u003c\\/li\u003e\\n\\t\u003cli\u003ejava -Xmx4m org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runCharTest\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003c\\/li\u003e\\n\\t\u003cli\u003eThe first step in all the test scenarios is to first load the data needed\u003c\\/li\u003e\\n\\t\u003cli\u003eand then perform the next step.\u003cbr\\/\u003e\\n *\\/\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12828255_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12828255_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'01\\/Feb\\/10 20:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-01T20:11:36+0000\'\u003e01\\/Feb\\/10 20:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Deleted old derby1482DeepCopyAfterTriggerOnLobColumn.java and attaching a newer version derby1482DeepCopyAfterTriggerOnLobColumn.java which not only shows how available heap memory impact an AFTER UPDATE TRIGGER on a LOB column by making it run into out of memory error, but it also shows that the heap memory change does not impact similar AFTER UPDATE TRIGGER but on a CHAR column rather than a LOB column. I am copying the javadoc comments from the program here to show what it is doing \\n\\n \\/** \\n \\n\\t   DERBY-1482   - This program shows that we are successfully doing deepcopy \\n\\t of before and after images of a lob object during an after update \\n\\t trigger(that is provided we are running with enough memory.) \\n\\t  \\n\\t In case of after update trigger, we MUST do a deepcopy since the store \\n\\t value of lob is going to be different before and after the update. \\n\\t  \\n\\t There are 2 sets of test cases \\n\\t 1)The first test case(runLobTest), the AFTER UPDATE TRIGGER has been defined \\n\\t on LOB column which means that Derby has to have enough memory to do the \\n\\t deep copy of the before and after image of the LOB column. With enough \\n\\t memory, the program will run with no OOM errors. Steps to runs the \\n\\t program successfully (w\\/o OOM error) for this test case is as follows \\n\\t java org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load \\n\\t java org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runLobTest \\n\\t For this same test case, if we run the test with limited memory, we will run \\n\\t into OOM error showing that there is not enough memory available to do the \\n\\t deep copy. Follow the steps below to see that behavior \\n\\t java org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load \\n\\t java -Xmx4m org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runLobTest \\n\\t 2)The second test case(runCharTest) shows that there is no issue with OOM \\n\\t even when running with limited memory when LOB column is not used in the \\n\\t triggering table, meaning Derby does not have any LOB columns to have to \\n\\t copy in memory. This test case has the AFTER UPDATE TRIGGER on a CHAR \\n\\t column. The steps to run with plenty memory is as follows \\n\\t java org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load \\n\\t java org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runCharTest \\n\\t The steps to run this CHAR trigger with limited memory is as shown below. \\n\\t The limited memory has no impact (in orther words no OOM) for CHAR trigger \\n\\t java org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn load \\n\\t java -Xmx4m org.apache.derbyTesting.functionTests.tests.lang.derby1482DeepCopyAfterTriggerOnLobColumn runCharTest \\n\\t  \\n\\t  \\n\\t The first step in all the test scenarios is to first load the data needed \\n\\t and then perform the next step. \\n *\\/ \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12834008\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12834008&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12834008\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834008_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834008_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Feb\\/10 22:38\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-15T22:38:16+0000\'\u003e15\\/Feb\\/10 22:38\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe current reproducible attached to this jira derby1482Repro.java really runs into OOM because it can\'t get enough page cache from the heap available to the jvm. This problem can be easily resolved by decreasing the amount of page cache requested from the heap. This can be achieved by using the property -Dderby.storage.pageCacheSize=smallerpagecache. Once the page cache requirement is lowered derby1482Repro.java runs fine without any problems with LOB streaming. The reason we don\'t run into OOM for streaming of LOB with derby1482Repro.java is that the LOB data size is not big enough. derby1482Repro.java is inserting only 30K data into the 2G LOB(notice I am talking about data size and not column size. LOB column is declared as 2G but data loaded into it is only 30K). Store does not stream data out of store when the data size is less than the page size (in Derby, page size is 32K). In order for us to cause the data to be read in the memory, the data size has to be bigger. \u003c\\/p\u003e\\n\\n\u003cp\u003eWhat we are really after is a reproducible program which runs into OOM while LOBs are being streamed into memory as part of trigger execution when the LOBs are really not needed to be streamed in because they are not being accessed\\/updated. I have spent some time on coming up with a repro for OOM as a result of LOB streaming. That repro is attached as derby1482ReproVersion2.java This test case runs into OOM while streaming the LOB because now the LOB data is 320M in size, much larger than the page size of 32K. Since the BLOB is so large, Store will stream it into memory, thus running into OOM). \u003cbr\\/\u003e\\nTo reproduce the problem, use the following steps\u003cbr\\/\u003e\\n1)First create the database with 3 populated tables using the attached java program \u003cbr\\/\u003e\\nderby1482ReproVersion2.java as follows \u003cbr\\/\u003e\\njava org.apache.derbyTesting.functionTests.tests.lang.derby1482ReproVersion2\u003cbr\\/\u003e\\nSome information about the 3 tables \u003cbr\\/\u003e\\n   a)Table t1 has a BLOB column along with other columns. \u003cbr\\/\u003e\\n   b)Table t3 is similar to t1 but without a BLOB column \u003cbr\\/\u003e\\n   c)Table t1 has an update trigger defined on it which updates table t2 in the trigger action. \u003cbr\\/\u003e\\n   d)Table t3 also has an update trigger defined on it which also updates table t2 in the trigger action. \u003cbr\\/\u003e\\n2)To reproduce the problem of OutOfMemory, connect to the database using ij with very limited heap \u003cbr\\/\u003e\\njava -Xmx4m -Dderby.storage.pageCacheSize=40 -Dij.exceptionTrace=true org.apache.derby.tools.ij \u003cbr\\/\u003e\\nconnect \'jdbc:derby:testDB1482;create=true\'; \u003cbr\\/\u003e\\n--following update of table t3 works with no problem. This is the table with no BLOB column \u003cbr\\/\u003e\\nupdate t3 set status = 1 where id = 1; \u003cbr\\/\u003e\\n--But the following update will fail with OOM. This update is on the table with BLOB column \u003cbr\\/\u003e\\nupdate t1 set status = 1 where id = 1; \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834008_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834008_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Feb\\/10 22:38\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-15T22:38:16+0000\'\u003e15\\/Feb\\/10 22:38\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The current reproducible attached to this jira derby1482Repro.java really runs into OOM because it can\'t get enough page cache from the heap available to the jvm. This problem can be easily resolved by decreasing the amount of page cache requested from the heap. This can be achieved by using the property -Dderby.storage.pageCacheSize=smallerpagecache. Once the page cache requirement is lowered derby1482Repro.java runs fine without any problems with LOB streaming. The reason we don\'t run into OOM for streaming of LOB with derby1482Repro.java is that the LOB data size is not big enough. derby1482Repro.java is inserting only 30K data into the 2G LOB(notice I am talking about data size and not column size. LOB column is declared as 2G but data loaded into it is only 30K). Store does not stream data out of store when the data size is less than the page size (in Derby, page size is 32K). In order for us to cause the data to be read in the memory, the data size has to be bigger.  \\n\\n What we are really after is a reproducible program which runs into OOM while LOBs are being streamed into memory as part of trigger execution when the LOBs are really not needed to be streamed in because they are not being accessed\\/updated. I have spent some time on coming up with a repro for OOM as a result of LOB streaming. That repro is attached as derby1482ReproVersion2.java This test case runs into OOM while streaming the LOB because now the LOB data is 320M in size, much larger than the page size of 32K. Since the BLOB is so large, Store will stream it into memory, thus running into OOM).  \\nTo reproduce the problem, use the following steps \\n1)First create the database with 3 populated tables using the attached java program  \\nderby1482ReproVersion2.java as follows  \\njava org.apache.derbyTesting.functionTests.tests.lang.derby1482ReproVersion2 \\nSome information about the 3 tables  \\n   a)Table t1 has a BLOB column along with other columns.  \\n   b)Table t3 is similar to t1 but without a BLOB column  \\n   c)Table t1 has an update trigger defined on it which updates table t2 in the trigger action.  \\n   d)Table t3 also has an update trigger defined on it which also updates table t2 in the trigger action.  \\n2)To reproduce the problem of OutOfMemory, connect to the database using ij with very limited heap  \\njava -Xmx4m -Dderby.storage.pageCacheSize=40 -Dij.exceptionTrace=true org.apache.derby.tools.ij  \\nconnect \'jdbc:derby:testDB1482;create=true\';  \\n--following update of table t3 works with no problem. This is the table with no BLOB column  \\nupdate t3 set status = 1 where id = 1;  \\n--But the following update will fail with OOM. This update is on the table with BLOB column  \\nupdate t1 set status = 1 where id = 1;               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12834011\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12834011&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12834011\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834011_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834011_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Feb\\/10 22:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-15T22:59:52+0000\'\u003e15\\/Feb\\/10 22:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe stack trace of OOM for the reprodcuible is as follows\u003cbr\\/\u003e\\n2010-02-15 20:37:07.296 GMT Thread\u003cspan class=\\\"error\\\"\u003e&#91;main,5,main&#93;\u003c\\/span\u003e (XID = 37836), (SESSIONID = 1), (DATABASE = testDB1482), (DRDAID = null), Failed Statement is: update t1 set status = 1 where id = 1\u003cbr\\/\u003e\\njava.lang.OutOfMemoryError\u003cbr\\/\u003e\\n\\tat org.apache.derby.iapi.types.SQLBinary.readExternal(SQLBinary.java:421)\u003cbr\\/\u003e\\n\\tat org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:241)\u003cbr\\/\u003e\\n\\tat org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:686)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(ProjectRestrictResultSet.java:533)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:297)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:185)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:425)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:254)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:363)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:261)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.tools.ij.Main.go(Main.java:229)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.tools.ij.Main.main(Main.java:75)\u003cbr\\/\u003e\\n\\tat org.apache.derby.tools.ij.main(ij.java:59)\u003cbr\\/\u003e\\nCleanup action completed\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834011_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834011_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Feb\\/10 22:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-15T22:59:52+0000\'\u003e15\\/Feb\\/10 22:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The stack trace of OOM for the reprodcuible is as follows \\n2010-02-15 20:37:07.296 GMT Thread &#91;main,5,main&#93;  (XID = 37836), (SESSIONID = 1), (DATABASE = testDB1482), (DRDAID = null), Failed Statement is: update t1 set status = 1 where id = 1 \\njava.lang.OutOfMemoryError \\n\\tat org.apache.derby.iapi.types.SQLBinary.readExternal(SQLBinary.java:421) \\n\\tat org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:241) \\n\\tat org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:686) \\n\\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(ProjectRestrictResultSet.java:533) \\n\\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(ProjectRestrictResultSet.java:297) \\n\\tat org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:185) \\n\\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:127) \\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:425) \\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:254) \\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436) \\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317) \\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232) \\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:625) \\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:555) \\n\\tat org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:329) \\n\\tat org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:521) \\n\\tat org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:363) \\n\\tat org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:261) \\n\\tat org.apache.derby.impl.tools.ij.Main.go(Main.java:229) \\n\\tat org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:184) \\n\\tat org.apache.derby.impl.tools.ij.Main.main(Main.java:75) \\n\\tat org.apache.derby.tools.ij.main(ij.java:59) \\nCleanup action completed \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12834061\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12834061&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12834061\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834061_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834061_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 03:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T03:51:07+0000\'\u003e16\\/Feb\\/10 03:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eFor the repro derby1482Repro.java that I attached earlier today, I played a little with the heap size to see if it can be big enough to satisfy the default page cache size of 1000 pages but not big enough to be able to stream the LOB into memory. The heap size of 100M seems to meet that requirement. So the OOM above can be reproduced using following ij command once the database has been created.\u003c\\/p\u003e\\n\\n\u003cp\u003ejava -Xmx100m -Dij.exceptionTrace=true org.apache.derby.tools.ij\u003cbr\\/\u003e\\nconnect \'jdbc:derby:testDB1482;create=true\'; \u003cbr\\/\u003e\\n--following update of table t3 works with no problem. This is the table with no BLOB column \u003cbr\\/\u003e\\nupdate t3 set status = 1 where id = 1; \u003cbr\\/\u003e\\n--But the following update will fail with OOM. This update is on the table with BLOB column \u003cbr\\/\u003e\\nupdate t1 set status = 1 where id = 1;\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834061_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834061_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 03:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T03:51:07+0000\'\u003e16\\/Feb\\/10 03:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    For the repro derby1482Repro.java that I attached earlier today, I played a little with the heap size to see if it can be big enough to satisfy the default page cache size of 1000 pages but not big enough to be able to stream the LOB into memory. The heap size of 100M seems to meet that requirement. So the OOM above can be reproduced using following ij command once the database has been created. \\n\\n java -Xmx100m -Dij.exceptionTrace=true org.apache.derby.tools.ij \\nconnect \'jdbc:derby:testDB1482;create=true\';  \\n--following update of table t3 works with no problem. This is the table with no BLOB column  \\nupdate t3 set status = 1 where id = 1;  \\n--But the following update will fail with OOM. This update is on the table with BLOB column  \\nupdate t1 set status = 1 where id = 1;              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12834132\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12834132&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12834132\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12834132_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834132_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 09:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T09:13:21+0000\'\u003e16\\/Feb\\/10 09:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe stack trace above from running derby1482ReproVersion2 is slightly outdated.\u003cbr\\/\u003e\\nHere\'s a newer stack trace:\u003c\\/p\u003e\\n\\n\u003cp\u003eij&gt; update t1 set status = 1 where id = 1; \u003cbr\\/\u003e\\nERROR XJ001: Java exception: \'Java heap space: java.lang.OutOfMemoryError\'.\u003cbr\\/\u003e\\n[ snip ]\u003cbr\\/\u003e\\nCaused by: java.lang.OutOfMemoryError: Java heap space\u003cbr\\/\u003e\\n\\tat org.apache.derby.iapi.types.SQLBinary.readExternal(SQLBinary.java:421)\u003cbr\\/\u003e\\n\\tat org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:241)\u003cbr\\/\u003e\\n\\tat org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:686)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(DMLWriteResultSet.java:156)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:135)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:425)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:254)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)\u003cbr\\/\u003e\\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232)\u003cbr\\/\u003e\\n\\t... 10 more\u003cbr\\/\u003e\\nij&gt; \u003c\\/p\u003e\\n\\n\u003cp\u003eThe code from the old stack trace has been rewritten (see \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-4477\\\" title=\\\"Selecting \\/ projecting a column whose value is represented by a stream more than once fails\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-4477\\\"\u003e\u003cdel\u003eDERBY-4477\u003c\\/del\u003e\u003c\\/a\u003e), loading the stream was only done temporarily until the underlying stream clone functionality was ready.\u003c\\/p\u003e\\n\\n\u003cp\u003eRegarding the new repro, I do have code that will make that one pass too \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/smile.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\u003cbr\\/\u003e\\nI will hold it back until you have been able to complete you current work, and my patch also needs more testing.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe newly added clone functionality will basically allow all store streams to be cloned. To provoke an OOME one has to clone a stream that isn\'t cloneable. I haven\'t looked into how to do this, but I think one way of doing it is to provide a user stream to use for the update (or insert). I\'m sure there are other ways to do it too.\u003cbr\\/\u003e\\nDespite the new cloning abilities, functionality to avoid referencing columns not being accessed will still give us benefits like increased performance and by avoiding OOMEs in certain situations.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12834132_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834132_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 09:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T09:13:21+0000\'\u003e16\\/Feb\\/10 09:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The stack trace above from running derby1482ReproVersion2 is slightly outdated. \\nHere\'s a newer stack trace: \\n\\n ij&gt; update t1 set status = 1 where id = 1;  \\nERROR XJ001: Java exception: \'Java heap space: java.lang.OutOfMemoryError\'. \\n[ snip ] \\nCaused by: java.lang.OutOfMemoryError: Java heap space \\n\\tat org.apache.derby.iapi.types.SQLBinary.readExternal(SQLBinary.java:421) \\n\\tat org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:241) \\n\\tat org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:686) \\n\\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(DMLWriteResultSet.java:156) \\n\\tat org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:135) \\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows(UpdateResultSet.java:425) \\n\\tat org.apache.derby.impl.sql.execute.UpdateResultSet.open(UpdateResultSet.java:254) \\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436) \\n\\tat org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317) \\n\\tat org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232) \\n\\t... 10 more \\nij&gt;  \\n\\n The code from the old stack trace has been rewritten (see   DERBY-4477  ), loading the stream was only done temporarily until the underlying stream clone functionality was ready. \\n\\n Regarding the new repro, I do have code that will make that one pass too   \\nI will hold it back until you have been able to complete you current work, and my patch also needs more testing. \\n\\n The newly added clone functionality will basically allow all store streams to be cloned. To provoke an OOME one has to clone a stream that isn\'t cloneable. I haven\'t looked into how to do this, but I think one way of doing it is to provide a user stream to use for the update (or insert). I\'m sure there are other ways to do it too. \\nDespite the new cloning abilities, functionality to avoid referencing columns not being accessed will still give us benefits like increased performance and by avoiding OOMEs in certain situations.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12834338\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12834338&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12834338\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12834338_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834338_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 17:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T17:57:24+0000\'\u003e16\\/Feb\\/10 17:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eKristian, is there a writeup on how you will make all store streams clonable?  I am not sure how the trigger code is working, but will your cloning work for the following case.\u003cbr\\/\u003e\\nWith after triggers we are interested in the \\\"before\\\" and \\\"after\\\" values.  Does your code\u003cbr\\/\u003e\\nsomehow copy the data somewhere else from store, or do some sort of copy on\u003cbr\\/\u003e\\nwrite?\u003c\\/p\u003e\\n\\n\u003cp\u003eIt seemed to me that the trigger full copy of the stream was trying to solve the following\u003cbr\\/\u003e\\nproblem, for a before trigger.  We need the before copy of the blob.  But the stored\u003cbr\\/\u003e\\nvalue of the blob could be changed before we access it, so a a stream pointer to \u003cbr\\/\u003e\\nthe original blob is not going to be valid.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12834338_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834338_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 17:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T17:57:24+0000\'\u003e16\\/Feb\\/10 17:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Kristian, is there a writeup on how you will make all store streams clonable?  I am not sure how the trigger code is working, but will your cloning work for the following case. \\nWith after triggers we are interested in the \\\"before\\\" and \\\"after\\\" values.  Does your code \\nsomehow copy the data somewhere else from store, or do some sort of copy on \\nwrite? \\n\\n It seemed to me that the trigger full copy of the stream was trying to solve the following \\nproblem, for a before trigger.  We need the before copy of the blob.  But the stored \\nvalue of the blob could be changed before we access it, so a a stream pointer to  \\nthe original blob is not going to be valid.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12834346\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12834346&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12834346\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834346_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834346_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 18:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T18:05:14+0000\'\u003e16\\/Feb\\/10 18:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eKristian, I reran derby1482ReproVersion2 after doing a sync of the codeline and do see the updated stack. Thanks for taking the time to run the repro on your machine.\u003c\\/p\u003e\\n\\n\u003cp\u003eI am almost done with bunch of trigger tests in combination with LOB column. Hope to post that in a day or two,\u003c\\/p\u003e\\n\\n\u003cp\u003eMy current work has to do with writing tests so feel free to checkin your code if you think it is ready.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12834346_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12834346_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Feb\\/10 18:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-16T18:05:14+0000\'\u003e16\\/Feb\\/10 18:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Kristian, I reran derby1482ReproVersion2 after doing a sync of the codeline and do see the updated stack. Thanks for taking the time to run the repro on your machine. \\n\\n I am almost done with bunch of trigger tests in combination with LOB column. Hope to post that in a day or two, \\n\\n My current work has to do with writing tests so feel free to checkin your code if you think it is ready.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12835321\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12835321&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12835321\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12835321_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12835321_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Feb\\/10 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-18T18:28:14+0000\'\u003e18\\/Feb\\/10 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e@Mike (16\\/Feb\\/10):\u003cbr\\/\u003e\\nI don\'t have a write-up, and I\'m not sure if the code will handle the scenarios you mention. I don\'t fully understand the details of the store and the trigger code in the case of inserts\\/updates of long columns.\u003c\\/p\u003e\\n\\n\u003cp\u003eCan you help me understand your comment about the changing BLOB value:\u003cbr\\/\u003e\\n\\\"But the stored\u003cbr\\/\u003e\\nvalue of the blob could be changed before we access it, so a a stream pointer to\u003cbr\\/\u003e\\nthe original blob is not going to be valid. \\\"\u003c\\/p\u003e\\n\\n\u003cp\u003eWho \\/ what may change it;\u003c\\/p\u003e\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003ethe current transaction\'s update query?\u003c\\/li\u003e\\n\\t\u003cli\u003ethe current transaction\'s trigger code?\u003c\\/li\u003e\\n\\t\u003cli\u003eother transactions?\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eI hope to be able to have a better look at the trigger code soon, but it\'s not on the top of my list atm.\u003c\\/p\u003e\\n\\n\u003cp\u003eThat said, I do see that we are having trouble dealing with \\\"inbound streams\\\" when they have to be used several times - our only tool there is to materialize the stream into memory. One extension would be to write data to disk temporarily to avoid OOME, but I\'m not sure if we can manage this without introducing a performance degradation. \u003cbr\\/\u003e\\nThe better option is probably to just write the value to the log and then read it back from the log as required. Do you have any idea about how much effort that would take? I\'m not suggesting that it should be done now, but it would be nice to have an idea about how difficult it is.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12835321_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12835321_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Feb\\/10 18:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-18T18:28:14+0000\'\u003e18\\/Feb\\/10 18:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    @Mike (16\\/Feb\\/10): \\nI don\'t have a write-up, and I\'m not sure if the code will handle the scenarios you mention. I don\'t fully understand the details of the store and the trigger code in the case of inserts\\/updates of long columns. \\n\\n Can you help me understand your comment about the changing BLOB value: \\n\\\"But the stored \\nvalue of the blob could be changed before we access it, so a a stream pointer to \\nthe original blob is not going to be valid. \\\" \\n\\n Who \\/ what may change it; \\n \\n\\t the current transaction\'s update query? \\n\\t the current transaction\'s trigger code? \\n\\t other transactions? \\n \\n\\n\\n I hope to be able to have a better look at the trigger code soon, but it\'s not on the top of my list atm. \\n\\n That said, I do see that we are having trouble dealing with \\\"inbound streams\\\" when they have to be used several times - our only tool there is to materialize the stream into memory. One extension would be to write data to disk temporarily to avoid OOME, but I\'m not sure if we can manage this without introducing a performance degradation.  \\nThe better option is probably to just write the value to the log and then read it back from the log as required. Do you have any idea about how much effort that would take? I\'m not suggesting that it should be done now, but it would be nice to have an idea about how difficult it is.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12835612\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12835612&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12835612\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12835612_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12835612_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Feb\\/10 06:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-19T06:44:32+0000\'\u003e19\\/Feb\\/10 06:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe attached patch, TriggerTests_ver1_diff.txt, includes junit test which has few test fixtures to test triggers on table with LOB columns. Each and every one of those tests run into OOM probably because we are streaming the before and after values of LOB columns even when they are not being referenced by the trigger action. More code investigation is needed to identify different trigger cases where we should not stream the LOBs. \u003c\\/p\u003e\\n\\n\u003cp\u003eI have added this junit test, TriggerTests.java, in org.apache.derbyTesting.functionTests.tests.memory package. It has been added to the _Suite in that package but has been commented for now with the following comments.\u003cbr\\/\u003e\\n        \\/\\/Disable following TriggerTests until \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-1482\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-1482\\\"\u003e\u003cdel\u003eDERBY-1482\u003c\\/del\u003e\u003c\\/a\u003e has been fixed.\u003cbr\\/\u003e\\n        \\/\\/Without that fix, the test will run into OOM errors for all\u003cbr\\/\u003e\\n        \\/\\/the test fixtures. This test is written for triggers defined\u003cbr\\/\u003e\\n        \\/\\/on table with LOB columns. No matter whether the LoB columns\u003cbr\\/\u003e\\n        \\/\\/are touched in the trigger action, it appears that Derby is\u003cbr\\/\u003e\\n        \\/\\/streaming the before and after values of LOB columns. Once\u003cbr\\/\u003e\\n        \\/\\/the streaming problem has been resolved, we should be able\u003cbr\\/\u003e\\n        \\/\\/to uncomment the following test.\u003cbr\\/\u003e\\n        \\/\\/suite.addTest(TriggerTests.suite());\u003cbr\\/\u003e\\nThe org.apache.derbyTesting.functionTests.tests.memory._Suite gets run as part of the lowmem suite. lowmem suite runs all the tests in it with 16M heap. I have tweaked the page cache size for TriggerTests to 100 pages. The reason for this is that the test deals with pretty big LOBs(320M each) and we will soon run into OOM because of no memory left for page cache if we ran with the default page cache of 1000 against the 16M heap.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor now, this suite runs only in embedded mode. When I ran with network server mode, I got following error. But for now, I just want to focus on the OOM failures. Once they are fixed, we can probably look at enabling this test for network server mode.\u003cbr\\/\u003e\\njava.sql.SQLNonTransientConnectionException: Network protocol exception: actual code point, 4,692, does not match expected code point, 9,224.  The connection has been terminated.\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eOne interesting exception I have noticed for few of the test fixtures (in addition to OOM) looks something like following.\u003cbr\\/\u003e\\njava.io.FileNotFoundException: system\\\\wombat\\\\log\\\\log211.dat (The system cannot find the file specified.)\u003cbr\\/\u003e\\n        at java.io.FileInputStream.open(Native Method)\u003cbr\\/\u003e\\n        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:112)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.copySingleFile(PrivilegedFileOpsForTests.java:245)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.recursiveCopy(PrivilegedFileOpsForTests.java:222)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.access$000(PrivilegedFileOpsForTests.java:47)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests$6.run(PrivilegedFileOpsForTests.java:184)\u003cbr\\/\u003e\\n        at java.security.AccessController.doPrivileged(AccessController.java:251)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.copy(PrivilegedFileOpsForTests.java:182)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.recursiveCopy(PrivilegedFileOpsForTests.java:220)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.access$000(PrivilegedFileOpsForTests.java:47)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests$6.run(PrivilegedFileOpsForTests.java:184)\u003cbr\\/\u003e\\n        at java.security.AccessController.doPrivileged(AccessController.java:251)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.copy(PrivilegedFileOpsForTests.java:182)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:133)\u003cbr\\/\u003e\\n        at junit.framework.TestResult$1.protect(TestResult.java:106)\u003cbr\\/\u003e\\n        at junit.framework.TestResult.runProtected(TestResult.java:124)\u003cbr\\/\u003e\\n        at junit.framework.TestResult.run(TestResult.java:109)\u003cbr\\/\u003e\\n        at junit.framework.TestCase.run(TestCase.java:118)\u003cbr\\/\u003e\\n        at junit.framework.TestSuite.runTest(TestSuite.java:208)\u003cbr\\/\u003e\\n        at junit.framework.TestSuite.run(TestSuite.java:203)\u003cbr\\/\u003e\\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)\u003cbr\\/\u003e\\n        at junit.framework.TestResult.runProtected(TestResult.java:124)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup.run(TestSetup.java:23)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\u003cbr\\/\u003e\\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)\u003cbr\\/\u003e\\n        at junit.framework.TestResult.runProtected(TestResult.java:124)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup.run(TestSetup.java:23)\u003cbr\\/\u003e\\n        at junit.framework.TestSuite.runTest(TestSuite.java:208)\u003cbr\\/\u003e\\n        at junit.framework.TestSuite.run(TestSuite.java:203)\u003cbr\\/\u003e\\n        at junit.textui.TestRunner.doRun(TestRunner.java:116)\u003cbr\\/\u003e\\n        at junit.textui.TestRunner.start(TestRunner.java:172)\u003cbr\\/\u003e\\n        at junit.textui.TestRunner.main(TestRunner.java:138)\u003cbr\\/\u003e\\nI do not see this exception for first test fixtures. The reason behind these additional exceptions may be that we are running into OOM and jvm can start behaving unpredictably after running into OOMs. To verify that the problem is not with my tests, I changed the LOB size to 60K from 320M and ran with default heap and default page cache size and didn\'t run into above exceptions. Of course there were no OOMs either because we have enough heap memory to be able to stream the LOBs. In the patch attached, I have reverted my junit test back to use 320M LOB data, page cache size of 100 and limited heap of 16M enforced by the lowmem suite.\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eThe typical OOM exception for the test looks as follows\u003cbr\\/\u003e\\n7) test1InsertBeforeTrigger(org.apache.derbyTesting.functionTests.tests.memory.TriggerTests)java.sql.SQLException: Java exception: \': java.lang.OutOfMemoryError\'.\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:299)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2269)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1321)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1673)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:303)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.tests.memory.TriggerTests.runInsertTriggerTest(TriggerTests.java:1479)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.functionTests.tests.memory.TriggerTests.test1InsertBeforeTrigger(TriggerTests.java:541)\u003cbr\\/\u003e\\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\u003cbr\\/\u003e\\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)\u003cbr\\/\u003e\\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109)\u003cbr\\/\u003e\\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup.run(TestSetup.java:23)\u003cbr\\/\u003e\\n        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)\u003cbr\\/\u003e\\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19)\u003cbr\\/\u003e\\n        at junit.extensions.TestSetup.run(TestSetup.java:23)\u003cbr\\/\u003e\\nCaused by: java.sql.SQLException: Java exception: \': java.lang.OutOfMemoryError\'.\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70)\u003cbr\\/\u003e\\n        ... 38 more\u003cbr\\/\u003e\\nCaused by: java.lang.OutOfMemoryError\u003cbr\\/\u003e\\n        at org.apache.derby.iapi.types.SQLBinary.readExternal(SQLBinary.java:421)\u003cbr\\/\u003e\\n        at org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:244)\u003cbr\\/\u003e\\n        at org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:686)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(DMLWriteResultSet.java:156)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:135)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:494)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317)\u003cbr\\/\u003e\\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232)\u003cbr\\/\u003e\\n        ... 31 more\u003c\\/p\u003e\\n\\n\u003cp\u003eIn order to run the junit test to repro the problem, first you will need to uncomment the test from  org.apache.derbyTesting.functionTests.tests.memory._Suite and compile the code. Next, you can run the lowmem suite one of the following 2 ways\u003cbr\\/\u003e\\n1)You can run it as an ant target\u003cbr\\/\u003e\\nant junit-lowmem\u003cbr\\/\u003e\\n2)java -Xmx16M junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.memory._Suite\u003cbr\\/\u003e\\nEither one of above runs should show you OOMs for each of the test fixtures in TriggerTests.java\u003c\\/p\u003e\\n\\n\u003cp\u003eFollowing documents the different trigger and LOB combinations that are being tested in TriggerTests.java. It also shows the test fixture name for that trigger and LOB test combination\u003cbr\\/\u003e\\n                                                 NO REFERENCE CLAUSE in trigger definition\u003cbr\\/\u003e\\nAFTER INSERT trigger        test5InsertAfterTriggerNoReferencingClause \u003cbr\\/\u003e\\nBEFORE INSERT trigger    test5InsertBeforeTriggerNoReferencingClause \u003cbr\\/\u003e\\nAFTER DELETE trigger       test5DeleteAfterTriggerNoReferencingClause \u003cbr\\/\u003e\\nBEFORE DELETE trigger    test5DeleteBeforeTriggerNoReferencingClause \u003cbr\\/\u003e\\nAFTER UPDATE trigger       test5UpdateAfterTriggerNoReferencingClause \u003cbr\\/\u003e\\nBEFORE UPDATE trigger   test5UpdateBeforeTriggerNoReferencingClause \u003c\\/p\u003e\\n\\n\\n\u003cp\u003e                       tirgger created on non-LOB column and no LOB is referenced in trigger action\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e   \u003cbr\\/\u003e\\nAFTER INSERT trigger       test1InsertAfterTrigger \u003cbr\\/\u003e\\nBEFORE INSERT trigger    test1InsertBeforeTrigger \u003cbr\\/\u003e\\nAFTER DELETE trigger       test1DeleteAfterTrigger \u003cbr\\/\u003e\\nBEFORE DELETE trigger   test1DeleteBeforeTrigger \u003cbr\\/\u003e\\nAFTER UPDATE trigger      test1UpdateAfterTrigger \u003cbr\\/\u003e\\nBEFORE UPDATE trigger   test1UpdateBeforeTrigger \u003c\\/p\u003e\\n\\n\\n\u003cp\u003e                       tirgger created on non-LOB column and LOB is accessed in trigger action\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/add.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e \u003cbr\\/\u003e\\nAFTER INSERT trigger        test2InsertAfterTriggerAccessLOB \u003cbr\\/\u003e\\nBEFORE INSERT trigger     test2InsertBeforeTriggerAccessLOB \u003cbr\\/\u003e\\nAFTER DELETE trigger       test2DeleteAfterTriggerAccessLOB \u003cbr\\/\u003e\\nBEFORE DELETE trigger    test2DeleteBeforeTriggerAccessLOB \u003cbr\\/\u003e\\nAFTER UPDATE trigger       test2UpdateAfterTriggerAccessLOB \u003cbr\\/\u003e\\nBEFORE UPDATE trigger   test2UpdateBeforeTriggerAccessLOB \u003c\\/p\u003e\\n\\n\\n\\n\u003cp\u003e                  tirgger created on non-LOB column and LOB is getting UPDATEed in trigger action\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/add.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e \u003cbr\\/\u003e\\nAFTER INSERT trigger        test2InsertAfterTriggerUpdatedLOB \u003cbr\\/\u003e\\nBEFORE INSERT trigger    No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action \u003cbr\\/\u003e\\nAFTER DELETE trigger       No test - the row has been deleted and hence no way for trigger action to modify the LOB of the deleted row \u003cbr\\/\u003e\\nBEFORE DELETE trigger    No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action \u003cbr\\/\u003e\\nAFTER UPDATE trigger       test2UpdateAfterTriggerUpdatedLOB \u003cbr\\/\u003e\\nBEFORE UPDATE trigger   No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action \u003c\\/p\u003e\\n\\n\u003cp\u003e                       tirgger created on LOB column and no LOB is referenced in trigger action  \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e \u003cbr\\/\u003e\\nAFTER INSERT trigger        No test because INSERT trigger is defined on a row, not a column. test1InsertAfterTrigger will suffice. \u003cbr\\/\u003e\\nBEFORE INSERT trigger     No test because INSERT trigger is defined on a row, not a column. test1InsertBeforeTrigger will suffice. \u003cbr\\/\u003e\\nAFTER DELETE trigger       No test because DELETE trigger is defined on a row, not a column. test1DeleteAfterTrigger will suffice. \u003cbr\\/\u003e\\nBEFORE DELETE trigger    No test because DELETE trigger is defined on a row, not a column. test1DeleteBeforeTrigger will suffice. \u003cbr\\/\u003e\\nAFTER UPDATE trigger       test3UpdateAfterTrigger \u003cbr\\/\u003e\\nBEFORE UPDATE trigger   test3UpdateBeforeTrigger                       \u003c\\/p\u003e\\n\\n\\n\u003cp\u003e                       tirgger created on LOB column and LOB is accessed in trigger action\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/add.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e \u003cbr\\/\u003e\\nAFTER INSERT trigger       No test because INSERT trigger is defined on a row, not a column. test2InsertAfterTriggerAccessLOB will suffice. \u003cbr\\/\u003e\\nBEFORE INSERT trigger   No test because INSERT trigger is defined on a row, not a column. test2InsertBeforeTriggerAccessLOB will suffice. \u003cbr\\/\u003e\\nAFTER DELETE trigger     No test because DELETE trigger is defined on a row, not a column. test2DeleteAfterTriggerAccessLOB will suffice. \u003cbr\\/\u003e\\nBEFORE DELETE trigger  No test because DELETE trigger is defined on a row, not a column. test2DeleteBeforeTriggerAccessLOB will suffice. \u003cbr\\/\u003e\\nAFTER UPDATE trigger     test4UpdateAfterTriggerAccessLOB \u003cbr\\/\u003e\\nBEFORE UPDATE trigger  test4UpdateBeforeTrigger \u003c\\/p\u003e\\n\\n\\n\u003cp\u003e                       tirgger created on LOB column and LOB is getting UPDATEed in trigger action\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/add.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e \u003cbr\\/\u003e\\nAFTER INSERT trigger    No test because INSERT trigger is defined on a row, not a column. test2InsertAfterTriggerUpdatedLOB will suffice. \u003cbr\\/\u003e\\nBEFORE INSERT trigger  No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action \u003cbr\\/\u003e\\nAFTER DELETE trigger   No test - the row has been deleted and hence no way for trigger action to modify the LOB of the deleted row \u003cbr\\/\u003e\\nBEFORE DELETE trigger  No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action \u003cbr\\/\u003e\\nAFTER UPDATE trigger     test4UpdateAfterTriggerUpdatedLOB \u003cbr\\/\u003e\\nBEFORE UPDATE trigger  No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action   \u003c\\/p\u003e\\n\\n\\n\\n\u003cp\u003e\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e Has two versions of this trigger+LOB combination. The trigger action is coded as either a stored procedure call or as a direct SQL statement. \u003cbr\\/\u003e\\n(+)These test cases do not have stored procedure version of them. The reason is that the trigger action references LOB columns and at this point, there is no way to pass LOB parameters to a stored procedure \u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12835612_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12835612_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Feb\\/10 06:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-19T06:44:32+0000\'\u003e19\\/Feb\\/10 06:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The attached patch, TriggerTests_ver1_diff.txt, includes junit test which has few test fixtures to test triggers on table with LOB columns. Each and every one of those tests run into OOM probably because we are streaming the before and after values of LOB columns even when they are not being referenced by the trigger action. More code investigation is needed to identify different trigger cases where we should not stream the LOBs.  \\n\\n I have added this junit test, TriggerTests.java, in org.apache.derbyTesting.functionTests.tests.memory package. It has been added to the _Suite in that package but has been commented for now with the following comments. \\n        \\/\\/Disable following TriggerTests until   DERBY-1482   has been fixed. \\n        \\/\\/Without that fix, the test will run into OOM errors for all \\n        \\/\\/the test fixtures. This test is written for triggers defined \\n        \\/\\/on table with LOB columns. No matter whether the LoB columns \\n        \\/\\/are touched in the trigger action, it appears that Derby is \\n        \\/\\/streaming the before and after values of LOB columns. Once \\n        \\/\\/the streaming problem has been resolved, we should be able \\n        \\/\\/to uncomment the following test. \\n        \\/\\/suite.addTest(TriggerTests.suite()); \\nThe org.apache.derbyTesting.functionTests.tests.memory._Suite gets run as part of the lowmem suite. lowmem suite runs all the tests in it with 16M heap. I have tweaked the page cache size for TriggerTests to 100 pages. The reason for this is that the test deals with pretty big LOBs(320M each) and we will soon run into OOM because of no memory left for page cache if we ran with the default page cache of 1000 against the 16M heap. \\n\\n For now, this suite runs only in embedded mode. When I ran with network server mode, I got following error. But for now, I just want to focus on the OOM failures. Once they are fixed, we can probably look at enabling this test for network server mode. \\njava.sql.SQLNonTransientConnectionException: Network protocol exception: actual code point, 4,692, does not match expected code point, 9,224.  The connection has been terminated. \\n\\n\\n One interesting exception I have noticed for few of the test fixtures (in addition to OOM) looks something like following. \\njava.io.FileNotFoundException: system\\\\wombat\\\\log\\\\log211.dat (The system cannot find the file specified.) \\n        at java.io.FileInputStream.open(Native Method) \\n        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:112) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.copySingleFile(PrivilegedFileOpsForTests.java:245) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.recursiveCopy(PrivilegedFileOpsForTests.java:222) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.access$000(PrivilegedFileOpsForTests.java:47) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests$6.run(PrivilegedFileOpsForTests.java:184) \\n        at java.security.AccessController.doPrivileged(AccessController.java:251) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.copy(PrivilegedFileOpsForTests.java:182) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.recursiveCopy(PrivilegedFileOpsForTests.java:220) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.access$000(PrivilegedFileOpsForTests.java:47) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests$6.run(PrivilegedFileOpsForTests.java:184) \\n        at java.security.AccessController.doPrivileged(AccessController.java:251) \\n        at org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.copy(PrivilegedFileOpsForTests.java:182) \\n        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:133) \\n        at junit.framework.TestResult$1.protect(TestResult.java:106) \\n        at junit.framework.TestResult.runProtected(TestResult.java:124) \\n        at junit.framework.TestResult.run(TestResult.java:109) \\n        at junit.framework.TestCase.run(TestCase.java:118) \\n        at junit.framework.TestSuite.runTest(TestSuite.java:208) \\n        at junit.framework.TestSuite.run(TestSuite.java:203) \\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) \\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19) \\n        at junit.framework.TestResult.runProtected(TestResult.java:124) \\n        at junit.extensions.TestSetup.run(TestSetup.java:23) \\n        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57) \\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) \\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19) \\n        at junit.framework.TestResult.runProtected(TestResult.java:124) \\n        at junit.extensions.TestSetup.run(TestSetup.java:23) \\n        at junit.framework.TestSuite.runTest(TestSuite.java:208) \\n        at junit.framework.TestSuite.run(TestSuite.java:203) \\n        at junit.textui.TestRunner.doRun(TestRunner.java:116) \\n        at junit.textui.TestRunner.start(TestRunner.java:172) \\n        at junit.textui.TestRunner.main(TestRunner.java:138) \\nI do not see this exception for first test fixtures. The reason behind these additional exceptions may be that we are running into OOM and jvm can start behaving unpredictably after running into OOMs. To verify that the problem is not with my tests, I changed the LOB size to 60K from 320M and ran with default heap and default page cache size and didn\'t run into above exceptions. Of course there were no OOMs either because we have enough heap memory to be able to stream the LOBs. In the patch attached, I have reverted my junit test back to use 320M LOB data, page cache size of 100 and limited heap of 16M enforced by the lowmem suite. \\n\\n\\n The typical OOM exception for the test looks as follows \\n7) test1InsertBeforeTrigger(org.apache.derbyTesting.functionTests.tests.memory.TriggerTests)java.sql.SQLException: Java exception: \': java.lang.OutOfMemoryError\'. \\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:95) \\n        at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:142) \\n        at org.apache.derby.impl.jdbc.Util.javaException(Util.java:299) \\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403) \\n        at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346) \\n        at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:2269) \\n        at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81) \\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1321) \\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1673) \\n        at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:303) \\n        at org.apache.derbyTesting.functionTests.tests.memory.TriggerTests.runInsertTriggerTest(TriggerTests.java:1479) \\n        at org.apache.derbyTesting.functionTests.tests.memory.TriggerTests.test1InsertBeforeTrigger(TriggerTests.java:541) \\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48) \\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37) \\n        at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:109) \\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) \\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19) \\n        at junit.extensions.TestSetup.run(TestSetup.java:23) \\n        at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57) \\n        at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) \\n        at junit.extensions.TestSetup$1.protect(TestSetup.java:19) \\n        at junit.extensions.TestSetup.run(TestSetup.java:23) \\nCaused by: java.sql.SQLException: Java exception: \': java.lang.OutOfMemoryError\'. \\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45) \\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(SQLExceptionFactory40.java:119) \\n        at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(SQLExceptionFactory40.java:70) \\n        ... 38 more \\nCaused by: java.lang.OutOfMemoryError \\n        at org.apache.derby.iapi.types.SQLBinary.readExternal(SQLBinary.java:421) \\n        at org.apache.derby.iapi.types.SQLBinary.getValue(SQLBinary.java:244) \\n        at org.apache.derby.iapi.types.SQLBinary.loadStream(SQLBinary.java:686) \\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(DMLWriteResultSet.java:156) \\n        at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:135) \\n        at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:494) \\n        at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(GenericPreparedStatement.java:436) \\n        at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:317) \\n        at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1232) \\n        ... 31 more \\n\\n In order to run the junit test to repro the problem, first you will need to uncomment the test from  org.apache.derbyTesting.functionTests.tests.memory._Suite and compile the code. Next, you can run the lowmem suite one of the following 2 ways \\n1)You can run it as an ant target \\nant junit-lowmem \\n2)java -Xmx16M junit.textui.TestRunner org.apache.derbyTesting.functionTests.tests.memory._Suite \\nEither one of above runs should show you OOMs for each of the test fixtures in TriggerTests.java \\n\\n Following documents the different trigger and LOB combinations that are being tested in TriggerTests.java. It also shows the test fixture name for that trigger and LOB test combination \\n                                                 NO REFERENCE CLAUSE in trigger definition \\nAFTER INSERT trigger        test5InsertAfterTriggerNoReferencingClause  \\nBEFORE INSERT trigger    test5InsertBeforeTriggerNoReferencingClause  \\nAFTER DELETE trigger       test5DeleteAfterTriggerNoReferencingClause  \\nBEFORE DELETE trigger    test5DeleteBeforeTriggerNoReferencingClause  \\nAFTER UPDATE trigger       test5UpdateAfterTriggerNoReferencingClause  \\nBEFORE UPDATE trigger   test5UpdateBeforeTriggerNoReferencingClause  \\n\\n\\n                        tirgger created on non-LOB column and no LOB is referenced in trigger action     \\nAFTER INSERT trigger       test1InsertAfterTrigger  \\nBEFORE INSERT trigger    test1InsertBeforeTrigger  \\nAFTER DELETE trigger       test1DeleteAfterTrigger  \\nBEFORE DELETE trigger   test1DeleteBeforeTrigger  \\nAFTER UPDATE trigger      test1UpdateAfterTrigger  \\nBEFORE UPDATE trigger   test1UpdateBeforeTrigger  \\n\\n\\n                        tirgger created on non-LOB column and LOB is accessed in trigger action   \\nAFTER INSERT trigger        test2InsertAfterTriggerAccessLOB  \\nBEFORE INSERT trigger     test2InsertBeforeTriggerAccessLOB  \\nAFTER DELETE trigger       test2DeleteAfterTriggerAccessLOB  \\nBEFORE DELETE trigger    test2DeleteBeforeTriggerAccessLOB  \\nAFTER UPDATE trigger       test2UpdateAfterTriggerAccessLOB  \\nBEFORE UPDATE trigger   test2UpdateBeforeTriggerAccessLOB  \\n\\n\\n\\n                   tirgger created on non-LOB column and LOB is getting UPDATEed in trigger action   \\nAFTER INSERT trigger        test2InsertAfterTriggerUpdatedLOB  \\nBEFORE INSERT trigger    No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action  \\nAFTER DELETE trigger       No test - the row has been deleted and hence no way for trigger action to modify the LOB of the deleted row  \\nBEFORE DELETE trigger    No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action  \\nAFTER UPDATE trigger       test2UpdateAfterTriggerUpdatedLOB  \\nBEFORE UPDATE trigger   No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action  \\n\\n                        tirgger created on LOB column and no LOB is referenced in trigger action     \\nAFTER INSERT trigger        No test because INSERT trigger is defined on a row, not a column. test1InsertAfterTrigger will suffice.  \\nBEFORE INSERT trigger     No test because INSERT trigger is defined on a row, not a column. test1InsertBeforeTrigger will suffice.  \\nAFTER DELETE trigger       No test because DELETE trigger is defined on a row, not a column. test1DeleteAfterTrigger will suffice.  \\nBEFORE DELETE trigger    No test because DELETE trigger is defined on a row, not a column. test1DeleteBeforeTrigger will suffice.  \\nAFTER UPDATE trigger       test3UpdateAfterTrigger  \\nBEFORE UPDATE trigger   test3UpdateBeforeTrigger                        \\n\\n\\n                        tirgger created on LOB column and LOB is accessed in trigger action   \\nAFTER INSERT trigger       No test because INSERT trigger is defined on a row, not a column. test2InsertAfterTriggerAccessLOB will suffice.  \\nBEFORE INSERT trigger   No test because INSERT trigger is defined on a row, not a column. test2InsertBeforeTriggerAccessLOB will suffice.  \\nAFTER DELETE trigger     No test because DELETE trigger is defined on a row, not a column. test2DeleteAfterTriggerAccessLOB will suffice.  \\nBEFORE DELETE trigger  No test because DELETE trigger is defined on a row, not a column. test2DeleteBeforeTriggerAccessLOB will suffice.  \\nAFTER UPDATE trigger     test4UpdateAfterTriggerAccessLOB  \\nBEFORE UPDATE trigger  test4UpdateBeforeTrigger  \\n\\n\\n                        tirgger created on LOB column and LOB is getting UPDATEed in trigger action   \\nAFTER INSERT trigger    No test because INSERT trigger is defined on a row, not a column. test2InsertAfterTriggerUpdatedLOB will suffice.  \\nBEFORE INSERT trigger  No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action  \\nAFTER DELETE trigger   No test - the row has been deleted and hence no way for trigger action to modify the LOB of the deleted row  \\nBEFORE DELETE trigger  No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action  \\nAFTER UPDATE trigger     test4UpdateAfterTriggerUpdatedLOB  \\nBEFORE UPDATE trigger  No test - BEFORE triggers do not allow INSERT\\/UPDATE\\/DELETE in trigger action    \\n\\n\\n\\n   Has two versions of this trigger+LOB combination. The trigger action is coded as either a stored procedure call or as a direct SQL statement.  \\n(+)These test cases do not have stored procedure version of them. The reason is that the trigger action references LOB columns and at this point, there is no way to pass LOB parameters to a stored procedure  \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12836742\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12836742&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12836742\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12836742_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12836742_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Feb\\/10 17:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-22T17:36:26+0000\'\u003e22\\/Feb\\/10 17:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mamta A. Satoor - 22\\/Feb\\/10 17:37\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI wrote following ij script to understand what kind of information is kept in SYSTRIGGERS when REFERENCING clause is specified or missing in the CREATE TRIGGER sql. There are 2 booolean columns, namely, REFERENCINGOLD and REFERENCINGNEW in SYSTRIGGERS table which are set to false if REFERENCING is missing. If either one of the REFERENCING clauses are specified (for OLD and NEW), the corresponding columns\' values will be set to TRUE, We can hopefully use this information to disable streaming of LOB columns. I will look at the code to see how this information can be used. I will assign this jira to me while I look at this aspect of REFERENCING clause.\u003c\\/p\u003e\\n\\n\u003cp\u003ejava -Dij.exceptionTrace=true org.apache.derby.tools.ij \u003cbr\\/\u003e\\nconnect \'jdbc:derby:testDB1482;create=true\'; \u003cbr\\/\u003e\\ncreate table table1 (c11 int, c12 int default 0);\u003cbr\\/\u003e\\ncreate index i1 on table1(c11);\u003cbr\\/\u003e\\ncreate table table2 (c21 int, c22 int default 0);\u003cbr\\/\u003e\\ncreate index i2 on table2(c21);\u003cbr\\/\u003e\\n--For the trigger below, REFERENCINGOLD and REFERENCINGNEW will be false.\u003cbr\\/\u003e\\n&#8211; REFERENCINGOLD and REFERENCINGNEW are false because no REFERENCING clause was used in the CREATE TRIGGER.\u003cbr\\/\u003e\\ncreate trigger trigger1 AFTER INSERT on table1 insert into table2(c21, c22) values (100, -1);\u003cbr\\/\u003e\\n--For the trigger below, REFERENCINGNEW will be true because CREATE TRIGGER used REFERENCING NEW.\u003cbr\\/\u003e\\n&#8211; REFERENCINGOLD will be false because no REFERENCING OLD was specified in the CREATE TRIGGER sql.\u003cbr\\/\u003e\\ncreate trigger trigger2 AFTER UPDATE of c12 on table1 REFERENCING NEW as new FOR EACH ROW \u003cbr\\/\u003e\\n\\tupdate table2 set c22=-1 where c21=new.c11;\u003cbr\\/\u003e\\nselect CAST(TRIGGERNAME as char(14)), REFERENCEDCOLUMNS, TRIGGERDEFINITION, REFERENCINGOLD, REFERENCINGNEW from sys.systriggers;\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12836742_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12836742_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Feb\\/10 17:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-22T17:36:26+0000\'\u003e22\\/Feb\\/10 17:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mamta A. Satoor - 22\\/Feb\\/10 17:37\\\"\u003eedited\u003c\\/span\u003e                   I wrote following ij script to understand what kind of information is kept in SYSTRIGGERS when REFERENCING clause is specified or missing in the CREATE TRIGGER sql. There are 2 booolean columns, namely, REFERENCINGOLD and REFERENCINGNEW in SYSTRIGGERS table which are set to false if REFERENCING is missing. If either one of the REFERENCING clauses are specified (for OLD and NEW), the corresponding columns\' values will be set to TRUE, We can hopefully use this information to disable streaming of LOB columns. I will look at the code to see how this information can be used. I will assign this jira to me while I look at this aspect of REFERENCING clause. \\n\\n java -Dij.exceptionTrace=true org.apache.derby.tools.ij  \\nconnect \'jdbc:derby:testDB1482;create=true\';  \\ncreate table table1 (c11 int, c12 int default 0); \\ncreate index i1 on table1(c11); \\ncreate table table2 (c21 int, c22 int default 0); \\ncreate index i2 on table2(c21); \\n--For the trigger below, REFERENCINGOLD and REFERENCINGNEW will be false. \\n&#8211; REFERENCINGOLD and REFERENCINGNEW are false because no REFERENCING clause was used in the CREATE TRIGGER. \\ncreate trigger trigger1 AFTER INSERT on table1 insert into table2(c21, c22) values (100, -1); \\n--For the trigger below, REFERENCINGNEW will be true because CREATE TRIGGER used REFERENCING NEW. \\n&#8211; REFERENCINGOLD will be false because no REFERENCING OLD was specified in the CREATE TRIGGER sql. \\ncreate trigger trigger2 AFTER UPDATE of c12 on table1 REFERENCING NEW as new FOR EACH ROW  \\n\\tupdate table2 set c22=-1 where c21=new.c11; \\nselect CAST(TRIGGERNAME as char(14)), REFERENCEDCOLUMNS, TRIGGERDEFINITION, REFERENCINGOLD, REFERENCINGNEW from sys.systriggers;              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12837079\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12837079&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12837079\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12837079_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837079_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 04:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T04:52:07+0000\'\u003e23\\/Feb\\/10 04:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommited the test TriggerTests.java with revision 915177.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe commit comments are as follows\u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-1482\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-1482\\\"\u003e\u003cdel\u003eDERBY-1482\u003c\\/del\u003e\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eWe do not have many tests for triggers on tables with LOB columns. Checking in few tests with this checkin. The tests are disabled at this point because they run out of memory when run with limited heap because of streaming of the LOB columns whether they are needed or not. The test is part of lowmem suite which will automatically take care of running the tests with limited heap which is 16M for that suite at this point.\u003c\\/p\u003e\\n\\n\u003cp\u003eMore information on the test can be found in the comments in the test and also in the jira.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12837079_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837079_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 04:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T04:52:07+0000\'\u003e23\\/Feb\\/10 04:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commited the test TriggerTests.java with revision 915177. \\n\\n The commit comments are as follows \\n  DERBY-1482   \\n\\n We do not have many tests for triggers on tables with LOB columns. Checking in few tests with this checkin. The tests are disabled at this point because they run out of memory when run with limited heap because of streaming of the LOB columns whether they are needed or not. The test is part of lowmem suite which will automatically take care of running the tests with limited heap which is 16M for that suite at this point. \\n\\n More information on the test can be found in the comments in the test and also in the jira.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12837104\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12837104&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12837104\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12837104_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837104_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 06:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T06:45:05+0000\'\u003e23\\/Feb\\/10 06:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eOne of the questions that has come up in this jira is are we reading all the columns when there is a trigger defined on a table with LOB column(s). I found following relevant code comment in impl.sql.compile.UpdateNode:getUpdateReadMap which confirms that we indeed are reading all the columns any time there is a trigger involved on a table involved in definitely an UPDATE DML.\u003cbr\\/\u003e\\n\\t\\t\\/*\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eIf we have any triggers, then get all the columns\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ebecause we don\'t know what the user will ultimately\u003c\\/li\u003e\\n\\t\\t\u003cli\u003ereference.\u003cbr\\/\u003e\\n\\t \\t*\\/\u003cbr\\/\u003e\\nThe job of getUpdateReadMap as the method javadoc says\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\\t\u003cli\u003eBuilds a bitmap of all columns which should be read from the\u003c\\/li\u003e\\n\\t\u003cli\u003eStore in order to satisfy an UPDATE statement.\u003cbr\\/\u003e\\nBut as soon as we find that there are triggers involved on the table, we mark all the columns as required to be read from\u003cbr\\/\u003e\\nthe store. This is the comment from the method\'s javadoc\u003c\\/li\u003e\\n\\t\u003cli\u003e6)\\tif there are any triggers, marks all columns in the bitmap\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12837104_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837104_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 06:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T06:45:05+0000\'\u003e23\\/Feb\\/10 06:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    One of the questions that has come up in this jira is are we reading all the columns when there is a trigger defined on a table with LOB column(s). I found following relevant code comment in impl.sql.compile.UpdateNode:getUpdateReadMap which confirms that we indeed are reading all the columns any time there is a trigger involved on a table involved in definitely an UPDATE DML. \\n\\t\\t\\/* \\n \\n\\t \\n\\t \\n\\t\\t If we have any triggers, then get all the columns \\n\\t\\t because we don\'t know what the user will ultimately \\n\\t\\t reference. \\n\\t \\t*\\/ \\nThe job of getUpdateReadMap as the method javadoc says \\n\\t \\n\\t \\n\\t Builds a bitmap of all columns which should be read from the \\n\\t Store in order to satisfy an UPDATE statement. \\nBut as soon as we find that there are triggers involved on the table, we mark all the columns as required to be read from \\nthe store. This is the comment from the method\'s javadoc \\n\\t 6)\\tif there are any triggers, marks all columns in the bitmap \\n \\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12837222\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12837222&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12837222\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12837222_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837222_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 12:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T12:43:38+0000\'\u003e23\\/Feb\\/10 12:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eFixed some JavaDoc warnings with revision 915310.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12837222_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837222_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 12:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T12:43:38+0000\'\u003e23\\/Feb\\/10 12:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Fixed some JavaDoc warnings with revision 915310.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12837341\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12837341&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12837341\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12837341_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837341_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 17:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T17:49:31+0000\'\u003e23\\/Feb\\/10 17:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; @Mike (16\\/Feb\\/10):\u003cbr\\/\u003e\\n&gt; I don\'t have a write-up, and I\'m not sure if the code will handle the scenario\u003cbr\\/\u003e\\ns you mention. I don\'t fully understand the details of the store and the trigger\u003cbr\\/\u003e\\n code in the case of inserts\\/updates of long columns.\u003cbr\\/\u003e\\nMy comments apply on to the store side of the streaming blobs.\u003c\\/p\u003e\\n\\n\u003cp\u003eI am not exactly sure where the blobs are coming from in the sql layer.  I\u003cbr\\/\u003e\\nthink there may be some defered update tables, so the question is if the\u003cbr\\/\u003e\\nstreams are from the original table original table or a deferred update\u003cbr\\/\u003e\\ntable.\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; Can you help me understand your comment about the changing BLOB value:\u003cbr\\/\u003e\\n&gt; \\\"But the stored\u003cbr\\/\u003e\\n&gt; value of the blob could be changed before we access it, so a a stream pointer\u003cbr\\/\u003e\\nto\u003cbr\\/\u003e\\n&gt; the original blob is not going to be valid. \\\"\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; Who \\/ what may change it;\u003cbr\\/\u003e\\n&gt;  - the current transaction\'s update query?\u003cbr\\/\u003e\\n&gt;   - the current transaction\'s trigger code?\u003cbr\\/\u003e\\n&gt;    - other transactions?\u003c\\/p\u003e\\n\\n\u003cp\u003eI believe both the first 2 are possibilities.  Locking should prevent any\u003cbr\\/\u003e\\nchanges to the affected row by other transactions.  So there are 2 cases:\u003c\\/p\u003e\\n\\n\u003cp\u003e1) the current tranaction statement that causes the trigger may change the\u003cbr\\/\u003e\\n   blob.\u003c\\/p\u003e\\n\\n\\n\u003cp\u003e   insert - value in store table could be used to stream\u003cbr\\/\u003e\\n   delete - value in store table won\'t be avaliable after the delete\u003cbr\\/\u003e\\n   update - value in store table may be changed by the update itself\u003c\\/p\u003e\\n\\n\u003cp\u003e2) the trigger action code might change the blob.\u003c\\/p\u003e\\n\\n\u003cp\u003e   This case is more obscure and needs to happen in a procedure.  And the\u003cbr\\/\u003e\\n   only way to use the old and new values is to pass them into the procedure,\u003cbr\\/\u003e\\n   and currently our procedures don\'t support blobs as arguments.\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt;    That said, I do see that we are having trouble dealing with \\\"inbound stream\u003cbr\\/\u003e\\ns\\\" when they have to be used several times - our only tool there is to materiali\u003cbr\\/\u003e\\nze the stream into memory. One extension would be to write data to disk temporar\u003cbr\\/\u003e\\nily to avoid OOME, but I\'m not sure if we can manage this without introducing a\u003cbr\\/\u003e\\nperformance degradation.\u003cbr\\/\u003e\\n&gt;    The better option is probably to just write the value to the log and then r\u003cbr\\/\u003e\\nead it back from the log as required. Do you have any idea about how much effort\u003cbr\\/\u003e\\n that would take? I\'m not suggesting that it should be done now, but it would be\u003cbr\\/\u003e\\n nice to have an idea about how difficult it is.\u003cbr\\/\u003e\\nThat sounds \\\"hard\\\" to me.  I would definitely not want to see the sql layer\u003cbr\\/\u003e\\naccessing the log.  The clean separation of sql layer from the store layer\u003cbr\\/\u003e\\nhas greatly helped the reliablity of the product.  Also timing of it might\u003cbr\\/\u003e\\nbe a problem as the current trigger code may need a second access to a stream\u003cbr\\/\u003e\\nbefore the actual value has been logged.  Again I think the key here may be\u003cbr\\/\u003e\\nin understanding the deferred update tables and how they apply to all\u003cbr\\/\u003e\\nthe matrix of before\\/after insert\\/delete\\/update triggers.\u003c\\/p\u003e\\n\\n\u003cp\u003eYou also raise an interesting point about performance.  There are definitely\u003cbr\\/\u003e\\na set of applications out there that are just fine with us temporarily\u003cbr\\/\u003e\\ninstantiating copies of blobs into memory. Where our stream threshold is\u003cbr\\/\u003e\\na max of 32k, 2 gig of memory is very likely available.  So there should be\u003cbr\\/\u003e\\nsome discussion before any change goes in that would automatically stream\u003cbr\\/\u003e\\nsomething to disk that currently uses in memory.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12837341_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12837341_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Feb\\/10 17:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-23T17:49:31+0000\'\u003e23\\/Feb\\/10 17:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; @Mike (16\\/Feb\\/10): \\n&gt; I don\'t have a write-up, and I\'m not sure if the code will handle the scenario \\ns you mention. I don\'t fully understand the details of the store and the trigger \\n code in the case of inserts\\/updates of long columns. \\nMy comments apply on to the store side of the streaming blobs. \\n\\n I am not exactly sure where the blobs are coming from in the sql layer.  I \\nthink there may be some defered update tables, so the question is if the \\nstreams are from the original table original table or a deferred update \\ntable. \\n&gt; \\n&gt; Can you help me understand your comment about the changing BLOB value: \\n&gt; \\\"But the stored \\n&gt; value of the blob could be changed before we access it, so a a stream pointer \\nto \\n&gt; the original blob is not going to be valid. \\\" \\n&gt; \\n&gt; Who \\/ what may change it; \\n&gt;  - the current transaction\'s update query? \\n&gt;   - the current transaction\'s trigger code? \\n&gt;    - other transactions? \\n\\n I believe both the first 2 are possibilities.  Locking should prevent any \\nchanges to the affected row by other transactions.  So there are 2 cases: \\n\\n 1) the current tranaction statement that causes the trigger may change the \\n   blob. \\n\\n\\n    insert - value in store table could be used to stream \\n   delete - value in store table won\'t be avaliable after the delete \\n   update - value in store table may be changed by the update itself \\n\\n 2) the trigger action code might change the blob. \\n\\n    This case is more obscure and needs to happen in a procedure.  And the \\n   only way to use the old and new values is to pass them into the procedure, \\n   and currently our procedures don\'t support blobs as arguments. \\n&gt; \\n&gt;    That said, I do see that we are having trouble dealing with \\\"inbound stream \\ns\\\" when they have to be used several times - our only tool there is to materiali \\nze the stream into memory. One extension would be to write data to disk temporar \\nily to avoid OOME, but I\'m not sure if we can manage this without introducing a \\nperformance degradation. \\n&gt;    The better option is probably to just write the value to the log and then r \\nead it back from the log as required. Do you have any idea about how much effort \\n that would take? I\'m not suggesting that it should be done now, but it would be \\n nice to have an idea about how difficult it is. \\nThat sounds \\\"hard\\\" to me.  I would definitely not want to see the sql layer \\naccessing the log.  The clean separation of sql layer from the store layer \\nhas greatly helped the reliablity of the product.  Also timing of it might \\nbe a problem as the current trigger code may need a second access to a stream \\nbefore the actual value has been logged.  Again I think the key here may be \\nin understanding the deferred update tables and how they apply to all \\nthe matrix of before\\/after insert\\/delete\\/update triggers. \\n\\n You also raise an interesting point about performance.  There are definitely \\na set of applications out there that are just fine with us temporarily \\ninstantiating copies of blobs into memory. Where our stream threshold is \\na max of 32k, 2 gig of memory is very likely available.  So there should be \\nsome discussion before any change goes in that would automatically stream \\nsomething to disk that currently uses in memory.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12838342\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12838342&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12838342\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12838342_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12838342_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/Feb\\/10 13:37\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-25T13:37:47+0000\'\u003e25\\/Feb\\/10 13:37\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMike wrote:\u003c\\/p\u003e\\n\u003chr \\/\u003e\\n\u003cp\u003eKristian&gt; The better option is probably to just write the value to the log and then read it back from the log as required. \u003cbr\\/\u003e\\nKristian&gt; Do you have any idea about how much effort that would take?\u003cbr\\/\u003e\\nKristian&gt; I\'m not suggesting that it should be done now, but it would be nice to have an idea about how difficult it is.\u003c\\/p\u003e\\n\\n\u003cp\u003eThat sounds \\\"hard\\\" to me. I would definitely not want to see the sql layer\u003cbr\\/\u003e\\naccessing the log. The clean separation of sql layer from the store layer\u003cbr\\/\u003e\\nhas greatly helped the reliablity of the product.\u003c\\/p\u003e\\n\u003chr \\/\u003e\\n\\n\u003cp\u003eDo you feel the same about reading the value back from the table itself (instead of the log)?\u003cbr\\/\u003e\\nI\'ve seen this approach suggested in another Jira. If feasible, is this also hard to do?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12838342_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12838342_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/Feb\\/10 13:37\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-25T13:37:47+0000\'\u003e25\\/Feb\\/10 13:37\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Mike wrote: \\n \\n Kristian&gt; The better option is probably to just write the value to the log and then read it back from the log as required.  \\nKristian&gt; Do you have any idea about how much effort that would take? \\nKristian&gt; I\'m not suggesting that it should be done now, but it would be nice to have an idea about how difficult it is. \\n\\n That sounds \\\"hard\\\" to me. I would definitely not want to see the sql layer \\naccessing the log. The clean separation of sql layer from the store layer \\nhas greatly helped the reliablity of the product. \\n \\n\\n Do you feel the same about reading the value back from the table itself (instead of the log)? \\nI\'ve seen this approach suggested in another Jira. If feasible, is this also hard to do?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12839135\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12839135&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12839135\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12839135_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12839135_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Feb\\/10 02:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-27T02:11:22+0000\'\u003e27\\/Feb\\/10 02:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI think reading it again from the store is a much better approach.  Best if the mechanism can be somehow hidden withing the stream that the is passed from the\u003cbr\\/\u003e\\nstore up to the user.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis may or may not solve the various trigger issues, as the trigger needs a specific\u003cbr\\/\u003e\\nversion of the row which might change between when the stream is returned and when it is asked for.  For instance an update trigger must provide the before and after version of the value, but the trigger action itself may change the row.  This may not be an issue if the getting it \\\"from the store\\\" in this case is actually getting it from a deffered update temporary table, then there would be no worry about the trigger action changing it.\u003c\\/p\u003e\\n\\n\u003cp\u003eI think this is easier than the log approach, but not a simple change.  I was thinking of taking a look at this but would rather let you get all your stream changes in to see what problems remain.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12839135_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12839135_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Feb\\/10 02:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-02-27T02:11:22+0000\'\u003e27\\/Feb\\/10 02:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I think reading it again from the store is a much better approach.  Best if the mechanism can be somehow hidden withing the stream that the is passed from the \\nstore up to the user. \\n\\n This may or may not solve the various trigger issues, as the trigger needs a specific \\nversion of the row which might change between when the stream is returned and when it is asked for.  For instance an update trigger must provide the before and after version of the value, but the trigger action itself may change the row.  This may not be an issue if the getting it \\\"from the store\\\" in this case is actually getting it from a deffered update temporary table, then there would be no worry about the trigger action changing it. \\n\\n I think this is easier than the log approach, but not a simple change.  I was thinking of taking a look at this but would rather let you get all your stream changes in to see what problems remain.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12843779\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12843779&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12843779\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12843779_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12843779_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Mar\\/10 21:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-10T21:21:19+0000\'\u003e10\\/Mar\\/10 21:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eJust wanted to share that I am working on collecting the column referenced by the trigger action (when it is not a stored procedure call. I hope to tackle that as a seperate step) During the create trigger bind time, we go through the columns referenced by the trigger action and isolate the ones which come from the new\\/old tables through the REFERENCING clause. The information about those columns will be saved in a new column in SYSTRIGGERS. At triggering statement execution time, we will go through SYSTRIGGERS\'s new column and determine which columns should be read in rather than all the columns. This should help with OOM issues involving LOB columns.\u003c\\/p\u003e\\n\\n\u003cp\u003eWill need to work with upgrade code to support the new column in SYSTRIGGERS. At this point, I am focusing on non-upgarde code changes.\u003c\\/p\u003e\\n\\n\u003cp\u003eI have finished the rough code changes on collecting the columns referenced in trigger action when trigger action is not a stored procedure call. The information collected would be something like \u003cspan class=\\\"error\\\"\u003e&#91;1,3&#93;\u003c\\/span\u003e which means column numbers 1 and 3 are accessed by the trigger action. But the tricky party is to transform column 3 from triggering table to column 2 in the columns that will be read into memory. eg\u003cbr\\/\u003e\\ncreate table t1 (c11 int, c12 int, c13 int)\u003cbr\\/\u003e\\ninsert into t1 values (11,12, 13)\u003cbr\\/\u003e\\nand say there is a trigger defined on t1 which references column numbers 1 and 3 meaning columns c11 and c13. Once I finish coding the logic completely, we will read only values 11 and 13 since c12 is not referenced by the trigger action. But the way code works right now, we try to look at the columns through the column number meaning for our eg, c11 will be looked through position 1 which is good. But c13 will be looked through position 3 but really, c13 is in position 2 of the subset of the original row from t1. \u003c\\/p\u003e\\n\\n\u003cp\u003eMy apologies if above eg is little confusing. I will try to make changes so that we look for c13 in position 2 of the subset row rather than position 3.\u003c\\/p\u003e\\n\\n\u003cp\u003eAny feedback appreciated.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12843779_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12843779_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Mar\\/10 21:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-10T21:21:19+0000\'\u003e10\\/Mar\\/10 21:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Just wanted to share that I am working on collecting the column referenced by the trigger action (when it is not a stored procedure call. I hope to tackle that as a seperate step) During the create trigger bind time, we go through the columns referenced by the trigger action and isolate the ones which come from the new\\/old tables through the REFERENCING clause. The information about those columns will be saved in a new column in SYSTRIGGERS. At triggering statement execution time, we will go through SYSTRIGGERS\'s new column and determine which columns should be read in rather than all the columns. This should help with OOM issues involving LOB columns. \\n\\n Will need to work with upgrade code to support the new column in SYSTRIGGERS. At this point, I am focusing on non-upgarde code changes. \\n\\n I have finished the rough code changes on collecting the columns referenced in trigger action when trigger action is not a stored procedure call. The information collected would be something like  &#91;1,3&#93;  which means column numbers 1 and 3 are accessed by the trigger action. But the tricky party is to transform column 3 from triggering table to column 2 in the columns that will be read into memory. eg \\ncreate table t1 (c11 int, c12 int, c13 int) \\ninsert into t1 values (11,12, 13) \\nand say there is a trigger defined on t1 which references column numbers 1 and 3 meaning columns c11 and c13. Once I finish coding the logic completely, we will read only values 11 and 13 since c12 is not referenced by the trigger action. But the way code works right now, we try to look at the columns through the column number meaning for our eg, c11 will be looked through position 1 which is good. But c13 will be looked through position 3 but really, c13 is in position 2 of the subset of the original row from t1.  \\n\\n My apologies if above eg is little confusing. I will try to make changes so that we look for c13 in position 2 of the subset row rather than position 3. \\n\\n Any feedback appreciated.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12850374\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12850374&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12850374\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12850374_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12850374_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/Mar\\/10 22:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-26T22:04:43+0000\'\u003e26\\/Mar\\/10 22:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI am attaching a patch, derby1482_patch1_diff.txt,  which is NOT READY FOR commit yet because the required upgrade work for system table change has not been done yet. If this patch is committed in it\'s current state, the older releases databases will fail with the trunk even with hard upgrade. I plan to work on the upgrade work soon.\u003c\\/p\u003e\\n\\n\u003cp\u003eI ran derbyall and junit All suite with my patch. During the junite All suite run, I am getting lots of errors in the upgrade suite. The failures are attached to this jira as junitUpgradeTestFailureWithPatch1.out I think this probably is because of the new column that I have added to SYSTRIGGERS. I have not investigated this failure enough to know for sure but I will be tackling the upgrade changes soon. \u003c\\/p\u003e\\n\\n\u003cp\u003eNext, I am planning on focusing on following tasks\u003cbr\\/\u003e\\n1)Implement Rick\'s suggestion of including the extra information we need about trigger in existing column SYSTRIGGERS.REFERENCEDCOLUMNS This columns is of type ReferencedColumnsDescriptorImpl and I can hopefully enhance that type to include the additional information. Hopefully this approach will make it the next task easier which is to make upgrade changes.\u003cbr\\/\u003e\\n2)Work on the upgrade code so this change in system table does not break older release databases when they are run in soft\\/hard upgrade mode with the suggested work done through this jira.\u003cbr\\/\u003e\\n3)Add more test cases in addition to what was added through TriggerTests.java\u003c\\/p\u003e\\n\\n\u003cp\u003eOne thing to keep in mind is the improvement proposed by this patch will work only for UPDATE triggers defined at row level AND they identify specific columns on which the trigger is defined. eg\u003cbr\\/\u003e\\n\\tCREATE TRIGGER tr1 AFTER UPDATE OF c12 ON table1 \u003cbr\\/\u003e\\n\\t    REFERENCING OLD AS oldt NEW AS newt\u003cbr\\/\u003e\\n\\t    FOR EACH ROW UPDATE table2 SET c24=oldt.c14;\u003cbr\\/\u003e\\nThe trigger above is a row level UPDATE trigger and it identifies column \\\"c12\\\" as the triggering column. For all other kinds of triggers(INSERT, DELETE, UPDATE trigger defined at table leve, UPDATE trigger defined at row level but does not identify trigger columns), the improvement proposed by this patch will not kick in. That is because all the other kinds of triggers do not identify specific trigger columns. In the absence of specific trigger columns, Derby decides to fetch in all the columns from the triggering table since it doesn\'t know what column it might need to fetch at trigger execution time.\u003c\\/p\u003e\\n\\n\u003cp\u003eFollowing is the description of the existing behavior and changes made through my patch. It is rather long but I wanted to provide as much information as I can since some part of the code is little tricky.\u003c\\/p\u003e\\n\\n\u003cp\u003eI am going to work with following example to show what is being done by Derby today and what changes I am suggesting.\u003cbr\\/\u003e\\n\\tCREATE TABLE table1 (c11 int, c12 int, c13 int, c14 int, c15 int);\u003cbr\\/\u003e\\n\\tINSERT INTO table1 VALUES(1,2,3,4,5);\u003cbr\\/\u003e\\n\\tCREATE TABLE table2 (c21 int, c22 int, c23 int, c24 int, c25 int);\u003cbr\\/\u003e\\n\\tINSERT INTO table2 VALUES(2,2,3,-1,5);\u003cbr\\/\u003e\\n\\tCREATE TRIGGER tr1 AFTER UPDATE OF c12 ON table1 \u003cbr\\/\u003e\\n\\t    REFERENCING OLD AS oldt NEW AS newt\u003cbr\\/\u003e\\n\\t    FOR EACH ROW UPDATE table2 SET c24=oldt.c14;\u003cbr\\/\u003e\\nIn the update trigger tr1 above, the trigger column is c12 and trigger action references old\\/new transition variable oldt.c14 Note that the trigger table, table1, has 5 columns and of those only 2 columns are really needed by the trigger tr1. The trunk code converts the trigger action UPDATE table2 SET c24=oldt.c14 to UPDATE table2 SET c24=org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getOldRow().getInt(4)\u003cbr\\/\u003e\\nNote that oldt.c14 gets referenced through it\'s column position in triggering table table1.\u003cbr\\/\u003e\\nNow let\'s consider the triggering statement\u003cbr\\/\u003e\\n\\tUPDATE table1 SET c12 = -9 WHERE c11=1;\u003cbr\\/\u003e\\nThe trunk code is written to fetch all the 5 columns in trigger table table1 even though the trigger is only in need of columns c12 and c14. If in our example, if table1 had a LOB column with large amount of data, we would fetch that LOB column in memory too even though trigger does not need that column.\u003c\\/p\u003e\\n\\n\u003cp\u003eWith my patch, I am keeping track of references to old\\/new transition variables in trigger action. Trunk code already keeps track of trigger columns in SYSTRIGGERS.REFERENCEDCOLUMNS. The combination of the two will tell us exactly what columns are needed for trigger execution from the triggering table and we fetch only those columns. For the trigger tr1, that would mean column c12(which is the trigger column) and column c14(which is in the trigger action). Because of this, columns c11, c13 and c15 will not be read into memory. If one or more of those columns were LOB columns, that can result in lot of performance and memory consumption improvement. My code will convert the trigger action UPDATE table2 SET c24=oldt.c14 \u003cbr\\/\u003e\\nto \u003cbr\\/\u003e\\nUPDATE table2 SET c24=org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getOldRow().getInt(2)\u003cbr\\/\u003e\\nNote that oldt.c14 get referenced through it\'s column position is what columns are fetched and not by it\'s column position in the trigger table table1. In our specific eg, we are fetching column c12 and c14 and column c14 is in the 2nd position in that set. But when we make a note of the trigger action columns in SYSTRIGGERS, we want to record it by it\'s column position in the trigger table to know exactly what columns we are talking about. So, for our trigger eg below, SYSTRIGGERS will look as follows\u003cbr\\/\u003e\\n\\tCREATE TRIGGER tr1 AFTER UPDATE OF c12 ON table1 \u003cbr\\/\u003e\\n\\t    REFERENCING OLD AS oldt NEW AS newt\u003cbr\\/\u003e\\n\\t    FOR EACH ROW UPDATE table2 SET c24=oldt.c14;\u003cbr\\/\u003e\\nselect TRIGGERNAME, EVENT, TYPE, REFERENCEDCOLUMNS, REFCOLSTRIGGERACTION, TRIGGERDEFINITION from sys.systriggers;\u003cbr\\/\u003e\\nTRIGGERNAME|EVENT|TYPE|REFERENCEDCOLUMNS|REFCOLSTRIGGERACTION|TRIGGERDEFINITION\u003cbr\\/\u003e\\n--------------------------------------------------------------------------------------------\u003cbr\\/\u003e\\nTR1        |U    |R   |(2)              |(4)                 |update table2 set c24=oldt.c14\u003cbr\\/\u003e\\nSo, the column numbers to recognize the trigger columns and trigger action columns, we use their position in triggering table. But to convert the trigger action to org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getxxxRow().getXXX\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/help_16.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e, for ?, we \u003cbr\\/\u003e\\nneed to use the relative column position in the columns actually fetched from triggering table. My apologies if this sounds confusing. In one of intermediate work on my machine, my code didn\'t account for this difference in column position in table vs column position in the columns \u003cbr\\/\u003e\\nactually fetched, and I started getting NPE because there is no column at position 4 since we are in a need to fetch only 2 columns. This 2 different column numbering scheme makes the code little tricky to follow but if we one understands the eg above, I think then it becomes easier to understand the code. I will be happy to hear if someone has ideas on may be code this differently. \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12850374_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12850374_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/Mar\\/10 22:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-03-26T22:04:43+0000\'\u003e26\\/Mar\\/10 22:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I am attaching a patch, derby1482_patch1_diff.txt,  which is NOT READY FOR commit yet because the required upgrade work for system table change has not been done yet. If this patch is committed in it\'s current state, the older releases databases will fail with the trunk even with hard upgrade. I plan to work on the upgrade work soon. \\n\\n I ran derbyall and junit All suite with my patch. During the junite All suite run, I am getting lots of errors in the upgrade suite. The failures are attached to this jira as junitUpgradeTestFailureWithPatch1.out I think this probably is because of the new column that I have added to SYSTRIGGERS. I have not investigated this failure enough to know for sure but I will be tackling the upgrade changes soon.  \\n\\n Next, I am planning on focusing on following tasks \\n1)Implement Rick\'s suggestion of including the extra information we need about trigger in existing column SYSTRIGGERS.REFERENCEDCOLUMNS This columns is of type ReferencedColumnsDescriptorImpl and I can hopefully enhance that type to include the additional information. Hopefully this approach will make it the next task easier which is to make upgrade changes. \\n2)Work on the upgrade code so this change in system table does not break older release databases when they are run in soft\\/hard upgrade mode with the suggested work done through this jira. \\n3)Add more test cases in addition to what was added through TriggerTests.java \\n\\n One thing to keep in mind is the improvement proposed by this patch will work only for UPDATE triggers defined at row level AND they identify specific columns on which the trigger is defined. eg \\n\\tCREATE TRIGGER tr1 AFTER UPDATE OF c12 ON table1  \\n\\t    REFERENCING OLD AS oldt NEW AS newt \\n\\t    FOR EACH ROW UPDATE table2 SET c24=oldt.c14; \\nThe trigger above is a row level UPDATE trigger and it identifies column \\\"c12\\\" as the triggering column. For all other kinds of triggers(INSERT, DELETE, UPDATE trigger defined at table leve, UPDATE trigger defined at row level but does not identify trigger columns), the improvement proposed by this patch will not kick in. That is because all the other kinds of triggers do not identify specific trigger columns. In the absence of specific trigger columns, Derby decides to fetch in all the columns from the triggering table since it doesn\'t know what column it might need to fetch at trigger execution time. \\n\\n Following is the description of the existing behavior and changes made through my patch. It is rather long but I wanted to provide as much information as I can since some part of the code is little tricky. \\n\\n I am going to work with following example to show what is being done by Derby today and what changes I am suggesting. \\n\\tCREATE TABLE table1 (c11 int, c12 int, c13 int, c14 int, c15 int); \\n\\tINSERT INTO table1 VALUES(1,2,3,4,5); \\n\\tCREATE TABLE table2 (c21 int, c22 int, c23 int, c24 int, c25 int); \\n\\tINSERT INTO table2 VALUES(2,2,3,-1,5); \\n\\tCREATE TRIGGER tr1 AFTER UPDATE OF c12 ON table1  \\n\\t    REFERENCING OLD AS oldt NEW AS newt \\n\\t    FOR EACH ROW UPDATE table2 SET c24=oldt.c14; \\nIn the update trigger tr1 above, the trigger column is c12 and trigger action references old\\/new transition variable oldt.c14 Note that the trigger table, table1, has 5 columns and of those only 2 columns are really needed by the trigger tr1. The trunk code converts the trigger action UPDATE table2 SET c24=oldt.c14 to UPDATE table2 SET c24=org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getOldRow().getInt(4) \\nNote that oldt.c14 gets referenced through it\'s column position in triggering table table1. \\nNow let\'s consider the triggering statement \\n\\tUPDATE table1 SET c12 = -9 WHERE c11=1; \\nThe trunk code is written to fetch all the 5 columns in trigger table table1 even though the trigger is only in need of columns c12 and c14. If in our example, if table1 had a LOB column with large amount of data, we would fetch that LOB column in memory too even though trigger does not need that column. \\n\\n With my patch, I am keeping track of references to old\\/new transition variables in trigger action. Trunk code already keeps track of trigger columns in SYSTRIGGERS.REFERENCEDCOLUMNS. The combination of the two will tell us exactly what columns are needed for trigger execution from the triggering table and we fetch only those columns. For the trigger tr1, that would mean column c12(which is the trigger column) and column c14(which is in the trigger action). Because of this, columns c11, c13 and c15 will not be read into memory. If one or more of those columns were LOB columns, that can result in lot of performance and memory consumption improvement. My code will convert the trigger action UPDATE table2 SET c24=oldt.c14  \\nto  \\nUPDATE table2 SET c24=org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getOldRow().getInt(2) \\nNote that oldt.c14 get referenced through it\'s column position is what columns are fetched and not by it\'s column position in the trigger table table1. In our specific eg, we are fetching column c12 and c14 and column c14 is in the 2nd position in that set. But when we make a note of the trigger action columns in SYSTRIGGERS, we want to record it by it\'s column position in the trigger table to know exactly what columns we are talking about. So, for our trigger eg below, SYSTRIGGERS will look as follows \\n\\tCREATE TRIGGER tr1 AFTER UPDATE OF c12 ON table1  \\n\\t    REFERENCING OLD AS oldt NEW AS newt \\n\\t    FOR EACH ROW UPDATE table2 SET c24=oldt.c14; \\nselect TRIGGERNAME, EVENT, TYPE, REFERENCEDCOLUMNS, REFCOLSTRIGGERACTION, TRIGGERDEFINITION from sys.systriggers; \\nTRIGGERNAME|EVENT|TYPE|REFERENCEDCOLUMNS|REFCOLSTRIGGERACTION|TRIGGERDEFINITION \\n-------------------------------------------------------------------------------------------- \\nTR1        |U    |R   |(2)              |(4)                 |update table2 set c24=oldt.c14 \\nSo, the column numbers to recognize the trigger columns and trigger action columns, we use their position in triggering table. But to convert the trigger action to org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getxxxRow().getXXX , for ?, we  \\nneed to use the relative column position in the columns actually fetched from triggering table. My apologies if this sounds confusing. In one of intermediate work on my machine, my code didn\'t account for this difference in column position in table vs column position in the columns  \\nactually fetched, and I started getting NPE because there is no column at position 4 since we are in a need to fetch only 2 columns. This 2 different column numbering scheme makes the code little tricky to follow but if we one understands the eg above, I think then it becomes easier to understand the code. I will be happy to hear if someone has ideas on may be code this differently.               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12852719\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12852719&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12852719\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12852719_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12852719_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/Apr\\/10 05:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-02T05:33:16+0000\'\u003e02\\/Apr\\/10 05:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttaching patch, derby1482_patch2_diff.txt, which is very similar to the 1st patch except that rather than adding a new column to SYSTRIGGERS to save the trigger action columns information, it expands the functionality of ReferenceColumn implementation to include trigger action columns. This will hopefully make it easier upgrade path. The only surprise I ran into so far is that ReferenceColumn gets used by 2 more system tables namely SYSCHECKS\u003cbr\\/\u003e\\nand SYSCONSTRAINTS which means we need to make sure that upgrade code works for those system tables too. Next, I will start looking at the upgrade code. I think, the upgrade work that needs to go in for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-1482\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-1482\\\"\u003e\u003cdel\u003eDERBY-1482\u003c\\/del\u003e\u003c\\/a\u003e will be similar to what was done for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-606\\\" title=\\\"SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE fails on (very) large tables\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-606\\\"\u003e\u003cdel\u003eDERBY-606\u003c\\/del\u003e\u003c\\/a\u003e\u003cbr\\/\u003e\\n(committed with revision number 484797). I will study that patch more to see how it\'s logic can be used for the changes to SYSTRIGGERS.REFERENCEDCOLUMNS needed for this jira.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12852719_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12852719_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/Apr\\/10 05:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-02T05:33:16+0000\'\u003e02\\/Apr\\/10 05:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attaching patch, derby1482_patch2_diff.txt, which is very similar to the 1st patch except that rather than adding a new column to SYSTRIGGERS to save the trigger action columns information, it expands the functionality of ReferenceColumn implementation to include trigger action columns. This will hopefully make it easier upgrade path. The only surprise I ran into so far is that ReferenceColumn gets used by 2 more system tables namely SYSCHECKS \\nand SYSCONSTRAINTS which means we need to make sure that upgrade code works for those system tables too. Next, I will start looking at the upgrade code. I think, the upgrade work that needs to go in for   DERBY-1482   will be similar to what was done for   DERBY-606   \\n(committed with revision number 484797). I will study that patch more to see how it\'s logic can be used for the changes to SYSTRIGGERS.REFERENCEDCOLUMNS needed for this jira.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12852911\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12852911&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12852911\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12852911_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12852911_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/Apr\\/10 18:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-02T18:49:18+0000\'\u003e02\\/Apr\\/10 18:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for the patch, Mamta. I have a couple comments:\u003c\\/p\u003e\\n\\n\u003cp\u003eCreateTriggerNode:\u003c\\/p\u003e\\n\\n\u003cp\u003eo In the comments there are several references to the columns mentioned in the REFERENCING clause. I think the meaning would be a little more clear and specific if these comments talked about the columns mentioned in the trigger action.\u003c\\/p\u003e\\n\\n\u003cp\u003eo There are two places in bindReferencesClause() where -1s are squeezed out of arrays. This is done for triggerColsAndTriggerActionCols and triggerActionColsOnly. It seems to me that there is an opportunity here to factor this squeezing code into a helper method. That will make the code a little easier to read and maintain.\u003c\\/p\u003e\\n\\n\u003cp\u003eo I believe that the new code (computing the columns referenced in trigger actions and optimizing the generated text) should only be performed if the database is at level 10.6 or above. I am worried that the trigger will fail if the user soft-downgrades back to 10.5. If the database is at level 10.5 or lower, then the old code should be used.\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eTriggerDescriptor\u003c\\/p\u003e\\n\\n\u003cp\u003eo This patch changes the serialized form of TriggerDescriptor. This is ok as long as we can convince ourselves that these objects are never persisted. These objects do live in the ConstantActions of query plans for INSERT, UPDATE, and DELETE statements. Can we convince ourselves that the compiled forms of INSERT, UPDATE, and DELETE statements never persist across soft-upgrades?\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eReferencedColumnDescriptorImpl\u003c\\/p\u003e\\n\\n\u003cp\u003eo I think that readExternal() won\'t be able to read descriptors from soft-upgraded 10.5 databases. And writeExternal() will write descriptors which won\'t be readable if the user soft-downgrades to 10.5. I think that the following alternative implementations will work.\u003c\\/p\u003e\\n\\n\u003cp\u003e\\tpublic void readExternal(ObjectInput in) throws IOException\u003cbr\\/\u003e\\n\\t{\u003cbr\\/\u003e\\n\\t\\tint rcLength;\u003cbr\\/\u003e\\n\\t\\tint versionNumber = in.readInt();\u003c\\/p\u003e\\n\\n\u003cp\u003e        if ( versionNumber &lt; 0 ) \u003c\\/p\u003e\\n{ rcLength = in.readInt(); }\\n\u003cp\u003e        else \u003c\\/p\u003e\\n{ rcLength = versionNumber; }\\n\\n\u003cp\u003e\\t\\treferencedColumns = new int\u003cspan class=\\\"error\\\"\u003e&#91;rcLength&#93;\u003c\\/span\u003e;\u003cbr\\/\u003e\\n\\t\\tfor (int i = 0; i &lt; rcLength; i++)\u003c\\/p\u003e\\n\\t\\t{\\n\\t\\t\\treferencedColumns[i] = in.readInt();\\n\\t\\t}\\n\\n\u003cp\u003e        if ( versionNumber &lt; 0 )\u003cbr\\/\u003e\\n        {\u003cbr\\/\u003e\\n            int  rctaLength = in.readInt();\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\treferencedColumnsInTriggerAction = new int\u003cspan class=\\\"error\\\"\u003e&#91;rctaLength&#93;\u003c\\/span\u003e;\u003cbr\\/\u003e\\n\\t\\t\\tfor (int i = 0; i &lt; rctaLength; i++)\u003c\\/p\u003e\\n\\t\\t\\t{\\n\\t\\t\\t\\treferencedColumnsInTriggerAction[i] = in.readInt();\\n\\t\\t\\t}\\n\u003cp\u003e        }\u003cbr\\/\u003e\\n\\t}\u003c\\/p\u003e\\n\\n\u003cp\u003e\\tpublic void writeExternal(ObjectOutput out) throws IOException\u003cbr\\/\u003e\\n\\t{\u003cbr\\/\u003e\\n        int versionNumber = referencedColumnsInTriggerAction == null ? referencedColumns.length : -1;\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\tout.writeInt( versionNumber );\u003c\\/p\u003e\\n\\n\u003cp\u003e        if ( versionNumber &lt; 0 ) \u003c\\/p\u003e\\n{ out.writeInt( referencedColumns.length ); }\\n\\n\u003cp\u003e\\t\\tfor (int i = 0; i &lt; referencedColumns.length; i++)\u003c\\/p\u003e\\n\\t\\t{\\n\\t\\t\\tout.writeInt(referencedColumns[i]);\\n\\t\\t}\\n\\n\u003cp\u003e        if ( versionNumber &lt; 0 )\u003cbr\\/\u003e\\n        {\u003cbr\\/\u003e\\n\\t\\t\\tout.writeInt(referencedColumnsInTriggerAction.length);\u003cbr\\/\u003e\\n\\t\\t\\tfor (int i = 0; i &lt; referencedColumnsInTriggerAction.length; i++)\u003c\\/p\u003e\\n\\t\\t\\t{\\n\\t\\t\\t\\tout.writeInt(referencedColumnsInTriggerAction[i]);\\n\\t\\t\\t}\\n\u003cp\u003e        }\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t}\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks,\u003cbr\\/\u003e\\n-Rick\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12852911_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12852911_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/Apr\\/10 18:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-02T18:49:18+0000\'\u003e02\\/Apr\\/10 18:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for the patch, Mamta. I have a couple comments: \\n\\n CreateTriggerNode: \\n\\n o In the comments there are several references to the columns mentioned in the REFERENCING clause. I think the meaning would be a little more clear and specific if these comments talked about the columns mentioned in the trigger action. \\n\\n o There are two places in bindReferencesClause() where -1s are squeezed out of arrays. This is done for triggerColsAndTriggerActionCols and triggerActionColsOnly. It seems to me that there is an opportunity here to factor this squeezing code into a helper method. That will make the code a little easier to read and maintain. \\n\\n o I believe that the new code (computing the columns referenced in trigger actions and optimizing the generated text) should only be performed if the database is at level 10.6 or above. I am worried that the trigger will fail if the user soft-downgrades back to 10.5. If the database is at level 10.5 or lower, then the old code should be used. \\n\\n\\n TriggerDescriptor \\n\\n o This patch changes the serialized form of TriggerDescriptor. This is ok as long as we can convince ourselves that these objects are never persisted. These objects do live in the ConstantActions of query plans for INSERT, UPDATE, and DELETE statements. Can we convince ourselves that the compiled forms of INSERT, UPDATE, and DELETE statements never persist across soft-upgrades? \\n\\n\\n ReferencedColumnDescriptorImpl \\n\\n o I think that readExternal() won\'t be able to read descriptors from soft-upgraded 10.5 databases. And writeExternal() will write descriptors which won\'t be readable if the user soft-downgrades to 10.5. I think that the following alternative implementations will work. \\n\\n \\tpublic void readExternal(ObjectInput in) throws IOException \\n\\t{ \\n\\t\\tint rcLength; \\n\\t\\tint versionNumber = in.readInt(); \\n\\n         if ( versionNumber &lt; 0 )  \\n{ rcLength = in.readInt(); }\\n         else  \\n{ rcLength = versionNumber; }\\n\\n \\t\\treferencedColumns = new int &#91;rcLength&#93; ; \\n\\t\\tfor (int i = 0; i &lt; rcLength; i++) \\n\\t\\t{\\n\\t\\t\\treferencedColumns[i] = in.readInt();\\n\\t\\t}\\n\\n         if ( versionNumber &lt; 0 ) \\n        { \\n            int  rctaLength = in.readInt(); \\n\\n \\t\\t\\treferencedColumnsInTriggerAction = new int &#91;rctaLength&#93; ; \\n\\t\\t\\tfor (int i = 0; i &lt; rctaLength; i++) \\n\\t\\t\\t{\\n\\t\\t\\t\\treferencedColumnsInTriggerAction[i] = in.readInt();\\n\\t\\t\\t}\\n         } \\n\\t} \\n\\n \\tpublic void writeExternal(ObjectOutput out) throws IOException \\n\\t{ \\n        int versionNumber = referencedColumnsInTriggerAction == null ? referencedColumns.length : -1; \\n\\n \\t\\tout.writeInt( versionNumber ); \\n\\n         if ( versionNumber &lt; 0 )  \\n{ out.writeInt( referencedColumns.length ); }\\n\\n \\t\\tfor (int i = 0; i &lt; referencedColumns.length; i++) \\n\\t\\t{\\n\\t\\t\\tout.writeInt(referencedColumns[i]);\\n\\t\\t}\\n\\n         if ( versionNumber &lt; 0 ) \\n        { \\n\\t\\t\\tout.writeInt(referencedColumnsInTriggerAction.length); \\n\\t\\t\\tfor (int i = 0; i &lt; referencedColumnsInTriggerAction.length; i++) \\n\\t\\t\\t{\\n\\t\\t\\t\\tout.writeInt(referencedColumnsInTriggerAction[i]);\\n\\t\\t\\t}\\n         } \\n\\n \\t} \\n\\n Thanks, \\n-Rick              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12855845\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12855845&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12855845\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12855845_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12855845_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 05:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T05:32:21+0000\'\u003e12\\/Apr\\/10 05:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eRick, thanks for reviewing the patch and for your comments. One thing may not have been clear in my patch comments is that now, with my changes in the patch, it is possible to have referencedColumns as null but referencedColumnsInTriggerAction as not null. eg\u003cbr\\/\u003e\\n     create trigger tr1 after update on t1 referencing old as oldt  for each row values(oldt.id);\u003cbr\\/\u003e\\nFor the trigger above, the user has not provided a list of columns whose update should fire trigger tr1. Because of that, any column update from table t1 will cause trigger tr1 to fire. But the columns referenced in trigger action through old\\/new transiten variables is column \\\"id\\\". in other words, for this trigger, referencedColumns will be null but referencedColumnsInTriggerAction will not be null. The changes to readExternal and writeExternal will have to account for possibility of referencedColumns being null. Prior to my changes in the patch, if referencedColumns was null for a trigger, the entire object ReferencedColumnDescriptorImpl will be null and hence we will never get to these methods. The null case was handled by FormatIdOutputStream.writeObject(Object) with the following code\u003cbr\\/\u003e\\n\\tpublic void writeObject(Object ref) throws IOException\u003cbr\\/\u003e\\n\\t{\u003cbr\\/\u003e\\n\\t\\tif (ref == null)\u003c\\/p\u003e\\n\\t\\t{\\n\\t\\t\\tFormatIdUtil.writeFormatIdInteger(this, StoredFormatIds.NULL_FORMAT_ID);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\u003cp\u003e                                          .........\u003c\\/p\u003e\\n\\n\u003cp\u003eThe stack trace of such a call is as follows.\u003cbr\\/\u003e\\nThread \u003cspan class=\\\"error\\\"\u003e&#91;main&#93;\u003c\\/span\u003e (Suspended (breakpoint at line 95 in FormatIdOutputStream))\\t\u003cbr\\/\u003e\\n\\tFormatIdOutputStream.writeObject(Object) line: 95\\t\u003cbr\\/\u003e\\n\\tUserType.writeExternal(ObjectOutput) line: 291\\t\u003cbr\\/\u003e\\n\\tStoredPage.logColumn(Object[], int, DynamicByteArrayOutputStream, int, int, int) line: 6243\\t\u003cbr\\/\u003e\\n\\tStoredPage.logRow(int, boolean, int, Object[], FormatableBitSet, DynamicByteArrayOutputStream, int, byte, int, int, int) line: 3963\\t\u003cbr\\/\u003e\\n\\tInsertOperation.writeOptionalDataToBuffer(RawTransaction, DynamicByteArrayOutputStream, Object[], FormatableBitSet, boolean, int, int, int) line: 370\\t\u003cbr\\/\u003e\\n\\tInsertOperation.&lt;init&gt;(RawTransaction, BasePage, int, int, Object[], FormatableBitSet, LogicalUndo, byte, int, boolean, int, DynamicByteArrayOutputStream, int, int) line: 115\\t\u003cbr\\/\u003e\\n\\tLoggableActions.actionInsert(RawTransaction, BasePage, int, int, Object[], FormatableBitSet, LogicalUndo, byte, int, boolean, int, DynamicByteArrayOutputStream, int, int) line: 139\\t\u003cbr\\/\u003e\\n\\tStoredPage(BasePage).insertNoOverflow(int, Object[], FormatableBitSet, LogicalUndo, byte, int) line: 602\\t\u003cbr\\/\u003e\\n\\tStoredPage(BasePage).insertAtSlot(int, Object[], FormatableBitSet, LogicalUndo, byte, int) line: 523\\t\u003cbr\\/\u003e\\n\\tStoredPage.insertAtSlot(int, Object[], FormatableBitSet, LogicalUndo, byte, int) line: 6723\\t\u003cbr\\/\u003e\\n\\tStoredPage(BasePage).insert(Object[], FormatableBitSet, byte, int) line: 629\\t\u003cbr\\/\u003e\\n\\tHeapController.doInsert(DataValueDescriptor[]) line: 288\\t\u003cbr\\/\u003e\\n\\tHeapController.insertAndFetchLocation(DataValueDescriptor[], RowLocation) line: 599\\t\u003cbr\\/\u003e\\n\\tTabInfoImpl.insertRowListImpl(ExecRow[], TransactionController, RowLocation[]) line: 511\\t\u003cbr\\/\u003e\\n\\tTabInfoImpl.insertRow(ExecRow, TransactionController) line: 420\\t\u003cbr\\/\u003e\\n\\tDataDictionaryImpl.addDescriptor(TupleDescriptor, TupleDescriptor, int, boolean, TransactionController) line: 1824\\t\u003cbr\\/\u003e\\n\\tCreateTriggerConstantAction.executeConstantAction(Activation) line: 321\\t\u003cbr\\/\u003e\\n\\tMiscResultSet.open() line: 61\\t\u003cbr\\/\u003e\\n\\tGenericPreparedStatement.executeStmt(Activation, boolean, long) line: 436\\t\u003cbr\\/\u003e\\n\\tGenericPreparedStatement.execute(Activation, long) line: 317\\t\u003cbr\\/\u003e\\n\\tEmbedStatement.executeStatement(Activation, boolean, boolean) line: 1232\\t\u003cbr\\/\u003e\\n\\tEmbedStatement.execute(String, boolean, boolean, int, int[], String[]) line: 625\\t\u003cbr\\/\u003e\\n\\tEmbedStatement.execute(String) line: 555\\t\u003cbr\\/\u003e\\n\\tij.executeImmediate(String) line: 367\\t\u003cbr\\/\u003e\\n\\tutilMain.doCatch(String) line: 521\\t\u003cbr\\/\u003e\\n\\tutilMain.runScriptGuts() line: 363\\t\u003cbr\\/\u003e\\n\\tutilMain.go(LocalizedInput[], LocalizedOutput) line: 261\\t\u003cbr\\/\u003e\\n\\tMain.go(LocalizedInput, LocalizedOutput) line: 229\\t\u003cbr\\/\u003e\\n\\tMain.mainCore(String[], Main) line: 184\\t\u003cbr\\/\u003e\\n\\tMain.main(String[]) line: 75\\t\u003cbr\\/\u003e\\n\\tij.main(String[]) line: 59\\t\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12855845_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12855845_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 05:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T05:32:21+0000\'\u003e12\\/Apr\\/10 05:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Rick, thanks for reviewing the patch and for your comments. One thing may not have been clear in my patch comments is that now, with my changes in the patch, it is possible to have referencedColumns as null but referencedColumnsInTriggerAction as not null. eg \\n     create trigger tr1 after update on t1 referencing old as oldt  for each row values(oldt.id); \\nFor the trigger above, the user has not provided a list of columns whose update should fire trigger tr1. Because of that, any column update from table t1 will cause trigger tr1 to fire. But the columns referenced in trigger action through old\\/new transiten variables is column \\\"id\\\". in other words, for this trigger, referencedColumns will be null but referencedColumnsInTriggerAction will not be null. The changes to readExternal and writeExternal will have to account for possibility of referencedColumns being null. Prior to my changes in the patch, if referencedColumns was null for a trigger, the entire object ReferencedColumnDescriptorImpl will be null and hence we will never get to these methods. The null case was handled by FormatIdOutputStream.writeObject(Object) with the following code \\n\\tpublic void writeObject(Object ref) throws IOException \\n\\t{ \\n\\t\\tif (ref == null) \\n\\t\\t{\\n\\t\\t\\tFormatIdUtil.writeFormatIdInteger(this, StoredFormatIds.NULL_FORMAT_ID);\\n\\t\\t\\treturn;\\n\\t\\t}\\n                                           ......... \\n\\n The stack trace of such a call is as follows. \\nThread  &#91;main&#93;  (Suspended (breakpoint at line 95 in FormatIdOutputStream))\\t \\n\\tFormatIdOutputStream.writeObject(Object) line: 95\\t \\n\\tUserType.writeExternal(ObjectOutput) line: 291\\t \\n\\tStoredPage.logColumn(Object[], int, DynamicByteArrayOutputStream, int, int, int) line: 6243\\t \\n\\tStoredPage.logRow(int, boolean, int, Object[], FormatableBitSet, DynamicByteArrayOutputStream, int, byte, int, int, int) line: 3963\\t \\n\\tInsertOperation.writeOptionalDataToBuffer(RawTransaction, DynamicByteArrayOutputStream, Object[], FormatableBitSet, boolean, int, int, int) line: 370\\t \\n\\tInsertOperation.&lt;init&gt;(RawTransaction, BasePage, int, int, Object[], FormatableBitSet, LogicalUndo, byte, int, boolean, int, DynamicByteArrayOutputStream, int, int) line: 115\\t \\n\\tLoggableActions.actionInsert(RawTransaction, BasePage, int, int, Object[], FormatableBitSet, LogicalUndo, byte, int, boolean, int, DynamicByteArrayOutputStream, int, int) line: 139\\t \\n\\tStoredPage(BasePage).insertNoOverflow(int, Object[], FormatableBitSet, LogicalUndo, byte, int) line: 602\\t \\n\\tStoredPage(BasePage).insertAtSlot(int, Object[], FormatableBitSet, LogicalUndo, byte, int) line: 523\\t \\n\\tStoredPage.insertAtSlot(int, Object[], FormatableBitSet, LogicalUndo, byte, int) line: 6723\\t \\n\\tStoredPage(BasePage).insert(Object[], FormatableBitSet, byte, int) line: 629\\t \\n\\tHeapController.doInsert(DataValueDescriptor[]) line: 288\\t \\n\\tHeapController.insertAndFetchLocation(DataValueDescriptor[], RowLocation) line: 599\\t \\n\\tTabInfoImpl.insertRowListImpl(ExecRow[], TransactionController, RowLocation[]) line: 511\\t \\n\\tTabInfoImpl.insertRow(ExecRow, TransactionController) line: 420\\t \\n\\tDataDictionaryImpl.addDescriptor(TupleDescriptor, TupleDescriptor, int, boolean, TransactionController) line: 1824\\t \\n\\tCreateTriggerConstantAction.executeConstantAction(Activation) line: 321\\t \\n\\tMiscResultSet.open() line: 61\\t \\n\\tGenericPreparedStatement.executeStmt(Activation, boolean, long) line: 436\\t \\n\\tGenericPreparedStatement.execute(Activation, long) line: 317\\t \\n\\tEmbedStatement.executeStatement(Activation, boolean, boolean) line: 1232\\t \\n\\tEmbedStatement.execute(String, boolean, boolean, int, int[], String[]) line: 625\\t \\n\\tEmbedStatement.execute(String) line: 555\\t \\n\\tij.executeImmediate(String) line: 367\\t \\n\\tutilMain.doCatch(String) line: 521\\t \\n\\tutilMain.runScriptGuts() line: 363\\t \\n\\tutilMain.go(LocalizedInput[], LocalizedOutput) line: 261\\t \\n\\tMain.go(LocalizedInput, LocalizedOutput) line: 229\\t \\n\\tMain.mainCore(String[], Main) line: 184\\t \\n\\tMain.main(String[]) line: 75\\t \\n\\tij.main(String[]) line: 59\\t \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12855852\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12855852&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12855852\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12855852_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12855852_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 06:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T06:19:42+0000\'\u003e12\\/Apr\\/10 06:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI will post by tomorrow what I think the changed readExternal and writeExternal should look like(taking into account the fact that referencedColumns can be null and the fact that we could be dealing with pre-10.6 database as part of soft-upgrade). Rick and others, I would greatly appreciate if you will take a look at that code once I have it up in the jira.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12855852_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12855852_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 06:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T06:19:42+0000\'\u003e12\\/Apr\\/10 06:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I will post by tomorrow what I think the changed readExternal and writeExternal should look like(taking into account the fact that referencedColumns can be null and the fact that we could be dealing with pre-10.6 database as part of soft-upgrade). Rick and others, I would greatly appreciate if you will take a look at that code once I have it up in the jira.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12856168\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12856168&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12856168\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12856168_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12856168_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 20:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T20:58:30+0000\'\u003e12\\/Apr\\/10 20:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eBased on the fact that with the patch, it is possible to have referencedColumns null, I think readExternal and writeExternal should look like following (this should make sure that we read the pre-10.6 dbs in soft upgrade mode correctly and write the new descriptors correctly provided that as suggested by Rick, in CreateTriggerNode, we use the new code only if the db is at &gt;10.5 level)\u003c\\/p\u003e\\n\\n\u003cp\u003eI will add following class comment to ReferencedColumnsDescriptorImpl \u003cbr\\/\u003e\\n\\/**\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eFor triggers, ReferencedColumnsDescriptorImpl object has 3 possibilites\u003c\\/li\u003e\\n\\t\u003cli\u003e1)referencedColumns is not null but referencedColumnsInTriggerAction\u003c\\/li\u003e\\n\\t\u003cli\u003eis null - meaning the trigger is defined on specific columns but trigger\u003c\\/li\u003e\\n\\t\u003cli\u003eaction does not reference any column through old\\/new transient variables.\u003c\\/li\u003e\\n\\t\u003cli\u003eAnother reason for referencedColumnsInTriggerAction to be null(even though\u003c\\/li\u003e\\n\\t\u003cli\u003etrigger action does reference columns though old\\/new transient variables\u003c\\/li\u003e\\n\\t\u003cli\u003ewould be that we are in soft-upgrade mode for pre-10.6 databases and\u003c\\/li\u003e\\n\\t\u003cli\u003ehence we do not want to write anything about\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumnsInTriggerAction for backward compatibility (\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-1482\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-1482\\\"\u003e\u003cdel\u003eDERBY-1482\u003c\\/del\u003e\u003c\\/a\u003e).\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 for each row values(1);\u003c\\/li\u003e\\n\\t\u003cli\u003e2)referencedColumns is null but referencedColumnsInTriggerAction is not null\u003c\\/li\u003e\\n\\t\u003cli\u003e- meaning the trigger is not defined on specific columns but trigger\u003c\\/li\u003e\\n\\t\u003cli\u003eaction references column through old\\/new transient variables\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003c\\/li\u003e\\n\\t\u003cli\u003e3)referencedColumns and referencedColumnsInTriggerAction are not null -\u003c\\/li\u003e\\n\\t\u003cli\u003emeaning the trigger is defined on specific columns and trigger action\u003c\\/li\u003e\\n\\t\u003cli\u003ereferences column through old\\/new transient variables\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003cbr\\/\u003e\\n *\\/\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\\n\u003cp\u003e\\t\\/**\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eFor triggers, 3 possible scenarios\u003c\\/li\u003e\\n\\t\u003cli\u003e1)referencedColumns is not null but referencedColumnsInTriggerAction\u003c\\/li\u003e\\n\\t\u003cli\u003eis null - then following will get read\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumns.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumns arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 for each row values(1);\u003c\\/li\u003e\\n\\t\u003cli\u003e2)referencedColumns is null but referencedColumnsInTriggerAction is not\u003c\\/li\u003e\\n\\t\u003cli\u003enull - then following will get read\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumnsInTriggerAction.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumnsInTriggerAction arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003c\\/li\u003e\\n\\t\u003cli\u003e3)referencedColumns and referencedColumnsInTriggerAction are not null -\u003c\\/li\u003e\\n\\t\u003cli\u003ethen following will get read\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumns.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumns arrary\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumnsInTriggerAction.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumnsInTriggerAction arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003cbr\\/\u003e\\n\\t *\\/\u003cbr\\/\u003e\\n\\tpublic void readExternal(ObjectInput in) throws IOException \u003cbr\\/\u003e\\n\\t{\u003cbr\\/\u003e\\n\\t        int rcLength; \u003cbr\\/\u003e\\n\\t        int versionNumber = in.readInt(); \u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e\\t        if ( versionNumber &lt; 0 ) { \u003cbr\\/\u003e\\n\\t           \\/\\/A negative value for versionNumber means that this trigger action\u003cbr\\/\u003e\\n\\t           \\/\\/references columns through old\\/new transient variables. Now, check\u003cbr\\/\u003e\\n\\t           \\/\\/if trigger has been defined on selected columns\u003cbr\\/\u003e\\n\\t            rcLength = in.readInt(); \u003cbr\\/\u003e\\n\\t            if ( rcLength &lt; 0 ) \u003c\\/p\u003e\\n{ \\/\\/trigger is not defined on selected columns\\n\\t                rcLength = 0;\\n\\t            }\\n\u003cp\u003e else\u003cbr\\/\u003e\\n\\t                referencedColumns = new int\u003cspan class=\\\"error\\\"\u003e&#91;rcLength&#93;\u003c\\/span\u003e; \u003cbr\\/\u003e\\n\\t        } else \u003c\\/p\u003e\\n{ \\/\\/this trigger only has trigger columns saved on the disc\\n\\t            rcLength = versionNumber; \\n\\t            referencedColumns = new int[rcLength]; \\n\\t        }\\n\u003cp\u003e \u003c\\/p\u003e\\n\\n\u003cp\u003e\\t        for (int i = 0; i &lt; rcLength; i++) \u003c\\/p\u003e\\n\\t        { \\n\\t            \\/\\/if we are in this loop, then it means that this trigger has been\\n\\t            \\/\\/defined on specific columns. Read in information about those columns\\n\\t            referencedColumns[i] = in.readInt(); \\n\\t        } \\n\\n\u003cp\u003e\\t        if ( versionNumber &lt; 0 ) \u003cbr\\/\u003e\\n\\t        { \u003cbr\\/\u003e\\n\\t           \\/\\/As mentioned earlier, a negative value for versionNumber means that \u003cbr\\/\u003e\\n\\t           \\/\\/this trigger action references columns through old\\/new transient variables. \u003cbr\\/\u003e\\n\\t           \\/\\/Read information about those columns into referencedColumnsInTriggerAction\u003cbr\\/\u003e\\n\\t            int rctaLength = in.readInt(); \u003c\\/p\u003e\\n\\n\u003cp\u003e\\t            referencedColumnsInTriggerAction = new int\u003cspan class=\\\"error\\\"\u003e&#91;rctaLength&#93;\u003c\\/span\u003e; \u003cbr\\/\u003e\\n\\t            for (int i = 0; i &lt; rctaLength; i++) \u003c\\/p\u003e\\n\\t            { \\n\\t                referencedColumnsInTriggerAction[i] = in.readInt(); \\n\\t            } \\n\u003cp\u003e\\t        } \u003cbr\\/\u003e\\n\\t} \u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\/**\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eFor triggers, 3 possible scenarios\u003c\\/li\u003e\\n\\t\u003cli\u003e1)referencedColumns is not null but referencedColumnsInTriggerAction\u003c\\/li\u003e\\n\\t\u003cli\u003eis null - then following gets written\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumns.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumns arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 for each row values(1);\u003c\\/li\u003e\\n\\t\u003cli\u003e2)referencedColumns is null but referencedColumnsInTriggerAction is not\u003c\\/li\u003e\\n\\t\u003cli\u003enull - then following gets written\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumnsInTriggerAction.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumnsInTriggerAction arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003c\\/li\u003e\\n\\t\u003cli\u003e3)referencedColumns and referencedColumnsInTriggerAction are not null -\u003c\\/li\u003e\\n\\t\u003cli\u003ethen following gets written\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumns.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumns arrary\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumnsInTriggerAction.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumnsInTriggerAction arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003cbr\\/\u003e\\n\\t *\\/\u003cbr\\/\u003e\\n\\tpublic void writeExternal(ObjectOutput out) throws IOException \u003cbr\\/\u003e\\n\\t{ \u003cbr\\/\u003e\\n\\t        \\/\\/A null value for referencedColumnsInTriggerAction means one of 2 cases\u003cbr\\/\u003e\\n\\t        \\/\\/1)We are working in soft-upgrade mode dealing with databases lower than 10.6\u003cbr\\/\u003e\\n\\t        \\/\\/  Prior to 10.6 release, we did not keep track of trigger action columns\u003cbr\\/\u003e\\n\\t        \\/\\/2)We are working with &gt;10.5 release database and the trigger action does not \u003cbr\\/\u003e\\n\\t        \\/\\/  reference any column through old\\/new transient variables\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e\\t        \\/\\/versionNumber will be -1 if referencedColumnsInTriggerAction is not null,\u003cbr\\/\u003e\\n\\t        \\/\\/meaning, we are dealing with &gt;10.5 release database and the trigger has referenced\u003cbr\\/\u003e\\n\\t        \\/\\/columns in trigger action through old\\/new transient variables.\u003cbr\\/\u003e\\n\\t        \\/\\/Otherwise, versionNumber will be the length of the arrary referencedColumns. This\u003cbr\\/\u003e\\n\\t        \\/\\/arrary holds the columns on which trigger is defined. The detailed meaning of\u003cbr\\/\u003e\\n\\t        \\/\\/these 2 arrays is described at the class level comments(towards the beginning of\u003cbr\\/\u003e\\n\\t        \\/\\/this class.\u003cbr\\/\u003e\\n\\t        int versionNumber = referencedColumnsInTriggerAction == null ? referencedColumns.length : -1; \u003c\\/p\u003e\\n\\n\u003cp\u003e\\t        out.writeInt( versionNumber ); \u003c\\/p\u003e\\n\\n\u003cp\u003e\\t        if ( versionNumber &lt; 0 ) { \u003cbr\\/\u003e\\n\\t        \\t\\/\\/If we are here, then it means that trigger action references \u003cbr\\/\u003e\\n\\t        \\t\\/\\/columns through old\\/new transient variables. \u003cbr\\/\u003e\\n\\t        \\t\\/\\/First we will check if there are any trigger columns selected\u003cbr\\/\u003e\\n\\t        \\t\\/\\/for this trigger. If yes, we will write information about \u003cbr\\/\u003e\\n\\t        \\t\\/\\/trigger columns and if not, then we will write -1 to indicate \u003cbr\\/\u003e\\n\\t        \\t\\/\\/that there are no trigger columns selected.\u003cbr\\/\u003e\\n\\t        \\t\\/\\/After that, we will write info about trigger action columns.\u003cbr\\/\u003e\\n\\t            if ( referencedColumns != null ) \u003c\\/p\u003e\\n{ \\n\\t            \\twriteReferencedColumns(out);\\n\\t            }\\n\u003cp\u003e else\u003cbr\\/\u003e\\n\\t                out.writeInt(versionNumber);\u003cbr\\/\u003e\\n\\t            \\/\\/Write info about trigger action columns referenced through \u003cbr\\/\u003e\\n\\t            \\/\\/old\\/new transient variables\u003cbr\\/\u003e\\n\\t            out.writeInt(referencedColumnsInTriggerAction.length); \u003cbr\\/\u003e\\n\\t            for (int i = 0; i &lt; referencedColumnsInTriggerAction.length; i++) \u003c\\/p\u003e\\n\\t            { \\n\\t                out.writeInt(referencedColumnsInTriggerAction[i]); \\n\\t            } \\n\u003cp\u003e\\t        } else \u003c\\/p\u003e\\n{\\n\\t        \\t\\/\\/If we are here, then it means there are no references in \\n\\t        \\t\\/\\/trigger action to old\\/new transient variables. But, three are\\n\\t        \\t\\/\\/trigger columns selected for this trigger. Write info about \\n\\t        \\t\\/\\/trigger columns\\n\\t        \\twriteReferencedColumns(out);\\n\\t        }\\n\u003cp\u003e\\t         \u003cbr\\/\u003e\\n\\t} \u003c\\/p\u003e\\n\\n\u003cp\u003e\\tprivate void writeReferencedColumns(ObjectOutput out) throws IOException \u003cbr\\/\u003e\\n\\t{ \u003cbr\\/\u003e\\n    \\t    \\/\\/trigger is defined on select columns. Write info about trigger columns\u003cbr\\/\u003e\\n    \\t    out.writeInt( referencedColumns.length ); \u003cbr\\/\u003e\\n    \\t    for (int i = 0; i &lt; referencedColumns.length; i++) \u003c\\/p\u003e\\n    \\t    { \\n    \\t        out.writeInt(referencedColumns[i]); \\n    \\t    } \\n\u003cp\u003e\\t}\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12856168_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12856168_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 20:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T20:58:30+0000\'\u003e12\\/Apr\\/10 20:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Based on the fact that with the patch, it is possible to have referencedColumns null, I think readExternal and writeExternal should look like following (this should make sure that we read the pre-10.6 dbs in soft upgrade mode correctly and write the new descriptors correctly provided that as suggested by Rick, in CreateTriggerNode, we use the new code only if the db is at &gt;10.5 level) \\n\\n I will add following class comment to ReferencedColumnsDescriptorImpl  \\n\\/** \\n \\n\\t For triggers, ReferencedColumnsDescriptorImpl object has 3 possibilites \\n\\t 1)referencedColumns is not null but referencedColumnsInTriggerAction \\n\\t is null - meaning the trigger is defined on specific columns but trigger \\n\\t action does not reference any column through old\\/new transient variables. \\n\\t Another reason for referencedColumnsInTriggerAction to be null(even though \\n\\t trigger action does reference columns though old\\/new transient variables \\n\\t would be that we are in soft-upgrade mode for pre-10.6 databases and \\n\\t hence we do not want to write anything about \\n\\t referencedColumnsInTriggerAction for backward compatibility (  DERBY-1482  ). \\n\\t eg create trigger tr1 after update of c1 on t1 for each row values(1); \\n\\t 2)referencedColumns is null but referencedColumnsInTriggerAction is not null \\n\\t - meaning the trigger is not defined on specific columns but trigger \\n\\t action references column through old\\/new transient variables \\n\\t eg create trigger tr1 after update on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n\\t 3)referencedColumns and referencedColumnsInTriggerAction are not null - \\n\\t meaning the trigger is defined on specific columns and trigger action \\n\\t references column through old\\/new transient variables \\n\\t eg create trigger tr1 after update of c1 on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n *\\/ \\n \\n\\n\\n\\n \\t\\/** \\n \\n\\t For triggers, 3 possible scenarios \\n\\t 1)referencedColumns is not null but referencedColumnsInTriggerAction \\n\\t is null - then following will get read \\n\\t referencedColumns.length \\n\\t individual elements from referencedColumns arrary \\n\\t eg create trigger tr1 after update of c1 on t1 for each row values(1); \\n\\t 2)referencedColumns is null but referencedColumnsInTriggerAction is not \\n\\t null - then following will get read \\n\\t -1 \\n\\t -1 \\n\\t referencedColumnsInTriggerAction.length \\n\\t individual elements from referencedColumnsInTriggerAction arrary \\n\\t eg create trigger tr1 after update on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n\\t 3)referencedColumns and referencedColumnsInTriggerAction are not null - \\n\\t then following will get read \\n\\t -1 \\n\\t referencedColumns.length \\n\\t individual elements from referencedColumns arrary \\n\\t referencedColumnsInTriggerAction.length \\n\\t individual elements from referencedColumnsInTriggerAction arrary \\n\\t eg create trigger tr1 after update of c1 on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n\\t *\\/ \\n\\tpublic void readExternal(ObjectInput in) throws IOException  \\n\\t{ \\n\\t        int rcLength;  \\n\\t        int versionNumber = in.readInt();  \\n \\n\\n\\n \\t        if ( versionNumber &lt; 0 ) {  \\n\\t           \\/\\/A negative value for versionNumber means that this trigger action \\n\\t           \\/\\/references columns through old\\/new transient variables. Now, check \\n\\t           \\/\\/if trigger has been defined on selected columns \\n\\t            rcLength = in.readInt();  \\n\\t            if ( rcLength &lt; 0 )  \\n{ \\/\\/trigger is not defined on selected columns\\n\\t                rcLength = 0;\\n\\t            }\\n  else \\n\\t                referencedColumns = new int &#91;rcLength&#93; ;  \\n\\t        } else  \\n{ \\/\\/this trigger only has trigger columns saved on the disc\\n\\t            rcLength = versionNumber; \\n\\t            referencedColumns = new int[rcLength]; \\n\\t        }\\n   \\n\\n \\t        for (int i = 0; i &lt; rcLength; i++)  \\n\\t        { \\n\\t            \\/\\/if we are in this loop, then it means that this trigger has been\\n\\t            \\/\\/defined on specific columns. Read in information about those columns\\n\\t            referencedColumns[i] = in.readInt(); \\n\\t        } \\n\\n \\t        if ( versionNumber &lt; 0 )  \\n\\t        {  \\n\\t           \\/\\/As mentioned earlier, a negative value for versionNumber means that  \\n\\t           \\/\\/this trigger action references columns through old\\/new transient variables.  \\n\\t           \\/\\/Read information about those columns into referencedColumnsInTriggerAction \\n\\t            int rctaLength = in.readInt();  \\n\\n \\t            referencedColumnsInTriggerAction = new int &#91;rctaLength&#93; ;  \\n\\t            for (int i = 0; i &lt; rctaLength; i++)  \\n\\t            { \\n\\t                referencedColumnsInTriggerAction[i] = in.readInt(); \\n\\t            } \\n \\t        }  \\n\\t}  \\n\\n \\t\\/** \\n \\n\\t For triggers, 3 possible scenarios \\n\\t 1)referencedColumns is not null but referencedColumnsInTriggerAction \\n\\t is null - then following gets written \\n\\t referencedColumns.length \\n\\t individual elements from referencedColumns arrary \\n\\t eg create trigger tr1 after update of c1 on t1 for each row values(1); \\n\\t 2)referencedColumns is null but referencedColumnsInTriggerAction is not \\n\\t null - then following gets written \\n\\t -1 \\n\\t -1 \\n\\t referencedColumnsInTriggerAction.length \\n\\t individual elements from referencedColumnsInTriggerAction arrary \\n\\t eg create trigger tr1 after update on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n\\t 3)referencedColumns and referencedColumnsInTriggerAction are not null - \\n\\t then following gets written \\n\\t -1 \\n\\t referencedColumns.length \\n\\t individual elements from referencedColumns arrary \\n\\t referencedColumnsInTriggerAction.length \\n\\t individual elements from referencedColumnsInTriggerAction arrary \\n\\t eg create trigger tr1 after update of c1 on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n\\t *\\/ \\n\\tpublic void writeExternal(ObjectOutput out) throws IOException  \\n\\t{  \\n\\t        \\/\\/A null value for referencedColumnsInTriggerAction means one of 2 cases \\n\\t        \\/\\/1)We are working in soft-upgrade mode dealing with databases lower than 10.6 \\n\\t        \\/\\/  Prior to 10.6 release, we did not keep track of trigger action columns \\n\\t        \\/\\/2)We are working with &gt;10.5 release database and the trigger action does not  \\n\\t        \\/\\/  reference any column through old\\/new transient variables \\n \\n\\n\\n \\t        \\/\\/versionNumber will be -1 if referencedColumnsInTriggerAction is not null, \\n\\t        \\/\\/meaning, we are dealing with &gt;10.5 release database and the trigger has referenced \\n\\t        \\/\\/columns in trigger action through old\\/new transient variables. \\n\\t        \\/\\/Otherwise, versionNumber will be the length of the arrary referencedColumns. This \\n\\t        \\/\\/arrary holds the columns on which trigger is defined. The detailed meaning of \\n\\t        \\/\\/these 2 arrays is described at the class level comments(towards the beginning of \\n\\t        \\/\\/this class. \\n\\t        int versionNumber = referencedColumnsInTriggerAction == null ? referencedColumns.length : -1;  \\n\\n \\t        out.writeInt( versionNumber );  \\n\\n \\t        if ( versionNumber &lt; 0 ) {  \\n\\t        \\t\\/\\/If we are here, then it means that trigger action references  \\n\\t        \\t\\/\\/columns through old\\/new transient variables.  \\n\\t        \\t\\/\\/First we will check if there are any trigger columns selected \\n\\t        \\t\\/\\/for this trigger. If yes, we will write information about  \\n\\t        \\t\\/\\/trigger columns and if not, then we will write -1 to indicate  \\n\\t        \\t\\/\\/that there are no trigger columns selected. \\n\\t        \\t\\/\\/After that, we will write info about trigger action columns. \\n\\t            if ( referencedColumns != null )  \\n{ \\n\\t            \\twriteReferencedColumns(out);\\n\\t            }\\n  else \\n\\t                out.writeInt(versionNumber); \\n\\t            \\/\\/Write info about trigger action columns referenced through  \\n\\t            \\/\\/old\\/new transient variables \\n\\t            out.writeInt(referencedColumnsInTriggerAction.length);  \\n\\t            for (int i = 0; i &lt; referencedColumnsInTriggerAction.length; i++)  \\n\\t            { \\n\\t                out.writeInt(referencedColumnsInTriggerAction[i]); \\n\\t            } \\n \\t        } else  \\n{\\n\\t        \\t\\/\\/If we are here, then it means there are no references in \\n\\t        \\t\\/\\/trigger action to old\\/new transient variables. But, three are\\n\\t        \\t\\/\\/trigger columns selected for this trigger. Write info about \\n\\t        \\t\\/\\/trigger columns\\n\\t        \\twriteReferencedColumns(out);\\n\\t        }\\n \\t          \\n\\t}  \\n\\n \\tprivate void writeReferencedColumns(ObjectOutput out) throws IOException  \\n\\t{  \\n    \\t    \\/\\/trigger is defined on select columns. Write info about trigger columns \\n    \\t    out.writeInt( referencedColumns.length );  \\n    \\t    for (int i = 0; i &lt; referencedColumns.length; i++)  \\n    \\t    { \\n    \\t        out.writeInt(referencedColumns[i]); \\n    \\t    } \\n \\t} \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12856200\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12856200&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12856200\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12856200_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12856200_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 22:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T22:03:29+0000\'\u003e12\\/Apr\\/10 22:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ei like the approach rick has suggested, it makes the upgrade a lot easier and avoids the need to have new format id\'s.  The first int becomes a \\\"version\\\" of the data structure.  As a way to incrementally implement this I suggest you first get soft upgrade to work, and then just get new triggers to work, and finally if necessary worry about hard upgrading the old triggers to new trigger data structure.\u003c\\/p\u003e\\n\\n\u003cp\u003eI think you can handle it all just in the read and write external routines, if you code your in memory datastructures right.  What looks missing is that even if your in memory data structure has extra reference column information, you should test for soft upgrade in the write external method and not write that information out.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12856200_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12856200_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Apr\\/10 22:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-12T22:03:29+0000\'\u003e12\\/Apr\\/10 22:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    i like the approach rick has suggested, it makes the upgrade a lot easier and avoids the need to have new format id\'s.  The first int becomes a \\\"version\\\" of the data structure.  As a way to incrementally implement this I suggest you first get soft upgrade to work, and then just get new triggers to work, and finally if necessary worry about hard upgrading the old triggers to new trigger data structure. \\n\\n I think you can handle it all just in the read and write external routines, if you code your in memory datastructures right.  What looks missing is that even if your in memory data structure has extra reference column information, you should test for soft upgrade in the write external method and not write that information out.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12857516\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12857516&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12857516\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12857516_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857516_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Apr\\/10 20:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-15T20:02:14+0000\'\u003e15\\/Apr\\/10 20:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI was under the impression that I would need a new format id but since the code changes in 10.6 will still be able to read the old ReferencedColumnsDescriptor there is not a need for new format id. I have removed my format id changes from my codeline (before removing those changes, I was constantly getting no class implementation found for format id). But there is a bug in the writeExternal that I posted above. In the case of missing trigger action column references, my code was incorrectly writing the length of trigger columns twice. I have fixed that problem. The new writeExternal will look like following\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\/**\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eFor triggers, 3 possible scenarios\u003c\\/li\u003e\\n\\t\u003cli\u003e1)referencedColumns is not null but referencedColumnsInTriggerAction\u003c\\/li\u003e\\n\\t\u003cli\u003eis null - then following gets written\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumns.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumns arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 for each row values(1);\u003c\\/li\u003e\\n\\t\u003cli\u003e2)referencedColumns is null but referencedColumnsInTriggerAction is not\u003c\\/li\u003e\\n\\t\u003cli\u003enull - then following gets written\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumnsInTriggerAction.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumnsInTriggerAction arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003c\\/li\u003e\\n\\t\u003cli\u003e3)referencedColumns and referencedColumnsInTriggerAction are not null -\u003c\\/li\u003e\\n\\t\u003cli\u003ethen following gets written\u003c\\/li\u003e\\n\\t\u003cli\u003e-1\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumns.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumns arrary\u003c\\/li\u003e\\n\\t\u003cli\u003ereferencedColumnsInTriggerAction.length\u003c\\/li\u003e\\n\\t\u003cli\u003eindividual elements from referencedColumnsInTriggerAction arrary\u003c\\/li\u003e\\n\\t\u003cli\u003eeg create trigger tr1 after update of c1 on t1 referencing old as oldt\u003c\\/li\u003e\\n\\t\u003cli\u003efor each row values(oldt.id);\u003cbr\\/\u003e\\n\\t *\\/\u003cbr\\/\u003e\\n\\tpublic void writeExternal(ObjectOutput out) throws IOException \u003cbr\\/\u003e\\n\\t{ \u003cbr\\/\u003e\\n\\t        \\/\\/A null value for referencedColumnsInTriggerAction means one of 2 cases\u003cbr\\/\u003e\\n\\t        \\/\\/1)We are working in soft-upgrade mode dealing with databases lower than 10.6\u003cbr\\/\u003e\\n\\t        \\/\\/  Prior to 10.6 release, we did not keep track of trigger action columns\u003cbr\\/\u003e\\n\\t        \\/\\/2)We are working with &gt;10.5 release database and the trigger action does not \u003cbr\\/\u003e\\n\\t        \\/\\/  reference any column through old\\/new transient variables\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e\\t        \\/\\/versionNumber will be -1 if referencedColumnsInTriggerAction is not null,\u003cbr\\/\u003e\\n\\t        \\/\\/meaning, we are dealing with &gt;10.5 release database and the trigger has referenced\u003cbr\\/\u003e\\n\\t        \\/\\/columns in trigger action through old\\/new transient variables.\u003cbr\\/\u003e\\n\\t        \\/\\/Otherwise, versionNumber will be the length of the arrary referencedColumns. This\u003cbr\\/\u003e\\n\\t        \\/\\/arrary holds the columns on which trigger is defined. The detailed meaning of\u003cbr\\/\u003e\\n\\t        \\/\\/these 2 arrays is described at the class level comments(towards the beginning of\u003cbr\\/\u003e\\n\\t        \\/\\/this class.\u003cbr\\/\u003e\\n\\t        int versionNumber = referencedColumnsInTriggerAction == null ? referencedColumns.length : -1; \u003c\\/p\u003e\\n\\n\u003cp\u003e\\t        if ( versionNumber &lt; 0 ) { \u003cbr\\/\u003e\\n\\t\\t        out.writeInt( versionNumber ); \u003cbr\\/\u003e\\n\\t        \\t\\/\\/If we are here, then it means that trigger action references \u003cbr\\/\u003e\\n\\t        \\t\\/\\/columns through old\\/new transient variables. \u003cbr\\/\u003e\\n\\t        \\t\\/\\/First we will check if there are any trigger columns selected\u003cbr\\/\u003e\\n\\t        \\t\\/\\/for this trigger. If yes, we will write information about \u003cbr\\/\u003e\\n\\t        \\t\\/\\/trigger columns and if not, then we will write -1 to indicate \u003cbr\\/\u003e\\n\\t        \\t\\/\\/that there are no trigger columns selected.\u003cbr\\/\u003e\\n\\t        \\t\\/\\/After that, we will write info about trigger action columns.\u003cbr\\/\u003e\\n\\t            if ( referencedColumns != null ) \u003c\\/p\u003e\\n{ \\n\\t            \\twriteReferencedColumns(out);\\n\\t            }\\n\u003cp\u003e else \u003c\\/p\u003e\\n{\\n\\t                out.writeInt(versionNumber);\\n\\t            }\\n\u003cp\u003e\\t            \\/\\/Write info about trigger action columns referenced through \u003cbr\\/\u003e\\n\\t            \\/\\/old\\/new transient variables\u003cbr\\/\u003e\\n\\t            out.writeInt(referencedColumnsInTriggerAction.length); \u003cbr\\/\u003e\\n\\t            for (int i = 0; i &lt; referencedColumnsInTriggerAction.length; i++) \u003c\\/p\u003e\\n\\t            { \\n\\t                out.writeInt(referencedColumnsInTriggerAction[i]); \\n\\t            } \\n\u003cp\u003e\\t        } else \u003c\\/p\u003e\\n{\\n\\t        \\t\\/\\/If we are here, then it means there are no references in \\n\\t        \\t\\/\\/trigger action to old\\/new transient variables. But, three are\\n\\t        \\t\\/\\/trigger columns selected for this trigger. Write info about \\n\\t        \\t\\/\\/trigger columns\\n            \\twriteReferencedColumns(out);\\n\\t        }\\n\u003cp\u003e\\t         \u003cbr\\/\u003e\\n\\t} \u003cbr\\/\u003e\\n\\tprivate void writeReferencedColumns(ObjectOutput out) throws IOException \u003cbr\\/\u003e\\n\\t{ \u003cbr\\/\u003e\\n    \\t\\/\\/trigger is defined on select columns. Write info about trigger columns\u003cbr\\/\u003e\\n        out.writeInt( referencedColumns.length ); \u003cbr\\/\u003e\\n        for (int i = 0; i &lt; referencedColumns.length; i++) \u003c\\/p\u003e\\n        { \\n            out.writeInt(referencedColumns[i]); \\n        } \\n\u003cp\u003e\\t}\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12857516_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857516_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Apr\\/10 20:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-15T20:02:14+0000\'\u003e15\\/Apr\\/10 20:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I was under the impression that I would need a new format id but since the code changes in 10.6 will still be able to read the old ReferencedColumnsDescriptor there is not a need for new format id. I have removed my format id changes from my codeline (before removing those changes, I was constantly getting no class implementation found for format id). But there is a bug in the writeExternal that I posted above. In the case of missing trigger action column references, my code was incorrectly writing the length of trigger columns twice. I have fixed that problem. The new writeExternal will look like following \\n\\n \\t\\/** \\n \\n\\t For triggers, 3 possible scenarios \\n\\t 1)referencedColumns is not null but referencedColumnsInTriggerAction \\n\\t is null - then following gets written \\n\\t referencedColumns.length \\n\\t individual elements from referencedColumns arrary \\n\\t eg create trigger tr1 after update of c1 on t1 for each row values(1); \\n\\t 2)referencedColumns is null but referencedColumnsInTriggerAction is not \\n\\t null - then following gets written \\n\\t -1 \\n\\t -1 \\n\\t referencedColumnsInTriggerAction.length \\n\\t individual elements from referencedColumnsInTriggerAction arrary \\n\\t eg create trigger tr1 after update on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n\\t 3)referencedColumns and referencedColumnsInTriggerAction are not null - \\n\\t then following gets written \\n\\t -1 \\n\\t referencedColumns.length \\n\\t individual elements from referencedColumns arrary \\n\\t referencedColumnsInTriggerAction.length \\n\\t individual elements from referencedColumnsInTriggerAction arrary \\n\\t eg create trigger tr1 after update of c1 on t1 referencing old as oldt \\n\\t for each row values(oldt.id); \\n\\t *\\/ \\n\\tpublic void writeExternal(ObjectOutput out) throws IOException  \\n\\t{  \\n\\t        \\/\\/A null value for referencedColumnsInTriggerAction means one of 2 cases \\n\\t        \\/\\/1)We are working in soft-upgrade mode dealing with databases lower than 10.6 \\n\\t        \\/\\/  Prior to 10.6 release, we did not keep track of trigger action columns \\n\\t        \\/\\/2)We are working with &gt;10.5 release database and the trigger action does not  \\n\\t        \\/\\/  reference any column through old\\/new transient variables \\n \\n\\n\\n \\t        \\/\\/versionNumber will be -1 if referencedColumnsInTriggerAction is not null, \\n\\t        \\/\\/meaning, we are dealing with &gt;10.5 release database and the trigger has referenced \\n\\t        \\/\\/columns in trigger action through old\\/new transient variables. \\n\\t        \\/\\/Otherwise, versionNumber will be the length of the arrary referencedColumns. This \\n\\t        \\/\\/arrary holds the columns on which trigger is defined. The detailed meaning of \\n\\t        \\/\\/these 2 arrays is described at the class level comments(towards the beginning of \\n\\t        \\/\\/this class. \\n\\t        int versionNumber = referencedColumnsInTriggerAction == null ? referencedColumns.length : -1;  \\n\\n \\t        if ( versionNumber &lt; 0 ) {  \\n\\t\\t        out.writeInt( versionNumber );  \\n\\t        \\t\\/\\/If we are here, then it means that trigger action references  \\n\\t        \\t\\/\\/columns through old\\/new transient variables.  \\n\\t        \\t\\/\\/First we will check if there are any trigger columns selected \\n\\t        \\t\\/\\/for this trigger. If yes, we will write information about  \\n\\t        \\t\\/\\/trigger columns and if not, then we will write -1 to indicate  \\n\\t        \\t\\/\\/that there are no trigger columns selected. \\n\\t        \\t\\/\\/After that, we will write info about trigger action columns. \\n\\t            if ( referencedColumns != null )  \\n{ \\n\\t            \\twriteReferencedColumns(out);\\n\\t            }\\n  else  \\n{\\n\\t                out.writeInt(versionNumber);\\n\\t            }\\n \\t            \\/\\/Write info about trigger action columns referenced through  \\n\\t            \\/\\/old\\/new transient variables \\n\\t            out.writeInt(referencedColumnsInTriggerAction.length);  \\n\\t            for (int i = 0; i &lt; referencedColumnsInTriggerAction.length; i++)  \\n\\t            { \\n\\t                out.writeInt(referencedColumnsInTriggerAction[i]); \\n\\t            } \\n \\t        } else  \\n{\\n\\t        \\t\\/\\/If we are here, then it means there are no references in \\n\\t        \\t\\/\\/trigger action to old\\/new transient variables. But, three are\\n\\t        \\t\\/\\/trigger columns selected for this trigger. Write info about \\n\\t        \\t\\/\\/trigger columns\\n            \\twriteReferencedColumns(out);\\n\\t        }\\n \\t          \\n\\t}  \\n\\tprivate void writeReferencedColumns(ObjectOutput out) throws IOException  \\n\\t{  \\n    \\t\\/\\/trigger is defined on select columns. Write info about trigger columns \\n        out.writeInt( referencedColumns.length );  \\n        for (int i = 0; i &lt; referencedColumns.length; i++)  \\n        { \\n            out.writeInt(referencedColumns[i]); \\n        } \\n \\t}              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12857518\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12857518&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12857518\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12857518_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857518_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Apr\\/10 20:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-15T20:04:02+0000\'\u003e15\\/Apr\\/10 20:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI have next started looking at how soft upgrade should be handled.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12857518_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857518_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Apr\\/10 20:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-15T20:04:02+0000\'\u003e15\\/Apr\\/10 20:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I have next started looking at how soft upgrade should be handled.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12857938\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12857938&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12857938\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12857938_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857938_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/10 19:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-16T19:13:05+0000\'\u003e16\\/Apr\\/10 19:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMike you suggested that we check if we are in soft upgrade mode inside writeExternal or readExternal methods but I think to find if we are in soft upgrade mode we need access to LanguageConnectionContext(I don\'t have the exact call but it probably looks something similar to following). \u003cbr\\/\u003e\\ngetLanguageConnectionContext().getDataDictionary().checkVersion(DataDictionary.DD_VERSION_CURRENT,null);\u003cbr\\/\u003e\\nTo my knowledge, readExternal and writeExternal methods do not have access to LanguageConnectionContext and DataDictionary objects.\u003c\\/p\u003e\\n\\n\u003cp\u003eBefore going further into how we might detect if we are in soft upgrade mode inside those methods, I want to go over what different possibilites we need to handle to make sure that I haven\'t missed anything.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhen dealing with any trigger, we can have following possible scenarios\u003cbr\\/\u003e\\n\\ta)trigger is getting created in newly created 10.6 db\u003cbr\\/\u003e\\n\\tb)trigger already created in the pre-10.6db before soft upgrade\u003cbr\\/\u003e\\n\\tc)trigger is getting created while in soft upgrad mode with pre-10.6 db\u003cbr\\/\u003e\\n\\td)trigger already created in the pre-10.6db before hard upgrade\u003cbr\\/\u003e\\n\\te)trigger is getting created after pre-10.6db is hard upgraded\u003c\\/p\u003e\\n\\n\u003cp\u003eNow let\'s let specific trigger scenarios for above db levels\u003cbr\\/\u003e\\n1) create trigger tr1 after update on t1 for each row values(1); \u003cbr\\/\u003e\\n        Same for all 5 levels of db listed above. Nothing gets written in ReferencedColumnsDescriptorImpl.writeExternal. Instead, FormatIdOutputStream.writeObject writes StoredFormatIds.NULL_FORMAT_ID to indicate that ReferencedColumnsDescriptorImpl object is null.\u003c\\/p\u003e\\n\\n\u003cp\u003e2) create trigger tr1 after update of c1 on t1 for each row values(1); \u003cbr\\/\u003e\\n        Same for all 5 levels of db listed above. ReferencedColumnsDescriptorImpl.writeExternal will write following\u003cbr\\/\u003e\\n\\t\\treferencedColumns.length\u003cbr\\/\u003e\\n\\t\\treferencedColumns elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003e3) create trigger tr1 after update of c1 on t1 referencing old as oldt for each row values(oldt.id); \u003cbr\\/\u003e\\n        different for the 5 possible scenarios descibed above\u003cbr\\/\u003e\\n\\ta)10.6 - ReferencedColumnsDescriptorImpl.writeExternal will write following\u003cbr\\/\u003e\\n\\t\\t-1 \u003cbr\\/\u003e\\n\\t\\treferencedColumns.length\u003cbr\\/\u003e\\n\\t\\treferencedColumns elements column positions\u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction.length\u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003e\\tb)trigger already created in the pre-10.6db before soft upgrade - We will find following \u003cbr\\/\u003e\\n\\t\\treferencedColumns.length\u003cbr\\/\u003e\\n\\t\\treferencedColumns elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003e\\tc)trigger is getting created while in soft upgrad mode with pre-10.6 db - I need to make changes in CreateTriggerNode  to detect that we are in soft upgrade mode and hence do not collect information about trigger action columns. With those changes, we will write following in ReferencedColumnsDescriptorImpl.writeExternal \u003cbr\\/\u003e\\n\\t\\treferencedColumns.length\u003cbr\\/\u003e\\n\\t\\treferencedColumns elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003e\\td)trigger already created in the pre-10.6db before hard upgrade - We will find following (unless during hard upgrade we find a way to recompile all the triggers so proper information gets created for them)\u003cbr\\/\u003e\\n\\t\\treferencedColumns.length\u003cbr\\/\u003e\\n\\t\\treferencedColumns elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003e\\te)trigger is getting created after pre-10.6db is hard upgraded - ReferencedColumnsDescriptorImpl.writeExternal \u003cbr\\/\u003e\\n\\t  will write following\u003cbr\\/\u003e\\n\\t\\t-1 \u003cbr\\/\u003e\\n\\t\\treferencedColumns.length\u003cbr\\/\u003e\\n\\t\\treferencedColumns elements column positions\u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction.length\u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003e4) create trigger tr1 after update on t1 referencing old as oldt for each row values(oldt.id); \u003cbr\\/\u003e\\n        different for the 5 possible scenarios descibed above\u003cbr\\/\u003e\\n\\ta)10.6 - ReferencedColumnsDescriptorImpl.writeExternal will write following\u003cbr\\/\u003e\\n\\t\\t-1 \u003cbr\\/\u003e\\n\\t\\t-1 \u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction.length\u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003e\\tb)trigger already created in the pre-10.6db before soft upgrade - Nothing gets written in ReferencedColumnsDescriptorImpl.writeExternal. Instead, FormatIdOutputStream.writeObject writes StoredFormatIds.NULL_FORMAT_ID to indicate that ReferencedColumnsDescriptorImpl object is null.\u003c\\/p\u003e\\n\\n\u003cp\u003e\\tc)trigger is getting created while in soft upgrad mode with pre-10.6 db - I need to make changes in CreateTriggerNode to detect that we are in soft upgrade mode and hence do not collect information about trigger action columns. With those changes, ReferencedColumnsDescriptorImpl will end up becoming null and we will write StoredFormatIds.NULL_FORMAT_ID in FormatIdOutputStream.writeObject.\u003c\\/p\u003e\\n\\n\u003cp\u003e\\td)trigger already created in the pre-10.6db before hard upgrade - - Nothing gets written in (unless during hard upgrade we find a way to recompile all the triggers so proper information gets created for them) ReferencedColumnsDescriptorImpl.writeExternal. Instead, FormatIdOutputStream.writeObject writes StoredFormatIds.NULL_FORMAT_ID to indicate that ReferencedColumnsDescriptorImpl object is null.\u003c\\/p\u003e\\n\\n\u003cp\u003e\\te)trigger is getting created after pre-10.6db is hard upgraded - ReferencedColumnsDescriptorImpl.writeExternal \u003cbr\\/\u003e\\n\\t  will write following\u003cbr\\/\u003e\\n\\t\\t-1 \u003cbr\\/\u003e\\n\\t\\t-1 \u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction.length\u003cbr\\/\u003e\\n\\t\\treferencedColumnsInTriggerAction elements column positions\u003c\\/p\u003e\\n\\n\u003cp\u003eMy changes will decide on what columns to read from the trigger table based on this saved information. Which means for cases 3b), 3c), 3d), 4b), 4c) and 4d), we will incorrectly not read columns involved in trigger action thus causing problems. \u003c\\/p\u003e\\n\\n\u003cp\u003eFor soft upgrade problem scenarios, 3b), 3c), 4b) and 4c), we can probably check that if we are in soft upgrade mode and if there are triggers involved, then read all the columns from the trigger table (just like what gets done today in the trunk and prior releases), no matter if they are all needed or not. This logic though will also require us to read all the columns from trigger table for case 2) above in soft upgrade mode. So, basically, we will read more columns that probably needed but nothing will be broken. Also, we do not anticipate users doing ton of work while in soft-upgrade mode.\u003c\\/p\u003e\\n\\n\u003cp\u003eBut that still leaves issues with hard upgrade scenarios 3d) and 4d). One way to resolve the problems with 3d) and 4d) would be that during hard upgrade, find a way to recompile all the triggers so proper information gets created for them. \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12857938_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857938_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/10 19:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-16T19:13:05+0000\'\u003e16\\/Apr\\/10 19:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Mike you suggested that we check if we are in soft upgrade mode inside writeExternal or readExternal methods but I think to find if we are in soft upgrade mode we need access to LanguageConnectionContext(I don\'t have the exact call but it probably looks something similar to following).  \\ngetLanguageConnectionContext().getDataDictionary().checkVersion(DataDictionary.DD_VERSION_CURRENT,null); \\nTo my knowledge, readExternal and writeExternal methods do not have access to LanguageConnectionContext and DataDictionary objects. \\n\\n Before going further into how we might detect if we are in soft upgrade mode inside those methods, I want to go over what different possibilites we need to handle to make sure that I haven\'t missed anything. \\n\\n When dealing with any trigger, we can have following possible scenarios \\n\\ta)trigger is getting created in newly created 10.6 db \\n\\tb)trigger already created in the pre-10.6db before soft upgrade \\n\\tc)trigger is getting created while in soft upgrad mode with pre-10.6 db \\n\\td)trigger already created in the pre-10.6db before hard upgrade \\n\\te)trigger is getting created after pre-10.6db is hard upgraded \\n\\n Now let\'s let specific trigger scenarios for above db levels \\n1) create trigger tr1 after update on t1 for each row values(1);  \\n        Same for all 5 levels of db listed above. Nothing gets written in ReferencedColumnsDescriptorImpl.writeExternal. Instead, FormatIdOutputStream.writeObject writes StoredFormatIds.NULL_FORMAT_ID to indicate that ReferencedColumnsDescriptorImpl object is null. \\n\\n 2) create trigger tr1 after update of c1 on t1 for each row values(1);  \\n        Same for all 5 levels of db listed above. ReferencedColumnsDescriptorImpl.writeExternal will write following \\n\\t\\treferencedColumns.length \\n\\t\\treferencedColumns elements column positions \\n\\n 3) create trigger tr1 after update of c1 on t1 referencing old as oldt for each row values(oldt.id);  \\n        different for the 5 possible scenarios descibed above \\n\\ta)10.6 - ReferencedColumnsDescriptorImpl.writeExternal will write following \\n\\t\\t-1  \\n\\t\\treferencedColumns.length \\n\\t\\treferencedColumns elements column positions \\n\\t\\treferencedColumnsInTriggerAction.length \\n\\t\\treferencedColumnsInTriggerAction elements column positions \\n\\n \\tb)trigger already created in the pre-10.6db before soft upgrade - We will find following  \\n\\t\\treferencedColumns.length \\n\\t\\treferencedColumns elements column positions \\n\\n \\tc)trigger is getting created while in soft upgrad mode with pre-10.6 db - I need to make changes in CreateTriggerNode  to detect that we are in soft upgrade mode and hence do not collect information about trigger action columns. With those changes, we will write following in ReferencedColumnsDescriptorImpl.writeExternal  \\n\\t\\treferencedColumns.length \\n\\t\\treferencedColumns elements column positions \\n\\n \\td)trigger already created in the pre-10.6db before hard upgrade - We will find following (unless during hard upgrade we find a way to recompile all the triggers so proper information gets created for them) \\n\\t\\treferencedColumns.length \\n\\t\\treferencedColumns elements column positions \\n\\n \\te)trigger is getting created after pre-10.6db is hard upgraded - ReferencedColumnsDescriptorImpl.writeExternal  \\n\\t  will write following \\n\\t\\t-1  \\n\\t\\treferencedColumns.length \\n\\t\\treferencedColumns elements column positions \\n\\t\\treferencedColumnsInTriggerAction.length \\n\\t\\treferencedColumnsInTriggerAction elements column positions \\n\\n 4) create trigger tr1 after update on t1 referencing old as oldt for each row values(oldt.id);  \\n        different for the 5 possible scenarios descibed above \\n\\ta)10.6 - ReferencedColumnsDescriptorImpl.writeExternal will write following \\n\\t\\t-1  \\n\\t\\t-1  \\n\\t\\treferencedColumnsInTriggerAction.length \\n\\t\\treferencedColumnsInTriggerAction elements column positions \\n\\n \\tb)trigger already created in the pre-10.6db before soft upgrade - Nothing gets written in ReferencedColumnsDescriptorImpl.writeExternal. Instead, FormatIdOutputStream.writeObject writes StoredFormatIds.NULL_FORMAT_ID to indicate that ReferencedColumnsDescriptorImpl object is null. \\n\\n \\tc)trigger is getting created while in soft upgrad mode with pre-10.6 db - I need to make changes in CreateTriggerNode to detect that we are in soft upgrade mode and hence do not collect information about trigger action columns. With those changes, ReferencedColumnsDescriptorImpl will end up becoming null and we will write StoredFormatIds.NULL_FORMAT_ID in FormatIdOutputStream.writeObject. \\n\\n \\td)trigger already created in the pre-10.6db before hard upgrade - - Nothing gets written in (unless during hard upgrade we find a way to recompile all the triggers so proper information gets created for them) ReferencedColumnsDescriptorImpl.writeExternal. Instead, FormatIdOutputStream.writeObject writes StoredFormatIds.NULL_FORMAT_ID to indicate that ReferencedColumnsDescriptorImpl object is null. \\n\\n \\te)trigger is getting created after pre-10.6db is hard upgraded - ReferencedColumnsDescriptorImpl.writeExternal  \\n\\t  will write following \\n\\t\\t-1  \\n\\t\\t-1  \\n\\t\\treferencedColumnsInTriggerAction.length \\n\\t\\treferencedColumnsInTriggerAction elements column positions \\n\\n My changes will decide on what columns to read from the trigger table based on this saved information. Which means for cases 3b), 3c), 3d), 4b), 4c) and 4d), we will incorrectly not read columns involved in trigger action thus causing problems.  \\n\\n For soft upgrade problem scenarios, 3b), 3c), 4b) and 4c), we can probably check that if we are in soft upgrade mode and if there are triggers involved, then read all the columns from the trigger table (just like what gets done today in the trunk and prior releases), no matter if they are all needed or not. This logic though will also require us to read all the columns from trigger table for case 2) above in soft upgrade mode. So, basically, we will read more columns that probably needed but nothing will be broken. Also, we do not anticipate users doing ton of work while in soft-upgrade mode. \\n\\n But that still leaves issues with hard upgrade scenarios 3d) and 4d). One way to resolve the problems with 3d) and 4d) would be that during hard upgrade, find a way to recompile all the triggers so proper information gets created for them.               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12857951\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12857951&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12857951\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12857951_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857951_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/10 19:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-16T19:44:40+0000\'\u003e16\\/Apr\\/10 19:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI recommend that the (de)serialization logic not depend on context outside the object. That is because, with 10.6, objects can be serialized across the network and sent to clients for retrieval via ResultSet.getObject(). Serialization across the network is supposed to work if both the client and the server are 10.6 code. Bad things will happen if the client tries to deserialize one of these objects and can\'t find a LanguageConnectionContext.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt ought to be possible to design serialization so that it is completely self-contained.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12857951_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12857951_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/10 19:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-16T19:44:40+0000\'\u003e16\\/Apr\\/10 19:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I recommend that the (de)serialization logic not depend on context outside the object. That is because, with 10.6, objects can be serialized across the network and sent to clients for retrieval via ResultSet.getObject(). Serialization across the network is supposed to work if both the client and the server are 10.6 code. Bad things will happen if the client tries to deserialize one of these objects and can\'t find a LanguageConnectionContext. \\n\\n It ought to be possible to design serialization so that it is completely self-contained.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12858389\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12858389&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12858389\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12858389_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12858389_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Apr\\/10 06:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-19T06:03:40+0000\'\u003e19\\/Apr\\/10 06:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI need to do little more experimentation but I think, after all,  case 4 create trigger tr1 after update on t1 referencing old as oldt for each row values(oldt.id); might not be an issue because if no trigger columns are found, Derby decides to read all the columns no matter what columns are referenced in trigger action through old\\/new transition variable (this happens in impl.sql.compile.UpdateNod.getUpdateReadMap()) and hence even though different things get written for the 5 levels discussed below for case 4, we might be ok. Will post soon after I have done some more testing for case 4)\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12858389_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12858389_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Apr\\/10 06:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-19T06:03:40+0000\'\u003e19\\/Apr\\/10 06:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I need to do little more experimentation but I think, after all,  case 4 create trigger tr1 after update on t1 referencing old as oldt for each row values(oldt.id); might not be an issue because if no trigger columns are found, Derby decides to read all the columns no matter what columns are referenced in trigger action through old\\/new transition variable (this happens in impl.sql.compile.UpdateNod.getUpdateReadMap()) and hence even though different things get written for the 5 levels discussed below for case 4, we might be ok. Will post soon after I have done some more testing for case 4)              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12858671\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12858671&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12858671\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12858671_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12858671_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Apr\\/10 20:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-19T20:35:07+0000\'\u003e19\\/Apr\\/10 20:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI ran the tests for trigger where there are no trigger columns specified but there are columns referenced in trigger action through old\\/new transition variables which is the case 4) above and we should not run into any issues with that scenario because Derby decides to read all the columns from the trigger table if there are not trigger columns specified for it. So, no matter which one of the following scenario has been used to create the trigger, of kind 4) case 10.6 code will work fine since Derby is going to read all the columns create trigger tr1 after update on t1 referencing old as oldt for each row values(oldt.id); \u003cbr\\/\u003e\\na)trigger is getting created in newly created 10.6 db \u003cbr\\/\u003e\\nb)trigger already created in the pre-10.6db before soft upgrade \u003cbr\\/\u003e\\nc)trigger is getting created while in soft upgrad mode with pre-10.6 db \u003cbr\\/\u003e\\nd)trigger already created in the pre-10.6db before hard upgrade \u003cbr\\/\u003e\\ne)trigger is getting created after pre-10.6db is hard upgraded \u003c\\/p\u003e\\n\\n\\n\u003cp\u003eSo, the only issue we need to worry about is case 3), which is create trigger tr1 after update of c1 on t1 referencing old as oldt for each row values(oldt.id); \u003c\\/p\u003e\\n\\n\u003cp\u003eI think we can solve the soft-upgrade problems by just having Derby read all the columns no matter what(or none) trigger columns are specified. I think it is an acceptable solution because user probably would not be running their databases in soft-upgrade mode for a long time. Let me know what your thoughts might be.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe only issue left then is 3d), triggers which were created prior to 10.6 and that database has been hard-upgrade. In such hard upgraded databases, we will run into not running enough columns for trigger case 3)create trigger tr1 after update of c1 on t1 referencing old as oldt for each row values(oldt.id); One way to resolve such trigger cases would be at upgrade time, invalidate the trigger so that get recompiled before they are used next in the hard-upgraded database. \u003c\\/p\u003e\\n\\n\u003cp\u003eAny thoughts\\/feedback greatly appreciated.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12858671_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12858671_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Apr\\/10 20:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-19T20:35:07+0000\'\u003e19\\/Apr\\/10 20:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I ran the tests for trigger where there are no trigger columns specified but there are columns referenced in trigger action through old\\/new transition variables which is the case 4) above and we should not run into any issues with that scenario because Derby decides to read all the columns from the trigger table if there are not trigger columns specified for it. So, no matter which one of the following scenario has been used to create the trigger, of kind 4) case 10.6 code will work fine since Derby is going to read all the columns create trigger tr1 after update on t1 referencing old as oldt for each row values(oldt.id);  \\na)trigger is getting created in newly created 10.6 db  \\nb)trigger already created in the pre-10.6db before soft upgrade  \\nc)trigger is getting created while in soft upgrad mode with pre-10.6 db  \\nd)trigger already created in the pre-10.6db before hard upgrade  \\ne)trigger is getting created after pre-10.6db is hard upgraded  \\n\\n\\n So, the only issue we need to worry about is case 3), which is create trigger tr1 after update of c1 on t1 referencing old as oldt for each row values(oldt.id);  \\n\\n I think we can solve the soft-upgrade problems by just having Derby read all the columns no matter what(or none) trigger columns are specified. I think it is an acceptable solution because user probably would not be running their databases in soft-upgrade mode for a long time. Let me know what your thoughts might be. \\n\\n The only issue left then is 3d), triggers which were created prior to 10.6 and that database has been hard-upgrade. In such hard upgraded databases, we will run into not running enough columns for trigger case 3)create trigger tr1 after update of c1 on t1 referencing old as oldt for each row values(oldt.id); One way to resolve such trigger cases would be at upgrade time, invalidate the trigger so that get recompiled before they are used next in the hard-upgraded database.  \\n\\n Any thoughts\\/feedback greatly appreciated.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12858704\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12858704&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12858704\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12858704_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12858704_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Apr\\/10 22:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-19T22:15:16+0000\'\u003e19\\/Apr\\/10 22:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eReadExternal should never need to access anything about \\\"soft\\/hard upgrade\\\".  The state of the object is defined by whatever it is reading from disk.  How to build the object is all determined by the first int you read from disk.  \u003c\\/p\u003e\\n\\n\u003cp\u003eAfter thinking about it I agree there should not be \\\"soft\\/hard upgrade\\\" references in the writeExternal.  Somehow the object itself should know whether it should write the old or\u003cbr\\/\u003e\\nnew format out.  I think you may be describing some tricky ways to do this.  I think if I were\u003cbr\\/\u003e\\ndoing this I would just add a new field to the object, something like version_id.  If version_id = 0 then write old format, if version_id=1 then write new version.  Read external will need to change to set this appropriately.  And the code that is called by create trigger will also need to change to set this correctly based on database version, this probably is in the constructor somewhere.\u003c\\/p\u003e\\n\\n\u003cp\u003eDo add more comments to the read and write external describing better the old and new formats.  What you are proposing is a little tricky, so best to have some block of code that describes \\\"version 0\\\" format and \\\"version 1\\\" format.  \u003c\\/p\u003e\\n\\n\u003cp\u003eIf you get this right from bottom up then I think all the hard\\/soft upgrade stuff will just work correctly.  I would leave how you get the old format converted to new format as a \u003cbr\\/\u003e\\nlast step, as you need to make sure old format in new db\'s yields correct results (while maybe not optimized results).  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12858704_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12858704_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'19\\/Apr\\/10 22:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-04-19T22:15:16+0000\'\u003e19\\/Apr\\/10 22:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    ReadExternal should never need to access anything about \\\"soft\\/hard upgrade\\\".  The state of the object is defined by whatever it is reading from disk.  How to build the object is all determined by the first int you read from disk.   \\n\\n After thinking about it I agree there should not be \\\"soft\\/hard upgrade\\\" references in the writeExternal.  Somehow the object itself should know whether it should write the old or \\nnew format out.  I think you may be describing some tricky ways to do this.  I think if I were \\ndoing this I would just add a new field to the object, something like version_id.  If version_id = 0 then write old format, if version_id=1 then write new version.  Read external will need to change to set this appropriately.  And the code that is called by create trigger will also need to change to set this correctly based on database version, this probably is in the constructor somewhere. \\n\\n Do add more comments to the read and write external describing better the old and new formats.  What you are proposing is a little tricky, so best to have some block of code that describes \\\"version 0\\\" format and \\\"version 1\\\" format.   \\n\\n If you get this right from bottom up then I think all the hard\\/soft upgrade stuff will just work correctly.  I would leave how you get the old format converted to new format as a  \\nlast step, as you need to make sure old format in new db\'s yields correct results (while maybe not optimized results).                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12872309\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12872309&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12872309\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12872309_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12872309_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/May\\/10 18:08\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-27T18:08:24+0000\'\u003e27\\/May\\/10 18:08\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eRick, I will post the patch soon for this jira. Thanks for your comments on earlier patch. I have taken care of all of them except 2.\u003c\\/p\u003e\\n\\n\u003cp\u003eOne of the comment was as follows\u003cbr\\/\u003e\\n***************************************************************\u003cbr\\/\u003e\\nCreateTriggerNode: \u003cbr\\/\u003e\\no In the comments there are several references to the columns mentioned in the REFERENCING clause. I think the meaning would be a little more clear and specific if these comments talked about the columns mentioned in the trigger action. \u003c\\/p\u003e\\n\\n\u003cp\u003eThe reason I am not directly using trigger action columns is because this deals only the trigger action columns available through the REFERENCING clause. It does not include the columns from the objects in the trigger action. To differentiate between these 2 different types of column possibilites in trigger action, I think it is better to say columns available through REFERNCING clause. I may be mistaken. Would like to know if you agree with my reasoning.\u003cbr\\/\u003e\\n***************************************************************\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eThe second comment was as follows\u003cbr\\/\u003e\\n***************************************************************\u003cbr\\/\u003e\\no This patch changes the serialized form of TriggerDescriptor. This is ok as long as we can convince ourselves that these objects are never persisted. These objects do live in the ConstantActions of query plans for INSERT, UPDATE, and DELETE statements. Can we convince ourselves that the compiled forms of INSERT, UPDATE, and DELETE statements never persist across soft-upgrades? \u003c\\/p\u003e\\n\\n\u003cp\u003eI don\'t completely comprehend this comment. When working with pre-10.7 dbs, my changes will not generate any information about trigger action columns available through REFERENCING clause, thus marking referencedColsInTriggerAction in TriggerDescriptor null. But I do have new changes in TriggerDescriptor\'s readExternal and writeExternal. \u003cbr\\/\u003e\\nWriteExternal will write 0 if trigger action columns are null\u003cbr\\/\u003e\\n\\t\\tif (referencedColsInTriggerAction == null)\u003c\\/p\u003e\\n\\t\\t{\\n\\t\\t\\tout.writeInt(0);\\n\\t\\t}\\n\u003cp\u003e\\t\\telse\u003cbr\\/\u003e\\n\\t\\t{ ... write about trigger action columns\u003c\\/p\u003e\\n\\n\u003cp\u003eReadExternal will check if there is a 0 for trigger action columns and if not found, will read trigger action columns info\u003cbr\\/\u003e\\n\\t\\tlength = in.readInt();\u003cbr\\/\u003e\\n\\t\\tif (length != 0)\u003cbr\\/\u003e\\n\\t\\t{\u003cbr\\/\u003e\\n\\t\\t\\treferencedColsInTriggerAction = new int\u003cspan class=\\\"error\\\"\u003e&#91;length&#93;\u003c\\/span\u003e;\u003cbr\\/\u003e\\n\\t\\t\\tfor (int i = 0; i &lt; length; i++)\u003c\\/p\u003e\\n\\t\\t\\t{\\n\\t\\t\\t\\treferencedColsInTriggerAction[i] = in.readInt();\\n\\t\\t\\t}\\n\u003cp\u003e\\t\\t}\u003c\\/p\u003e\\n\\n\u003cp\u003eMay be I should check if I am dealing with pre-10.7 dbs, then I should not write 0 for trigger action columns and do the reverse for readExternal, meaning if dealing with pre-10.7dbs, do not look for any information about trigger action columns. Is that what you were bringing up in your comment? Thanks\u003cbr\\/\u003e\\n***************************************************************\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12872309_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12872309_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/May\\/10 18:08\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-27T18:08:24+0000\'\u003e27\\/May\\/10 18:08\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Rick, I will post the patch soon for this jira. Thanks for your comments on earlier patch. I have taken care of all of them except 2. \\n\\n One of the comment was as follows \\n*************************************************************** \\nCreateTriggerNode:  \\no In the comments there are several references to the columns mentioned in the REFERENCING clause. I think the meaning would be a little more clear and specific if these comments talked about the columns mentioned in the trigger action.  \\n\\n The reason I am not directly using trigger action columns is because this deals only the trigger action columns available through the REFERENCING clause. It does not include the columns from the objects in the trigger action. To differentiate between these 2 different types of column possibilites in trigger action, I think it is better to say columns available through REFERNCING clause. I may be mistaken. Would like to know if you agree with my reasoning. \\n*************************************************************** \\n\\n\\n The second comment was as follows \\n*************************************************************** \\no This patch changes the serialized form of TriggerDescriptor. This is ok as long as we can convince ourselves that these objects are never persisted. These objects do live in the ConstantActions of query plans for INSERT, UPDATE, and DELETE statements. Can we convince ourselves that the compiled forms of INSERT, UPDATE, and DELETE statements never persist across soft-upgrades?  \\n\\n I don\'t completely comprehend this comment. When working with pre-10.7 dbs, my changes will not generate any information about trigger action columns available through REFERENCING clause, thus marking referencedColsInTriggerAction in TriggerDescriptor null. But I do have new changes in TriggerDescriptor\'s readExternal and writeExternal.  \\nWriteExternal will write 0 if trigger action columns are null \\n\\t\\tif (referencedColsInTriggerAction == null) \\n\\t\\t{\\n\\t\\t\\tout.writeInt(0);\\n\\t\\t}\\n \\t\\telse \\n\\t\\t{ ... write about trigger action columns \\n\\n ReadExternal will check if there is a 0 for trigger action columns and if not found, will read trigger action columns info \\n\\t\\tlength = in.readInt(); \\n\\t\\tif (length != 0) \\n\\t\\t{ \\n\\t\\t\\treferencedColsInTriggerAction = new int &#91;length&#93; ; \\n\\t\\t\\tfor (int i = 0; i &lt; length; i++) \\n\\t\\t\\t{\\n\\t\\t\\t\\treferencedColsInTriggerAction[i] = in.readInt();\\n\\t\\t\\t}\\n \\t\\t} \\n\\n May be I should check if I am dealing with pre-10.7 dbs, then I should not write 0 for trigger action columns and do the reverse for readExternal, meaning if dealing with pre-10.7dbs, do not look for any information about trigger action columns. Is that what you were bringing up in your comment? Thanks \\n***************************************************************              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12872333\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12872333&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12872333\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12872333_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12872333_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/May\\/10 19:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-27T19:26:40+0000\'\u003e27\\/May\\/10 19:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHi Mamta,\u003c\\/p\u003e\\n\\n\u003cp\u003eConcerning the first comment, let\'s just wait for the new patch. If the comments still puzzle me, I\'ll let you know.\u003c\\/p\u003e\\n\\n\u003cp\u003eConcerning the second comment: If the new serialized form is only used in new databases and hard-upgraded databases, then there should be no problem. There should be no problem if new trigger descriptors in soft-upgraded databases have the same serialized form as 10.6 trigger descriptors. This is the situation you want to avoid:\u003c\\/p\u003e\\n\\n\u003cp\u003e1) You create a new trigger in a soft-upgraded database.\u003c\\/p\u003e\\n\\n\u003cp\u003e2) Then you soft-downgrade to 10.6.\u003c\\/p\u003e\\n\\n\u003cp\u003e3) Because the serialized form has changed, the 10.6 server raises a deserialization error (or worse) every time the new trigger fires.\u003c\\/p\u003e\\n\\n\u003cp\u003eNote that, because this patch didn\'t make it into 10.6, there is now another serialization issue which we have to deal with:\u003c\\/p\u003e\\n\\n\u003cp\u003eIn 10.5 and earlier, the objects stored in system tables were converted into strings when they were selected by clients. That is, a 10.5 or earlier server returned ReferencedColumnDescriptorImpl.toString() for the following query:\u003c\\/p\u003e\\n\\n\u003cp\u003e   select referencedcolumns from sys.systriggers\u003c\\/p\u003e\\n\\n\u003cp\u003eIn 10.6, the above query uses the writeExternal()\\/readExternal() machinery to send the ReferencedColumnDescriptor object if both the client and the server are at 10.6 or higher. That query will choke a 10.6 client when it hits a trigger with a referencing clause that is created in a 10.7 database. For this sort of problem, the Formatable machinery calls for introducing a new formatable id. In the end, this may make your serialization logic easier to read but it may not improve the situation for 10.6 clients. I think that the following will work:\u003c\\/p\u003e\\n\\n\u003cp\u003eIntroduce a new subclass of ReferencedColumnDescriptorImpl called ReferencedColumnDescriptorImpl_7_0. That class will have its own formatable id and will serialize itself differently than the old ReferencedColumnDescriptorImpl. If one of these new classes is sent to a 10.6 client, then you will get an error looking up the formatable id. I don\'t know if that error will be any better or worse. We may want to add a release note saying that we don\'t handle this edge case gracefully.\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eHope this answers your questions.\u003c\\/p\u003e\\n\\n\u003cp\u003eRegards,\u003cbr\\/\u003e\\n-Rick\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12872333_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12872333_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/May\\/10 19:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-27T19:26:40+0000\'\u003e27\\/May\\/10 19:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Hi Mamta, \\n\\n Concerning the first comment, let\'s just wait for the new patch. If the comments still puzzle me, I\'ll let you know. \\n\\n Concerning the second comment: If the new serialized form is only used in new databases and hard-upgraded databases, then there should be no problem. There should be no problem if new trigger descriptors in soft-upgraded databases have the same serialized form as 10.6 trigger descriptors. This is the situation you want to avoid: \\n\\n 1) You create a new trigger in a soft-upgraded database. \\n\\n 2) Then you soft-downgrade to 10.6. \\n\\n 3) Because the serialized form has changed, the 10.6 server raises a deserialization error (or worse) every time the new trigger fires. \\n\\n Note that, because this patch didn\'t make it into 10.6, there is now another serialization issue which we have to deal with: \\n\\n In 10.5 and earlier, the objects stored in system tables were converted into strings when they were selected by clients. That is, a 10.5 or earlier server returned ReferencedColumnDescriptorImpl.toString() for the following query: \\n\\n    select referencedcolumns from sys.systriggers \\n\\n In 10.6, the above query uses the writeExternal()\\/readExternal() machinery to send the ReferencedColumnDescriptor object if both the client and the server are at 10.6 or higher. That query will choke a 10.6 client when it hits a trigger with a referencing clause that is created in a 10.7 database. For this sort of problem, the Formatable machinery calls for introducing a new formatable id. In the end, this may make your serialization logic easier to read but it may not improve the situation for 10.6 clients. I think that the following will work: \\n\\n Introduce a new subclass of ReferencedColumnDescriptorImpl called ReferencedColumnDescriptorImpl_7_0. That class will have its own formatable id and will serialize itself differently than the old ReferencedColumnDescriptorImpl. If one of these new classes is sent to a 10.6 client, then you will get an error looking up the formatable id. I don\'t know if that error will be any better or worse. We may want to add a release note saying that we don\'t handle this edge case gracefully. \\n\\n\\n Hope this answers your questions. \\n\\n Regards, \\n-Rick              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12872348\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12872348&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12872348\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12872348_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12872348_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/May\\/10 20:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-27T20:20:50+0000\'\u003e27\\/May\\/10 20:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttaching patch derby1482_patch3_diff.txt which along with the core work also takes care of upgrade. Please share your comments on the patch.\u003c\\/p\u003e\\n\\n\u003cp\u003eHere are the patch comments\u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-1482\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-1482\\\"\u003e\u003cdel\u003eDERBY-1482\u003c\\/del\u003e\u003c\\/a\u003e will improve on Derby\'s behavior about which columns should be read in when a trigger fires. The current behavior of Derby reads all the columns from the trigger table whether or not all the columns are needed for trigger execution. This can be troublesome when the trigger table has large data LOB columns causing Derby to run out of memory. With this patch, Derby will narrow down cases where it should be sufficient to read only a subset of columns from the trigger table.\u003cbr\\/\u003e\\neg of such a trigger would be the trigger below which has both trigger columns and trigger action columns through old\\/new transition variables\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eCREATE TRIGGER tr1 AFTER UPDATE OF c12 ON t1\u003c\\/li\u003e\\n\\t\u003cli\u003eREFERENCING OLD AS oldt NEW AS newt\u003c\\/li\u003e\\n\\t\u003cli\u003eFOR EACH ROW UPDATE t2 SET c24=oldt.j;\u003cbr\\/\u003e\\nFor a trigger like above, Derby knows exactly which columns are needed from the trigger table during trigger execution. A note of those columns to read will be made in SYSTRIGGERS table.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eThe general rules for what columns will be read in during a trigger execution will be as follows\u003cbr\\/\u003e\\nRule1)If trigger column information is null, then Derby will read all the columns from trigger table into memory irrespective of whether there is any trigger action column information. eg triggers\u003cbr\\/\u003e\\n            create trigger tr1 after update on t1 for each row values(1); \u003cbr\\/\u003e\\n            create trigger tr1 after update on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2); \u003c\\/p\u003e\\n\\n\u003cp\u003eRule2)If trigger column information is available but no trigger action column information is found and no REFERENCES clause is used for the trigger, then read all the columns identified by the trigger column. eg trigger\u003cbr\\/\u003e\\n            create trigger tr1 after update of c1 on t1 for each row values(1); \u003c\\/p\u003e\\n\\n\u003cp\u003eRule3)If trigger column information and trigger action column information both are not null, then only those columns will be read into memory. This will be a trigger created in 10.7 or higher level db. Because prior to that we did not collect trigger action column informatoin. eg\u003cbr\\/\u003e\\n            create trigger tr1 after update of c1 on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2); \u003c\\/p\u003e\\n\\n\u003cp\u003eRule4)If trigger column information is available and no trigger action column information is found but REFERENCES clause is used for the trigger, then we will read all the columns from the trigger table. I believe that this will cover soft-upgrade and hard-\u003cbr\\/\u003e\\nupgrade scenario during trigger execution of triggers created pre-10.7. This will prevent us from having special logic of soft-upgrade. \u003cbr\\/\u003e\\nAdditionally, this logic makes invalidation of existing triggers unnecessary during hard-upgrade. The pre-10.7 created triggers will work just fine even though for some triggers, they would have trigger action columns missing. A user can choose to drop and recreate such triggers to take advantage of \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-1482\\\" title=\\\"Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced\\/accessed.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-1482\\\"\u003e\u003cdel\u003eDERBY-1482\u003c\\/del\u003e\u003c\\/a\u003e work which will avoid unnecssary column reads during trigger execution if the trigger action column information was available along with trigger column info. eg trigger created prior to 10.7\u003cbr\\/\u003e\\n            create trigger tr1 after update of c1 on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2);\u003cbr\\/\u003e\\nThe Rule4) is there to cover triggers created with pre-10,7 releases but now that database has been hard\\/soft-upgraded to 10.7\u003cbr\\/\u003e\\nor higher version. Prior to 10.7, we did not collect any information about trigger action columns. So, both of the 2 kinds of triggers shown above prior to 10.7 will not have any trigger action column info on them in SYSTRIGGERS table. Without our last rule about what columns should be read in, we will run into problems for soft-upgrade or hard-upgrade causing us to not read all the required columns.The trigger eg above if created prior to 10.7 mode will have trigger column and REFERENCING clause set in SYSTRIGGERS but will not have trigger action column info even \\tthough there are columns referenced in trigger action through old\\/new transition variables. This same trigger if created in 10.7 or higher \\tversion will have trigger column, REFERENCING clause and trigger action column set for it in SYSTRIGGERS. To handle this on a hard\\/soft-upgraded db, we will just choose to read all the columns from trigger table if SYSTRIGGER shows trigger column and REFERENCING clause for a trigger but no trigger action column. \u003c\\/p\u003e\\n\\n\u003cp\u003eRule5)The only place we will need special code for soft-upgrade is during trigger creation. If we are in soft-upgrade mode, we want to make sure that we do not save information about trigger action columns in SYSTRIGGERS because the releases prior to 10.7 do not understand trigger action column information.\u003c\\/p\u003e\\n\\n\\n\\n\u003cp\u003eLet\'s see with examples, when the rules described above kick in\u003cbr\\/\u003e\\nConsider following 4 trigger scenarios \u003cbr\\/\u003e\\n            1) create trigger tr1 after update on t1 for each row values(1); \u003cbr\\/\u003e\\n            2) create trigger tr1 after update on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2); \u003cbr\\/\u003e\\n            3) create trigger tr1 after update of c1 on t1 for each row values(1); \u003cbr\\/\u003e\\n            4) create trigger tr1 after update of c1 on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2); \u003c\\/p\u003e\\n\\n\u003cp\u003eAnd these different triggers could be created in following various combination of soft-upgrade, hard-upgrade, brand new db\u003cbr\\/\u003e\\n\\ta)trigger is getting created in newly created 10.7 db \u003cbr\\/\u003e\\n\\tb)trigger already created in the pre-10.7db before soft upgrade \u003cbr\\/\u003e\\n\\tc)trigger is getting created while in soft upgrad mode with pre-10.7 db \u003cbr\\/\u003e\\n\\td)trigger already created in the pre-10.7db before hard upgrade \u003cbr\\/\u003e\\n\\te)trigger is getting created after pre-10.7db is hard upgraded \u003c\\/p\u003e\\n\\n\u003cp\u003eAll the db variations for trigger scenario 1 will be covered by Rule1).\u003cbr\\/\u003e\\nAll the db variations for trigger scenario 2 will be covered by Rule1)\u003cbr\\/\u003e\\nAll the db variations for trigger scenario 3 will be covered by Rule2).\u003cbr\\/\u003e\\nFor trigger scenario 4, different rules will apply depending on db variations\u003cbr\\/\u003e\\n\\tFor 4a), Rule3) will apply\u003cbr\\/\u003e\\n\\tFor 4b), Rule4) will apply\u003cbr\\/\u003e\\n\\tFor 4c), Rule5) will apply\u003cbr\\/\u003e\\n\\tFor 4d), Rule4) will apply\u003cbr\\/\u003e\\n\\tFor 4e), Rule3) will apply\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12872348_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12872348_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/May\\/10 20:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-27T20:20:50+0000\'\u003e27\\/May\\/10 20:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attaching patch derby1482_patch3_diff.txt which along with the core work also takes care of upgrade. Please share your comments on the patch. \\n\\n Here are the patch comments \\n  DERBY-1482   will improve on Derby\'s behavior about which columns should be read in when a trigger fires. The current behavior of Derby reads all the columns from the trigger table whether or not all the columns are needed for trigger execution. This can be troublesome when the trigger table has large data LOB columns causing Derby to run out of memory. With this patch, Derby will narrow down cases where it should be sufficient to read only a subset of columns from the trigger table. \\neg of such a trigger would be the trigger below which has both trigger columns and trigger action columns through old\\/new transition variables \\n \\n\\t CREATE TRIGGER tr1 AFTER UPDATE OF c12 ON t1 \\n\\t REFERENCING OLD AS oldt NEW AS newt \\n\\t FOR EACH ROW UPDATE t2 SET c24=oldt.j; \\nFor a trigger like above, Derby knows exactly which columns are needed from the trigger table during trigger execution. A note of those columns to read will be made in SYSTRIGGERS table. \\n \\n\\n\\n The general rules for what columns will be read in during a trigger execution will be as follows \\nRule1)If trigger column information is null, then Derby will read all the columns from trigger table into memory irrespective of whether there is any trigger action column information. eg triggers \\n            create trigger tr1 after update on t1 for each row values(1);  \\n            create trigger tr1 after update on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2);  \\n\\n Rule2)If trigger column information is available but no trigger action column information is found and no REFERENCES clause is used for the trigger, then read all the columns identified by the trigger column. eg trigger \\n            create trigger tr1 after update of c1 on t1 for each row values(1);  \\n\\n Rule3)If trigger column information and trigger action column information both are not null, then only those columns will be read into memory. This will be a trigger created in 10.7 or higher level db. Because prior to that we did not collect trigger action column informatoin. eg \\n            create trigger tr1 after update of c1 on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2);  \\n\\n Rule4)If trigger column information is available and no trigger action column information is found but REFERENCES clause is used for the trigger, then we will read all the columns from the trigger table. I believe that this will cover soft-upgrade and hard- \\nupgrade scenario during trigger execution of triggers created pre-10.7. This will prevent us from having special logic of soft-upgrade.  \\nAdditionally, this logic makes invalidation of existing triggers unnecessary during hard-upgrade. The pre-10.7 created triggers will work just fine even though for some triggers, they would have trigger action columns missing. A user can choose to drop and recreate such triggers to take advantage of   DERBY-1482   work which will avoid unnecssary column reads during trigger execution if the trigger action column information was available along with trigger column info. eg trigger created prior to 10.7 \\n            create trigger tr1 after update of c1 on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2); \\nThe Rule4) is there to cover triggers created with pre-10,7 releases but now that database has been hard\\/soft-upgraded to 10.7 \\nor higher version. Prior to 10.7, we did not collect any information about trigger action columns. So, both of the 2 kinds of triggers shown above prior to 10.7 will not have any trigger action column info on them in SYSTRIGGERS table. Without our last rule about what columns should be read in, we will run into problems for soft-upgrade or hard-upgrade causing us to not read all the required columns.The trigger eg above if created prior to 10.7 mode will have trigger column and REFERENCING clause set in SYSTRIGGERS but will not have trigger action column info even \\tthough there are columns referenced in trigger action through old\\/new transition variables. This same trigger if created in 10.7 or higher \\tversion will have trigger column, REFERENCING clause and trigger action column set for it in SYSTRIGGERS. To handle this on a hard\\/soft-upgraded db, we will just choose to read all the columns from trigger table if SYSTRIGGER shows trigger column and REFERENCING clause for a trigger but no trigger action column.  \\n\\n Rule5)The only place we will need special code for soft-upgrade is during trigger creation. If we are in soft-upgrade mode, we want to make sure that we do not save information about trigger action columns in SYSTRIGGERS because the releases prior to 10.7 do not understand trigger action column information. \\n\\n\\n\\n Let\'s see with examples, when the rules described above kick in \\nConsider following 4 trigger scenarios  \\n            1) create trigger tr1 after update on t1 for each row values(1);  \\n            2) create trigger tr1 after update on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2);  \\n            3) create trigger tr1 after update of c1 on t1 for each row values(1);  \\n            4) create trigger tr1 after update of c1 on t1 referencing old as oldt for each row insert into t2 values(2,oldt.j,-2);  \\n\\n And these different triggers could be created in following various combination of soft-upgrade, hard-upgrade, brand new db \\n\\ta)trigger is getting created in newly created 10.7 db  \\n\\tb)trigger already created in the pre-10.7db before soft upgrade  \\n\\tc)trigger is getting created while in soft upgrad mode with pre-10.7 db  \\n\\td)trigger already created in the pre-10.7db before hard upgrade  \\n\\te)trigger is getting created after pre-10.7db is hard upgraded  \\n\\n All the db variations for trigger scenario 1 will be covered by Rule1). \\nAll the db variations for trigger scenario 2 will be covered by Rule1) \\nAll the db variations for trigger scenario 3 will be covered by Rule2). \\nFor trigger scenario 4, different rules will apply depending on db variations \\n\\tFor 4a), Rule3) will apply \\n\\tFor 4b), Rule4) will apply \\n\\tFor 4c), Rule5) will apply \\n\\tFor 4d), Rule4) will apply \\n\\tFor 4e), Rule3) will apply              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12873006\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12873006&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12873006\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12873006_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873006_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 15:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T15:10:27+0000\'\u003e28\\/May\\/10 15:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for the patch, Mamta. If I understand correctly, users should expect to see the following behaviors:\u003c\\/p\u003e\\n\\n\u003cp\u003e1) No behavior change for legacy triggers created before 10.7 is released.\u003c\\/p\u003e\\n\\n\u003cp\u003e2) No behavior change for triggers created in soft-upgraded databases.\u003c\\/p\u003e\\n\\n\u003cp\u003e3) Potential performance improvement for triggers created in new 10.7 databases.\u003c\\/p\u003e\\n\\n\u003cp\u003e4) Potential performance improvement for triggers created in legacy databases after hard-upgrade to 10.7.\u003c\\/p\u003e\\n\\n\u003cp\u003eBefore looking into the details of this patch, I would like to explore an alternative solution. Maybe this solution has already been considered and rejected. If so, I apologize for the noise. This alternative approach would bring the performance improvement to more cases and would avoid the soft-upgrade and serialization issues. I think that it would re-use most of the code which you are supplying with the current patch:\u003c\\/p\u003e\\n\\n\u003cp\u003eA) Do not change what is stored in SYSTRIGGERS.\u003c\\/p\u003e\\n\\n\u003cp\u003eB) Instead, the very first time that a trigger is run, if there is a REFERENCING clause, re-parse the trigger text in order to find the columns that are actually needed.\u003c\\/p\u003e\\n\\n\u003cp\u003eC) Store the extra referenced column information in a transient field of the trigger descriptor for use by later firings.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe disadvantage of this approach is that the first firing of a trigger would incur an extra compilation tax. I think that this tax would not be noticed.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe advantage of this approach is that the performance improvement would be seen in cases (1) and (2) above and not just in cases (3) and (4). In addition, we would avoid the tricky serialization incompatibilities.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks,\u003cbr\\/\u003e\\n-Rick\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12873006_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873006_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 15:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T15:10:27+0000\'\u003e28\\/May\\/10 15:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for the patch, Mamta. If I understand correctly, users should expect to see the following behaviors: \\n\\n 1) No behavior change for legacy triggers created before 10.7 is released. \\n\\n 2) No behavior change for triggers created in soft-upgraded databases. \\n\\n 3) Potential performance improvement for triggers created in new 10.7 databases. \\n\\n 4) Potential performance improvement for triggers created in legacy databases after hard-upgrade to 10.7. \\n\\n Before looking into the details of this patch, I would like to explore an alternative solution. Maybe this solution has already been considered and rejected. If so, I apologize for the noise. This alternative approach would bring the performance improvement to more cases and would avoid the soft-upgrade and serialization issues. I think that it would re-use most of the code which you are supplying with the current patch: \\n\\n A) Do not change what is stored in SYSTRIGGERS. \\n\\n B) Instead, the very first time that a trigger is run, if there is a REFERENCING clause, re-parse the trigger text in order to find the columns that are actually needed. \\n\\n C) Store the extra referenced column information in a transient field of the trigger descriptor for use by later firings. \\n\\n The disadvantage of this approach is that the first firing of a trigger would incur an extra compilation tax. I think that this tax would not be noticed. \\n\\n The advantage of this approach is that the performance improvement would be seen in cases (1) and (2) above and not just in cases (3) and (4). In addition, we would avoid the tricky serialization incompatibilities. \\n\\n Thanks, \\n-Rick              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12873076\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12873076&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12873076\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12873076_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873076_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 17:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T17:52:09+0000\'\u003e28\\/May\\/10 17:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI like the current appoach of changing what is stored in SYSTRIGGERS.  I think that it fits well with current architecture.  \u003c\\/p\u003e\\n\\n\u003cp\u003eI have reviewed the serialization code and believe it is correct.  If there are any problems please comment.  It would be nice if it were \\\"less tricky\\\", as it sort of\u003cbr\\/\u003e\\noverloads existing fields in the data structure - but this is not uncommon in derby when dealing with stored representations of data.   I am ok\u003cbr\\/\u003e\\nwith the tradeoff of how it is currently implemented vs. the alternative of upgrading\u003cbr\\/\u003e\\nthe actual type of the column in the system catalog or adding a new column to the\u003cbr\\/\u003e\\nsystem catalog.  It would be nice if we came up with a standard way, well tested \u003cbr\\/\u003e\\nway to do this - but would not hold up this change on that.\u003c\\/p\u003e\\n\\n\u003cp\u003eIf someone is interested I do think that #1 of Rick\'s 4 cases could be implemented as a separate next increment.  A simple non-code workaround would be to drop and recreate the triggers.  A code change would be to run\u003cbr\\/\u003e\\nsome code at upgrade time to rewrite the triggers.   At that point only soft upgraded databases would not get\u003cbr\\/\u003e\\nthe performance improvement, which should not surprise customers much.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12873076_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873076_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 17:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T17:52:09+0000\'\u003e28\\/May\\/10 17:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I like the current appoach of changing what is stored in SYSTRIGGERS.  I think that it fits well with current architecture.   \\n\\n I have reviewed the serialization code and believe it is correct.  If there are any problems please comment.  It would be nice if it were \\\"less tricky\\\", as it sort of \\noverloads existing fields in the data structure - but this is not uncommon in derby when dealing with stored representations of data.   I am ok \\nwith the tradeoff of how it is currently implemented vs. the alternative of upgrading \\nthe actual type of the column in the system catalog or adding a new column to the \\nsystem catalog.  It would be nice if we came up with a standard way, well tested  \\nway to do this - but would not hold up this change on that. \\n\\n If someone is interested I do think that #1 of Rick\'s 4 cases could be implemented as a separate next increment.  A simple non-code workaround would be to drop and recreate the triggers.  A code change would be to run \\nsome code at upgrade time to rewrite the triggers.   At that point only soft upgraded databases would not get \\nthe performance improvement, which should not surprise customers much.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12873101\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12873101&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12873101\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12873101_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873101_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 18:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T18:32:01+0000\'\u003e28\\/May\\/10 18:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI just read back a bit and see the issue about SERIALIZATION across client\\/server.  Do you know what JIRA caused this behavior change in 10.6?  I am not sure if it is even possible to do a proper \u003cbr\\/\u003e\\nsoft\\/hard upgrade on anything in a system catalog that could properly take account of client\\/server\u003cbr\\/\u003e\\nmismatches.\u003c\\/p\u003e\\n\\n\u003cp\u003eI would lean toward documenting that we don\'t support this access, it seems like we should only \u003cbr\\/\u003e\\nsupport using the standard jdbc data dictionary interfaces. \u003c\\/p\u003e\\n\\n\u003cp\u003eI was not aware of this new client\\/server behavior.  One of the reasons for the current design in this fix, was to avoid the complication of creating new format id\'s and subclasses.  And as you point out even\u003cbr\\/\u003e\\nif we do this we can\'t guarantee anything other than a format id not found error on the backward client since in the worst case it can\'t have any new code to handle new stuff in hard upgraded servers.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12873101_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873101_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 18:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T18:32:01+0000\'\u003e28\\/May\\/10 18:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I just read back a bit and see the issue about SERIALIZATION across client\\/server.  Do you know what JIRA caused this behavior change in 10.6?  I am not sure if it is even possible to do a proper  \\nsoft\\/hard upgrade on anything in a system catalog that could properly take account of client\\/server \\nmismatches. \\n\\n I would lean toward documenting that we don\'t support this access, it seems like we should only  \\nsupport using the standard jdbc data dictionary interfaces.  \\n\\n I was not aware of this new client\\/server behavior.  One of the reasons for the current design in this fix, was to avoid the complication of creating new format id\'s and subclasses.  And as you point out even \\nif we do this we can\'t guarantee anything other than a format id not found error on the backward client since in the worst case it can\'t have any new code to handle new stuff in hard upgraded servers.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12873126\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12873126&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12873126\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12873126_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873126_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 19:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T19:40:42+0000\'\u003e28\\/May\\/10 19:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHi Mike,\u003c\\/p\u003e\\n\\n\u003cp\u003eThe handling of Java Objects stored in system tables was changed as part of the UDT work. For the details, see \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-4491\\\" title=\\\"The network client changes UDTs into Strings and returns their type as LONGVARBINARY.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-4491\\\"\u003e\u003cdel\u003eDERBY-4491\u003c\\/del\u003e\u003c\\/a\u003e. That issue brought the client behavior into agreement with the embedded behavior and the JDBC spec.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe Reference Guide already says that Derby-specific objects in the catalogs are not part of our public API. This disclaimer is tacked onto the description of every catalog column which contains Derby-specific objects. That means that those objects can change shape and behavior and that we make no guarantees of cross-version compatibility.  I don\'t think it\'s necessary to punch up the disclaimer but it wouldn\'t hurt.\u003c\\/p\u003e\\n\\n\u003cp\u003eBeyond that explicit disclaimer, we have never claimed that the catalogs will retain their current shape. We have always reserved the right to add, delete, and modify catalog columns. Maybe we haven\'t made that clear enough to users. However, we do say the following in the Reference Guide section titled \\\"Derby system tables\\\":\u003c\\/p\u003e\\n\\n\u003cp\u003e\\\"You can query system tables, but you cannot alter them...The recommended way to get more information about these tables is to use an instance of the Java interface java.sql.DatabaseMetaData.\\\"\u003c\\/p\u003e\\n\\n\u003cp\u003eWe let users query the catalogs because JDBC metadata is not rich enough for portability layers to introspect the capabilities of SQL databases and Derby has not implemented the Standard information schema.\u003c\\/p\u003e\\n\\n\u003cp\u003eBecause we do let users query the catalogs, I think that we should include a 10.7 release note warning users about the compatibility issues with SYSTRIGGERS.REFERENCEDCOLUMNS.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks,\u003cbr\\/\u003e\\n-Rick\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rhillegas\\\" id=\\\"commentauthor_12873126_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rhillegas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rhillegas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Rick Hillegas\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873126_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 19:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T19:40:42+0000\'\u003e28\\/May\\/10 19:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Hi Mike, \\n\\n The handling of Java Objects stored in system tables was changed as part of the UDT work. For the details, see   DERBY-4491  . That issue brought the client behavior into agreement with the embedded behavior and the JDBC spec. \\n\\n The Reference Guide already says that Derby-specific objects in the catalogs are not part of our public API. This disclaimer is tacked onto the description of every catalog column which contains Derby-specific objects. That means that those objects can change shape and behavior and that we make no guarantees of cross-version compatibility.  I don\'t think it\'s necessary to punch up the disclaimer but it wouldn\'t hurt. \\n\\n Beyond that explicit disclaimer, we have never claimed that the catalogs will retain their current shape. We have always reserved the right to add, delete, and modify catalog columns. Maybe we haven\'t made that clear enough to users. However, we do say the following in the Reference Guide section titled \\\"Derby system tables\\\": \\n\\n \\\"You can query system tables, but you cannot alter them...The recommended way to get more information about these tables is to use an instance of the Java interface java.sql.DatabaseMetaData.\\\" \\n\\n We let users query the catalogs because JDBC metadata is not rich enough for portability layers to introspect the capabilities of SQL databases and Derby has not implemented the Standard information schema. \\n\\n Because we do let users query the catalogs, I think that we should include a 10.7 release note warning users about the compatibility issues with SYSTRIGGERS.REFERENCEDCOLUMNS. \\n\\n Thanks, \\n-Rick              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12873137\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12873137&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12873137\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12873137_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873137_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 20:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T20:21:42+0000\'\u003e28\\/May\\/10 20:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ethanks rick, now I understand why the change.  I see why it would be needed for udt\'s.  And it sounds\u003cbr\\/\u003e\\nlike we are covered in the documention about these columns.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis is probably a hole in our testing, i am not sure there is a way in junit testing to test client with only client jars in the classpath - I believe this is what is documented for derby client users.  Have you ever tried accessing these fields from derby client with only the derby client jar in the class path?  It seems like it would need the server jar\'s to be able to work.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_12873137_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873137_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 20:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T20:21:42+0000\'\u003e28\\/May\\/10 20:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    thanks rick, now I understand why the change.  I see why it would be needed for udt\'s.  And it sounds \\nlike we are covered in the documention about these columns. \\n\\n This is probably a hole in our testing, i am not sure there is a way in junit testing to test client with only client jars in the classpath - I believe this is what is documented for derby client users.  Have you ever tried accessing these fields from derby client with only the derby client jar in the class path?  It seems like it would need the server jar\'s to be able to work.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12873172\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12873172&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12873172\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12873172_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873172_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 22:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T22:51:51+0000\'\u003e28\\/May\\/10 22:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eYes Mike, you are right, you need the server jars to select objects from the system tables, for example:\u003cbr\\/\u003e\\nij&gt; connect \'jdbc:derby:\\/\\/localhost:1527\\/wombat\';\u003cbr\\/\u003e\\nij&gt; select * from sys.sysaliases\u003cbr\\/\u003e\\n&gt; ;\u003cbr\\/\u003e\\nALIASID                             |ALIAS\u003c\\/p\u003e\\n\\n\u003cdiv class=\'table-wrap\'\u003e\\n\u003ctable class=\'confluenceTable\'\u003e\u003ctbody\u003e\\n\u003ctr\u003e\\n\u003ctd class=\'confluenceTd\'\u003eSCHEMAID                            \u003c\\/td\u003e\\n\u003ctd class=\'confluenceTd\'\u003eJAVACLASSNAME\u003c\\/td\u003e\\n\u003c\\/tr\u003e\\n\u003c\\/tbody\u003e\u003c\\/table\u003e\\n\u003c\\/div\u003e\\n\\n\\n\u003cdiv class=\'table-wrap\'\u003e\\n\u003ctable class=\'confluenceTable\'\u003e\u003ctbody\u003e\\n\u003ctr\u003e\\n\u003ctd class=\'confluenceTd\'\u003e&amp;\u003c\\/td\u003e\\n\u003ctd class=\'confluenceTd\'\u003e&amp;\u003c\\/td\u003e\\n\u003ctd class=\'confluenceTd\'\u003eSYST&amp;\u003c\\/td\u003e\\n\u003ctd class=\'confluenceTd\'\u003eALIASINFO      \u003c\\/td\u003e\\n\u003ctd class=\'confluenceTd\'\u003eSPECIFICNAME\u003c\\/td\u003e\\n\u003c\\/tr\u003e\\n\u003c\\/tbody\u003e\u003c\\/table\u003e\\n\u003c\\/div\u003e\\n\\n\\n\\n\u003cp\u003e--------------------------------------------------------------------------------\u003cbr\\/\u003e\\n--------------------------------------------------------------------------------\u003cbr\\/\u003e\\n--------------------------------------------------------------------------------\u003cbr\\/\u003e\\n--------------------------------------------------------------------------------\u003cbr\\/\u003e\\n--------------------------------------------------------------------------------\u003cbr\\/\u003e\\n--------------------------------------------------------------------------------\u003cbr\\/\u003e\\n------\u003cbr\\/\u003e\\nERROR XN020: Error marshalling or unmarshalling a user defined type: org.apache.\u003cbr\\/\u003e\\nderby.catalog.types.RoutineAliasInfo\u003cbr\\/\u003e\\nij&gt;\u003c\\/p\u003e\\n\\n\u003cp\u003eWith the 10.5 client it gives the text of the procedure or function definition for ALIASINFO  may have been useful to someone, e.g.\u003cbr\\/\u003e\\nSQLCAMESSAGE(IN SQLCODE INTEGER,IN SQLERRML SMALLINT,IN SQLERRMC VARCHAR(2400),I\u003cbr\\/\u003e\\nN SQLERRP CHAR(8),IN SQLERRD0 INTEGER,IN SQLERR&amp;\u003c\\/p\u003e\\n\\n\u003cp\u003eI think you are right about this being a hole in our testing.  Perhaps we should have  an option to run tests with the client in a separate class loader or something.\u003c\\/p\u003e\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_12873172_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12873172_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/10 22:51\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-05-28T22:51:51+0000\'\u003e28\\/May\\/10 22:51\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Yes Mike, you are right, you need the server jars to select objects from the system tables, for example: \\nij&gt; connect \'jdbc:derby:\\/\\/localhost:1527\\/wombat\'; \\nij&gt; select * from sys.sysaliases \\n&gt; ; \\nALIASID                             |ALIAS \\n\\n \\n  \\n \\n SCHEMAID                             \\n JAVACLASSNAME \\n \\n  \\n \\n\\n\\n \\n  \\n \\n &amp; \\n &amp; \\n SYST&amp; \\n ALIASINFO       \\n SPECIFICNAME \\n \\n  \\n \\n\\n\\n\\n -------------------------------------------------------------------------------- \\n-------------------------------------------------------------------------------- \\n-------------------------------------------------------------------------------- \\n-------------------------------------------------------------------------------- \\n-------------------------------------------------------------------------------- \\n-------------------------------------------------------------------------------- \\n------ \\nERROR XN020: Error marshalling or unmarshalling a user defined type: org.apache. \\nderby.catalog.types.RoutineAliasInfo \\nij&gt; \\n\\n With the 10.5 client it gives the text of the procedure or function definition for ALIASINFO  may have been useful to someone, e.g. \\nSQLCAMESSAGE(IN SQLCODE INTEGER,IN SQLERRML SMALLINT,IN SQLERRMC VARCHAR(2400),I \\nN SQLERRP CHAR(8),IN SQLERRD0 INTEGER,IN SQLERR&amp; \\n\\n I think you are right about this being a hole in our testing.  Perhaps we should have  an option to run tests with the client in a separate class loader or something. \\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12881029\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12881029&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12881029\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12881029_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12881029_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jun\\/10 02:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-06-22T02:46:06+0000\'\u003e22\\/Jun\\/10 02:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI looked through our code during upgrade and found in DD_Version.handleMinorRevisionChange that during any kind of upgrade, we either invalidate or delete the stored prepared statements. This will ensure that we don\'t hold on TriggerDescriptor data structure that may not be incompatible across the Derby releases. \u003c\\/p\u003e\\n\\n\u003cp\u003eAs for the serialization, we already have that issue in our network server product. I would like to go ahead and commit my changes. The general serialization between client and server can be taken as a separate task.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12881029_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12881029_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jun\\/10 02:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-06-22T02:46:06+0000\'\u003e22\\/Jun\\/10 02:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I looked through our code during upgrade and found in DD_Version.handleMinorRevisionChange that during any kind of upgrade, we either invalidate or delete the stored prepared statements. This will ensure that we don\'t hold on TriggerDescriptor data structure that may not be incompatible across the Derby releases.  \\n\\n As for the serialization, we already have that issue in our network server product. I would like to go ahead and commit my changes. The general serialization between client and server can be taken as a separate task.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12881087\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12881087&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12881087\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12881087_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12881087_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jun\\/10 06:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-06-22T06:12:21+0000\'\u003e22\\/Jun\\/10 06:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI\'m wondering if we really need to test with LOBs as large as 300 MB?\u003cbr\\/\u003e\\nThat\'s not big enough to trigger the issue with most default JVM heap settings these days (i.e. max heap size is typically 512 MB or 1 GB), which forces us to run with specific heap options. We are currently running with a 16 MB heap in junit-lowmem, and writing\\/reading 300 MB LOBs take a while.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor another time and effort, we can consider adding a method to return an appropriate LOB size, i.e. by using Runtime.totalMemory(). I haven\'t verified that this will work \u003cspan class=\\\"error\\\"\u003e&#91;in all JVMs&#93;\u003c\\/span\u003e, and we should also centralize this method to make it easy to track and override its return value if required.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kristwaa\\\" id=\\\"commentauthor_12881087_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kristwaa\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kristwaa\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kristian Waagan\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12881087_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jun\\/10 06:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-06-22T06:12:21+0000\'\u003e22\\/Jun\\/10 06:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I\'m wondering if we really need to test with LOBs as large as 300 MB? \\nThat\'s not big enough to trigger the issue with most default JVM heap settings these days (i.e. max heap size is typically 512 MB or 1 GB), which forces us to run with specific heap options. We are currently running with a 16 MB heap in junit-lowmem, and writing\\/reading 300 MB LOBs take a while. \\n\\n For another time and effort, we can consider adding a method to return an appropriate LOB size, i.e. by using Runtime.totalMemory(). I haven\'t verified that this will work  &#91;in all JVMs&#93; , and we should also centralize this method to make it easy to track and override its return value if required.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12881750\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=12881750&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12881750\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12881750_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12881750_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Jun\\/10 16:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-06-23T16:58:21+0000\'\u003e23\\/Jun\\/10 16:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI had missed two master files with my previous commit. Fixed them with revision 957269.\u003c\\/p\u003e\\n\\n\u003cp\u003eKristian, I will work on reducing the size of LOBs to 50MB since junit-lowmem gets run with 16MB. Please let me know if you think it should be even lower. Thanks for looking at the test.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_12881750_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12881750_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Jun\\/10 16:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2010-06-23T16:58:21+0000\'\u003e23\\/Jun\\/10 16:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I had missed two master files with my previous commit. Fixed them with revision 957269. \\n\\n Kristian, I will work on reducing the size of LOBs to 50MB since junit-lowmem gets run with 16MB. Please let me know if you think it should be even lower. Thanks for looking at the test.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13012631\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13012631&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13012631\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13012631_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13012631_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Mar\\/11 19:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-03-29T19:13:44+0000\'\u003e29\\/Mar\\/11 19:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mamta A. Satoor - 29\\/Mar\\/11 19:15\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe work that went under this jira caused data corruption logged under \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-5121\\\" title=\\\"Data corruption when executing an UPDATE trigger\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-5121\\\"\u003e\u003cdel\u003eDERBY-5121\u003c\\/del\u003e\u003c\\/a\u003e. The problem is that the resultset expected by the trigger at execution time may not be same as what the triggering sql requires. This can result in trigger picking up the data from incorrect columns.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13012631_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13012631_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Mar\\/11 19:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-03-29T19:13:44+0000\'\u003e29\\/Mar\\/11 19:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mamta A. Satoor - 29\\/Mar\\/11 19:15\\\"\u003eedited\u003c\\/span\u003e                   The work that went under this jira caused data corruption logged under   DERBY-5121  . The problem is that the resultset expected by the trigger at execution time may not be same as what the triggering sql requires. This can result in trigger picking up the data from incorrect columns.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13014784\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13014784&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13014784\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13014784_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13014784_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'01\\/Apr\\/11 18:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-04-01T18:33:17+0000\'\u003e01\\/Apr\\/11 18:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThis patch is not ready for commit but I wanted to put it down for review. I will be on vacation for next few days and\u003cbr\\/\u003e\\nwill look at the review comments once I am back. But what the patch does is to read all the necessary columns during triggering sql\'s execution rather than read all the columns from the trigger table just because there is a trigger defined on the table. The thing to keep in mind is that the triggering sql might need more columns in it\'s resultset that what a trigger might need during it\'s execution. So, the other thing that the patch does is to carve out a temporary resulset for every firing trigger which will be exactly same as the resulset created by the triggering sql or a subset of the resulset created by the triggering sql. Once the right resulset set is constructed for the firing trigger, it will be able to find the columns referenced in it\'s trigger action through the REFERENCING clause in the correct positions\u003cbr\\/\u003e\\nin the resulset.\u003c\\/p\u003e\\n\\n\u003cp\u003eI have not run the derbyall and junit suite on this. I plan to work on that after I return from by vacation.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13014784_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13014784_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'01\\/Apr\\/11 18:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-04-01T18:33:17+0000\'\u003e01\\/Apr\\/11 18:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    This patch is not ready for commit but I wanted to put it down for review. I will be on vacation for next few days and \\nwill look at the review comments once I am back. But what the patch does is to read all the necessary columns during triggering sql\'s execution rather than read all the columns from the trigger table just because there is a trigger defined on the table. The thing to keep in mind is that the triggering sql might need more columns in it\'s resultset that what a trigger might need during it\'s execution. So, the other thing that the patch does is to carve out a temporary resulset for every firing trigger which will be exactly same as the resulset created by the triggering sql or a subset of the resulset created by the triggering sql. Once the right resulset set is constructed for the firing trigger, it will be able to find the columns referenced in it\'s trigger action through the REFERENCING clause in the correct positions \\nin the resulset. \\n\\n I have not run the derbyall and junit suite on this. I plan to work on that after I return from by vacation.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13030999\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13030999&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13030999\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13030999_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13030999_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/11 03:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-10T03:52:34+0000\'\u003e10\\/May\\/11 03:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mamta A. Satoor - 10\\/May\\/11 04:47\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI ran derbyall and junit suite with this patch and found that handful of upgrade tests are failing. After debugging, I have found the reason to be that my patch does optimization of reading only required columns and hence the trigger action column positions in that selective list of read columns may not be same as their column positions in the underlying trigger table. This column mismatch is not recognized by 10.7 released jars. I am making changes that when in soft upgrade mode, do not do the column reading optimization so the generated trigger action sql will still work when it is taken back to the older release which does not do any column reading optimization.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13030999_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13030999_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/May\\/11 03:52\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-10T03:52:34+0000\'\u003e10\\/May\\/11 03:52\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mamta A. Satoor - 10\\/May\\/11 04:47\\\"\u003eedited\u003c\\/span\u003e                   I ran derbyall and junit suite with this patch and found that handful of upgrade tests are failing. After debugging, I have found the reason to be that my patch does optimization of reading only required columns and hence the trigger action column positions in that selective list of read columns may not be same as their column positions in the underlying trigger table. This column mismatch is not recognized by 10.7 released jars. I am making changes that when in soft upgrade mode, do not do the column reading optimization so the generated trigger action sql will still work when it is taken back to the older release which does not do any column reading optimization.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13032475\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13032475&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13032475\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032475_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032475_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 16:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T16:04:50+0000\'\u003e12\\/May\\/11 16:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttaching a new patch derby1482_patch5_diff.txt which takes care of the upgrade problems which I ran into with the earlier draft patch. \u003c\\/p\u003e\\n\\n\u003cp\u003eDuring an upgrade(soft\\/hard), the trigger action SPSes get marked invalid and hence when they fire next time, they will be regenerated and recompiled. The issue with the earlier patch was that when in soft-upgrade mode, the patch was using the new code to do the column read optimization while generating the internal trigger action sql but when such a database goes back to it\'s original version, the generated trigger action sql won\'t work anymore because previous releases of Derby do not recognize this column read optimization. In order to fix this, the code has to be smart to see if it is working with a pre-10.9 database(which in other words means that we are in soft-upgrade mode) and if yes, then it should not use the column read optimization code during trigger action SPS regeneration and during UPDATE execution when we read limited columns from the trigger table based on what is required by the UPDATE sql and the firing triggers  I have made that change in the attached patch and now\u003cbr\\/\u003e\\nthe upgrade tests work fine. I have also run the complete junit suite and it ranfine. derbyall is still running on my machine. \u003c\\/p\u003e\\n\\n\u003cp\u003eI will go ahead and commit this patch on Monday if there are no comments.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032475_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032475_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 16:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T16:04:50+0000\'\u003e12\\/May\\/11 16:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attaching a new patch derby1482_patch5_diff.txt which takes care of the upgrade problems which I ran into with the earlier draft patch.  \\n\\n During an upgrade(soft\\/hard), the trigger action SPSes get marked invalid and hence when they fire next time, they will be regenerated and recompiled. The issue with the earlier patch was that when in soft-upgrade mode, the patch was using the new code to do the column read optimization while generating the internal trigger action sql but when such a database goes back to it\'s original version, the generated trigger action sql won\'t work anymore because previous releases of Derby do not recognize this column read optimization. In order to fix this, the code has to be smart to see if it is working with a pre-10.9 database(which in other words means that we are in soft-upgrade mode) and if yes, then it should not use the column read optimization code during trigger action SPS regeneration and during UPDATE execution when we read limited columns from the trigger table based on what is required by the UPDATE sql and the firing triggers  I have made that change in the attached patch and now \\nthe upgrade tests work fine. I have also run the complete junit suite and it ranfine. derbyall is still running on my machine.  \\n\\n I will go ahead and commit this patch on Monday if there are no comments.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13032546\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13032546&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13032546\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032546_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032546_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 17:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T17:58:22+0000\'\u003e12\\/May\\/11 17:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ederbyall ran fine with derby1482_patch5_diff.txt\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032546_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032546_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 17:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T17:58:22+0000\'\u003e12\\/May\\/11 17:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    derbyall ran fine with derby1482_patch5_diff.txt              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13032746\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13032746&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13032746\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032746_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032746_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 23:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T23:35:20+0000\'\u003e12\\/May\\/11 23:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI ran lowmem suite(ant junit-lowmem) with my changes and it ran fine.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032746_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032746_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 23:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T23:35:20+0000\'\u003e12\\/May\\/11 23:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I ran lowmem suite(ant junit-lowmem) with my changes and it ran fine.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13032749\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13032749&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13032749\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032749_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032749_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 23:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T23:40:16+0000\'\u003e12\\/May\\/11 23:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe attached patch derby1482_patch6_diff.txt is exactly same as the previous patch(derby1482_patch5_diff.txt) except that I have enabled the tests that were written for this jira. We had disabled those tests after encountering the corruption issue \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-5121\\\" title=\\\"Data corruption when executing an UPDATE trigger\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-5121\\\"\u003e\u003cdel\u003eDERBY-5121\u003c\\/del\u003e\u003c\\/a\u003e. Those tests now work fine with the attached patch.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13032749_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13032749_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/May\\/11 23:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-12T23:40:16+0000\'\u003e12\\/May\\/11 23:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The attached patch derby1482_patch6_diff.txt is exactly same as the previous patch(derby1482_patch5_diff.txt) except that I have enabled the tests that were written for this jira. We had disabled those tests after encountering the corruption issue   DERBY-5121  . Those tests now work fine with the attached patch.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13034977\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13034977&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13034977\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13034977_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13034977_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/May\\/11 18:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-17T18:59:40+0000\'\u003e17\\/May\\/11 18:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe changes for this jira has been committed to 10.9 codeline. Backport of this to 10.8 can cause an issue because we already have a release out for 10.8(10.8.2) which does not do any column reading optimization. If we were to migrate these changes to the next point release of 10.8, we could run into problems when the 10.8.2 database is used with next point release of 10.8 which does column read optimization. When such a db is taken back to 10.8.2, it can run into issues because 10.8.2 doesn\'t recognize column read optimization performed by the next point release of 10.8 and hence genereated trigger action SPSes will not work correctly in 10.8.1.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13034977_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13034977_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/May\\/11 18:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-05-17T18:59:40+0000\'\u003e17\\/May\\/11 18:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The changes for this jira has been committed to 10.9 codeline. Backport of this to 10.8 can cause an issue because we already have a release out for 10.8(10.8.2) which does not do any column reading optimization. If we were to migrate these changes to the next point release of 10.8, we could run into problems when the 10.8.2 database is used with next point release of 10.8 which does column read optimization. When such a db is taken back to 10.8.2, it can run into issues because 10.8.2 doesn\'t recognize column read optimization performed by the next point release of 10.8 and hence genereated trigger action SPSes will not work correctly in 10.8.1.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13069833\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13069833&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13069833\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13069833_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13069833_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jul\\/11 23:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-07-22T23:03:09+0000\'\u003e22\\/Jul\\/11 23:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttaching a release note for the jira.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13069833_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13069833_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jul\\/11 23:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2011-07-22T23:03:09+0000\'\u003e22\\/Jul\\/11 23:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attaching a release note for the jira.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13685162\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-1482?focusedCommentId=13685162&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13685162\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13685162_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13685162_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jun\\/13 09:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-06-17T09:19:12+0000\'\u003e17\\/Jun\\/13 09:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e\u003cspan class=\\\"error\\\"\u003e&#91;bulk update&#93;\u003c\\/span\u003e Close all resolved issues that haven\'t been updated for more than one year.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13685162_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13685162_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jun\\/13 09:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-06-17T09:19:12+0000\'\u003e17\\/Jun\\/13 09:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                     &#91;bulk update&#93;  Close all resolved issues that haven\'t been updated for more than one year.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="10594";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/DERBY\\/summary\\\" title=\\\"Derby\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=10594&amp;avatarId=10122\\\" alt=\\\"Derby\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/DERBY\\/summary\\\" title=\\\"Derby\\\"\u003eDerby\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1520238369137"> 
    <input type="hidden" title="jira.request.server.time" value="504"> 
    <input type="hidden" title="jira.request.id" value="506x94355527x3"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="2"> 
    <input type="hidden" title="db.reads.time.in.ms" value="29"> 
    <input type="hidden" title="db.conns.time.in.ms" value="36"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 506x94355527x3
	          REQUEST TIMESTAMP : [05/Mar/2018:08:26:09 +0000]
	               REQUEST TIME : 0.5040
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 2

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=39, elapsedTotal=29527358, elapsedMin=308888, elapsedMax=6653483, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=43, elapsedTotal=36845831, elapsedMin=326953, elapsedMax=6684993, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>