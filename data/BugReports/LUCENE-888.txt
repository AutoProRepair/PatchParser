<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|ae8737d61814baeee85d822f72d7b0dbe00f19ab|lout"> 
  <link rel="shortcut icon" href="/jira/s/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"sd.customer.profile.multi.languages\":true,\"sd.customer.portal.transitions\":true,\"sd.customer.portal.transitions.config\":true,\"sd.custom.email.stripping.rules\":false,\"sd.sla.lucene.issue.id.callback.performance\":true,\"sd.new.settings.sidebar.location\":true,\"sd.workload.report.paginator\":true,\"sd.experimental.portal.search.algorithm.default.1\":false,\"sd.customer.portal.help.center.agent.announcement\":true,\"sd.sla.improved.rendering\":false,\"sd.experimental.portal.search.algorithm.default.2\":false,\"sd.customer.feedback.validate.reporter.on.token\":true,\"sd.custom.email.notifications.utf8.csat.star\":true,\"sd.who.create.customers.by.email.setting\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.renderer.consider.variable.format\":true,\"sd.stats.event.tracking\":true,\"sd.password.helper.dialog\":true,\"sd.canned.responses\":false,\"sd.portal.help.center.customer.signup.secondary.email\":true,\"sd.custom.email.notifications.manage.language\":true,\"sd.use.search.by.permissions\":true,\"sd.slavalue.record.updated.date\":false,\"sd.report.custom.date.range\":false,\"sd.kb.article.helpfulness.report\":false,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"sd.custom.email.notifications.styling\":true,\"sd.workinghours.new.page.bulldog.1\":false,\"sd.customer.portal.two.step.login\":false,\"sd.automation.psmq.async.executor\":true,\"sd.customer.org.list.page.lazy.search\":true,\"sd.approval.requested.when.handler\":true,\"sd.request.type.field.rest.api.filtering.bugfix\":true,\"sd.automation.then.action.auto.answer.approval\":true,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"sla.will.only.be.paused.if.they.are.already.started\":true,\"sd.kb.comment.share.stats.collection\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"sd.customer.orgs.group.participants\":true,\"sd.portal.help.center.customer.signup\":true,\"sd.sla.agent.jql.security.restricted\":true,\"sd.test.feature.flag.x\":true,\"sd.test.feature.flag.y\":false,\"sd.cluster.safe.mail.channel.shutdown\":true,\"sd.email.channel.folders\":false,\"sd.email.analytics.open\":false,\"sd.kb.project.creation.create.link.space\":true,\"sd.workinghours.new.page\":false,\"sd.confluence.anonymous.permission.fix\":true,\"com.atlassian.jira.issuetable.draggable\":true,\"sd.customer.portal.project.agent.announcement\":true,\"sd.automation.audit.log\":true,\"jira.jql.suggestrecentfields\":false,\"sd.canned.responses.check.index.startup\":false,\"sd.new.project.templates\":true,\"sd.custom.email.notifications.custom.rules.simple.ui\":false,\"sd.custom.email.notifications.cut.over\":true,\"sd.dismiss.all.misconfiguration.warnings.setting\":true,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"sd.sla.configurations.export\":true,\"sd.canned.responses.variable.substitution\":true,\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"sd.customer.portal.prioties.per.project.fix\":true,\"jira.instrumentation.laas\":false,\"sd.kb.self.service.report\":false,\"sla.improved.request.handling\":true,\"sd.no.schedule.async.upgrade.tasks\":true,\"sd.kb.primary.nav\":true,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"sd.kb.issueview.panel.phase2\":true,\"sd.email.outsider.comments\":true,\"jira.create.linked.issue\":true,\"sd.kb.issueview.panel\":true,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"sd.approvals.light.weight\":false,\"sd.automation.then.webhook\":true,\"sd.respect.inline.edit.issue.off\":true,\"jira.jql.smartautoselectfirst\":false,\"sd.global.portal.search.atlassian.only.tracking\":false,\"sd.automation.if.condition.comment.primary.action\":true,\"jira.priorities.per.project\":true,\"sd.inline.noformat.renderer\":true,\"sd.customer.request.type.create.edit.screens\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/png,image/vnd.wap.wbmp,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["com.atlassian.servicedesk.servicedesk-canned-responses-plugin:canned-responses-data-provider.data"]="{\"substitutionVariables\":{\"issue.summary\":\"Issue summary\",\"issue.description\":\"Issue description\",\"issue.key\":\"Issue key\",\"issue.reporter.name\":\"Issue reporter\",\"issue.resolution\":\"Issue resolution\",\"request.url\":\"Request URL\",\"request.status\":\"Request status\"}}";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.servicedesk.core-ui:util-help-links.help-links"]="{\"help\":{\"email.settings\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email\",\"managing.queues\":\"https://docs.atlassian.com/jira/jsd-docs-039/Setting+up+queues+for+your+team\",\"email.setup\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email\",\"request.settings.help.bubble\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+access+to+your+service+desk\",\"email.settings.suitablerequest\":\"https://docs.atlassian.com/jira/jsd-docs-039/Receiving+requests+by+email#Receivingrequestsbyemail-suitablerequest\",\"sla.import.help\":\"https://docs.atlassian.com/jira/jsd-docs-039/Importing+SLAs\",\"documentation.home\":\"https://docs.atlassian.com/jira/jsd-docs-039/JIRA+Service+Desk+Documentation\",\"default\":\"https://docs.atlassian.com/jira/jsd-docs-039/\",\"create.space.help\":\"https://docs.atlassian.com/jira/jsd-docs-039/Serving+customers+with+a+knowledge+base#serving-customers-with-a-knowledge-base-createpermission\",\"email.settings.troubleshooting\":\"https://docs.atlassian.com/jira/jsd-docs-039/Troubleshooting+issues+with+the+email+channel\",\"admin.notifications.config\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+service+desk+notifications\",\"troubleshoot.requesttype\":\"https://docs.atlassian.com/jira/jsd-docs-039/Troubleshooting+issues+with+request+types\",\"approvals.configuration\":\"https://docs.atlassian.com/jira/jsd-docs-039/Configuring+JIRA+Service+Desk+approvals\",\"setting.up.reports\":\"https://docs.atlassian.com/jira/jsd-docs-039/Setting+up+service+desk+reports\",\"public.signup\":\"https://docs.atlassian.com/jira/jsd-docs-039/Configuring+public+signup\",\"knowledge.base\":\"https://docs.atlassian.com/jira/jsd-docs-039/Serving+customers+with+a+knowledge+base\",\"resolve.permission.scheme.errors\":\"https://docs.atlassian.com/jira/jsd-docs-039/Resolving+permission+scheme+errors\",\"getting.started\":\"https://docs.atlassian.com/jira/jsd-docs-039/Getting+started+with+JIRA+Service+Desk\",\"getting.started.agent\":\"https://docs.atlassian.com/jira/jsd-docs-039/Getting+started+for+service+desk+agents\",\"invite.customers\":\"https://docs.atlassian.com/jira/jsd-docs-039/Managing+access+to+your+service+desk\"},\"kb\":{\"default\":\"https://confluence.atlassian.com/display/SDKB/\",\"troubleshooting.user.management.issues\":\"https://confluence.atlassian.com/display/SDKB/Troubleshooting+issues+with+service+desk+user+management\",\"legacytransition\":\"https://confluence.atlassian.com/display/SDKB/Replacing+legacy+automatic+transitions+with+automation+rules\",\"umtroubleshoot\":\"https://confluence.atlassian.com/display/SDKB/Troubleshooting+issues+with+service+desk+user+management\"}}";
WRM._unparsedData["com.atlassian.servicedesk.core-ui:util-base-url.base-url"]="\"https://issues.apache.org/jira\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"6e5fb28ba07302\"";
WRM._unparsedData["project-id"]="12310110";
WRM._unparsedData["project-key"]="\"LUCENE\"";
WRM._unparsedData["project-name"]="\"Lucene - Core\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="12310110";
WRM._unparsedData["projectKey"]="\"LUCENE\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/1a6b21131945f6f49ff48336b49ca3fe-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/37a6e594cbbfd462a8a54d5aa11475c1/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/d8484c9183f546511a8e336a8779bcd9-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d3b35d835f8f46fc3b53bb4db7f85158-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/37a6e594cbbfd462a8a54d5aa11475c1/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/71d42e74136d842a3ef4d5d136484843-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/95a4826c265852f4904f1e0e7300df68-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/944bb39eced1b35cfc7194aa02eb5a5a/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true&amp;sd_operational=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/5a8f0f8b8aa8f96a4f0f7e9e248d62f3-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true&amp;sd_operational=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="LUCENE-888"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[LUCENE-888] Improve indexing performance by increasing internal buffer sizes - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[LUCENE-888] Improve indexing performance by increasing internal buffer sizes - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/LUCENE" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FLUCENE-888">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="12310110" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Lucene - Core'" src="https://issues.apache.org/jira/secure/projectavatar?pid=12310110&amp;avatarId=10061"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/LUCENE">Lucene - Core</a></li>
                 <li><a class="issue-link" data-issue-key="LUCENE-888" href="/jira/browse/LUCENE-888" id="key-val" rel="12370045">LUCENE-888</a></li>
                </ol>
                <h1 id="summary-val">Improve indexing performance by increasing internal buffer sizes</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FLUCENE-888"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/LUCENE-888/LUCENE-888.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/LUCENE-888/LUCENE-888.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/LUCENE-888/LUCENE-888.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/LUCENE-888/LUCENE-888.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" title="Improvement - An improvement or enhancement to an existing feature or task." width="16"> Improvement </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/minor.svg" title="Minor - Minor loss of function, or other problem where easy workaround is present." width="16"> Minor </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> <span class="shorten" id="versions-field"> <span title="2.1 ">2.1</span> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+LUCENE+AND+fixVersion+%3D+2.2" title="2.2 ">2.2</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> <span class="shorten" id="components-field"> <a href="/jira/issues/?jql=project+%3D+LUCENE+AND+component+%3D+%22core%2Findex%22" title="core/index issues with indexing code">core/index</a> </span> </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <span class="labels" id="labels-12370045-value">None</span> 
                   </div> 
                  </div> </li> 
                </ul> 
                <div id="customfieldmodule"> 
                 <div class="aui-tabs horizontal-tabs" id="customfield-tabs"> 
                  <div id="customfield-panel-1" class="tabs-pane active-pane"> 
                   <ul class="property-list"> 
                    <li id="rowForcustomfield_12310120" class="item"> 
                     <div class="wrap"> 
                      <strong title="Lucene Fields" class="name">Lucene Fields:</strong> 
                      <div id="customfield_12310120-val" class="value type-multicheckboxes" data-fieldtype="multicheckboxes" data-fieldtypecompletekey="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes"> 
                       <div class="shorten" id="customfield_12310120-field"> 
                        <span>New</span> 
                       </div> 
                      </div> 
                     </div> </li> 
                   </ul> 
                  </div> 
                 </div>
                </div> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p>In working on <a href="https://issues.apache.org/jira/browse/LUCENE-843" title="improve how IndexWriter uses RAM to buffer added documents" class="issue-link" data-issue-key="LUCENE-843"><del>LUCENE-843</del></a>, I noticed that two buffer sizes have a<br> substantial impact on overall indexing performance.</p> 
                  <p>First is BufferedIndexOutput.BUFFER_SIZE (also used by<br> BufferedIndexInput). Second is CompoundFileWriter's buffer used to<br> actually build the compound file. Both are now 1 KB (1024 bytes).</p> 
                  <p>I ran the same indexing test I'm using for <a href="https://issues.apache.org/jira/browse/LUCENE-843" title="improve how IndexWriter uses RAM to buffer added documents" class="issue-link" data-issue-key="LUCENE-843"><del>LUCENE-843</del></a>. I'm indexing<br> ~5,500 byte plain text docs derived from the Europarl corpus<br> (English). I index 200,000 docs with compound file enabled and term<br> vector positions &amp; offsets stored plus stored fields. I flush<br> documents at 16 MB RAM usage, and I set maxBufferedDocs carefully to<br> not hit <a href="https://issues.apache.org/jira/browse/LUCENE-845" title="If you &quot;flush by RAM usage&quot; then IndexWriter may over-merge" class="issue-link" data-issue-key="LUCENE-845"><del>LUCENE-845</del></a>. The resulting index is 1.7 GB. The index is not<br> optimized in the end and I left mergeFactor @ 10.</p> 
                  <p>I ran the tests on a quad-core OS X 10 machine with 4-drive RAID 0 IO<br> system.</p> 
                  <p>At 1 KB (current Lucene trunk) it takes 622 sec to build the index; if<br> I increase both buffers to 8 KB it takes 554 sec to build the index,<br> which is an 11% overall gain!</p> 
                  <p>I will run more tests to see if there is a natural knee in the curve<br> (buffer size above which we don't really gain much more performance).</p> 
                  <p>I'm guessing we should leave BufferedIndexInput's default BUFFER_SIZE<br> at 1024, at least for now. During searching there can be quite a few<br> of this class instantiated, and likely a larger buffer size for the<br> freq/prox streams could actually hurt search performance for those<br> searches that use skipping.</p> 
                  <p>The CompoundFileWriter buffer is created only briefly, so I think we<br> can use a fairly large (32 KB?) buffer there. And there should not be<br> too many BufferedIndexOutputs alive at once so I think a large-ish<br> buffer (16 KB?) should be OK.</p> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/LUCENE-888?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/LUCENE-888?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/LUCENE-888?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/LUCENE-888?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12358226" data-issue-id="12370045" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12358226/LUCENE-888.patch" draggable="true" data-downloadurl="text/plain:LUCENE-888.patch:https://issues.apache.org/jira/secure/attachment/12358226/LUCENE-888.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12358226/LUCENE-888.patch" title="Latest  25/May/07 12:07 - Michael McCandless" draggable="true" data-downloadurl="text/plain:LUCENE-888.patch:https://issues.apache.org/jira/secure/attachment/12358226/LUCENE-888.patch">LUCENE-888.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2007-05-25T12:07:19.224Z">25/May/07 12:07</time>
                   </dd>
                   <dd class="attachment-size">
                    26 kB
                   </dd>
                   <dd class="attachment-author">
                    Michael McCandless
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12358279" data-issue-id="12370045" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12358279/LUCENE-888.take2.patch" draggable="true" data-downloadurl="text/plain:LUCENE-888.take2.patch:https://issues.apache.org/jira/secure/attachment/12358279/LUCENE-888.take2.patch"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12358279/LUCENE-888.take2.patch" title="Latest  25/May/07 21:09 - Michael McCandless" draggable="true" data-downloadurl="text/plain:LUCENE-888.take2.patch:https://issues.apache.org/jira/secure/attachment/12358279/LUCENE-888.take2.patch">LUCENE-888.take2.patch</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2007-05-25T21:09:40.906Z">25/May/07 21:09</time>
                   </dd>
                   <dd class="attachment-size">
                    26 kB
                   </dd>
                   <dd class="attachment-author">
                    Michael McCandless
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="linkingmodule" class="module toggle-wrap">
               <div id="linkingmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Issue Links</h2>
               </div>
               <div class="mod-content"> 
                <div class="links-container" data-default-link-icon="/jira/images/icons/generic_link_16.png"> 
                 <dl class="links-list "> 
                  <dt title="is depended upon by">
                   is depended upon by
                  </dt> 
                  <dd id="internal-12367718_10001"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="LUCENE-866: Multi-level skipping on posting lists"> <a href="/jira/browse/LUCENE-866" data-issue-key="LUCENE-866" class="issue-link link-title resolution">LUCENE-866</a> <span class="link-summary">Multi-level skipping on posting lists</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/minor.svg" width="16" height="16" title="Minor - Minor loss of function, or other problem where easy workaround is present." alt="Minor - Minor loss of function, or other problem where easy workaround is present."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                </div> 
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_mikemccand" rel="mikemccand" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Michael McCandless&quot;,&quot;emailAddress&quot;:&quot;lucene@mikemccandless.com&quot;,&quot;username&quot;:&quot;mikemccand&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mikemccand"></span></span> Michael McCandless </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_mikemccand" rel="mikemccand" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Michael McCandless&quot;,&quot;emailAddress&quot;:&quot;lucene@mikemccandless.com&quot;,&quot;username&quot;:&quot;mikemccand&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mikemccand"></span></span> Michael McCandless </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">2</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">0</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="23/May/07 13:23"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2007-05-23T13:23:00+0000">23/May/07 13:23</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="02/May/13 02:29"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2013-05-02T02:29:06+0000">02/May/13 02:29</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="29/May/07 15:15"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2007-05-29T15:15:41+0000">29/May/07 15:15</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for n/a, Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/LUCENE-888?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/LUCENE-888?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-12498652\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498652&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498652\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498652_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498652_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 14:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T14:20:48+0000\'\u003e24\\/May\\/07 14:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; At 1 KB (current Lucene trunk) it takes 622 sec to build the index; if\u003cbr\\/\u003e\\n&gt; I increase both buffers to 8 KB it takes 554 sec to build the index,\u003cbr\\/\u003e\\n&gt; which is an 11% overall gain!\u003c\\/p\u003e\\n\\n\u003cp\u003eCool!\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; I\'m guessing we should leave BufferedIndexInput\'s default BUFFER_SIZE\u003cbr\\/\u003e\\n&gt; at 1024, at least for now.  During searching there can be quite a few\u003cbr\\/\u003e\\n&gt; of this class instantiated, and likely a larger buffer size for the\u003cbr\\/\u003e\\n&gt; freq\\/prox streams could actually hurt search performance for those\u003cbr\\/\u003e\\n&gt; searches that use skipping.\u003c\\/p\u003e\\n\\n\u003cp\u003eI submitted a patch for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e which avoids copying the buffer when\u003cbr\\/\u003e\\na BufferedIndexInput is cloned. With this patch we could also add a \u003cbr\\/\u003e\\nmethod setBufferSize(int) to BufferedIndexInput. This method has to\u003cbr\\/\u003e\\nbe called then right after the input has been created or cloned and\u003cbr\\/\u003e\\nbefore the first read is performed (the first read operation allocates\u003cbr\\/\u003e\\nthe buffer). If called later it wouldn\'t have any effect. This would\u003cbr\\/\u003e\\nallow us to adjust the buffer size dynamically, e. g. use large buffers\u003cbr\\/\u003e\\nfor segment merges and stored fields, but smaller ones for freq\\/prox \u003cbr\\/\u003e\\nstreams, maybe dependent on the document frequency. \u003cbr\\/\u003e\\nWhat do you think?\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; The CompoundFileWriter buffer is created only briefly, so I think we\u003cbr\\/\u003e\\n&gt; can use a fairly large (32 KB?) buffer there.  And there should not be\u003cbr\\/\u003e\\n&gt; too many BufferedIndexOutputs alive at once so I think a large-ish\u003cbr\\/\u003e\\n&gt; buffer (16 KB?) should be OK.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m wondering how much performance benefits if you increase the buffer \u003cbr\\/\u003e\\nsize beyond the file system\'s page size? Does it make a big difference\u003cbr\\/\u003e\\nif you use 8 KB, 16 KB or 32 KB? If the answer is yes, then I think\u003cbr\\/\u003e\\nthe numbers you propose are good.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498652_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498652_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 14:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T14:20:48+0000\'\u003e24\\/May\\/07 14:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; At 1 KB (current Lucene trunk) it takes 622 sec to build the index; if \\n&gt; I increase both buffers to 8 KB it takes 554 sec to build the index, \\n&gt; which is an 11% overall gain! \\n\\n Cool! \\n\\n &gt; I\'m guessing we should leave BufferedIndexInput\'s default BUFFER_SIZE \\n&gt; at 1024, at least for now.  During searching there can be quite a few \\n&gt; of this class instantiated, and likely a larger buffer size for the \\n&gt; freq\\/prox streams could actually hurt search performance for those \\n&gt; searches that use skipping. \\n\\n I submitted a patch for   LUCENE-430   which avoids copying the buffer when \\na BufferedIndexInput is cloned. With this patch we could also add a  \\nmethod setBufferSize(int) to BufferedIndexInput. This method has to \\nbe called then right after the input has been created or cloned and \\nbefore the first read is performed (the first read operation allocates \\nthe buffer). If called later it wouldn\'t have any effect. This would \\nallow us to adjust the buffer size dynamically, e. g. use large buffers \\nfor segment merges and stored fields, but smaller ones for freq\\/prox  \\nstreams, maybe dependent on the document frequency.  \\nWhat do you think? \\n\\n &gt; The CompoundFileWriter buffer is created only briefly, so I think we \\n&gt; can use a fairly large (32 KB?) buffer there.  And there should not be \\n&gt; too many BufferedIndexOutputs alive at once so I think a large-ish \\n&gt; buffer (16 KB?) should be OK. \\n\\n I\'m wondering how much performance benefits if you increase the buffer  \\nsize beyond the file system\'s page size? Does it make a big difference \\nif you use 8 KB, 16 KB or 32 KB? If the answer is yes, then I think \\nthe numbers you propose are good.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498696\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498696&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498696\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498696_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498696_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 16:08\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T16:08:24+0000\'\u003e24\\/May\\/07 16:08\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; &gt; I\'m guessing we should leave BufferedIndexInput\'s default BUFFER_SIZE\u003cbr\\/\u003e\\n&gt; &gt; at 1024, at least for now.  During searching there can be quite a few\u003cbr\\/\u003e\\n&gt; &gt; of this class instantiated, and likely a larger buffer size for the\u003cbr\\/\u003e\\n&gt; &gt; freq\\/prox streams could actually hurt search performance for those\u003cbr\\/\u003e\\n&gt; &gt; searches that use skipping.\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; I submitted a patch for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e which avoids copying the buffer when\u003cbr\\/\u003e\\n&gt; a BufferedIndexInput is cloned. With this patch we could also add a \u003cbr\\/\u003e\\n&gt; method setBufferSize(int) to BufferedIndexInput. This method has to\u003cbr\\/\u003e\\n&gt; be called then right after the input has been created or cloned and\u003cbr\\/\u003e\\n&gt; before the first read is performed (the first read operation allocates\u003cbr\\/\u003e\\n&gt; the buffer). If called later it wouldn\'t have any effect. This would\u003cbr\\/\u003e\\n&gt; allow us to adjust the buffer size dynamically, e. g. use large buffers\u003cbr\\/\u003e\\n&gt; for segment merges and stored fields, but smaller ones for freq\\/prox \u003cbr\\/\u003e\\n&gt; streams, maybe dependent on the document frequency. \u003cbr\\/\u003e\\n&gt; What do you think?\u003c\\/p\u003e\\n\\n\u003cp\u003eI like that idea!\u003c\\/p\u003e\\n\\n\u003cp\u003eI am actually seeing that increased buffer sizes for\u003cbr\\/\u003e\\nBufferedIndexInput help performance of indexing as well (up to ~5%\u003cbr\\/\u003e\\njust changing this buffer), so I think we do want to increase this but\u003cbr\\/\u003e\\nonly for merging.\u003c\\/p\u003e\\n\\n\u003cp\u003eI wonder if we should just add a ctor to BufferedIndexInput that takes\u003cbr\\/\u003e\\nthe bufferSize?  This would avoid the surprising API caveat you\u003cbr\\/\u003e\\ndescribe above.  The problem is, then all classes (SegmentTermDocs,\u003cbr\\/\u003e\\nSegmentTermPositions, FieldsReader, etc.) that open an IndexInput\u003cbr\\/\u003e\\nwould also have to have ctors to change buffer sizes.  Even if we do\u003cbr\\/\u003e\\nsetBufferSize instead of new ctor we have some cases (eg at least\u003cbr\\/\u003e\\nSegmentTermEnum) where bytes are read during construction so it\'s too\u003cbr\\/\u003e\\nlate for caller to then change buffer size.  Hmmm.  Not clear how to\u003cbr\\/\u003e\\ndo this cleanly...\u003c\\/p\u003e\\n\\n\u003cp\u003eMaybe we do the setBufferSize approach, but, if the buffer already\u003cbr\\/\u003e\\nexists, rather than throwing an exception we check if the new size is\u003cbr\\/\u003e\\ngreater than the old size and if so we grow the buffer?  I can code this\u003cbr\\/\u003e\\nup.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; &gt; The CompoundFileWriter buffer is created only briefly, so I think we\u003cbr\\/\u003e\\n&gt; &gt; can use a fairly large (32 KB?) buffer there.  And there should not be\u003cbr\\/\u003e\\n&gt; &gt; too many BufferedIndexOutputs alive at once so I think a large-ish\u003cbr\\/\u003e\\n&gt; &gt; buffer (16 KB?) should be OK.\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; I\'m wondering how much performance benefits if you increase the buffer \u003cbr\\/\u003e\\n&gt; size beyond the file system\'s page size? Does it make a big difference\u003cbr\\/\u003e\\n&gt; if you use 8 KB, 16 KB or 32 KB? If the answer is yes, then I think\u003cbr\\/\u003e\\n&gt; the numbers you propose are good.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m testing now different sizes of each of these three buffers\u003cbr\\/\u003e\\n... will post the results.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498696_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498696_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 16:08\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T16:08:24+0000\'\u003e24\\/May\\/07 16:08\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; &gt; I\'m guessing we should leave BufferedIndexInput\'s default BUFFER_SIZE \\n&gt; &gt; at 1024, at least for now.  During searching there can be quite a few \\n&gt; &gt; of this class instantiated, and likely a larger buffer size for the \\n&gt; &gt; freq\\/prox streams could actually hurt search performance for those \\n&gt; &gt; searches that use skipping. \\n&gt;  \\n&gt; I submitted a patch for   LUCENE-430   which avoids copying the buffer when \\n&gt; a BufferedIndexInput is cloned. With this patch we could also add a  \\n&gt; method setBufferSize(int) to BufferedIndexInput. This method has to \\n&gt; be called then right after the input has been created or cloned and \\n&gt; before the first read is performed (the first read operation allocates \\n&gt; the buffer). If called later it wouldn\'t have any effect. This would \\n&gt; allow us to adjust the buffer size dynamically, e. g. use large buffers \\n&gt; for segment merges and stored fields, but smaller ones for freq\\/prox  \\n&gt; streams, maybe dependent on the document frequency.  \\n&gt; What do you think? \\n\\n I like that idea! \\n\\n I am actually seeing that increased buffer sizes for \\nBufferedIndexInput help performance of indexing as well (up to ~5% \\njust changing this buffer), so I think we do want to increase this but \\nonly for merging. \\n\\n I wonder if we should just add a ctor to BufferedIndexInput that takes \\nthe bufferSize?  This would avoid the surprising API caveat you \\ndescribe above.  The problem is, then all classes (SegmentTermDocs, \\nSegmentTermPositions, FieldsReader, etc.) that open an IndexInput \\nwould also have to have ctors to change buffer sizes.  Even if we do \\nsetBufferSize instead of new ctor we have some cases (eg at least \\nSegmentTermEnum) where bytes are read during construction so it\'s too \\nlate for caller to then change buffer size.  Hmmm.  Not clear how to \\ndo this cleanly... \\n\\n Maybe we do the setBufferSize approach, but, if the buffer already \\nexists, rather than throwing an exception we check if the new size is \\ngreater than the old size and if so we grow the buffer?  I can code this \\nup. \\n\\n &gt; &gt; The CompoundFileWriter buffer is created only briefly, so I think we \\n&gt; &gt; can use a fairly large (32 KB?) buffer there.  And there should not be \\n&gt; &gt; too many BufferedIndexOutputs alive at once so I think a large-ish \\n&gt; &gt; buffer (16 KB?) should be OK. \\n&gt;  \\n&gt; I\'m wondering how much performance benefits if you increase the buffer  \\n&gt; size beyond the file system\'s page size? Does it make a big difference \\n&gt; if you use 8 KB, 16 KB or 32 KB? If the answer is yes, then I think \\n&gt; the numbers you propose are good. \\n\\n I\'m testing now different sizes of each of these three buffers \\n... will post the results.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498714\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498714&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498714\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498714_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498714_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 16:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T16:56:24+0000\'\u003e24\\/May\\/07 16:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; I wonder if we should just add a ctor to BufferedIndexInput that takes\u003cbr\\/\u003e\\n&gt; the bufferSize? This would avoid the surprising API caveat you\u003cbr\\/\u003e\\n&gt; describe above. The problem is, then all classes (SegmentTermDocs,\u003cbr\\/\u003e\\n&gt; SegmentTermPositions, FieldsReader, etc.) that open an IndexInput\u003cbr\\/\u003e\\n&gt; would also have to have ctors to change buffer sizes. Even if we do\u003cbr\\/\u003e\\n&gt; setBufferSize instead of new ctor we have some cases (eg at least\u003cbr\\/\u003e\\n&gt; SegmentTermEnum) where bytes are read during construction so it\'s too\u003cbr\\/\u003e\\n&gt; late for caller to then change buffer size. Hmmm. Not clear how to\u003cbr\\/\u003e\\n&gt; do this cleanly...\u003c\\/p\u003e\\n\\n\u003cp\u003eYeah I was thinking about the ctor approach as well. Actually \u003cbr\\/\u003e\\nBufferedIndexInput does not have a public ctor so far, it\'s created by \u003cbr\\/\u003e\\nusing Directory.openInput(String fileName). And to add a new ctor would \u003cbr\\/\u003e\\nmean an API change, so subclasses wouldn\'t compile anymore without \u003cbr\\/\u003e\\nchanges. \u003cbr\\/\u003e\\nWhat me might want to do instead is to add a new new method\u003cbr\\/\u003e\\nopenInput(String fileName, int bufferSize) to Directory which calls\u003cbr\\/\u003e\\nthe existing openInput(String fileName) by default, so subclasses of\u003cbr\\/\u003e\\nDirectory would ignore the bufferSize parameter by default. Then we\u003cbr\\/\u003e\\ncan change FSDirectory to overwrite openInput(String, int):\u003c\\/p\u003e\\n\\n\u003cp\u003e  public IndexInput openInput(String name, int bufferSize) \u003cbr\\/\u003e\\n\\t\\tthrows IOException \u003c\\/p\u003e\\n{\\n    FSIndexInput input = new FSIndexInput(new File(directory, name));\\n\\tinput.setBufferSize(bufferSize);\\n\\treturn input;\\n  }\\n\\n\u003cp\u003eThis should solve the problems you mentioned like in SegmentTermEnum \u003cbr\\/\u003e\\nand we don\'t have to support setBufferSize() after a read has been\u003cbr\\/\u003e\\nperformed. It has also the advantage that we safe an instanceof and\u003cbr\\/\u003e\\ncast from IndexInput to BufferedIndexInput before setBufferSize()\u003cbr\\/\u003e\\ncan be called.\u003c\\/p\u003e\\n\\n\u003cp\u003eAfter a clone however, we would still have to cast to \u003cbr\\/\u003e\\nBufferedIndexInput before setBufferSize() can be called.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498714_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498714_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 16:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T16:56:24+0000\'\u003e24\\/May\\/07 16:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; I wonder if we should just add a ctor to BufferedIndexInput that takes \\n&gt; the bufferSize? This would avoid the surprising API caveat you \\n&gt; describe above. The problem is, then all classes (SegmentTermDocs, \\n&gt; SegmentTermPositions, FieldsReader, etc.) that open an IndexInput \\n&gt; would also have to have ctors to change buffer sizes. Even if we do \\n&gt; setBufferSize instead of new ctor we have some cases (eg at least \\n&gt; SegmentTermEnum) where bytes are read during construction so it\'s too \\n&gt; late for caller to then change buffer size. Hmmm. Not clear how to \\n&gt; do this cleanly... \\n\\n Yeah I was thinking about the ctor approach as well. Actually  \\nBufferedIndexInput does not have a public ctor so far, it\'s created by  \\nusing Directory.openInput(String fileName). And to add a new ctor would  \\nmean an API change, so subclasses wouldn\'t compile anymore without  \\nchanges.  \\nWhat me might want to do instead is to add a new new method \\nopenInput(String fileName, int bufferSize) to Directory which calls \\nthe existing openInput(String fileName) by default, so subclasses of \\nDirectory would ignore the bufferSize parameter by default. Then we \\ncan change FSDirectory to overwrite openInput(String, int): \\n\\n   public IndexInput openInput(String name, int bufferSize)  \\n\\t\\tthrows IOException  \\n{\\n    FSIndexInput input = new FSIndexInput(new File(directory, name));\\n\\tinput.setBufferSize(bufferSize);\\n\\treturn input;\\n  }\\n\\n This should solve the problems you mentioned like in SegmentTermEnum  \\nand we don\'t have to support setBufferSize() after a read has been \\nperformed. It has also the advantage that we safe an instanceof and \\ncast from IndexInput to BufferedIndexInput before setBufferSize() \\ncan be called. \\n\\n After a clone however, we would still have to cast to  \\nBufferedIndexInput before setBufferSize() can be called.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498739\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498739&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498739\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498739_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498739_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 17:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T17:55:13+0000\'\u003e24\\/May\\/07 17:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; &gt; I wonder if we should just add a ctor to BufferedIndexInput that takes\u003cbr\\/\u003e\\n&gt; &gt; the bufferSize? This would avoid the surprising API caveat you\u003cbr\\/\u003e\\n&gt; &gt; describe above. The problem is, then all classes (SegmentTermDocs,\u003cbr\\/\u003e\\n&gt; &gt; SegmentTermPositions, FieldsReader, etc.) that open an IndexInput\u003cbr\\/\u003e\\n&gt; &gt; would also have to have ctors to change buffer sizes. Even if we do\u003cbr\\/\u003e\\n&gt; &gt; setBufferSize instead of new ctor we have some cases (eg at least\u003cbr\\/\u003e\\n&gt; &gt; SegmentTermEnum) where bytes are read during construction so it\'s too\u003cbr\\/\u003e\\n&gt; &gt; late for caller to then change buffer size. Hmmm. Not clear how to\u003cbr\\/\u003e\\n&gt; &gt; do this cleanly...\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; Yeah I was thinking about the ctor approach as well. Actually \u003cbr\\/\u003e\\n&gt; BufferedIndexInput does not have a public ctor so far, it\'s created by \u003cbr\\/\u003e\\n&gt; using Directory.openInput(String fileName). And to add a new ctor would \u003cbr\\/\u003e\\n&gt; mean an API change, so subclasses wouldn\'t compile anymore without \u003cbr\\/\u003e\\n&gt; changes. \u003c\\/p\u003e\\n\\n\u003cp\u003eActually, it does have a default public constructor right?  Ie if we add\u003c\\/p\u003e\\n\\n\u003cp\u003e  public BufferedIndexInput()\u003cbr\\/\u003e\\n  public BufferedIndexInput(int bufferSize)\u003c\\/p\u003e\\n\\n\u003cp\u003ethen I think we don\'t break API backwards compatibility?\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; After a clone however, we would still have to cast to\u003cbr\\/\u003e\\n&gt; BufferedIndexInput before setBufferSize() can be called.\u003c\\/p\u003e\\n\\n\u003cp\u003eI plan to add \\\"private int bufferSize\\\" to BufferedIndexInput,\u003cbr\\/\u003e\\ndefaulting to BUFFER_SIZE.  I think then it would just work w\\/ your\u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e patch because your patch sets the clone\'s buffer to null\u003cbr\\/\u003e\\nand then when the clone allocates its buffer it will be length\u003cbr\\/\u003e\\nbufferSize.  I think?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498739_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498739_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 17:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T17:55:13+0000\'\u003e24\\/May\\/07 17:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; &gt; I wonder if we should just add a ctor to BufferedIndexInput that takes \\n&gt; &gt; the bufferSize? This would avoid the surprising API caveat you \\n&gt; &gt; describe above. The problem is, then all classes (SegmentTermDocs, \\n&gt; &gt; SegmentTermPositions, FieldsReader, etc.) that open an IndexInput \\n&gt; &gt; would also have to have ctors to change buffer sizes. Even if we do \\n&gt; &gt; setBufferSize instead of new ctor we have some cases (eg at least \\n&gt; &gt; SegmentTermEnum) where bytes are read during construction so it\'s too \\n&gt; &gt; late for caller to then change buffer size. Hmmm. Not clear how to \\n&gt; &gt; do this cleanly... \\n&gt;  \\n&gt; Yeah I was thinking about the ctor approach as well. Actually  \\n&gt; BufferedIndexInput does not have a public ctor so far, it\'s created by  \\n&gt; using Directory.openInput(String fileName). And to add a new ctor would  \\n&gt; mean an API change, so subclasses wouldn\'t compile anymore without  \\n&gt; changes.  \\n\\n Actually, it does have a default public constructor right?  Ie if we add \\n\\n   public BufferedIndexInput() \\n  public BufferedIndexInput(int bufferSize) \\n\\n then I think we don\'t break API backwards compatibility? \\n\\n &gt; After a clone however, we would still have to cast to \\n&gt; BufferedIndexInput before setBufferSize() can be called. \\n\\n I plan to add \\\"private int bufferSize\\\" to BufferedIndexInput, \\ndefaulting to BUFFER_SIZE.  I think then it would just work w\\/ your \\n  LUCENE-430   patch because your patch sets the clone\'s buffer to null \\nand then when the clone allocates its buffer it will be length \\nbufferSize.  I think?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498757\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498757&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498757\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498757_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498757_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 18:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T18:19:32+0000\'\u003e24\\/May\\/07 18:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; Actually, it does have a default public constructor right? Ie if we add\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt;  public BufferedIndexInput()\u003cbr\\/\u003e\\n&gt;  public BufferedIndexInput(int bufferSize)\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; then I think we don\'t break API backwards compatibility?\u003c\\/p\u003e\\n\\n\u003cp\u003eOups! Of course, you are right. What was I thinking...\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; I plan to add \\\"private int bufferSize\\\" to BufferedIndexInput,\u003cbr\\/\u003e\\n&gt; defaulting to BUFFER_SIZE. I think then it would just work w\\/ your\u003cbr\\/\u003e\\n&gt; \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e patch because your patch sets the clone\'s buffer to null\u003cbr\\/\u003e\\n&gt; and then when the clone allocates its buffer it will be length\u003cbr\\/\u003e\\n&gt; bufferSize. I think?\u003c\\/p\u003e\\n\\n\u003cp\u003eTrue. But it would be nice if it was possible to change the buffer size\u003cbr\\/\u003e\\nafter a clone. For example in SegmentTermDocs we could then adjust the\u003cbr\\/\u003e\\nbuffer size of the cloned freqStream according to the document frequency.\u003cbr\\/\u003e\\nAnd in my multi-level skipping patch (\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-866\\\" title=\\\"Multi-level skipping on posting lists\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-866\\\"\u003e\u003cdel\u003eLUCENE-866\u003c\\/del\u003e\u003c\\/a\u003e) I could also benefit\u003cbr\\/\u003e\\nfrom this functionality.\u003c\\/p\u003e\\n\\n\u003cp\u003eHmm, in SegmentTermDocs the freq stream is cloned in the ctor. If the\u003cbr\\/\u003e\\nsame instance of SegmentTermDocs is used for different terms, then \u003cbr\\/\u003e\\nthe same clone is used. So actually it would be nice it was possible to \u003cbr\\/\u003e\\nchange the buffer size after read has performed.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Maybe we do the setBufferSize approach, but, if the buffer already\u003cbr\\/\u003e\\n&gt; exists, rather than throwing an exception we check if the new size is\u003cbr\\/\u003e\\n&gt; greater than the old size and if so we grow the buffer? I can code this\u003cbr\\/\u003e\\n&gt; up. \u003c\\/p\u003e\\n\\n\u003cp\u003eSo yes, I think we should implement it this way.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498757_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498757_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 18:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T18:19:32+0000\'\u003e24\\/May\\/07 18:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; Actually, it does have a default public constructor right? Ie if we add \\n\\n &gt;  public BufferedIndexInput() \\n&gt;  public BufferedIndexInput(int bufferSize) \\n\\n &gt; then I think we don\'t break API backwards compatibility? \\n\\n Oups! Of course, you are right. What was I thinking... \\n\\n &gt; I plan to add \\\"private int bufferSize\\\" to BufferedIndexInput, \\n&gt; defaulting to BUFFER_SIZE. I think then it would just work w\\/ your \\n&gt;   LUCENE-430   patch because your patch sets the clone\'s buffer to null \\n&gt; and then when the clone allocates its buffer it will be length \\n&gt; bufferSize. I think? \\n\\n True. But it would be nice if it was possible to change the buffer size \\nafter a clone. For example in SegmentTermDocs we could then adjust the \\nbuffer size of the cloned freqStream according to the document frequency. \\nAnd in my multi-level skipping patch (  LUCENE-866  ) I could also benefit \\nfrom this functionality. \\n\\n Hmm, in SegmentTermDocs the freq stream is cloned in the ctor. If the \\nsame instance of SegmentTermDocs is used for different terms, then  \\nthe same clone is used. So actually it would be nice it was possible to  \\nchange the buffer size after read has performed. \\n\\n &gt; Maybe we do the setBufferSize approach, but, if the buffer already \\n&gt; exists, rather than throwing an exception we check if the new size is \\n&gt; greater than the old size and if so we grow the buffer? I can code this \\n&gt; up.  \\n\\n So yes, I think we should implement it this way.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498776\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498776&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498776\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498776_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498776_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 18:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T18:55:26+0000\'\u003e24\\/May\\/07 18:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; &gt; I plan to add \\\"private int bufferSize\\\" to BufferedIndexInput,\u003cbr\\/\u003e\\n&gt; &gt; defaulting to BUFFER_SIZE. I think then it would just work w\\/ your\u003cbr\\/\u003e\\n&gt; &gt; \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e patch because your patch sets the clone\'s buffer to null\u003cbr\\/\u003e\\n&gt; &gt; and then when the clone allocates its buffer it will be length\u003cbr\\/\u003e\\n&gt; &gt; bufferSize. I think?\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; True. But it would be nice if it was possible to change the buffer size\u003cbr\\/\u003e\\n&gt; after a clone. For example in SegmentTermDocs we could then adjust the\u003cbr\\/\u003e\\n&gt; buffer size of the cloned freqStream according to the document frequency.\u003cbr\\/\u003e\\n&gt; And in my multi-level skipping patch (\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-866\\\" title=\\\"Multi-level skipping on posting lists\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-866\\\"\u003e\u003cdel\u003eLUCENE-866\u003c\\/del\u003e\u003c\\/a\u003e) I could also benefit\u003cbr\\/\u003e\\n&gt; from this functionality.\u003c\\/p\u003e\\n\\n\u003cp\u003eOK, I agree: let\'s add a BufferedIndexInput.setBufferSize() and also\u003cbr\\/\u003e\\nopenInput(path, bufferSize) to Directory base class &amp; to FSDirectory.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Hmm, in SegmentTermDocs the freq stream is cloned in the ctor. If the\u003cbr\\/\u003e\\n&gt; same instance of SegmentTermDocs is used for different terms, then \u003cbr\\/\u003e\\n&gt; the same clone is used. So actually it would be nice it was possible to \u003cbr\\/\u003e\\n&gt; change the buffer size after read has performed.\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; &gt; Maybe we do the setBufferSize approach, but, if the buffer already\u003cbr\\/\u003e\\n&gt; &gt; exists, rather than throwing an exception we check if the new size is\u003cbr\\/\u003e\\n&gt; &gt; greater than the old size and if so we grow the buffer? I can code this\u003cbr\\/\u003e\\n&gt; &gt; up. \u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; So yes, I think we should implement it this way.\u003c\\/p\u003e\\n\\n\u003cp\u003eOK I will do this.  Actually, I think we should also allow making the\u003cbr\\/\u003e\\nbuffer smaller this way.  Meaning, I will preserve buffer contents\u003cbr\\/\u003e\\n(starting from bufferPosition) as much as is allowed by the smaller\u003cbr\\/\u003e\\nbuffer.  This way there is no restriction on using this method\u003cbr\\/\u003e\\nvs. having read bytes already (\\\"principle of least surprise\\\").\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498776_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498776_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 18:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T18:55:26+0000\'\u003e24\\/May\\/07 18:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; &gt; I plan to add \\\"private int bufferSize\\\" to BufferedIndexInput, \\n&gt; &gt; defaulting to BUFFER_SIZE. I think then it would just work w\\/ your \\n&gt; &gt;   LUCENE-430   patch because your patch sets the clone\'s buffer to null \\n&gt; &gt; and then when the clone allocates its buffer it will be length \\n&gt; &gt; bufferSize. I think? \\n&gt;  \\n&gt; True. But it would be nice if it was possible to change the buffer size \\n&gt; after a clone. For example in SegmentTermDocs we could then adjust the \\n&gt; buffer size of the cloned freqStream according to the document frequency. \\n&gt; And in my multi-level skipping patch (  LUCENE-866  ) I could also benefit \\n&gt; from this functionality. \\n\\n OK, I agree: let\'s add a BufferedIndexInput.setBufferSize() and also \\nopenInput(path, bufferSize) to Directory base class &amp; to FSDirectory. \\n\\n &gt; Hmm, in SegmentTermDocs the freq stream is cloned in the ctor. If the \\n&gt; same instance of SegmentTermDocs is used for different terms, then  \\n&gt; the same clone is used. So actually it would be nice it was possible to  \\n&gt; change the buffer size after read has performed. \\n&gt;  \\n&gt; &gt; Maybe we do the setBufferSize approach, but, if the buffer already \\n&gt; &gt; exists, rather than throwing an exception we check if the new size is \\n&gt; &gt; greater than the old size and if so we grow the buffer? I can code this \\n&gt; &gt; up.  \\n&gt;  \\n&gt; So yes, I think we should implement it this way. \\n\\n OK I will do this.  Actually, I think we should also allow making the \\nbuffer smaller this way.  Meaning, I will preserve buffer contents \\n(starting from bufferPosition) as much as is allowed by the smaller \\nbuffer.  This way there is no restriction on using this method \\nvs. having read bytes already (\\\"principle of least surprise\\\").              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498780\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498780&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498780\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498780_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498780_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:06:56+0000\'\u003e24\\/May\\/07 19:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; OK I will do this. Actually, I think we should also allow making the\u003cbr\\/\u003e\\n&gt; buffer smaller this way. Meaning, I will preserve buffer contents\u003cbr\\/\u003e\\n&gt; (starting from bufferPosition) as much as is allowed by the smaller\u003cbr\\/\u003e\\n&gt; buffer. This way there is no restriction on using this method\u003cbr\\/\u003e\\n&gt; vs. having read bytes already (\\\"principle of least surprise\\\"). \u003c\\/p\u003e\\n\\n\u003cp\u003eYep sounds good. I can code this and commit it with \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e.\u003cbr\\/\u003e\\nIf you want to do it, then I should commit the existing 430 patch\u003cbr\\/\u003e\\nsoon, so that there are no conflicts in our patches?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498780_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498780_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:06:56+0000\'\u003e24\\/May\\/07 19:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; OK I will do this. Actually, I think we should also allow making the \\n&gt; buffer smaller this way. Meaning, I will preserve buffer contents \\n&gt; (starting from bufferPosition) as much as is allowed by the smaller \\n&gt; buffer. This way there is no restriction on using this method \\n&gt; vs. having read bytes already (\\\"principle of least surprise\\\").  \\n\\n Yep sounds good. I can code this and commit it with   LUCENE-430  . \\nIf you want to do it, then I should commit the existing 430 patch \\nsoon, so that there are no conflicts in our patches?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498784\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498784&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498784\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498784_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498784_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:21:46+0000\'\u003e24\\/May\\/07 19:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; &gt; OK I will do this. Actually, I think we should also allow making the\u003cbr\\/\u003e\\n&gt; &gt; buffer smaller this way. Meaning, I will preserve buffer contents\u003cbr\\/\u003e\\n&gt; &gt; (starting from bufferPosition) as much as is allowed by the smaller\u003cbr\\/\u003e\\n&gt; &gt; buffer. This way there is no restriction on using this method\u003cbr\\/\u003e\\n&gt; &gt; vs. having read bytes already (\\\"principle of least surprise\\\").\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; Yep sounds good. I can code this and commit it with \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e.\u003cbr\\/\u003e\\n&gt; If you want to do it, then I should commit the existing 430 patch\u003cbr\\/\u003e\\n&gt; soon, so that there are no conflicts in our patches?\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m actually coding it up now.  Why don\'t you commit \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e\u003cbr\\/\u003e\\nsoonish and then I\'ll update &amp; merge?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12498784_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498784_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:21:46+0000\'\u003e24\\/May\\/07 19:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; &gt; OK I will do this. Actually, I think we should also allow making the \\n&gt; &gt; buffer smaller this way. Meaning, I will preserve buffer contents \\n&gt; &gt; (starting from bufferPosition) as much as is allowed by the smaller \\n&gt; &gt; buffer. This way there is no restriction on using this method \\n&gt; &gt; vs. having read bytes already (\\\"principle of least surprise\\\"). \\n&gt;  \\n&gt; Yep sounds good. I can code this and commit it with   LUCENE-430  . \\n&gt; If you want to do it, then I should commit the existing 430 patch \\n&gt; soon, so that there are no conflicts in our patches? \\n\\n I\'m actually coding it up now.  Why don\'t you commit   LUCENE-430   \\nsoonish and then I\'ll update &amp; merge?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498787\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498787&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498787\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"creamyg\\\" id=\\\"commentauthor_12498787_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=creamyg\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"creamyg\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Marvin Humphrey\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498787_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:31:29+0000\'\u003e24\\/May\\/07 19:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI would like to know why these gains are appearing, and how specific they are to a particular system.  How can the optimum buffer size be deduced?  Is it a factor of hard disk sector size?  Memory page size?  Lucene write behavior pattern? Level X Cache size?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"creamyg\\\" id=\\\"commentauthor_12498787_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=creamyg\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"creamyg\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Marvin Humphrey\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498787_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:31:29+0000\'\u003e24\\/May\\/07 19:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I would like to know why these gains are appearing, and how specific they are to a particular system.  How can the optimum buffer size be deduced?  Is it a factor of hard disk sector size?  Memory page size?  Lucene write behavior pattern? Level X Cache size?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12498793\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12498793&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12498793\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498793_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498793_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:44:48+0000\'\u003e24\\/May\\/07 19:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; I\'m actually coding it up now. Why don\'t you commit \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-430\\\" title=\\\"Reducing buffer sizes for TermDocs.\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-430\\\"\u003e\u003cdel\u003eLUCENE-430\u003c\\/del\u003e\u003c\\/a\u003e\u003cbr\\/\u003e\\n&gt; soonish and then I\'ll update &amp; merge?\u003c\\/p\u003e\\n\\n\u003cp\u003eDone.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12498793_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12498793_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'24\\/May\\/07 19:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-24T19:44:48+0000\'\u003e24\\/May\\/07 19:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; I\'m actually coding it up now. Why don\'t you commit   LUCENE-430   \\n&gt; soonish and then I\'ll update &amp; merge? \\n\\n Done.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499018\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499018&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499018\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499018_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499018_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 10:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T10:09:42+0000\'\u003e25\\/May\\/07 10:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eOK I ran two sets of tests.  First is only on Mac OS X to see how\u003cbr\\/\u003e\\nperformance changes with buffer sizes.  Second was also on Debian\u003cbr\\/\u003e\\nLinux &amp; Windows XP Pro.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe performance gains are 10-18% faster overall.\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eFIRST TEST\u003c\\/p\u003e\\n\\n\u003cp\u003eI increased buffer sizes, separately, for each of BufferedIndexInput,\u003cbr\\/\u003e\\nBufferedIndexOutput and CompoundFileWriter.  Each test is run once on\u003cbr\\/\u003e\\nMac OS X:\u003c\\/p\u003e\\n\\n\u003cp\u003e  BufferedIndexInput\u003c\\/p\u003e\\n\\n\u003cp\u003e      1 K   622 sec (current trunk)\u003cbr\\/\u003e\\n      4 K   607 sec\u003cbr\\/\u003e\\n      8 K   606 sec\u003cbr\\/\u003e\\n     16 K   598 sec\u003cbr\\/\u003e\\n     32 K   606 sec\u003cbr\\/\u003e\\n     64 K   589 sec\u003cbr\\/\u003e\\n    128 K   601 sec\u003c\\/p\u003e\\n\\n\u003cp\u003e  CompoundFileWriter\u003c\\/p\u003e\\n\\n\u003cp\u003e      1 K   622 sec (current trunk)\u003cbr\\/\u003e\\n      4 K   599 sec\u003cbr\\/\u003e\\n      8 K   591 sec\u003cbr\\/\u003e\\n     16 K   578 sec\u003cbr\\/\u003e\\n     32 K   583 sec\u003cbr\\/\u003e\\n     64 K   580 sec\u003c\\/p\u003e\\n\\n\u003cp\u003e  BufferedIndexOutput\u003c\\/p\u003e\\n\\n\u003cp\u003e      1 K   622 sec (current trunk)\u003cbr\\/\u003e\\n      4 K   588 sec\u003cbr\\/\u003e\\n      8 K   576 sec\u003cbr\\/\u003e\\n     16 K   551 sec\u003cbr\\/\u003e\\n     32 K   566 sec\u003cbr\\/\u003e\\n     64 K   555 sec\u003cbr\\/\u003e\\n    128 K   543 sec\u003cbr\\/\u003e\\n    256 K   534 sec\u003cbr\\/\u003e\\n    512 K   564 sec\u003c\\/p\u003e\\n\\n\u003cp\u003eComments:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eThe results are fairly noisy, but, performance does generally get\u003cbr\\/\u003e\\n    better w\\/ larger buffers.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eBufferedIndexOutput seems specifically to like very large output\u003cbr\\/\u003e\\n    buffers; the other two seem to have less but still significant\u003cbr\\/\u003e\\n    effect.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eGiven this I picked 16 K buffer for BufferedIndexOutput, 16 K buffer\u003cbr\\/\u003e\\nfor CompoundFileWriter and 4 K buffer for BufferedIndexInput. I think\u003cbr\\/\u003e\\nwe would get faster performance for a larger buffer for\u003cbr\\/\u003e\\nBufferedIndexInput, but, even when merging there are quite a few of\u003cbr\\/\u003e\\nthese created (mergeFactor * N where N = number of separate index\u003cbr\\/\u003e\\nfiles).\u003c\\/p\u003e\\n\\n\u003cp\u003eThen, I re-tested the baseline (trunk) &amp; these buffer sizes across\u003cbr\\/\u003e\\nplatforms (below):\u003c\\/p\u003e\\n\\n\\n\\n\u003cp\u003eSECOND TEST\u003c\\/p\u003e\\n\\n\u003cp\u003eBaseline (trunk) = 1 K buffers for all 3.  New = 16 K for\u003cbr\\/\u003e\\nBufferedIndexOutput, 16 K for CompoundFileWriter and 4 K for\u003cbr\\/\u003e\\nBufferedIndexInput.\u003c\\/p\u003e\\n\\n\u003cp\u003eI ran each test 4 times &amp; took the best time:\u003c\\/p\u003e\\n\\n\u003cp\u003eQuad core Mac OS X on 4-drive RAID 0\u003cbr\\/\u003e\\n  baseline  622 sec\u003cbr\\/\u003e\\n  new       527 sec\u003cbr\\/\u003e\\n  -&gt; 15% faster\u003c\\/p\u003e\\n\\n\u003cp\u003eDual core Debian Linux (2.6.18 kernel) on 6 drive RAID 5\u003cbr\\/\u003e\\n  baseline  708 sec\u003cbr\\/\u003e\\n  new       635 sec\u003cbr\\/\u003e\\n  -&gt; 10% faster\u003c\\/p\u003e\\n\\n\u003cp\u003eWindows XP Pro laptop, single drive\u003cbr\\/\u003e\\n  baseline  1604 sec\u003cbr\\/\u003e\\n  new       1308 sec\u003cbr\\/\u003e\\n  -&gt; 18% faster\u003c\\/p\u003e\\n\\n\u003cp\u003eNet\\/net it\'s between 10-18% performance gain overall.  It is\u003cbr\\/\u003e\\ninteresting that the system with the \\\"weakest\\\" IO system (one drive on\u003cbr\\/\u003e\\nWindows XP vs RAID 0\\/5 on the others) has the best gains.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499018_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499018_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 10:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T10:09:42+0000\'\u003e25\\/May\\/07 10:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    OK I ran two sets of tests.  First is only on Mac OS X to see how \\nperformance changes with buffer sizes.  Second was also on Debian \\nLinux &amp; Windows XP Pro. \\n\\n The performance gains are 10-18% faster overall. \\n\\n\\n FIRST TEST \\n\\n I increased buffer sizes, separately, for each of BufferedIndexInput, \\nBufferedIndexOutput and CompoundFileWriter.  Each test is run once on \\nMac OS X: \\n\\n   BufferedIndexInput \\n\\n       1 K   622 sec (current trunk) \\n      4 K   607 sec \\n      8 K   606 sec \\n     16 K   598 sec \\n     32 K   606 sec \\n     64 K   589 sec \\n    128 K   601 sec \\n\\n   CompoundFileWriter \\n\\n       1 K   622 sec (current trunk) \\n      4 K   599 sec \\n      8 K   591 sec \\n     16 K   578 sec \\n     32 K   583 sec \\n     64 K   580 sec \\n\\n   BufferedIndexOutput \\n\\n       1 K   622 sec (current trunk) \\n      4 K   588 sec \\n      8 K   576 sec \\n     16 K   551 sec \\n     32 K   566 sec \\n     64 K   555 sec \\n    128 K   543 sec \\n    256 K   534 sec \\n    512 K   564 sec \\n\\n Comments: \\n\\n \\n\\t The results are fairly noisy, but, performance does generally get \\n    better w\\/ larger buffers. \\n \\n\\n\\n \\n\\t BufferedIndexOutput seems specifically to like very large output \\n    buffers; the other two seem to have less but still significant \\n    effect. \\n \\n\\n\\n Given this I picked 16 K buffer for BufferedIndexOutput, 16 K buffer \\nfor CompoundFileWriter and 4 K buffer for BufferedIndexInput. I think \\nwe would get faster performance for a larger buffer for \\nBufferedIndexInput, but, even when merging there are quite a few of \\nthese created (mergeFactor * N where N = number of separate index \\nfiles). \\n\\n Then, I re-tested the baseline (trunk) &amp; these buffer sizes across \\nplatforms (below): \\n\\n\\n\\n SECOND TEST \\n\\n Baseline (trunk) = 1 K buffers for all 3.  New = 16 K for \\nBufferedIndexOutput, 16 K for CompoundFileWriter and 4 K for \\nBufferedIndexInput. \\n\\n I ran each test 4 times &amp; took the best time: \\n\\n Quad core Mac OS X on 4-drive RAID 0 \\n  baseline  622 sec \\n  new       527 sec \\n  -&gt; 15% faster \\n\\n Dual core Debian Linux (2.6.18 kernel) on 6 drive RAID 5 \\n  baseline  708 sec \\n  new       635 sec \\n  -&gt; 10% faster \\n\\n Windows XP Pro laptop, single drive \\n  baseline  1604 sec \\n  new       1308 sec \\n  -&gt; 18% faster \\n\\n Net\\/net it\'s between 10-18% performance gain overall.  It is \\ninteresting that the system with the \\\"weakest\\\" IO system (one drive on \\nWindows XP vs RAID 0\\/5 on the others) has the best gains.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499020\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499020&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499020\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499020_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499020_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 10:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T10:14:13+0000\'\u003e25\\/May\\/07 10:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003e&gt; I would like to know why these gains are appearing, and how specific\u003cbr\\/\u003e\\n&gt; they are to a particular system. How can the optimum buffer size be\u003cbr\\/\u003e\\n&gt; deduced? Is it a factor of hard disk sector size? Memory page size?\u003cbr\\/\u003e\\n&gt; Lucene write behavior pattern? Level X Cache size?\u003c\\/p\u003e\\n\\n\u003cp\u003eIt looks like the gains are cross platform (at least between OS X,\u003cbr\\/\u003e\\nLinux, Windows XP) and cross-IO architecture.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m not sure how this depends\\/correlates to the various cache\\/page\u003cbr\\/\u003e\\nsizes through the layers of OS -&gt; disk heads.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt must be that doing an IO request has a fairly high overhead and so\u003cbr\\/\u003e\\nthe more bytes you can read\\/write at once the faster it is, since you\u003cbr\\/\u003e\\namortize that overhead.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor merging in particular, with mergeFactor=10, I can see that a\u003cbr\\/\u003e\\nlarger buffer size on the input streams should help reduce insane\u003cbr\\/\u003e\\nseeks back &amp; forth between the 10 files (and the 1 output file).\u003cbr\\/\u003e\\nMaybe larger reads on the input streams also cause OS\'s IO scheduler\u003cbr\\/\u003e\\nto do larger read-ahead in anticipation?\u003c\\/p\u003e\\n\\n\u003cp\u003eAnd some good news: these gains seem to be additive to the gains in\u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-843\\\" title=\\\"improve how IndexWriter uses RAM to buffer added documents\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-843\\\"\u003e\u003cdel\u003eLUCENE-843\u003c\\/del\u003e\u003c\\/a\u003e, at least with my initial testing.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499020_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499020_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 10:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T10:14:13+0000\'\u003e25\\/May\\/07 10:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n &gt; I would like to know why these gains are appearing, and how specific \\n&gt; they are to a particular system. How can the optimum buffer size be \\n&gt; deduced? Is it a factor of hard disk sector size? Memory page size? \\n&gt; Lucene write behavior pattern? Level X Cache size? \\n\\n It looks like the gains are cross platform (at least between OS X, \\nLinux, Windows XP) and cross-IO architecture. \\n\\n I\'m not sure how this depends\\/correlates to the various cache\\/page \\nsizes through the layers of OS -&gt; disk heads. \\n\\n It must be that doing an IO request has a fairly high overhead and so \\nthe more bytes you can read\\/write at once the faster it is, since you \\namortize that overhead. \\n\\n For merging in particular, with mergeFactor=10, I can see that a \\nlarger buffer size on the input streams should help reduce insane \\nseeks back &amp; forth between the 10 files (and the 1 output file). \\nMaybe larger reads on the input streams also cause OS\'s IO scheduler \\nto do larger read-ahead in anticipation? \\n\\n And some good news: these gains seem to be additive to the gains in \\n  LUCENE-843  , at least with my initial testing.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499044\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499044&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499044\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jch\\\" id=\\\"commentauthor_12499044_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e John Haxby\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499044_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 11:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T11:24:51+0000\'\u003e25\\/May\\/07 11:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; Net\\/net it\'s between 10-18% performance gain overall. It is\u003cbr\\/\u003e\\n&gt; interesting that the system with the \\\"weakest\\\" IO system (one drive on\u003cbr\\/\u003e\\n&gt; Windows XP vs RAID 0\\/5 on the others) has the best gains.\u003c\\/p\u003e\\n\\n\u003cp\u003eActually, it\'s not that surprising.  Linux and BSD (MacOS) kernels work hard to do good I\\/O without the user having to do that much to take it into account.   The improvement you\'re seeing in those systems is as much to do with the fact that you\'re dealing with complete file system block sizes (4x4k) and complete VM page sizes (4x4k).   You\'d probably see similar gains just going from 1k to 4k though: even \\\"cp\\\" benefits from using a 4k block size rather than 1k.  I\'d guess that a 4k or 8k buffer would be best on Linux\\/MacOS and that you wouldn\'t see much difference going to 16k.  In fact, in the MacOS tests the big jump seems to be from 1k to 4k with smaller improvements thereafer.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m not that surprised by the WinXP changes: the I\\/O subsystem on a laptop is usually dire and anything that will cut down on the I\\/O is going to be a big help.  I would expect that the difference would be more dramatic with a FAT32 file system than it would be with NTFS though.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jch\\\" id=\\\"commentauthor_12499044_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e John Haxby\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499044_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 11:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T11:24:51+0000\'\u003e25\\/May\\/07 11:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; Net\\/net it\'s between 10-18% performance gain overall. It is \\n&gt; interesting that the system with the \\\"weakest\\\" IO system (one drive on \\n&gt; Windows XP vs RAID 0\\/5 on the others) has the best gains. \\n\\n Actually, it\'s not that surprising.  Linux and BSD (MacOS) kernels work hard to do good I\\/O without the user having to do that much to take it into account.   The improvement you\'re seeing in those systems is as much to do with the fact that you\'re dealing with complete file system block sizes (4x4k) and complete VM page sizes (4x4k).   You\'d probably see similar gains just going from 1k to 4k though: even \\\"cp\\\" benefits from using a 4k block size rather than 1k.  I\'d guess that a 4k or 8k buffer would be best on Linux\\/MacOS and that you wouldn\'t see much difference going to 16k.  In fact, in the MacOS tests the big jump seems to be from 1k to 4k with smaller improvements thereafer. \\n\\n I\'m not that surprised by the WinXP changes: the I\\/O subsystem on a laptop is usually dire and anything that will cut down on the I\\/O is going to be a big help.  I would expect that the difference would be more dramatic with a FAT32 file system than it would be with NTFS though.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499065\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499065&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499065\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499065_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499065_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 12:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T12:07:19+0000\'\u003e25\\/May\\/07 12:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttached the patch based on above discussion.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499065_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499065_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 12:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T12:07:19+0000\'\u003e25\\/May\\/07 12:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attached the patch based on above discussion.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499182\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499182&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499182\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499182_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499182_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 17:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T17:41:49+0000\'\u003e25\\/May\\/07 17:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMike,\u003c\\/p\u003e\\n\\n\u003cp\u003eI tested and reviewed your patch. It looks good and all tests pass! Two comments:\u003c\\/p\u003e\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eShould we increase the buffer size for CompoundFileReader to 4KB not only for the merge mode but also for the normal read mode?\u003c\\/li\u003e\\n\\t\u003cli\u003eIn BufferedIndexInput.setBufferSize() a new buffer should only be allocated if the new size is different from the previous buffer size.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499182_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499182_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 17:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T17:41:49+0000\'\u003e25\\/May\\/07 17:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Mike, \\n\\n I tested and reviewed your patch. It looks good and all tests pass! Two comments: \\n\\n \\n\\t Should we increase the buffer size for CompoundFileReader to 4KB not only for the merge mode but also for the normal read mode? \\n\\t In BufferedIndexInput.setBufferSize() a new buffer should only be allocated if the new size is different from the previous buffer size. \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499199\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499199&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499199\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499199_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499199_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 18:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T18:40:38+0000\'\u003e25\\/May\\/07 18:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; I tested and reviewed your patch. It looks good and all tests pass!\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks!\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; - Should we increase the buffer size for CompoundFileReader to 4KB\u003cbr\\/\u003e\\n&gt; not only for the merge mode but also for the normal read mode?\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m a little nervous about that: I don\'t know the impact it will have\u003cbr\\/\u003e\\non searching, especially queries that heavily use skipping?\u003c\\/p\u003e\\n\\n\u003cp\u003eHmmm, actually, a CSIndexInput potentially goes through 2 buffers when\u003cbr\\/\u003e\\nit does a read &#8211; its own (since each CSIndexInput subclasses from\u003cbr\\/\u003e\\nBufferedIndexInput) and then the main stream of the\u003cbr\\/\u003e\\nCompoundFileReader.  It seems like we shouldn\'t do this?  We should\u003cbr\\/\u003e\\nnot do a double copy.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt almost seems like the double copy would not occur becaase\u003cbr\\/\u003e\\nreadBytes() has logic to read directly from the underlying stream if\u003cbr\\/\u003e\\nthe sizes is &gt;= bufferSize.  However, I see at least one case during\u003cbr\\/\u003e\\nmerging where this logic doesn\'t kick in (and we do a double buffer\u003cbr\\/\u003e\\ncopy) because the buffers become \\\"skewed\\\".  I will open a separate\u003cbr\\/\u003e\\nissue for this; I think we should fix it and gain some more\u003cbr\\/\u003e\\nperformance.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; In BufferedIndexInput.setBufferSize() a new buffer should only be\u003cbr\\/\u003e\\n&gt; allocated if the new size is different from the previous buffer\u003cbr\\/\u003e\\n&gt; size.\u003c\\/p\u003e\\n\\n\u003cp\u003eAhh, good.  Will do.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499199_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499199_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 18:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T18:40:38+0000\'\u003e25\\/May\\/07 18:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; I tested and reviewed your patch. It looks good and all tests pass! \\n\\n Thanks! \\n\\n &gt; - Should we increase the buffer size for CompoundFileReader to 4KB \\n&gt; not only for the merge mode but also for the normal read mode? \\n\\n I\'m a little nervous about that: I don\'t know the impact it will have \\non searching, especially queries that heavily use skipping? \\n\\n Hmmm, actually, a CSIndexInput potentially goes through 2 buffers when \\nit does a read &#8211; its own (since each CSIndexInput subclasses from \\nBufferedIndexInput) and then the main stream of the \\nCompoundFileReader.  It seems like we shouldn\'t do this?  We should \\nnot do a double copy. \\n\\n It almost seems like the double copy would not occur becaase \\nreadBytes() has logic to read directly from the underlying stream if \\nthe sizes is &gt;= bufferSize.  However, I see at least one case during \\nmerging where this logic doesn\'t kick in (and we do a double buffer \\ncopy) because the buffers become \\\"skewed\\\".  I will open a separate \\nissue for this; I think we should fix it and gain some more \\nperformance. \\n\\n &gt; In BufferedIndexInput.setBufferSize() a new buffer should only be \\n&gt; allocated if the new size is different from the previous buffer \\n&gt; size. \\n\\n Ahh, good.  Will do.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499206\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499206&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499206\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499206_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499206_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 19:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T19:15:58+0000\'\u003e25\\/May\\/07 19:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; I\'m a little nervous about that: I don\'t know the impact it will have\u003cbr\\/\u003e\\n&gt; on searching, especially queries that heavily use skipping?\u003c\\/p\u003e\\n\\n\u003cp\u003eDoesn\'t the OS always read at least a whole block from the disk (usually\u003cbr\\/\u003e\\n4 KB)? If the answer is yes, then we don\'t safe IO by limiting the buffer\u003cbr\\/\u003e\\nsize to 1 KB, right? Of course it makes sense to limit the size for\u003cbr\\/\u003e\\nstreams that we clone often (like the freq stream) to safe memory and\u003cbr\\/\u003e\\narray copies. But we never clone the base stream in the cfs reader.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Hmmm, actually, a CSIndexInput potentially goes through 2 buffers when\u003cbr\\/\u003e\\n&gt; it does a read &#8211; its own (since each CSIndexInput subclasses from\u003cbr\\/\u003e\\n&gt; BufferedIndexInput) and then the main stream of the\u003cbr\\/\u003e\\n&gt; CompoundFileReader. It seems like we shouldn\'t do this? We should\u003cbr\\/\u003e\\n&gt; not do a double copy.\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; It almost seems like the double copy would not occur becaase\u003cbr\\/\u003e\\n&gt; readBytes() has logic to read directly from the underlying stream if\u003cbr\\/\u003e\\n&gt; the sizes is &gt;= bufferSize. However, I see at least one case during\u003cbr\\/\u003e\\n&gt; merging where this logic doesn\'t kick in (and we do a double buffer\u003cbr\\/\u003e\\n&gt; copy) because the buffers become \\\"skewed\\\". I will open a separate\u003cbr\\/\u003e\\n&gt; issue for this; I think we should fix it and gain some more\u003cbr\\/\u003e\\n&gt; performance.\u003c\\/p\u003e\\n\\n\u003cp\u003eGood catch! Reminds me a bit of \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-431\\\" title=\\\"RAMInputStream and RAMOutputStream without further buffering\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-431\\\"\u003e\u003cdel\u003eLUCENE-431\u003c\\/del\u003e\u003c\\/a\u003e where we also did double\u003cbr\\/\u003e\\nbuffering for the RAMInputStream and RAMOutputStream. Yes, I think\u003cbr\\/\u003e\\nwe should fix this.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499206_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499206_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 19:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T19:15:58+0000\'\u003e25\\/May\\/07 19:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; I\'m a little nervous about that: I don\'t know the impact it will have \\n&gt; on searching, especially queries that heavily use skipping? \\n\\n Doesn\'t the OS always read at least a whole block from the disk (usually \\n4 KB)? If the answer is yes, then we don\'t safe IO by limiting the buffer \\nsize to 1 KB, right? Of course it makes sense to limit the size for \\nstreams that we clone often (like the freq stream) to safe memory and \\narray copies. But we never clone the base stream in the cfs reader. \\n\\n &gt; Hmmm, actually, a CSIndexInput potentially goes through 2 buffers when \\n&gt; it does a read &#8211; its own (since each CSIndexInput subclasses from \\n&gt; BufferedIndexInput) and then the main stream of the \\n&gt; CompoundFileReader. It seems like we shouldn\'t do this? We should \\n&gt; not do a double copy. \\n&gt; \\n&gt; It almost seems like the double copy would not occur becaase \\n&gt; readBytes() has logic to read directly from the underlying stream if \\n&gt; the sizes is &gt;= bufferSize. However, I see at least one case during \\n&gt; merging where this logic doesn\'t kick in (and we do a double buffer \\n&gt; copy) because the buffers become \\\"skewed\\\". I will open a separate \\n&gt; issue for this; I think we should fix it and gain some more \\n&gt; performance. \\n\\n Good catch! Reminds me a bit of   LUCENE-431   where we also did double \\nbuffering for the RAMInputStream and RAMOutputStream. Yes, I think \\nwe should fix this.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499209\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499209&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499209\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499209_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499209_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 19:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T19:35:22+0000\'\u003e25\\/May\\/07 19:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; &gt; I\'m a little nervous about that: I don\'t know the impact it will have\u003cbr\\/\u003e\\n&gt; &gt; on searching, especially queries that heavily use skipping?\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; Doesn\'t the OS always read at least a whole block from the disk\u003cbr\\/\u003e\\n&gt; (usually 4 KB)? If the answer is yes, then we don\'t safe IO by\u003cbr\\/\u003e\\n&gt; limiting the buffer size to 1 KB, right? Of course it makes sense to\u003cbr\\/\u003e\\n&gt; limit the size for streams that we clone often (like the freq\u003cbr\\/\u003e\\n&gt; stream) to safe memory and array copies. But we never clone the base\u003cbr\\/\u003e\\n&gt; stream in the cfs reader.\u003c\\/p\u003e\\n\\n\u003cp\u003eYes, I think you\'re right.  But we should test search\u003cbr\\/\u003e\\nperformance on a large index &amp; \\\"typical\\\" queries to be sure?  I will\u003cbr\\/\u003e\\nopen a new issue to track this...\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499209_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499209_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 19:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T19:35:22+0000\'\u003e25\\/May\\/07 19:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; &gt; I\'m a little nervous about that: I don\'t know the impact it will have \\n&gt; &gt; on searching, especially queries that heavily use skipping? \\n&gt;  \\n&gt; Doesn\'t the OS always read at least a whole block from the disk \\n&gt; (usually 4 KB)? If the answer is yes, then we don\'t safe IO by \\n&gt; limiting the buffer size to 1 KB, right? Of course it makes sense to \\n&gt; limit the size for streams that we clone often (like the freq \\n&gt; stream) to safe memory and array copies. But we never clone the base \\n&gt; stream in the cfs reader. \\n\\n Yes, I think you\'re right.  But we should test search \\nperformance on a large index &amp; \\\"typical\\\" queries to be sure?  I will \\nopen a new issue to track this...              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499212\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499212&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499212\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"cutting\\\" id=\\\"commentauthor_12499212_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=cutting\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"cutting\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Doug Cutting\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499212_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 19:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T19:54:30+0000\'\u003e25\\/May\\/07 19:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; then we don\'t save IO by limiting the buffer size to 1 KB\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m confused by this.  My assumption is that, when you make a request to read 1k from a disk file, that the OS reads substantially more than 1k from the disk and places it in the buffer cache.  (The cost of randomly reading 1k is nearly the same as randomly reading 100k--both are dominated by seek.) So, if you make another request to read 1k shortly thereafter you\'ll get it from the buffer cache and the incremental cost will be that of making a system call.\u003c\\/p\u003e\\n\\n\u003cp\u003eIn general, one should thus rely on the buffer cache and read-ahead, and make input buffers only big enough so that system call overhead is insignificant.  An alternate strategy is to not trust the buffer cache and read-ahead, but rather to make your buffers large enough so that transfer time dominates seeks.  This can require 1MB or larger buffers, so isn\'t always practical.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo, back to your statement, a 1k buffer doesn\'t save physical i\\/o, but nor should it incur extra physical i\\/o.  It does incur extra system calls, but uses less memory, which is a tradeoff.  Is that what you meant?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"cutting\\\" id=\\\"commentauthor_12499212_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=cutting\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"cutting\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Doug Cutting\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499212_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 19:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T19:54:30+0000\'\u003e25\\/May\\/07 19:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; then we don\'t save IO by limiting the buffer size to 1 KB \\n\\n I\'m confused by this.  My assumption is that, when you make a request to read 1k from a disk file, that the OS reads substantially more than 1k from the disk and places it in the buffer cache.  (The cost of randomly reading 1k is nearly the same as randomly reading 100k--both are dominated by seek.) So, if you make another request to read 1k shortly thereafter you\'ll get it from the buffer cache and the incremental cost will be that of making a system call. \\n\\n In general, one should thus rely on the buffer cache and read-ahead, and make input buffers only big enough so that system call overhead is insignificant.  An alternate strategy is to not trust the buffer cache and read-ahead, but rather to make your buffers large enough so that transfer time dominates seeks.  This can require 1MB or larger buffers, so isn\'t always practical. \\n\\n So, back to your statement, a 1k buffer doesn\'t save physical i\\/o, but nor should it incur extra physical i\\/o.  It does incur extra system calls, but uses less memory, which is a tradeoff.  Is that what you meant?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499214\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499214&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499214\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rengels@ix.netcom.com\\\" id=\\\"commentauthor_12499214_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rengels%40ix.netcom.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rengels@ix.netcom.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e robert engels\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499214_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:09:53+0000\'\u003e25\\/May\\/07 20:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI think the important consideration is how expensive is the system call. Since the system call requires JNI, it MIGHT be expensive.\u003c\\/p\u003e\\n\\n\u003cp\u003eAnother important consideration is buffer utilization. It is my understanding that the OS will perform read-ahead normally only in sequential access only, outside of the additional bytes read to optimize the physical read. If Lucene performs indexed reads but the data is actually being accessed sequential, Lucene managing its own buffers can far more effective.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlong these lines, if the server is heavily used for a variety of applications Lucene can manage its own buffers more efficiently - similar to how a database almost always (every commercial one I know) has its own buffer cache and does not rely on the OS. In a GC environment though it may be even more imporant if the buffers were managed\\/reused from a pool as you avoid the GC overhead.\u003c\\/p\u003e\\n\\n\u003cp\u003eJust my thoughts.\u003c\\/p\u003e\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"rengels@ix.netcom.com\\\" id=\\\"commentauthor_12499214_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=rengels%40ix.netcom.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"rengels@ix.netcom.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e robert engels\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499214_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:09:53+0000\'\u003e25\\/May\\/07 20:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I think the important consideration is how expensive is the system call. Since the system call requires JNI, it MIGHT be expensive. \\n\\n Another important consideration is buffer utilization. It is my understanding that the OS will perform read-ahead normally only in sequential access only, outside of the additional bytes read to optimize the physical read. If Lucene performs indexed reads but the data is actually being accessed sequential, Lucene managing its own buffers can far more effective. \\n\\n Along these lines, if the server is heavily used for a variety of applications Lucene can manage its own buffers more efficiently - similar to how a database almost always (every commercial one I know) has its own buffer cache and does not rely on the OS. In a GC environment though it may be even more imporant if the buffers were managed\\/reused from a pool as you avoid the GC overhead. \\n\\n Just my thoughts. \\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499221\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499221&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499221\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499221_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499221_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:35:43+0000\'\u003e25\\/May\\/07 20:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; So, back to your statement, a 1k buffer doesn\'t save \u003cbr\\/\u003e\\n&gt; physical i\\/o, but nor should it incur extra physical i\\/o.  \u003c\\/p\u003e\\n\\n\u003cp\u003eYes, I agree.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; It does incur extra system calls, but uses less memory, \u003cbr\\/\u003e\\n&gt; which is a tradeoff.\u003c\\/p\u003e\\n\\n\u003cp\u003eA coworker told me that he ran some experiments with buffer \u003cbr\\/\u003e\\nsizes in a different application, and he found out that \u003cbr\\/\u003e\\nincreasing the buffer size beyond the disks block size\u003cbr\\/\u003e\\nfurther speed up things. In these tests he read a whole\u003cbr\\/\u003e\\nfile sequentially, which means that the speedup came from\u003cbr\\/\u003e\\nsaving system calls, right? \u003c\\/p\u003e\\n\\n\u003cp\u003eSo yes, it is a tradeoff between memory usage and amount \u003cbr\\/\u003e\\nof system calls. That\'s the reason for my suggestion to\u003cbr\\/\u003e\\nonly increase the buffer size for input streams that we\u003cbr\\/\u003e\\ndon\'t clone, like the base stream in the compound reader.\u003c\\/p\u003e\\n\\n\u003cp\u003eBut I\'m just sort of guessing here, I think we should run\u003cbr\\/\u003e\\nsome performance experiments. Mike already opened \u003cbr\\/\u003e\\n\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-893\\\" title=\\\"Increase buffer sizes used during searching\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-893\\\"\u003e\u003cdel\u003eLUCENE-893\u003c\\/del\u003e\u003c\\/a\u003e for that.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499221_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499221_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:35\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:35:43+0000\'\u003e25\\/May\\/07 20:35\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; So, back to your statement, a 1k buffer doesn\'t save  \\n&gt; physical i\\/o, but nor should it incur extra physical i\\/o.   \\n\\n Yes, I agree. \\n\\n &gt; It does incur extra system calls, but uses less memory,  \\n&gt; which is a tradeoff. \\n\\n A coworker told me that he ran some experiments with buffer  \\nsizes in a different application, and he found out that  \\nincreasing the buffer size beyond the disks block size \\nfurther speed up things. In these tests he read a whole \\nfile sequentially, which means that the speedup came from \\nsaving system calls, right?  \\n\\n So yes, it is a tradeoff between memory usage and amount  \\nof system calls. That\'s the reason for my suggestion to \\nonly increase the buffer size for input streams that we \\ndon\'t clone, like the base stream in the compound reader. \\n\\n But I\'m just sort of guessing here, I think we should run \\nsome performance experiments. Mike already opened  \\n  LUCENE-893   for that.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499223\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499223&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499223\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499223_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499223_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:43:14+0000\'\u003e25\\/May\\/07 20:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMike,\u003c\\/p\u003e\\n\\n\u003cp\u003eanother thing I just noticed is your new testcase doesn\'t remove \u003cbr\\/\u003e\\nthe directory \\\"testSetBufferSize\\\" at the end.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499223_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499223_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:43:14+0000\'\u003e25\\/May\\/07 20:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Mike, \\n\\n another thing I just noticed is your new testcase doesn\'t remove  \\nthe directory \\\"testSetBufferSize\\\" at the end.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499224\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499224&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499224\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"eksdev\\\" id=\\\"commentauthor_12499224_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=eksdev\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"eksdev\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Eks Dev\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499224_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:47:38+0000\'\u003e25\\/May\\/07 20:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ewe did some time ago a few tests and simply concluded, it boils down to what Doug said, \\\"It does incur extra system calls, but uses less memory, which is a tradeoff.\\\"\u003c\\/p\u003e\\n\\n\u003cp\u003ein \u003cb\u003eour\u003c\\/b\u003e setup 4k was kind of magic number , ca 5-8% faster. I guess it is actually a compromise between time spent in extra os calls  vs probability of reading more than you will really use (waste time on it). Why 4k number happens often to be good compromise is probably the difference in speed of buffer copy for 4k vs 1k being negligible  compared to time spent on system calls. \u003c\\/p\u003e\\n\\n\u003cp\u003eThe only conclusion we came up to is that you have to measure it and find good compromise. Our case is a bit atypical, short documents (1G index, 60Mio docs) and queries with a lot of terms (80-200), Win 2003 Server, single disk. \u003c\\/p\u003e\\n\\n\u003cp\u003eAnd I do not remember was it before or after we started using MMAP, so no idea really if this affects MMAP setup, guess not.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"eksdev\\\" id=\\\"commentauthor_12499224_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=eksdev\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"eksdev\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Eks Dev\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499224_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:47:38+0000\'\u003e25\\/May\\/07 20:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    we did some time ago a few tests and simply concluded, it boils down to what Doug said, \\\"It does incur extra system calls, but uses less memory, which is a tradeoff.\\\" \\n\\n in  our  setup 4k was kind of magic number , ca 5-8% faster. I guess it is actually a compromise between time spent in extra os calls  vs probability of reading more than you will really use (waste time on it). Why 4k number happens often to be good compromise is probably the difference in speed of buffer copy for 4k vs 1k being negligible  compared to time spent on system calls.  \\n\\n The only conclusion we came up to is that you have to measure it and find good compromise. Our case is a bit atypical, short documents (1G index, 60Mio docs) and queries with a lot of terms (80-200), Win 2003 Server, single disk.  \\n\\n And I do not remember was it before or after we started using MMAP, so no idea really if this affects MMAP setup, guess not. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499225\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499225&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499225\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499225_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499225_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:54:02+0000\'\u003e25\\/May\\/07 20:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; another thing I just noticed is your new testcase doesn\'t remove the\u003cbr\\/\u003e\\n&gt; directory \\\"testSetBufferSize\\\" at the end.\u003c\\/p\u003e\\n\\n\u003cp\u003eWoops, I will fix.  I will also fix it to appear under the tempDir.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499225_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499225_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 20:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T20:54:02+0000\'\u003e25\\/May\\/07 20:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; another thing I just noticed is your new testcase doesn\'t remove the \\n&gt; directory \\\"testSetBufferSize\\\" at the end. \\n\\n Woops, I will fix.  I will also fix it to appear under the tempDir.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499226\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499226&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499226\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499226_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499226_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 21:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T21:00:11+0000\'\u003e25\\/May\\/07 21:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003e&gt; we did some time ago a few tests and simply concluded, it boils down to what Doug said, \\\"It does incur extra system calls, but uses less memory, which is a tradeoff.\\\"\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; in \u003cb\u003eour\u003c\\/b\u003e setup 4k was kind of magic number , ca 5-8% faster. I guess it is actually a compromise between time spent in extra os calls vs probability of reading more than you will really use (waste time on it). Why 4k number happens often to be good compromise is probably the difference in speed of buffer copy for 4k vs 1k being negligible compared to time spent on system calls.\u003cbr\\/\u003e\\n&gt; \u003cbr\\/\u003e\\n&gt; The only conclusion we came up to is that you have to measure it and find good compromise. Our case is a bit atypical, short documents (1G index, 60Mio docs) and queries with a lot of terms (80-200), Win 2003 Server, single disk.\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; And I do not remember was it before or after we started using MMAP, so no idea really if this affects MMAP setup, guess not. \u003c\\/p\u003e\\n\\n\u003cp\u003eInteresting!  Do you remember if your 5-8% gain was for searching or\u003cbr\\/\u003e\\nindexing?  This issue is focusing on buffer size impact on indexing\u003cbr\\/\u003e\\nperformance and \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-893\\\" title=\\\"Increase buffer sizes used during searching\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-893\\\"\u003e\u003cdel\u003eLUCENE-893\u003c\\/del\u003e\u003c\\/a\u003e is focusing on search performance.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499226_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499226_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 21:00\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T21:00:11+0000\'\u003e25\\/May\\/07 21:00\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n &gt; we did some time ago a few tests and simply concluded, it boils down to what Doug said, \\\"It does incur extra system calls, but uses less memory, which is a tradeoff.\\\" \\n&gt; \\n&gt; in  our  setup 4k was kind of magic number , ca 5-8% faster. I guess it is actually a compromise between time spent in extra os calls vs probability of reading more than you will really use (waste time on it). Why 4k number happens often to be good compromise is probably the difference in speed of buffer copy for 4k vs 1k being negligible compared to time spent on system calls. \\n&gt;  \\n&gt; The only conclusion we came up to is that you have to measure it and find good compromise. Our case is a bit atypical, short documents (1G index, 60Mio docs) and queries with a lot of terms (80-200), Win 2003 Server, single disk. \\n&gt; \\n&gt; And I do not remember was it before or after we started using MMAP, so no idea really if this affects MMAP setup, guess not.  \\n\\n Interesting!  Do you remember if your 5-8% gain was for searching or \\nindexing?  This issue is focusing on buffer size impact on indexing \\nperformance and   LUCENE-893   is focusing on search performance.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499231\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499231&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499231\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499231_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499231_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 21:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T21:09:40+0000\'\u003e25\\/May\\/07 21:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eNew patch with these changes:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eThe unit test now creates its test index under \\\"tempDir\\\" &amp; removes it when done\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eDon\'t allocate a new buffer in setBufferSize if the newSize == the current size\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499231_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499231_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 21:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T21:09:40+0000\'\u003e25\\/May\\/07 21:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    New patch with these changes: \\n\\n \\n\\t The unit test now creates its test index under \\\"tempDir\\\" &amp; removes it when done \\n \\n\\n\\n \\n\\t Don\'t allocate a new buffer in setBufferSize if the newSize == the current size \\n \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499238\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499238&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499238\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499238_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499238_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 21:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T21:59:25+0000\'\u003e25\\/May\\/07 21:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eTake2 looks good. +1 for committing.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"michaelbusch\\\" id=\\\"commentauthor_12499238_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=michaelbusch\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"michaelbusch\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael Busch\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499238_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'25\\/May\\/07 21:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-25T21:59:25+0000\'\u003e25\\/May\\/07 21:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Take2 looks good. +1 for committing.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499280\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499280&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499280\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"creamyg\\\" id=\\\"commentauthor_12499280_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=creamyg\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"creamyg\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Marvin Humphrey\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499280_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/May\\/07 03:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-26T03:11:57+0000\'\u003e26\\/May\\/07 03:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI have some auxiliary data points to report after experimenting with buffer\u003cbr\\/\u003e\\nsize in KS today on three different systems: OS X 10.4.9, FreeBSD 5.3, and an\u003cbr\\/\u003e\\nold RedHat 9 box.  \u003c\\/p\u003e\\n\\n\u003cp\u003eThe FS i\\/o classes in KinoSearch use a FILE* and\u003cbr\\/\u003e\\nfopen\\/fwrite\\/fread\\/fseek\\/ftell, rather than file descriptors and the POSIX\u003cbr\\/\u003e\\nfamily of functions.  Theoretically, this is wasteful because FILE* stream i\\/o\u003cbr\\/\u003e\\nis buffered, so there\'s double buffering happening.  I\'ve meant to change that\u003cbr\\/\u003e\\nfor some time.  However, when I\'ve used setvbuf(self-&gt;fhandle, NULL, _IONBF)\u003cbr\\/\u003e\\nto eliminate the buffer for the underlying FILE* object, performance tanks &#8211;\u003cbr\\/\u003e\\nindexing time doubles.  I still don\'t understand exactly why, but I know a\u003cbr\\/\u003e\\nlittle more now.\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eSwapping out the FILE* for a descriptor and switching all the I\\/O calls to\u003cbr\\/\u003e\\n    POSIX variants has no measurable impact on any of these systems.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eChanging the KS buffer size from 1024 to 4096 has no measurable impact on\u003cbr\\/\u003e\\n    any of these systems.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eUsing setvbuf to eliminate the buffering at output turns out to have no\u003cbr\\/\u003e\\n    impact on indexing performance.  It\'s only killing off the read mode FILE*\u003cbr\\/\u003e\\n    buffer that causes the problem.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eSo, it seems that the only change I can make moves the numbers in the wrong\u003cbr\\/\u003e\\ndirection.  \u003c\\/p\u003e\\n\\n\u003cp\u003eThe results are somewhat puzzling because I would ordinarily have blamed\u003cbr\\/\u003e\\nsub-optimal flush\\/refill scheduling in my app for the degraded performance\u003cbr\\/\u003e\\nwith setvbuf() on read mode.  However, the POSIX i\\/o calls are unbuffered, so\u003cbr\\/\u003e\\nthat\'s not it.  My best guess is that disabling buffering for read mode\u003cbr\\/\u003e\\ndisables an fseek\\/ftell optimization.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"creamyg\\\" id=\\\"commentauthor_12499280_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=creamyg\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"creamyg\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Marvin Humphrey\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499280_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/May\\/07 03:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-26T03:11:57+0000\'\u003e26\\/May\\/07 03:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I have some auxiliary data points to report after experimenting with buffer \\nsize in KS today on three different systems: OS X 10.4.9, FreeBSD 5.3, and an \\nold RedHat 9 box.   \\n\\n The FS i\\/o classes in KinoSearch use a FILE* and \\nfopen\\/fwrite\\/fread\\/fseek\\/ftell, rather than file descriptors and the POSIX \\nfamily of functions.  Theoretically, this is wasteful because FILE* stream i\\/o \\nis buffered, so there\'s double buffering happening.  I\'ve meant to change that \\nfor some time.  However, when I\'ve used setvbuf(self-&gt;fhandle, NULL, _IONBF) \\nto eliminate the buffer for the underlying FILE* object, performance tanks &#8211; \\nindexing time doubles.  I still don\'t understand exactly why, but I know a \\nlittle more now. \\n\\n \\n\\t Swapping out the FILE* for a descriptor and switching all the I\\/O calls to \\n    POSIX variants has no measurable impact on any of these systems. \\n \\n\\n\\n \\n\\t Changing the KS buffer size from 1024 to 4096 has no measurable impact on \\n    any of these systems. \\n \\n\\n\\n \\n\\t Using setvbuf to eliminate the buffering at output turns out to have no \\n    impact on indexing performance.  It\'s only killing off the read mode FILE* \\n    buffer that causes the problem. \\n \\n\\n\\n So, it seems that the only change I can make moves the numbers in the wrong \\ndirection.   \\n\\n The results are somewhat puzzling because I would ordinarily have blamed \\nsub-optimal flush\\/refill scheduling in my app for the degraded performance \\nwith setvbuf() on read mode.  However, the POSIX i\\/o calls are unbuffered, so \\nthat\'s not it.  My best guess is that disabling buffering for read mode \\ndisables an fseek\\/ftell optimization.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499299\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499299&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499299\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499299_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499299_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/May\\/07 10:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-26T10:25:34+0000\'\u003e26\\/May\\/07 10:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMarvin, it\'s odd that you see no gains when coming straight from C.\u003cbr\\/\u003e\\nHmmm.\u003c\\/p\u003e\\n\\n\u003cp\u003eI wonder if IO calls from Java somehow have a sizable overhead that\u003cbr\\/\u003e\\nthe corresponding C calls do not.  I didn\'t think JNI was that\u003cbr\\/\u003e\\nexpensive?  Though, it looks like reading into byte[] does entail\u003cbr\\/\u003e\\nextra byte copying.  We could explore using ByteBuffers from\u003cbr\\/\u003e\\njava.nio.* ... ahh, this has been somewhat explored already, at least\u003cbr\\/\u003e\\nin \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-414\\\" title=\\\"Java NIO patch against Lucene 1.9\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-414\\\"\u003e\u003cdel\u003eLUCENE-414\u003c\\/del\u003e\u003c\\/a\u003e and \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/LUCENE-893\\\" title=\\\"Increase buffer sizes used during searching\\\" class=\\\"issue-link\\\" data-issue-key=\\\"LUCENE-893\\\"\u003e\u003cdel\u003eLUCENE-893\u003c\\/del\u003e\u003c\\/a\u003e.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlso, how much \\\"merging\\\" is actually done in your test \\/ KS?  How many\u003cbr\\/\u003e\\nsegments are merged at once?  The fact that KS doesn\'t re-merge the\u003cbr\\/\u003e\\nstored fields &amp; term vectors (within one session) is probably also a\u003cbr\\/\u003e\\nbig difference here.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499299_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499299_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/May\\/07 10:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-26T10:25:34+0000\'\u003e26\\/May\\/07 10:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Marvin, it\'s odd that you see no gains when coming straight from C. \\nHmmm. \\n\\n I wonder if IO calls from Java somehow have a sizable overhead that \\nthe corresponding C calls do not.  I didn\'t think JNI was that \\nexpensive?  Though, it looks like reading into byte[] does entail \\nextra byte copying.  We could explore using ByteBuffers from \\njava.nio.* ... ahh, this has been somewhat explored already, at least \\nin   LUCENE-414   and   LUCENE-893  . \\n\\n Also, how much \\\"merging\\\" is actually done in your test \\/ KS?  How many \\nsegments are merged at once?  The fact that KS doesn\'t re-merge the \\nstored fields &amp; term vectors (within one session) is probably also a \\nbig difference here.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499307\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499307&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499307\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"creamyg\\\" id=\\\"commentauthor_12499307_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=creamyg\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"creamyg\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Marvin Humphrey\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499307_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/May\\/07 11:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-26T11:26:10+0000\'\u003e26\\/May\\/07 11:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt; Also, how much \\\"merging\\\" is actually done in your test \\/ KS?  How many\u003cbr\\/\u003e\\n&gt; segments are merged at once?  The fact that KS doesn\'t re-merge the stored\u003cbr\\/\u003e\\n&gt; fields &amp; term vectors (within one session) is probably also a big difference\u003cbr\\/\u003e\\n&gt; here.\u003c\\/p\u003e\\n\\n\u003cp\u003eIn the previous test, I was indexing 1000 Reuters articles all in one session.\u003cbr\\/\u003e\\nThe postings were never flushed to disk prior to the final write, as the\u003cbr\\/\u003e\\nexternal sorter never exceeded its memory threshold.\u003c\\/p\u003e\\n\\n\u003cp\u003eI reran the test on the FreeBSD box, changing it so that the index was built\u003cbr\\/\u003e\\nup in 10-doc increments.  There was still no measurable change for changing\u003cbr\\/\u003e\\neither the KS buffer size or POSIX\\/stream style IO.  However, using setvbuf on\u003cbr\\/\u003e\\nthe read mode FILE* stream i\\/o was utterly disastrous.  After several minutes\u003cbr\\/\u003e\\n(compare with 3.8 seconds) I cut it off.  Subsequent testing with a 500-doc\u003cbr\\/\u003e\\nincrement verified that the test actually was working (10.3 secs).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"creamyg\\\" id=\\\"commentauthor_12499307_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=creamyg\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"creamyg\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Marvin Humphrey\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499307_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'26\\/May\\/07 11:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-26T11:26:10+0000\'\u003e26\\/May\\/07 11:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt; Also, how much \\\"merging\\\" is actually done in your test \\/ KS?  How many \\n&gt; segments are merged at once?  The fact that KS doesn\'t re-merge the stored \\n&gt; fields &amp; term vectors (within one session) is probably also a big difference \\n&gt; here. \\n\\n In the previous test, I was indexing 1000 Reuters articles all in one session. \\nThe postings were never flushed to disk prior to the final write, as the \\nexternal sorter never exceeded its memory threshold. \\n\\n I reran the test on the FreeBSD box, changing it so that the index was built \\nup in 10-doc increments.  There was still no measurable change for changing \\neither the KS buffer size or POSIX\\/stream style IO.  However, using setvbuf on \\nthe read mode FILE* stream i\\/o was utterly disastrous.  After several minutes \\n(compare with 3.8 seconds) I cut it off.  Subsequent testing with a 500-doc \\nincrement verified that the test actually was working (10.3 secs).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-12499548\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/LUCENE-888?focusedCommentId=12499548&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12499548\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499548_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499548_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/07 12:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-28T12:03:18+0000\'\u003e28\\/May\\/07 12:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\\n\u003cp\u003eI re-ran the \\\"second test\\\" above, but this time with compound file\u003cbr\\/\u003e\\nturned off.\u003c\\/p\u003e\\n\\n\u003cp\u003eBaseline (trunk) = 1 K buffers for all 3. New = 16 K for\u003cbr\\/\u003e\\nBufferedIndexOutput, 16 K for CompoundFileWriter and 4 K for\u003cbr\\/\u003e\\nBufferedIndexInput.  I ran each test 4 times &amp; took the best time.\u003c\\/p\u003e\\n\\n\u003cp\u003eQuad core Mac OS X on 4-drive RAID 0\u003cbr\\/\u003e\\n  baseline 553 sec\u003cbr\\/\u003e\\n  new 499 sec\u003cbr\\/\u003e\\n  -&gt; 10% faster\u003c\\/p\u003e\\n\\n\u003cp\u003eDual core Debian Linux (2.6.18 kernel) on 6 drive RAID 5\u003cbr\\/\u003e\\n  baseline 590 sec\u003cbr\\/\u003e\\n  new 548 sec\u003cbr\\/\u003e\\n  -&gt; 7% faster\u003c\\/p\u003e\\n\\n\u003cp\u003eWindows XP Pro laptop, single drive\u003cbr\\/\u003e\\n  baseline 1078 sec\u003cbr\\/\u003e\\n  new 918 sec\u003cbr\\/\u003e\\n  -&gt; 15% faster \u003c\\/p\u003e\\n\\n\u003cp\u003eQuick observations:\u003c\\/p\u003e\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eStill a healthy 7-15% overall gain even without compound file by\u003cbr\\/\u003e\\n    increasing the buffer sizes.\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cul\u003e\\n\\t\u003cli\u003eThe overall performance gain on the trunk just by turning off\u003cbr\\/\u003e\\n    compound file ranges from 7-33% (33% gain = the Windows XP\u003cbr\\/\u003e\\n    Laptop).\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eOK I plan to commit this soon.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikemccand\\\" id=\\\"commentauthor_12499548_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikemccand\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikemccand\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Michael McCandless\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_12499548_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/May\\/07 12:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2007-05-28T12:03:18+0000\'\u003e28\\/May\\/07 12:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                   \\n I re-ran the \\\"second test\\\" above, but this time with compound file \\nturned off. \\n\\n Baseline (trunk) = 1 K buffers for all 3. New = 16 K for \\nBufferedIndexOutput, 16 K for CompoundFileWriter and 4 K for \\nBufferedIndexInput.  I ran each test 4 times &amp; took the best time. \\n\\n Quad core Mac OS X on 4-drive RAID 0 \\n  baseline 553 sec \\n  new 499 sec \\n  -&gt; 10% faster \\n\\n Dual core Debian Linux (2.6.18 kernel) on 6 drive RAID 5 \\n  baseline 590 sec \\n  new 548 sec \\n  -&gt; 7% faster \\n\\n Windows XP Pro laptop, single drive \\n  baseline 1078 sec \\n  new 918 sec \\n  -&gt; 15% faster  \\n\\n Quick observations: \\n\\n \\n\\t Still a healthy 7-15% overall gain even without compound file by \\n    increasing the buffer sizes. \\n \\n\\n\\n \\n\\t The overall performance gain on the trunk just by turning off \\n    compound file ranges from 7-33% (33% gain = the Windows XP \\n    Laptop). \\n \\n\\n\\n OK I plan to commit this soon.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="12310110";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/LUCENE\\/summary\\\" title=\\\"Lucene - Core\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=12310110&amp;avatarId=10061\\\" alt=\\\"Lucene - Core\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/LUCENE\\/summary\\\" title=\\\"Lucene - Core\\\"\u003eLucene - Core\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/LUCENE?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/-juyfor/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1516202101619"> 
    <input type="hidden" title="jira.request.server.time" value="627"> 
    <input type="hidden" title="jira.request.id" value="915x7661062x10"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="8"> 
    <input type="hidden" title="db.reads.time.in.ms" value="81"> 
    <input type="hidden" title="db.conns.time.in.ms" value="91"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 915x7661062x10
	          REQUEST TIMESTAMP : [17/Jan/2018:15:15:01 +0000]
	               REQUEST TIME : 0.6270
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 8

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=31, elapsedTotal=81641951, elapsedMin=586179, elapsedMax=14563581, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=35, elapsedTotal=91638994, elapsedMin=628894, elapsedMax=14664638, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>