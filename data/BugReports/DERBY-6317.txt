<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|28a6b2956b23fbbb37cc1136bab32a0d49036f69|lout"> 
  <link rel="shortcut icon" href="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"jira.instrumentation.laas\":false,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"com.atlassian.jira.issuetable.draggable\":true,\"jira.create.linked.issue\":true,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"jira.jql.suggestrecentfields\":false,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"jira.jql.smartautoselectfirst\":false,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.priorities.per.project\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"jira.renderer.consider.variable.format\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/vnd.wap.wbmp,image/png,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"f4e0eb201683f1\"";
WRM._unparsedData["project-id"]="10594";
WRM._unparsedData["project-key"]="\"DERBY\"";
WRM._unparsedData["project-name"]="\"Derby\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="10594";
WRM._unparsedData["projectKey"]="\"DERBY\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/74ac580603ca910fff0cfdf319e54add-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/98ceb006e504d7924d5ffc411626c6bc-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/c1e4d26ea276469807c3dc0918df482c-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/6bf9253c8d533109c3b02e26794be24e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/ccd2e67b523185973473e8bd5735c8f9-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/33e5e0166867c8c9228d44506f60b2e8/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/6579b6b8ba67abaa496e39b9242a18a4-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="DERBY-6317"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[DERBY-6317] Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0 - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[DERBY-6317] Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0 - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/DERBY" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FDERBY-6317">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="10594" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Derby'" src="https://issues.apache.org/jira/secure/projectavatar?pid=10594&amp;avatarId=10122"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/DERBY">Derby</a></li>
                 <li><a class="issue-link" data-issue-key="DERBY-6317" href="/jira/browse/DERBY-6317" id="key-val" rel="12665641">DERBY-6317</a></li>
                </ol>
                <h1 id="summary-val">Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FDERBY-6317"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/DERBY-6317/DERBY-6317.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/DERBY-6317/DERBY-6317.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/DERBY-6317/DERBY-6317.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/DERBY-6317/DERBY-6317.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" title="Bug - A problem which impairs or prevents the functions of the product." width="16"> Bug </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/major.svg" title="Major - Major loss of function." width="16"> Major </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> <span class="shorten" id="versions-field"> <span title="10.8.2.2 second release on the 10.8 branch">10.8.2.2</span> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.8.3.3" title="10.8.3.3 Head of 10.8 branch starting 2014-01-13">10.8.3.3</a>, <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.9.2.2" title="10.9.2.2 Head of 10.9 branch after releasing 10.9.1.0">10.9.2.2</a>, <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.10.2.0" title="10.10.2.0 candidate for Second release for 10.10 branch">10.10.2.0</a>, <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.11.1.1" title="10.11.1.1 First release on the 10.11 branch">10.11.1.1</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> <span class="shorten" id="components-field"> <a href="/jira/issues/?jql=project+%3D+DERBY+AND+component+%3D+SQL" title="SQL ">SQL</a> </span> </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <span class="labels" id="labels-12665641-value">None</span> 
                   </div> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap"> 
                   <strong class="name">Environment:</strong> 
                   <div id="environment-val" class="value">
                     Derby 10.8.2.2 on Oracle Solaris 10 
                   </div> 
                  </div> </li> 
                </ul> 
                <div id="customfieldmodule"> 
                 <div class="aui-tabs horizontal-tabs" id="customfield-tabs"> 
                  <div id="customfield-panel-1" class="tabs-pane active-pane"> 
                   <ul class="property-list"> 
                    <li id="rowForcustomfield_12310050" class="item"> 
                     <div class="wrap"> 
                      <strong title="Urgency" class="name">Urgency:</strong> 
                      <div id="customfield_12310050-val" class="value type-select" data-fieldtype="select" data-fieldtypecompletekey="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        Urgent 
                      </div> 
                     </div> </li> 
                    <li id="rowForcustomfield_12310200" class="item"> 
                     <div class="wrap"> 
                      <strong title="Bug behavior facts" class="name">Bug behavior facts:</strong> 
                      <div id="customfield_12310200-val" class="value type-multicheckboxes" data-fieldtype="multicheckboxes" data-fieldtypecompletekey="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes"> 
                       <div class="shorten" id="customfield_12310200-field"> 
                        <span>Performance</span>, 
                        <span>Seen in production</span> 
                       </div> 
                      </div> 
                     </div> </li> 
                   </ul> 
                  </div> 
                 </div>
                </div> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p>The optimizer can chose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0. </p> 
                  <p>Assume that you have two tables that are being joined like:</p> 
                  <p>SELECT * FROM T1, T0<br> WHERE T1.ID = T0.F_ID and<br> T0.ID = 3;</p> 
                  <p>Also assume that T0 has two columns, ID and F_ID and F_ID is a foreign key on T1.ID. Assume that T1.ID is the primary key of T1 and (T0.F_ID, T0.ID) is the primary key on T0. Assume that there is a non-unique index on T0.ID.</p> 
                  <p>The correct query plan for this should be to query T0 using the non-unique index on T0.ID and then use the foreign key value in those rows to do query T1 using the primary key on T1.</p> 
                  <p>With some values of T0.ID in the above query this query plan is chosen and works. With other values of T0.ID , the query plan does an query on T0 using the non-unique index on T0.ID and then does a table scan on T1.</p> 
                  <p>For example, in my case the query:</p> 
                  <p>SELECT * FROM T1, T0<br> WHERE T1.ID = T0.F_ID and<br> T0.ID = 22112129;</p> 
                  <p>has this query plan. </p> 
                  <p>The problem appears to be in BTreeCostController.java. When this returns the same value for the "left_of_start" and the "left_of_stop" (which is being used to estimate the number of rows and cost), then the estimate cost and row count becomes 0.0. When this is used in the join order of T0, T1, then the cost of the table scan for T1 becomes 0.0 as well.</p> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/DERBY-6317?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/DERBY-6317?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/DERBY-6317?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/DERBY-6317?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12601405" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12601405/DERBY_6317_junit_test_v1_diff.txt" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v1_diff.txt:https://issues.apache.org/jira/secure/attachment/12601405/DERBY_6317_junit_test_v1_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12601405/DERBY_6317_junit_test_v1_diff.txt" title="Latest  04/Sep/13 17:10 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v1_diff.txt:https://issues.apache.org/jira/secure/attachment/12601405/DERBY_6317_junit_test_v1_diff.txt">DERBY_6317_junit_test_v1_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-09-04T17:10:41.279Z">04/Sep/13 17:10</time>
                   </dd>
                   <dd class="attachment-size">
                    8 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12601755" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12601755/DERBY_6317_junit_test_v2_diff.txt" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v2_diff.txt:https://issues.apache.org/jira/secure/attachment/12601755/DERBY_6317_junit_test_v2_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12601755/DERBY_6317_junit_test_v2_diff.txt" title="Latest  06/Sep/13 03:07 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v2_diff.txt:https://issues.apache.org/jira/secure/attachment/12601755/DERBY_6317_junit_test_v2_diff.txt">DERBY_6317_junit_test_v2_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-09-06T03:07:22.577Z">06/Sep/13 03:07</time>
                   </dd>
                   <dd class="attachment-size">
                    19 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12601844" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12601844/DERBY_6317_junit_test_v3_diff.txt" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v3_diff.txt:https://issues.apache.org/jira/secure/attachment/12601844/DERBY_6317_junit_test_v3_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12601844/DERBY_6317_junit_test_v3_diff.txt" title="Latest  06/Sep/13 16:24 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v3_diff.txt:https://issues.apache.org/jira/secure/attachment/12601844/DERBY_6317_junit_test_v3_diff.txt">DERBY_6317_junit_test_v3_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-09-06T16:24:25.691Z">06/Sep/13 16:24</time>
                   </dd>
                   <dd class="attachment-size">
                    19 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12601851" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12601851/DERBY_6317_junit_test_v4_diff.txt" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v4_diff.txt:https://issues.apache.org/jira/secure/attachment/12601851/DERBY_6317_junit_test_v4_diff.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12601851/DERBY_6317_junit_test_v4_diff.txt" title="Latest  06/Sep/13 17:19 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:DERBY_6317_junit_test_v4_diff.txt:https://issues.apache.org/jira/secure/attachment/12601851/DERBY_6317_junit_test_v4_diff.txt">DERBY_6317_junit_test_v4_diff.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-09-06T17:19:06.453Z">06/Sep/13 17:19</time>
                   </dd>
                   <dd class="attachment-size">
                    19 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12600911" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12600911/DERBY_6317_temp_changes_for_debugging.txt" draggable="true" data-downloadurl="text/plain:DERBY_6317_temp_changes_for_debugging.txt:https://issues.apache.org/jira/secure/attachment/12600911/DERBY_6317_temp_changes_for_debugging.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12600911/DERBY_6317_temp_changes_for_debugging.txt" title="Latest  31/Aug/13 01:56 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:DERBY_6317_temp_changes_for_debugging.txt:https://issues.apache.org/jira/secure/attachment/12600911/DERBY_6317_temp_changes_for_debugging.txt">DERBY_6317_temp_changes_for_debugging.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-08-31T01:56:19.255Z">31/Aug/13 01:56</time>
                   </dd>
                   <dd class="attachment-size">
                    2 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12600424" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12600424/derby6317_2.diff" draggable="true" data-downloadurl="text/x-diff:derby6317_2.diff:https://issues.apache.org/jira/secure/attachment/12600424/derby6317_2.diff"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-devtools-file" title="File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12600424/derby6317_2.diff" title="Latest  28/Aug/13 18:07 - Mike Matrigali" draggable="true" data-downloadurl="text/x-diff:derby6317_2.diff:https://issues.apache.org/jira/secure/attachment/12600424/derby6317_2.diff">derby6317_2.diff</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-08-28T18:07:10.991Z">28/Aug/13 18:07</time>
                   </dd>
                   <dd class="attachment-size">
                    2 kB
                   </dd>
                   <dd class="attachment-author">
                    Mike Matrigali
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12600291" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12600291/derby6317.diff" draggable="true" data-downloadurl="text/x-diff:derby6317.diff:https://issues.apache.org/jira/secure/attachment/12600291/derby6317.diff"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-devtools-file" title="File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12600291/derby6317.diff" title="Latest  27/Aug/13 23:43 - Mike Matrigali" draggable="true" data-downloadurl="text/x-diff:derby6317.diff:https://issues.apache.org/jira/secure/attachment/12600291/derby6317.diff">derby6317.diff</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-08-27T23:43:48.735Z">27/Aug/13 23:43</time>
                   </dd>
                   <dd class="attachment-size">
                    1 kB
                   </dd>
                   <dd class="attachment-author">
                    Mike Matrigali
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12600912" data-issue-id="12665641" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12600912/testRepro_v1.txt" draggable="true" data-downloadurl="text/plain:testRepro_v1.txt:https://issues.apache.org/jira/secure/attachment/12600912/testRepro_v1.txt"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12600912/testRepro_v1.txt" title="Latest  31/Aug/13 01:56 - Mamta A. Satoor" draggable="true" data-downloadurl="text/plain:testRepro_v1.txt:https://issues.apache.org/jira/secure/attachment/12600912/testRepro_v1.txt">testRepro_v1.txt</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-08-31T01:56:19.257Z">31/Aug/13 01:56</time>
                   </dd>
                   <dd class="attachment-size">
                    4 kB
                   </dd>
                   <dd class="attachment-author">
                    Mamta A. Satoor
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_mikem" rel="mikem" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Mike Matrigali&quot;,&quot;emailAddress&quot;:&quot;mikem_app@sbcglobal.net&quot;,&quot;username&quot;:&quot;mikem&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="mikem"></span></span> Mike Matrigali </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_bbergquist" rel="bbergquist" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Brett Bergquist&quot;,&quot;emailAddress&quot;:&quot;brett@thebergquistfamily.com&quot;,&quot;username&quot;:&quot;bbergquist&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="bbergquist"></span></span> Brett Bergquist </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">0</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">5</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="27/Aug/13 02:25"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2013-08-27T02:25:59+0000">27/Aug/13 02:25</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="21/Jan/15 00:22"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2015-01-21T00:22:55+0000">21/Jan/15 00:22</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="18/Sep/13 16:48"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2013-09-18T16:48:04+0000">18/Sep/13 16:48</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6317?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/DERBY-6317?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-13750905\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13750905&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13750905\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13750905_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13750905_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 02:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T02:28:17+0000\'\u003e27\\/Aug\\/13 02:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWhen BTreeCostController.java returns the same value for \\\"left_of_start\\\" and \\\"left_of_stop\\\", this conceptually means that very few rows are going to be returned using the index but it does not mean that 0 (zero rows) are going to be returned which is what the code currently does.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13750905_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13750905_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 02:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T02:28:17+0000\'\u003e27\\/Aug\\/13 02:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    When BTreeCostController.java returns the same value for \\\"left_of_start\\\" and \\\"left_of_stop\\\", this conceptually means that very few rows are going to be returned using the index but it does not mean that 0 (zero rows) are going to be returned which is what the code currently does.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751398\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751398&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751398\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751398_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751398_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:27:49+0000\'\u003e27\\/Aug\\/13 16:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe following email thread has critical info for this bug:\u003cbr\\/\u003e\\nI think i found were the issue occurs.  I am able to reproduce the problem with Derby 10.8.2.2.   The database has about 7 million records in APP.CONFIGURATION_BUNDLES3 and about 48 million records in COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3.   On  COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3, there is a non-unique index on COSEDDROPPROFILEDSCPTABLEENTRY_ID.\u003c\\/p\u003e\\n\\n\u003cp\u003eSometimes on the same query with specific values, the query works correctly in that the query plan chooses to do an index lookup on COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 using the index and then an index lookup on APP.CONFIGURATION_BUNDLES3.   Other times on the same query with another query value, the query plan chooses to do an index lookup on APP.CONFIGURATION_BUNDLES3 and then a table scan on APP.CONFIGURATION_BUNDLES3 which is incorrect.   The problem occurs because of the cost and row estimate on COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 for specific values.\u003c\\/p\u003e\\n\\n\u003cp\u003eHere is a query that works correctly:\u003c\\/p\u003e\\n\\n\u003cp\u003eSELECT * FROM APP.CONFIGURATION_BUNDLE3 T1,\u003cbr\\/\u003e\\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0\u003cbr\\/\u003e\\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and\u003cbr\\/\u003e\\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 3;\u003c\\/p\u003e\\n\\n\u003cp\u003eand here is the same query with a different value that fails with the table scan:\u003c\\/p\u003e\\n\\n\u003cp\u003eSELECT * FROM APP.CONFIGURATION_BUNDLE3 T1,\u003cbr\\/\u003e\\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0\u003cbr\\/\u003e\\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and\u003cbr\\/\u003e\\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 22112129;\u003c\\/p\u003e\\n\\n\u003cp\u003eNote that both of these values will exist, the number of rows in the first will be 42 and the second will be 1.  Also note that the values of COSEDDROPPROFILEDSCPTABLEENTRY_ID are pretty spaced out so the value 22112129 is at about 7% of the sequence of values in order.  Also note that there is a non-unique index on  COSEDDROPPROFILEDSCPTABLEENTRY_ID as I said above.\u003c\\/p\u003e\\n\\n\u003cp\u003e   In BTreeCostController.java, we have:\u003c\\/p\u003e\\n\\n\u003cp\u003e        public void getScanCost(\u003cbr\\/\u003e\\n    int                     scan_type,\u003cbr\\/\u003e\\n    long                    row_count,\u003cbr\\/\u003e\\n    int                     group_size,\u003cbr\\/\u003e\\n    boolean                 forUpdate,\u003cbr\\/\u003e\\n    FormatableBitSet                 scanColumnList,\u003cbr\\/\u003e\\n    DataValueDescriptor[]   template,\u003cbr\\/\u003e\\n    DataValueDescriptor[]   startKeyValue,\u003cbr\\/\u003e\\n    int                     startSearchOperator,\u003cbr\\/\u003e\\n    DataValueDescriptor[]   stopKeyValue,\u003cbr\\/\u003e\\n    int                     stopSearchOperator,\u003cbr\\/\u003e\\n    boolean                 reopen_scan,\u003cbr\\/\u003e\\n    int                     access_type,\u003cbr\\/\u003e\\n    StoreCostResult         cost_result)\u003cbr\\/\u003e\\n        throws StandardException\u003cbr\\/\u003e\\n    {\u003cbr\\/\u003e\\n        float       left_of_start;\u003cbr\\/\u003e\\n        float       left_of_stop;\u003cbr\\/\u003e\\n        ControlRow  control_row = null;\u003cbr\\/\u003e\\n        long        input_row_count = (row_count &lt; 0 ? num_rows : row_count);\u003c\\/p\u003e\\n\\n\u003cp\u003e        try\u003cbr\\/\u003e\\n        {\u003cbr\\/\u003e\\n            \\/\\/ Find the starting page and row slot.\u003cbr\\/\u003e\\n            if (startKeyValue == null)\u003c\\/p\u003e\\n            {\\n                left_of_start = 0;\\n            }\\n\u003cp\u003e            else\u003c\\/p\u003e\\n            {\\n                \\/\\/ Search for the starting row.\\n\\n                SearchParameters sp = new SearchParameters(\\n                    startKeyValue,\\n                    ((startSearchOperator == ScanController.GE) ?\\n                        SearchParameters.POSITION_LEFT_OF_PARTIAL_KEY_MATCH :\\n                        SearchParameters.POSITION_RIGHT_OF_PARTIAL_KEY_MATCH),\\n                    template, this, true);\\n\\n                control_row =\\n                    ControlRow.get(this, BTree.ROOTPAGEID).search(sp);\\n\\n                control_row.release();\\n                control_row = null;\\n\\n                left_of_start = sp.left_fraction;\\n            }\\n\\n\u003cp\u003e            if (stopKeyValue == null)\u003c\\/p\u003e\\n            {\\n                left_of_stop = 1;\\n            }\\n\u003cp\u003e            else\u003c\\/p\u003e\\n            {\\n                \\/\\/ Search for the stopping row.\\n\\n                SearchParameters sp =\\n                    new SearchParameters(\\n                        stopKeyValue,\\n                        ((stopSearchOperator == ScanController.GE) ?\\n                          SearchParameters.POSITION_LEFT_OF_PARTIAL_KEY_MATCH :\\n                          SearchParameters.POSITION_RIGHT_OF_PARTIAL_KEY_MATCH),\\n                        template, this, true);\\n\\n                control_row =\\n                    ControlRow.get(this, BTree.ROOTPAGEID).search(sp);\\n\\n                control_row.release();\\n                control_row = null;\\n\\n                left_of_stop = sp.left_fraction;\\n            }\\n\\n\u003cp\u003e            \\/\\/ System.out.println(\u003cbr\\/\u003e\\n              \\/\\/   \\\"\\\\n\\\\tleft_of_start = \\\" + left_of_start +\u003cbr\\/\u003e\\n                \\/\\/ \\\"\\\\n\\\\tleft_of_stop  = \\\" + left_of_stop);\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ what percentage of rows are between start and stop?\u003c\\/p\u003e\\n\\n\u003cp\u003e            float ret_fraction = left_of_stop - left_of_start;\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ If for some reason the stop position comes before the start\u003cbr\\/\u003e\\n            \\/\\/ position, assume 0 rows will return from query.\u003cbr\\/\u003e\\n            if (ret_fraction &lt; 0)\u003cbr\\/\u003e\\n                ret_fraction = 0;\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ Never return estimate of more rows than exist, sometimes\u003cbr\\/\u003e\\n            \\/\\/ the recursive estimation through the btree may return a number\u003cbr\\/\u003e\\n            \\/\\/ like 1.00001.\u003cbr\\/\u003e\\n            if (ret_fraction &gt; 1)\u003cbr\\/\u003e\\n                ret_fraction = 1;\u003c\\/p\u003e\\n\\n\u003cp\u003e            float estimated_row_count = input_row_count * ret_fraction;\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ first the base cost of positioning on the first row in the scan.\u003cbr\\/\u003e\\n            double cost =\u003cbr\\/\u003e\\n                getFetchFromFullKeyCost(scanColumnList, access_type);\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ add the base cost of bringing each page for the first time into\u003cbr\\/\u003e\\n            \\/\\/ the cache.  This is basically the cost of bringing each leaf\u003cbr\\/\u003e\\n            \\/\\/ uncached into the cache and reading the control row off of it.:\u003cbr\\/\u003e\\n            cost +=\u003cbr\\/\u003e\\n                (num_pages * ret_fraction) * BASE_UNCACHED_ROW_FETCH_COST;\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ Now some magic to try and figure out the cost of doing a\u003cbr\\/\u003e\\n            \\/\\/ scan along the leaf level of the tree.  Mostly just assume\u003cbr\\/\u003e\\n            \\/\\/ the costs are the same as the heap, and ignore qualifier\u003cbr\\/\u003e\\n            \\/\\/ processing and stop row comparisons for now.\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ the base cost of getting each of the rows from a page assumed\u003cbr\\/\u003e\\n            \\/\\/ to already be cached (by the scan fetch) - this is only for all\u003cbr\\/\u003e\\n            \\/\\/ rows after the initial row on the page has been accounted for\u003cbr\\/\u003e\\n            \\/\\/ under the BASE_UNCACHED_ROW_FETCH_COST cost.:\u003cbr\\/\u003e\\n            long cached_row_count = ((long) estimated_row_count) - num_pages;\u003cbr\\/\u003e\\n            if (cached_row_count &lt; 0)\u003cbr\\/\u003e\\n                cached_row_count = 0;\u003c\\/p\u003e\\n\\n\u003cp\u003e            if (scan_type == StoreCostController.STORECOST_SCAN_NORMAL)\u003cbr\\/\u003e\\n                cost += cached_row_count * BASE_GROUPSCAN_ROW_COST;\u003cbr\\/\u003e\\n            else\u003cbr\\/\u003e\\n                cost += cached_row_count * BASE_HASHSCAN_ROW_FETCH_COST;\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ finally add the cost associated with the number of bytes in row:\u003cbr\\/\u003e\\n            long row_size =\u003cbr\\/\u003e\\n                (input_row_count == 0) ?\u003cbr\\/\u003e\\n                    4 : (num_pages * page_size) \\/ input_row_count;\u003c\\/p\u003e\\n\\n\u003cp\u003e            cost +=\u003cbr\\/\u003e\\n                (estimated_row_count * row_size) * BASE_ROW_PER_BYTECOST;\u003c\\/p\u003e\\n\\n\u003cp\u003e            if (SanityManager.DEBUG)\u003c\\/p\u003e\\n            {\\n                if (cost &lt; 0)\\n                    SanityManager.THROWASSERT(\\\"cost \\\" + cost);\\n\\n                if (estimated_row_count &lt; 0)\\n                    SanityManager.THROWASSERT(\\n                        \\\"estimated_row_count = \\\" + estimated_row_count);\\n            }\\n\\n\u003cp\u003e            \\/\\/ return the cost\u003cbr\\/\u003e\\n            cost_result.setEstimatedCost(cost);\u003c\\/p\u003e\\n\\n\u003cp\u003e            \\/\\/ RESOLVE - should we make sure this number is &gt; 0?\u003cbr\\/\u003e\\n            cost_result.setEstimatedRowCount(Math.round(estimated_row_count));\u003cbr\\/\u003e\\n        }\u003cbr\\/\u003e\\n        finally\u003c\\/p\u003e\\n        {\\n            if (control_row != null)\\n                control_row.release();\\n        }\\n\\n\u003cp\u003e        \\/\\/ System.out.println(\\\"BTreeCostController.getScanCost():\\\" +\u003cbr\\/\u003e\\n          \\/\\/   \\\"\\\\n\\\\t cost = \\\" + cost_result.getEstimatedCost() +\u003cbr\\/\u003e\\n            \\/\\/ \\\"\\\\n\\\\t rows = \\\" + cost_result.getEstimatedRowCount());\u003c\\/p\u003e\\n\\n\u003cp\u003e        return;\u003cbr\\/\u003e\\n    }\u003c\\/p\u003e\\n\\n\u003cp\u003eThe problem that I am seeing is that on certain queries coming in the \\\"left_of_start\\\" and the \\\"left_of_stop\\\" can be the same value.   When this occurs, the \\\"ret_fraction\\\" becomes 0.0 and the estimated row count becomes \\\"0.0\\\" and the estimated cost becomes \\\"0.0\\\".\u003c\\/p\u003e\\n\\n\u003cp\u003eWhen this occurs in the query plan and the join order is APP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 and then APP.CONFIGURATION_BUNDLE3, this outer cost of \\\"0.0\\\" has the effect of causing the cost of the table scan of APP.CONFIGURATION_BUNDLE3 appear to be the lowest cost.   This is incorrect.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor discrete values that are unique within a large index, it seems to me (and is observed), that the rows left of the start value and rows left of the stop value could very well be the same when the starting and stopping values are the same as in this case.\u003c\\/p\u003e\\n\\n\u003cp\u003eAs a test, I modified the above code to estimate the rows as 1 when this is the case and ran the code and it immediately pick the access path that it should.  Probably 1 row is not correct but I am having a little trouble to come up with the value that it should be when the starting and stopping row percentage are exactly the same (in this case left_of_stop and right_of_stop is 0.07715294 and the number of rows in the table are 48248128).\u003c\\/p\u003e\\n\\n\u003cp\u003eBelow I have the output of the optimizer trace for the two queries that I label CORRECT and iNCORRECT in which this can be seen.\u003c\\/p\u003e\\n\\n\u003cp\u003e&#8211; CORRECT OPTIMIZER TRACE &#8212;\u003c\\/p\u003e\\n\\n\u003cp\u003e\\\"SELECT * FROM APP.CONFIGURATION_BUNDLE3 T1,\u003cbr\\/\u003e\\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0\u003cbr\\/\u003e\\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and\u003cbr\\/\u003e\\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 3\u003cbr\\/\u003e\\nOptimization started at time 1377549782052 using optimizer 1655768029\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eConsidering join order:  0 with assignedTableMap = {}\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eCalling nextAccessPath() for base table T1 with 0 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eRemembering join strategy NESTEDLOOP as best for table 0\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy HASH for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{ID} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{ID} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 1540600.81, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{BUNDLE_NAME} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{DTYPE} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{DTYPE} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 0\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eConsidering join order:  0 1 with assignedTableMap = \u003c\\/p\u003e\\n{0}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 2, extra qualifier selectivity is : 0.010000000000000002\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 482481.3300000001, singleScanRowCount == 482481.3300000001 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 8.750136837956523E13, rowCount == 7003486.0, singleScanRowCount == 482481.3300000001 for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 482481.33 for table 1\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nGuaranteed to match a single row - cost is: 7.8575 for table 1\u003cbr\\/\u003e\\nLock mode set to MODE_RECORD because all start and stop positions are constant\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0 for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 1, statistics start\\/stop selectivity is : 1.3264763349989454E-6\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nCost including extra statistics for index being considered start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 24.802827036771248, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 128.99483567478512, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 64.00000530590533 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 6.400000530590534 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.4915061182000002E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.010000000000000002\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 9.346302007800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 8.544554508045316, rowCount == 4.0, singleScanRowCount == 4.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.0544836870533226E8, rowCount == 7003486.0, singleScanRowCount == 4.0 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.0544836870533226E8, rowCount == 7003486.0, singleScanRowCount == 0.4 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 1\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0\u003cbr\\/\u003e\\nWe have a complete join order.\u003cbr\\/\u003e\\nThis is the cheapest plan so far.\u003cbr\\/\u003e\\nPlan is a normal plan.\u003cbr\\/\u003e\\nCost of cheapest plan is Level2CostEstimateImpl: at 70394772, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 69248303, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 69248303, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table 0 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 2067575494, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 2067575494, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join order as best:  0 1 with assignedTableMap = {0, 1}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join order:  1 with assignedTableMap = {}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nSelectivity from statistics found. It is 2.3194399498852528E-8\u003cbr\\/\u003e\\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 1.11908647187577, singleScanRowCount == 1.11908647187577 for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nSelectivity from statistics found. It is 2.3194399498852528E-8\u003cbr\\/\u003e\\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nSelectivity from statistics found. It is 2.3194399498852528E-8\u003cbr\\/\u003e\\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 997551539, cost == 8.544554508045316, rowCount == 4.0, singleScanRowCount == 4.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0 for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 1\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join order:  1 0 with assignedTableMap = {1}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 700348.6000000001, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.733707864E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 0\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 3\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 3\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 4470393.76, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 4470393.76, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 4470393.76, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0\u003cbr\\/\u003e\\nGuaranteed to match a single row - cost is: 6.286 for table 0\u003cbr\\/\u003e\\nLock mode set to MODE_RECORD because all start and stop positions are constant\u003cbr\\/\u003e\\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 25.144, rowCount == 4.0, singleScanRowCount == 1.0 for table 0\u003cbr\\/\u003e\\nIndex does not cover query - cost including base row fetch is: 7.84 for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 0\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 1679861.03, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.540669359E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.540669359E7, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 1.540669359E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 6.4345659848000005E7, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 6.4345659848000005E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 457048813, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 6.5446505688E7, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 6.5446505688E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 0\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 48.04055450804531, rowCount == 4.0, singleScanRowCount == 1.0\u003cbr\\/\u003e\\nWe have a complete join order.\u003cbr\\/\u003e\\nThis is the cheapest plan so far.\u003cbr\\/\u003e\\nPlan is a normal plan.\u003cbr\\/\u003e\\nCost of cheapest plan is Level2CostEstimateImpl: at 70394772, cost == 48.04055450804531, rowCount == 4.0, singleScanRowCount == 1.0\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 726246088, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 726246088, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}, costEstimate == Level2CostEstimateImpl: at 1868435115, cost == 32.983999999999995, rowCount == 4.0, singleScanRowCount == 1.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}, costEstimate == Level2CostEstimateImpl: at 1868435115, cost == 32.983999999999995, rowCount == 4.0, singleScanRowCount == 1.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 0 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join order as best:  1 0 with assignedTableMap = {0, 1}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nModifying access paths using optimizer 1655768029\u003cbr\\/\u003e\\nChanging access path for table 1\u003cbr\\/\u003e\\nChanging access path for table 0\u003cbr\\/\u003e\\n\\\"\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n&#8212; INCORRECT OPTIMIZER TRACE &#8212;\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\\\"SELECT * FROM APP.CONFIGURATION_BUNDLE3 T1,\u003cbr\\/\u003e\\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0\u003cbr\\/\u003e\\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and\u003cbr\\/\u003e\\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 22112129\u003cbr\\/\u003e\\nOptimization started at time 1377549702099 using optimizer 2101481450\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join order:  0 with assignedTableMap = {}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 0\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 1540600.81, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 0 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 0\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join order:  0 1 with assignedTableMap = {0}\\n\\n\\n\u003cp\u003eCalling nextAccessPath() for base table T0 with 2 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 2, extra qualifier selectivity is : 0.010000000000000002\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 482481.3300000001, singleScanRowCount == 482481.3300000001 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 8.750136837956523E13, rowCount == 7003486.0, singleScanRowCount == 482481.3300000001 for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy HASH for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003c\\/p\u003e\\n\\n\u003col\u003e\\n\\t\u003cli\u003ehash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003c\\/li\u003e\\n\u003c\\/ol\u003e\\n\\n\\n\u003col\u003e\\n\\t\u003cli\u003ehash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 482481.33 for table 1\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003c\\/li\u003e\\n\u003c\\/ol\u003e\\n\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nGuaranteed to match a single row - cost is: 7.8575 for table 1\u003cbr\\/\u003e\\nLock mode set to MODE_RECORD because all start and stop positions are constant\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0 for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy HASH for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 1, statistics start\\/stop selectivity is : 1.3264763349989454E-6\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nCost including extra statistics for index being considered start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 24.802827036771248, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 128.99483567478512, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 64.00000530590533 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 6.400000530590534 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.4915061182000002E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.010000000000000002\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 9.346302007800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 15.715, rowCount == 2.0, singleScanRowCount == 2.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 18.971, rowCount == 2.0, singleScanRowCount == 2.0 for table 1\u003cbr\\/\u003e\\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.32863132906E8, rowCount == 7003486.0, singleScanRowCount == 2.0 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.32863132906E8, rowCount == 7003486.0, singleScanRowCount == 0.2 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 2 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 1\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0\u003cbr\\/\u003e\\nWe have a complete join order.\u003cbr\\/\u003e\\nThis is the cheapest plan so far.\u003cbr\\/\u003e\\nPlan is a normal plan.\u003cbr\\/\u003e\\nCost of cheapest plan is Level2CostEstimateImpl: at 245104354, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 2063323644, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 2063323644, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table 0 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e, costEstimate == Level2CostEstimateImpl: at 714552952, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003c\\/p\u003e\\n\\n\u003cp\u003eRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 714552952, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join order as best:  0 1 with assignedTableMap = {0, 1}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join order:  1 with assignedTableMap = {}\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1\u003cbr\\/\u003e\\nSelectivity from statistics found. It is 2.3194399498852528E-8\u003cbr\\/\u003e\\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 1.11908647187577, singleScanRowCount == 1.11908647187577 for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1\u003cbr\\/\u003e\\nAdding unordered optimizable, # of predicates = 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nSelectivity from statistics found. It is 2.3194399498852528E-8\u003cbr\\/\u003e\\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy HASH for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1\u003cbr\\/\u003e\\nSelectivity from statistics found. It is 2.3194399498852528E-8\u003cbr\\/\u003e\\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 1\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 572153096, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0 for table 1\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0 for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering join strategy NESTEDLOOP as best for table 1\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 1\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e for table 1\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T0 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 1\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 1\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eConsidering join order:  1 0 with assignedTableMap = \u003c\\/p\u003e\\n{1}\\n\\n\\n\u003cp\u003eCalling nextAccessPath() for base table T1 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 700348.6000000001, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eRemembering join strategy NESTEDLOOP as best for table 0\u003cbr\\/\u003e\\nin best access path\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy HASH for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nScanning heap, but we have a full match on a unique key.\u003c\\/p\u003e\\n\\n\u003col\u003e\\n\\t\u003cli\u003ehash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 3\u003c\\/li\u003e\\n\u003c\\/ol\u003e\\n\\n\\n\u003col\u003e\\n\\t\u003cli\u003ehash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 3\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 4470393.76, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 4470393.76, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 4470393.76, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003c\\/li\u003e\\n\u003c\\/ol\u003e\\n\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{ID} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nGuaranteed to match a single row - cost is: 6.286 for table 0\u003cbr\\/\u003e\\nLock mode set to MODE_RECORD because all start and stop positions are constant\u003cbr\\/\u003e\\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 1.0 for table 0\u003cbr\\/\u003e\\nIndex does not cover query - cost including base row fetch is: 0.0 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy HASH for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{ID} for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\n# hash key columns = 1hashKeyColumns\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e = 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{ID}\\n\u003cp\u003e scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 1679861.03, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.540669359E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.540669359E7, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 1.540669359E7, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nSkipping access path due to excess memory usage, maximum is 1048576\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{BUNDLE_NAME} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{BUNDLE_NAME} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{DTYPE} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{DTYPE} scan for table number 0 is :\u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 1625417063, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0\u003cbr\\/\u003e\\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nLock mode set to MODE_TABLE because no start or stop position\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering join strategy HASH for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nSkipping HASH JOIN because there are no hash key columns\u003cbr\\/\u003e\\nCalling nextAccessPath() for base table T1 with 1 predicates.\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering join strategy NESTEDLOOP for table 0\u003cbr\\/\u003e\\nNo more conglomerates to consider for table 0\u003cbr\\/\u003e\\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 700348.6000000001\u003cbr\\/\u003e\\nWe have a complete join order.\u003cbr\\/\u003e\\nThis is the cheapest plan so far.\u003cbr\\/\u003e\\nPlan is a normal plan.\u003cbr\\/\u003e\\nCost of cheapest plan is Level2CostEstimateImpl: at 245104354, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 700348.6000000001\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = \u003c\\/p\u003e\\n{COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 2057836940, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n\u003cp\u003e, costEstimate == Level2CostEstimateImpl: at 2057836940, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal\u003c\\/p\u003e\\n\\n\u003cp\u003eRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 959713667, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table -1 for plan type  normal\u003c\\/p\u003e\\n\\n\u003cp\u003eRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 959713667, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table 0 for plan type  normal\u003c\\/p\u003e\\n\\n\\n\\n\u003cp\u003eRemembering join order as best:  1 0 with assignedTableMap = \u003c\\/p\u003e\\n{0, 1}\\n\\n\\n\u003cp\u003eModifying access paths using optimizer 2101481450\u003cbr\\/\u003e\\nChanging access path for table 1\u003cbr\\/\u003e\\nChanging access path for table 0\u003cbr\\/\u003e\\n\\\"\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eOn Aug 24, 2013, at 8:00 AM, \\\"Bergquist, Brett\\\" &lt;BBergquist@canoga.com&gt; wrote:\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Derby developers (Mike, Manta, Bryan, Rick ,Knut, and if I forgot anyone that has help me in the past), I just want to thank you for your help!   I realize that you guys have day jobs just like me an taking the time out to give me some pointers is really appreciated!\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; I am trying to produce reduced size and readily reproducible case but would you knot know it, the symptoms change    I saved a database that was working with 10.8.2.2 with (after shutting down) tar cvEf - db | compress &gt;db.8.tar.Z earlier.   So just to verify again that this did indeed work correctly, I restored this database and the 10.8.2.2 libraries performed the queue and darn if the 10.8.2.2 did not exhibit the same problem.    So then last night I deleted the database and created it fresh again from the same exact script that allowed 10.8.2.2 to work and again it still has the same problem.\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; So now I have no confidence of my test setup and also don\'t think the issue is confined to 10.9.1.1.   So I will be quiet until I get a case where it works and then understand why and what triggers it to not work.\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; On Aug 23, 2013, at 6:39 PM, mike matrigali &lt;mikemapp1@gmail.com&gt; wrote:\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt;&gt; On 8\\/23\\/2013 2:55 PM, Bergquist, Brett wrote:\u003cbr\\/\u003e\\n&gt;&gt;&gt; Mike I would love to open a Jira but having a reproducible case is important as I realize.  Right now, the reproducible database is 2Gb compressed which is really not practical to upload.\u003cbr\\/\u003e\\n&gt;&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;&gt; My goal right now is to fix the problem.  The problem is in production, a large telecomm company, and the real database is about 200Gb.  The database has been hard upgraded and has been in use for about 2 weeks so rolling back to backup before the hard upgrade is not possible.  Only going forward is possible.   So I have the debugger connected up right now and am going through the code.  I am also comparing 10.8.2.2 version 10.9.1.0 to look for any suspicious differences.  I have to fix this now, not months from now.\u003cbr\\/\u003e\\n&gt;&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;&gt; What would be really useful would be to:\u003cbr\\/\u003e\\n&gt;&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;&gt; 1. understand how to turn on the optimizer tracing facility that I see in the 10.9.1.0 source.  For example:\u003cbr\\/\u003e\\n&gt;&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;&gt;             optimizerTrace = lcc.getOptimizerTrace();\u003cbr\\/\u003e\\n&gt;&gt;&gt;   I can figure this out, but if anyone can point to a wiki page or some other resource to enable the magic, sharing it will be most welcome.\u003cbr\\/\u003e\\n&gt;&gt; I have not used the following but have been pointed at it by those who do:\u003cbr\\/\u003e\\n&gt;&gt; \u003ca href=\\\"http:\\/\\/wiki.apache.org\\/db-derby\\/OptimizerTracing\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/wiki.apache.org\\/db-derby\\/OptimizerTracing\u003c\\/a\u003e\u003cbr\\/\u003e\\n&gt;&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;&gt; 2. understand if it would be possible to access my test database that has been hard upgraded to 10.9.1.0 with 10.8.2.2.  I know that when I boot the database it will complain and not boot but if I am just doing a read-only query on the database with 10.8.2.2 and the query works, this will give me real confidence that the problem is in the code changes from 10.8.2.2 to 10.9.1.1 and not something related to the structure now stored in the database.\u003cbr\\/\u003e\\n&gt;&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;&gt; So I am working on this, am looking for pointers of where to look in the code, and will open a Jira also supply a patch when I have this fixed.\u003cbr\\/\u003e\\n&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt; this one is hard, definitely nothing is supported to to do this, and no\u003cbr\\/\u003e\\n&gt;&gt; magic property is coming to mind.  If it does not take days to load your\u003cbr\\/\u003e\\n&gt;&gt; test db, I would just build a 10.8 db and load it.\u003cbr\\/\u003e\\n&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt; Mostly catalog issues are what happen in hard upgrade, so doing a query\u003cbr\\/\u003e\\n&gt;&gt; with old code on a new hard upgrade db \\\"probably\\\" works.  But even\u003cbr\\/\u003e\\n&gt;&gt; booting might write stuff that would then be a problem using it later,\u003cbr\\/\u003e\\n&gt;&gt; even if your intent is only to run read-only queries.\u003cbr\\/\u003e\\n&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt; You could build your own 10.8 and just change the code to skip the\u003cbr\\/\u003e\\n&gt;&gt; checks that don\'t allow it to boot.  This might work or it might corrupt\u003cbr\\/\u003e\\n&gt;&gt; the db during the boot process.  If you are trying this I would make\u003cbr\\/\u003e\\n&gt;&gt; a copy of the test db to try i on.\u003cbr\\/\u003e\\n&gt;&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;\u003cbr\\/\u003e\\n&gt;&gt;\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt;\u003c\\/p\u003e\\n\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751398_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751398_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:27:49+0000\'\u003e27\\/Aug\\/13 16:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The following email thread has critical info for this bug: \\nI think i found were the issue occurs.  I am able to reproduce the problem with Derby 10.8.2.2.   The database has about 7 million records in APP.CONFIGURATION_BUNDLES3 and about 48 million records in COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3.   On  COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3, there is a non-unique index on COSEDDROPPROFILEDSCPTABLEENTRY_ID. \\n\\n Sometimes on the same query with specific values, the query works correctly in that the query plan chooses to do an index lookup on COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 using the index and then an index lookup on APP.CONFIGURATION_BUNDLES3.   Other times on the same query with another query value, the query plan chooses to do an index lookup on APP.CONFIGURATION_BUNDLES3 and then a table scan on APP.CONFIGURATION_BUNDLES3 which is incorrect.   The problem occurs because of the cost and row estimate on COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 for specific values. \\n\\n Here is a query that works correctly: \\n\\n SELECT * FROM APP.CONFIGURATION_BUNDLE3 T1, \\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0 \\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and \\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 3; \\n\\n and here is the same query with a different value that fails with the table scan: \\n\\n SELECT * FROM APP.CONFIGURATION_BUNDLE3 T1, \\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0 \\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and \\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 22112129; \\n\\n Note that both of these values will exist, the number of rows in the first will be 42 and the second will be 1.  Also note that the values of COSEDDROPPROFILEDSCPTABLEENTRY_ID are pretty spaced out so the value 22112129 is at about 7% of the sequence of values in order.  Also note that there is a non-unique index on  COSEDDROPPROFILEDSCPTABLEENTRY_ID as I said above. \\n\\n    In BTreeCostController.java, we have: \\n\\n         public void getScanCost( \\n    int                     scan_type, \\n    long                    row_count, \\n    int                     group_size, \\n    boolean                 forUpdate, \\n    FormatableBitSet                 scanColumnList, \\n    DataValueDescriptor[]   template, \\n    DataValueDescriptor[]   startKeyValue, \\n    int                     startSearchOperator, \\n    DataValueDescriptor[]   stopKeyValue, \\n    int                     stopSearchOperator, \\n    boolean                 reopen_scan, \\n    int                     access_type, \\n    StoreCostResult         cost_result) \\n        throws StandardException \\n    { \\n        float       left_of_start; \\n        float       left_of_stop; \\n        ControlRow  control_row = null; \\n        long        input_row_count = (row_count &lt; 0 ? num_rows : row_count); \\n\\n         try \\n        { \\n            \\/\\/ Find the starting page and row slot. \\n            if (startKeyValue == null) \\n            {\\n                left_of_start = 0;\\n            }\\n             else \\n            {\\n                \\/\\/ Search for the starting row.\\n\\n                SearchParameters sp = new SearchParameters(\\n                    startKeyValue,\\n                    ((startSearchOperator == ScanController.GE) ?\\n                        SearchParameters.POSITION_LEFT_OF_PARTIAL_KEY_MATCH :\\n                        SearchParameters.POSITION_RIGHT_OF_PARTIAL_KEY_MATCH),\\n                    template, this, true);\\n\\n                control_row =\\n                    ControlRow.get(this, BTree.ROOTPAGEID).search(sp);\\n\\n                control_row.release();\\n                control_row = null;\\n\\n                left_of_start = sp.left_fraction;\\n            }\\n\\n             if (stopKeyValue == null) \\n            {\\n                left_of_stop = 1;\\n            }\\n             else \\n            {\\n                \\/\\/ Search for the stopping row.\\n\\n                SearchParameters sp =\\n                    new SearchParameters(\\n                        stopKeyValue,\\n                        ((stopSearchOperator == ScanController.GE) ?\\n                          SearchParameters.POSITION_LEFT_OF_PARTIAL_KEY_MATCH :\\n                          SearchParameters.POSITION_RIGHT_OF_PARTIAL_KEY_MATCH),\\n                        template, this, true);\\n\\n                control_row =\\n                    ControlRow.get(this, BTree.ROOTPAGEID).search(sp);\\n\\n                control_row.release();\\n                control_row = null;\\n\\n                left_of_stop = sp.left_fraction;\\n            }\\n\\n             \\/\\/ System.out.println( \\n              \\/\\/   \\\"\\\\n\\\\tleft_of_start = \\\" + left_of_start + \\n                \\/\\/ \\\"\\\\n\\\\tleft_of_stop  = \\\" + left_of_stop); \\n\\n             \\/\\/ what percentage of rows are between start and stop? \\n\\n             float ret_fraction = left_of_stop - left_of_start; \\n\\n             \\/\\/ If for some reason the stop position comes before the start \\n            \\/\\/ position, assume 0 rows will return from query. \\n            if (ret_fraction &lt; 0) \\n                ret_fraction = 0; \\n\\n             \\/\\/ Never return estimate of more rows than exist, sometimes \\n            \\/\\/ the recursive estimation through the btree may return a number \\n            \\/\\/ like 1.00001. \\n            if (ret_fraction &gt; 1) \\n                ret_fraction = 1; \\n\\n             float estimated_row_count = input_row_count * ret_fraction; \\n\\n             \\/\\/ first the base cost of positioning on the first row in the scan. \\n            double cost = \\n                getFetchFromFullKeyCost(scanColumnList, access_type); \\n\\n             \\/\\/ add the base cost of bringing each page for the first time into \\n            \\/\\/ the cache.  This is basically the cost of bringing each leaf \\n            \\/\\/ uncached into the cache and reading the control row off of it.: \\n            cost += \\n                (num_pages * ret_fraction) * BASE_UNCACHED_ROW_FETCH_COST; \\n\\n             \\/\\/ Now some magic to try and figure out the cost of doing a \\n            \\/\\/ scan along the leaf level of the tree.  Mostly just assume \\n            \\/\\/ the costs are the same as the heap, and ignore qualifier \\n            \\/\\/ processing and stop row comparisons for now. \\n\\n             \\/\\/ the base cost of getting each of the rows from a page assumed \\n            \\/\\/ to already be cached (by the scan fetch) - this is only for all \\n            \\/\\/ rows after the initial row on the page has been accounted for \\n            \\/\\/ under the BASE_UNCACHED_ROW_FETCH_COST cost.: \\n            long cached_row_count = ((long) estimated_row_count) - num_pages; \\n            if (cached_row_count &lt; 0) \\n                cached_row_count = 0; \\n\\n             if (scan_type == StoreCostController.STORECOST_SCAN_NORMAL) \\n                cost += cached_row_count * BASE_GROUPSCAN_ROW_COST; \\n            else \\n                cost += cached_row_count * BASE_HASHSCAN_ROW_FETCH_COST; \\n\\n             \\/\\/ finally add the cost associated with the number of bytes in row: \\n            long row_size = \\n                (input_row_count == 0) ? \\n                    4 : (num_pages * page_size) \\/ input_row_count; \\n\\n             cost += \\n                (estimated_row_count * row_size) * BASE_ROW_PER_BYTECOST; \\n\\n             if (SanityManager.DEBUG) \\n            {\\n                if (cost &lt; 0)\\n                    SanityManager.THROWASSERT(\\\"cost \\\" + cost);\\n\\n                if (estimated_row_count &lt; 0)\\n                    SanityManager.THROWASSERT(\\n                        \\\"estimated_row_count = \\\" + estimated_row_count);\\n            }\\n\\n             \\/\\/ return the cost \\n            cost_result.setEstimatedCost(cost); \\n\\n             \\/\\/ RESOLVE - should we make sure this number is &gt; 0? \\n            cost_result.setEstimatedRowCount(Math.round(estimated_row_count)); \\n        } \\n        finally \\n        {\\n            if (control_row != null)\\n                control_row.release();\\n        }\\n\\n         \\/\\/ System.out.println(\\\"BTreeCostController.getScanCost():\\\" + \\n          \\/\\/   \\\"\\\\n\\\\t cost = \\\" + cost_result.getEstimatedCost() + \\n            \\/\\/ \\\"\\\\n\\\\t rows = \\\" + cost_result.getEstimatedRowCount()); \\n\\n         return; \\n    } \\n\\n The problem that I am seeing is that on certain queries coming in the \\\"left_of_start\\\" and the \\\"left_of_stop\\\" can be the same value.   When this occurs, the \\\"ret_fraction\\\" becomes 0.0 and the estimated row count becomes \\\"0.0\\\" and the estimated cost becomes \\\"0.0\\\". \\n\\n When this occurs in the query plan and the join order is APP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 and then APP.CONFIGURATION_BUNDLE3, this outer cost of \\\"0.0\\\" has the effect of causing the cost of the table scan of APP.CONFIGURATION_BUNDLE3 appear to be the lowest cost.   This is incorrect. \\n\\n For discrete values that are unique within a large index, it seems to me (and is observed), that the rows left of the start value and rows left of the stop value could very well be the same when the starting and stopping values are the same as in this case. \\n\\n As a test, I modified the above code to estimate the rows as 1 when this is the case and ran the code and it immediately pick the access path that it should.  Probably 1 row is not correct but I am having a little trouble to come up with the value that it should be when the starting and stopping row percentage are exactly the same (in this case left_of_stop and right_of_stop is 0.07715294 and the number of rows in the table are 48248128). \\n\\n Below I have the output of the optimizer trace for the two queries that I label CORRECT and iNCORRECT in which this can be seen. \\n\\n &#8211; CORRECT OPTIMIZER TRACE &#8212; \\n\\n \\\"SELECT * FROM APP.CONFIGURATION_BUNDLE3 T1, \\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0 \\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and \\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 3 \\nOptimization started at time 1377549782052 using optimizer 1655768029 \\n\\n\\n Considering join order:  0 with assignedTableMap = {} \\n\\n\\n Calling nextAccessPath() for base table T1 with 0 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nAdding unordered optimizable, # of predicates = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\n\\n Remembering join strategy NESTEDLOOP as best for table 0 \\nin best access path \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n\\n Considering join strategy HASH for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nAdding unordered optimizable, # of predicates = 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{ID} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n  for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{ID} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 1540600.81, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n  for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{BUNDLE_NAME} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n  for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{BUNDLE_NAME} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n  for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{DTYPE} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n  for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{DTYPE} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n  for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\nNo more conglomerates to consider for table 0 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n\\n\\n Considering join order:  0 1 with assignedTableMap =  \\n{0} \\n \\n \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nScanning heap, but we have a full match on a unique key. \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 2, extra qualifier selectivity is : 0.010000000000000002 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 482481.3300000001, singleScanRowCount == 482481.3300000001 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 8.750136837956523E13, rowCount == 7003486.0, singleScanRowCount == 482481.3300000001 for table 1 \\n \\nRemembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nScanning heap, but we have a full match on a unique key. \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 4824813.3 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 482481.33 for table 1 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nGuaranteed to match a single row - cost is: 7.8575 for table 1 \\nLock mode set to MODE_RECORD because all start and stop positions are constant \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0 for table 1 \\n \\nRemembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 4824813.2 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 0.1 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 1, statistics start\\/stop selectivity is : 1.3264763349989454E-6 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nCost including extra statistics for index being considered start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 24.802827036771248, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1 \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 128.99483567478512, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 64.00000530590533 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 6.400000530590534 for table 1 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.4915061182000002E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.010000000000000002 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 9.346302007800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 4.8248132E7 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 8.544554508045316, rowCount == 4.0, singleScanRowCount == 4.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.0544836870533226E8, rowCount == 7003486.0, singleScanRowCount == 4.0 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.0544836870533226E8, rowCount == 7003486.0, singleScanRowCount == 0.4 for table 1 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\nNo more conglomerates to consider for table 1 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0 \\nWe have a complete join order. \\nThis is the cheapest plan so far. \\nPlan is a normal plan. \\nCost of cheapest plan is Level2CostEstimateImpl: at 70394772, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0 \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 69248303, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 69248303, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table 0 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 2067575494, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 2067575494, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal \\n \\n \\n \\nRemembering join order as best:  0 1 with assignedTableMap = {0, 1} \\n \\n \\n \\n \\nConsidering join order:  1 with assignedTableMap = {} \\n \\n \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nAdding unordered optimizable, # of predicates = 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1 \\nSelectivity from statistics found. It is 2.3194399498852528E-8 \\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.2493973484000001E7, rowCount == 1.11908647187577, singleScanRowCount == 1.11908647187577 for table 1 \\n \\nRemembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nAdding unordered optimizable, # of predicates = 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nSelectivity from statistics found. It is 2.3194399498852528E-8 \\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 1.60550464935E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1 \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nSelectivity from statistics found. It is 2.3194399498852528E-8 \\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 997551539, cost == 9.250737519800001E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1 \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 997551539, cost == 8.544554508045316, rowCount == 4.0, singleScanRowCount == 4.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 997551539, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 997551539, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0 for table 1 \\n \\nRemembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\nNo more conglomerates to consider for table 1 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0 \\n \\n \\nConsidering join order:  1 0 with assignedTableMap = {1} \\n \\n \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nScanning heap, but we have a full match on a unique key. \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 4334269.66, rowCount == 700348.6000000001, singleScanRowCount == 700348.6000000001 for table 0 \\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.733707864E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0 \\n \\nRemembering join strategy NESTEDLOOP as best for table 0 \\nin best access path \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nScanning heap, but we have a full match on a unique key. \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 3 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 3 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 4470393.76, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 4470393.76, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 4470393.76, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0 \\nGuaranteed to match a single row - cost is: 6.286 for table 0 \\nLock mode set to MODE_RECORD because all start and stop positions are constant \\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 25.144, rowCount == 4.0, singleScanRowCount == 1.0 for table 0 \\nIndex does not cover query - cost including base row fetch is: 7.84 for table 0 \\n \\nRemembering join strategy NESTEDLOOP as best for table 0 \\nin best access path \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 1679861.03, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.540669359E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 1.540669359E7, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 1.540669359E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 6.4345659848000005E7, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 6.4345659848000005E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 457048813, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 457048813, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 4.0 scans is: Level2CostEstimateImpl: at 457048813, cost == 6.5446505688E7, rowCount == 4.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 457048813, cost == 6.5446505688E7, rowCount == 4.0, singleScanRowCount == 700348.6000000001 for table 0 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\nNo more conglomerates to consider for table 0 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 70394772, cost == 48.04055450804531, rowCount == 4.0, singleScanRowCount == 1.0 \\nWe have a complete join order. \\nThis is the cheapest plan so far. \\nPlan is a normal plan. \\nCost of cheapest plan is Level2CostEstimateImpl: at 70394772, cost == 48.04055450804531, rowCount == 4.0, singleScanRowCount == 1.0 \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 726246088, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 726246088, cost == 15.056554508045316, rowCount == 4.0, singleScanRowCount == 4.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}, costEstimate == Level2CostEstimateImpl: at 1868435115, cost == 32.983999999999995, rowCount == 4.0, singleScanRowCount == 1.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}, costEstimate == Level2CostEstimateImpl: at 1868435115, cost == 32.983999999999995, rowCount == 4.0, singleScanRowCount == 1.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 0 for plan type  normal \\n \\n \\n \\nRemembering join order as best:  1 0 with assignedTableMap = {0, 1} \\n \\n \\nModifying access paths using optimizer 1655768029 \\nChanging access path for table 1 \\nChanging access path for table 0 \\n\\\" \\n \\n&#8212; INCORRECT OPTIMIZER TRACE &#8212; \\n \\n\\\"SELECT * FROM APP.CONFIGURATION_BUNDLE3 T1, \\nAPP.COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3 t0 \\nWHERE t1.ID = t0.COSEDDROPPROFILEDSCPTABLEBUNDLE_ID and \\nt0.COSEDDROPPROFILEDSCPTABLEENTRY_ID = 22112129 \\nOptimization started at time 1377549702099 using optimizer 2101481450 \\n \\n \\nConsidering join order:  0 with assignedTableMap = {} \\n \\n \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nAdding unordered optimizable, # of predicates = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\n \\nRemembering join strategy NESTEDLOOP as best for table 0 \\nin best access path \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nAdding unordered optimizable, # of predicates = 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 1540600.81, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.5267433370000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID} for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME} for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE} for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 0 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 0 \\nNo more conglomerates to consider for table 0 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n \\n \\nConsidering join order:  0 1 with assignedTableMap = {0}\\n\\n\\n Calling nextAccessPath() for base table T0 with 2 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 1 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nScanning heap, but we have a full match on a unique key. \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 2, extra qualifier selectivity is : 0.010000000000000002 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 482481.3300000001, singleScanRowCount == 482481.3300000001 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 8.750136837956523E13, rowCount == 7003486.0, singleScanRowCount == 482481.3300000001 for table 1 \\n\\n Remembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n\\n Considering join strategy HASH for table 1 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nScanning heap, but we have a full match on a unique key. \\n\\n \\n\\t hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n\\n\\n \\n\\t hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 4824813.3 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.3451277644000001E7, rowCount == 7003486.0, singleScanRowCount == 482481.33 for table 1 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\n\\n\\n Considering join strategy NESTEDLOOP for table 1 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n  for table 1 \\nGuaranteed to match a single row - cost is: 7.8575 for table 1 \\nLock mode set to MODE_RECORD because all start and stop positions are constant \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0 for table 1 \\n\\n Remembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n\\n Considering join strategy HASH for table 1 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n  for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 4824813.2 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.70082898735E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 0.1 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 1, statistics start\\/stop selectivity is : 1.3264763349989454E-6 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nCost including extra statistics for index being considered start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 24.802827036771248, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1 \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 128.99483567478512, rowCount == 64.00000530590533, singleScanRowCount == 64.00000530590533 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 64.00000530590533 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.034135257206582E8, rowCount == 7003486.0, singleScanRowCount == 6.400000530590534 for table 1 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.4915061182000002E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.010000000000000002 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 9.346302007800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 4.8248132E7 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.346302007800001E7, rowCount == 7003486.0, singleScanRowCount == 482481.32000000007 for table 1 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 15.715, rowCount == 2.0, singleScanRowCount == 2.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 18.971, rowCount == 2.0, singleScanRowCount == 2.0 for table 1 \\nCost of 7003486.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.32863132906E8, rowCount == 7003486.0, singleScanRowCount == 2.0 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.32863132906E8, rowCount == 7003486.0, singleScanRowCount == 0.2 for table 1 \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 2 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\nNo more conglomerates to consider for table 1 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0 \\nWe have a complete join order. \\nThis is the cheapest plan so far. \\nPlan is a normal plan. \\nCost of cheapest plan is Level2CostEstimateImpl: at 245104354, cost == 5.9364160905E7, rowCount == 7003486.0, singleScanRowCount == 1.0 \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 2063323644, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 2063323644, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table 0 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n , costEstimate == Level2CostEstimateImpl: at 714552952, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n\\n Remembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 714552952, cost == 5.5029891245E7, rowCount == 7003486.0, singleScanRowCount == 1.0, coveringIndexScan == true, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal \\n \\n \\n \\nRemembering join order as best:  0 1 with assignedTableMap = {0, 1} \\n \\n \\n \\n \\nConsidering join order:  1 with assignedTableMap = {} \\n \\n \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nAdding unordered optimizable, # of predicates = 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4.8248133E7, singleScanRowCount == 4.8248133E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 4824813.3, singleScanRowCount == 4824813.3 for table 1 \\nSelectivity from statistics found. It is 2.3194399498852528E-8 \\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.2493973484000001E7, rowCount == 1.11908647187577, singleScanRowCount == 1.11908647187577 for table 1 \\n \\nRemembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1328 name = 989c00e1-0140-b54e-7bb1-ffff93450f77 uuid = a0d440e2-0140-b54e-7bb1-ffff93450f77 indexable = false for table 1 \\nAdding unordered optimizable, # of predicates = 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy NESTEDLOOP for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n  for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n  scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nSelectivity from statistics found. It is 2.3194399498852528E-8 \\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 1.60550464935E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1 \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n\\n Considering join strategy HASH for table 1 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1345 name = SQL130825075045880 uuid = 782c40df-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID, COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n  for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 1 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID}\\n  for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEBUNDLE_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 1.3959416302000001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 4.8248132E7, singleScanRowCount == 4.8248132E7 for table 1 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 4824813.2, singleScanRowCount == 4824813.2 for table 1 \\nSelectivity from statistics found. It is 2.3194399498852528E-8 \\nCost including extra selectivity from statistics start\\/stop selectivity is : Level2CostEstimateImpl: at 572153096, cost == 9.250737519800001E7, rowCount == 1.1190864486813705, singleScanRowCount == 1.1190864486813705 for table 1 \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1361 name = SQL130825075046150 uuid = 597e80e5-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEBUNDLE_ID}\\n  for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 1 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEENTRY_ID} for table 1 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n  for table 1 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEENTRY_ID} scan for table number 1 is : \\nLevel2CostEstimateImpl: at 572153096, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 572153096, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0 for table 1 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 572153096, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0 for table 1 \\n \\nRemembering join strategy NESTEDLOOP as best for table 1 \\nin best access path \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n \\nConsidering join strategy HASH for table 1 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n  for table 1 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T0 with 1 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 1 \\nNo more conglomerates to consider for table 1 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0 \\n\\n\\n Considering join order:  1 0 with assignedTableMap =  \\n{1}\\n\\n\\n Calling nextAccessPath() for base table T1 with 1 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nScanning heap, but we have a full match on a unique key. \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 1, extra qualifier selectivity is : 0.1 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 1.0 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost including extra qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 4334269.66, rowCount == 700348.6000000001, singleScanRowCount == 700348.6000000001 for table 0 \\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0 \\n\\n Remembering join strategy NESTEDLOOP as best for table 0 \\nin best access path \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n\\n Considering join strategy HASH for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nScanning heap, but we have a full match on a unique key. \\n\\n \\n\\t hash key columns = 1hashKeyColumns &#91;0&#93;  = 3 \\n \\n\\n\\n \\n\\t hash key columns = 1hashKeyColumns &#91;0&#93;  = 3 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 4470393.76, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 4470393.76, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 4470393.76, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\n\\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{ID} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n  for table 0 \\nGuaranteed to match a single row - cost is: 6.286 for table 0 \\nLock mode set to MODE_RECORD because all start and stop positions are constant \\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 1.0 for table 0 \\nIndex does not cover query - cost including base row fetch is: 0.0 for table 0 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n\\n Considering join strategy HASH for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{ID} for table 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\n \\n# hash key columns = 1hashKeyColumns &#91;0&#93;  = 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {ID}\\n  for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1281 name = SQL130825075032410 uuid = 2ba7c09b-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{ID}\\n  scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 1679861.03, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 0, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.540669359E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 1.540669359E7, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 1.540669359E7, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0 \\nSkipping access path due to excess memory usage, maximum is 1048576 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{BUNDLE_NAME} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n  for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{BUNDLE_NAME} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 2359582.402, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6086414962000001E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1297 name = CONFIGURATION_BUNDLE3_IX_2 uuid = 0ddd00a9-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {BUNDLE_NAME}\\n  for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{DTYPE} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n  for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{DTYPE} scan for table number 0 is : \\nLevel2CostEstimateImpl: at 1625417063, cost == 2634793.8619999997, rowCount == 7003486.0, singleScanRowCount == 7003486.0 \\n        Number of extra first column predicates is : 0, extra first column selectivity is : 1.0 \\n        Number of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n        Number of start\\/stop statistics predicates is : 0, statistics start\\/stop selectivity is : 1.0 \\n        Number of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n        Number of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nLock mode set to MODE_TABLE because no start or stop position \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 1625417063, cost == 1.6361626422E7, rowCount == 7003486.0, singleScanRowCount == 7003486.0 for table 0 \\nCost of 0.0 scans is: Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 7003486.0 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 1625417063, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001 for table 0 \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n \\nConsidering join strategy HASH for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1313 name = CONFIGURATION_BUNDLE3_IX_1 uuid = a65c80ac-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {DTYPE}\\n  for table 0 \\nSkipping HASH JOIN because there are no hash key columns \\nCalling nextAccessPath() for base table T1 with 1 predicates. \\n\\n Considering join strategy NESTEDLOOP for table 0 \\nNo more conglomerates to consider for table 0 \\nTotal cost of non-sort-avoidance plan is Level2CostEstimateImpl: at 245104354, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 700348.6000000001 \\nWe have a complete join order. \\nThis is the cheapest plan so far. \\nPlan is a normal plan. \\nCost of cheapest plan is Level2CostEstimateImpl: at 245104354, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 700348.6000000001 \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns =  \\n{COSEDDROPPROFILEDSCPTABLEENTRY_ID}, costEstimate == Level2CostEstimateImpl: at 2057836940, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n \\nRemembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1377 name = COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY3_IX_0 uuid = 629f40ea-0140-b54e-7bb1-ffff93450f77 indexable = true, key columns = {COSEDDROPPROFILEDSCPTABLEENTRY_ID}\\n , costEstimate == Level2CostEstimateImpl: at 2057836940, cost == 7.8575, rowCount == 0.0, singleScanRowCount == 0.0, coveringIndexScan == false, nonMatchingIndexScan == false, joinStrategy == NESTEDLOOP, lockMode == 6, optimizer level == 2 as truly the best for table 1 for plan type  normal \\n\\n Remembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 959713667, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table -1 for plan type  normal \\n\\n Remembering access path cd == ConglomerateDescriptor: conglomerateNumber = 1264 name = cbf5809d-0140-b54e-7bb1-ffff93450f77 uuid = 6c44409f-0140-b54e-7bb1-ffff93450f77 indexable = false, costEstimate == Level2CostEstimateImpl: at 959713667, cost == 0.0, rowCount == 0.0, singleScanRowCount == 700348.6000000001, coveringIndexScan == false, nonMatchingIndexScan == true, joinStrategy == NESTEDLOOP, lockMode == 7, optimizer level == 2 as truly the best for table 0 for plan type  normal \\n\\n\\n\\n Remembering join order as best:  1 0 with assignedTableMap =  \\n{0, 1}\\n\\n\\n Modifying access paths using optimizer 2101481450 \\nChanging access path for table 1 \\nChanging access path for table 0 \\n\\\" \\n\\n\\n On Aug 24, 2013, at 8:00 AM, \\\"Bergquist, Brett\\\" &lt;BBergquist@canoga.com&gt; wrote: \\n\\n &gt; Derby developers (Mike, Manta, Bryan, Rick ,Knut, and if I forgot anyone that has help me in the past), I just want to thank you for your help!   I realize that you guys have day jobs just like me an taking the time out to give me some pointers is really appreciated! \\n&gt; \\n&gt; I am trying to produce reduced size and readily reproducible case but would you knot know it, the symptoms change    I saved a database that was working with 10.8.2.2 with (after shutting down) tar cvEf - db | compress &gt;db.8.tar.Z earlier.   So just to verify again that this did indeed work correctly, I restored this database and the 10.8.2.2 libraries performed the queue and darn if the 10.8.2.2 did not exhibit the same problem.    So then last night I deleted the database and created it fresh again from the same exact script that allowed 10.8.2.2 to work and again it still has the same problem. \\n&gt; \\n&gt; So now I have no confidence of my test setup and also don\'t think the issue is confined to 10.9.1.1.   So I will be quiet until I get a case where it works and then understand why and what triggers it to not work. \\n&gt; \\n&gt; \\n&gt; On Aug 23, 2013, at 6:39 PM, mike matrigali &lt;mikemapp1@gmail.com&gt; wrote: \\n&gt; \\n&gt;&gt; On 8\\/23\\/2013 2:55 PM, Bergquist, Brett wrote: \\n&gt;&gt;&gt; Mike I would love to open a Jira but having a reproducible case is important as I realize.  Right now, the reproducible database is 2Gb compressed which is really not practical to upload. \\n&gt;&gt;&gt; \\n&gt;&gt;&gt; My goal right now is to fix the problem.  The problem is in production, a large telecomm company, and the real database is about 200Gb.  The database has been hard upgraded and has been in use for about 2 weeks so rolling back to backup before the hard upgrade is not possible.  Only going forward is possible.   So I have the debugger connected up right now and am going through the code.  I am also comparing 10.8.2.2 version 10.9.1.0 to look for any suspicious differences.  I have to fix this now, not months from now. \\n&gt;&gt;&gt; \\n&gt;&gt;&gt; What would be really useful would be to: \\n&gt;&gt;&gt; \\n&gt;&gt;&gt; 1. understand how to turn on the optimizer tracing facility that I see in the 10.9.1.0 source.  For example: \\n&gt;&gt;&gt; \\n&gt;&gt;&gt;             optimizerTrace = lcc.getOptimizerTrace(); \\n&gt;&gt;&gt;   I can figure this out, but if anyone can point to a wiki page or some other resource to enable the magic, sharing it will be most welcome. \\n&gt;&gt; I have not used the following but have been pointed at it by those who do: \\n&gt;&gt;  http:\\/\\/wiki.apache.org\\/db-derby\\/OptimizerTracing  \\n&gt;&gt;&gt; \\n&gt;&gt;&gt; 2. understand if it would be possible to access my test database that has been hard upgraded to 10.9.1.0 with 10.8.2.2.  I know that when I boot the database it will complain and not boot but if I am just doing a read-only query on the database with 10.8.2.2 and the query works, this will give me real confidence that the problem is in the code changes from 10.8.2.2 to 10.9.1.1 and not something related to the structure now stored in the database. \\n&gt;&gt;&gt; \\n&gt;&gt;&gt; So I am working on this, am looking for pointers of where to look in the code, and will open a Jira also supply a patch when I have this fixed. \\n&gt;&gt; \\n&gt;&gt; this one is hard, definitely nothing is supported to to do this, and no \\n&gt;&gt; magic property is coming to mind.  If it does not take days to load your \\n&gt;&gt; test db, I would just build a 10.8 db and load it. \\n&gt;&gt; \\n&gt;&gt; Mostly catalog issues are what happen in hard upgrade, so doing a query \\n&gt;&gt; with old code on a new hard upgrade db \\\"probably\\\" works.  But even \\n&gt;&gt; booting might write stuff that would then be a problem using it later, \\n&gt;&gt; even if your intent is only to run read-only queries. \\n&gt;&gt; \\n&gt;&gt; You could build your own 10.8 and just change the code to skip the \\n&gt;&gt; checks that don\'t allow it to boot.  This might work or it might corrupt \\n&gt;&gt; the db during the boot process.  If you are trying this I would make \\n&gt;&gt; a copy of the test db to try i on. \\n&gt;&gt;&gt; \\n&gt;&gt; \\n&gt;&gt; \\n&gt; \\n&gt; \\n&gt; \\n\\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751406\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751406&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751406\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751406_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751406_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:34:34+0000\'\u003e27\\/Aug\\/13 16:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI think there are multiple things going wrong here, as you point out.  If you have the time can you answer the following\u003cbr\\/\u003e\\nwith you repro case (hopefully someone can come up with a program to create a test case now that we know underlying issue).\u003c\\/p\u003e\\n\\n\u003cp\u003e1) can you try the query on some value where there are exactly 2 values, maybe just add another row to the value you know there is\u003cbr\\/\u003e\\n   only one of?  Just wondering if this is an off by 1 bug somewhere.\u003c\\/p\u003e\\n\\n\u003cp\u003e2) Do you ever get a bad query plan if you use \\\"?\\\" parameters rather than exact values?  I would expect not as it should travel\u003cbr\\/\u003e\\n   a whole different path through the optimizer.\u003c\\/p\u003e\\n\\n\u003cp\u003e3) you mention a cost of 0.0 (vs. row count of 0).  Where are you getting that from?  It seems like the btree method is trying \u003cbr\\/\u003e\\n   to always return a non-zero cost.  Just wondering if it is getting lost in the optimizer or if some print routine is not \u003cbr\\/\u003e\\n   printing enough decimals.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751406_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751406_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:34:34+0000\'\u003e27\\/Aug\\/13 16:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I think there are multiple things going wrong here, as you point out.  If you have the time can you answer the following \\nwith you repro case (hopefully someone can come up with a program to create a test case now that we know underlying issue). \\n\\n 1) can you try the query on some value where there are exactly 2 values, maybe just add another row to the value you know there is \\n   only one of?  Just wondering if this is an off by 1 bug somewhere. \\n\\n 2) Do you ever get a bad query plan if you use \\\"?\\\" parameters rather than exact values?  I would expect not as it should travel \\n   a whole different path through the optimizer. \\n\\n 3) you mention a cost of 0.0 (vs. row count of 0).  Where are you getting that from?  It seems like the btree method is trying  \\n   to always return a non-zero cost.  Just wondering if it is getting lost in the optimizer or if some print routine is not  \\n   printing enough decimals.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751411\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751411&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751411\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751411_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751411_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:36:10+0000\'\u003e27\\/Aug\\/13 16:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI don\'t have a lot of experience reading the optimizer cost output.  It seems like cost of scanning millions of \u003cbr\\/\u003e\\nrows should be huge even if you think you are going to get \\\"0\\\" rows, so would like to understand if there is a\u003cbr\\/\u003e\\nbug there also.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751411_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751411_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:36\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:36:10+0000\'\u003e27\\/Aug\\/13 16:36\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I don\'t have a lot of experience reading the optimizer cost output.  It seems like cost of scanning millions of  \\nrows should be huge even if you think you are going to get \\\"0\\\" rows, so would like to understand if there is a \\nbug there also.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751421\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751421&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751421\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751421_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751421_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:44:54+0000\'\u003e27\\/Aug\\/13 16:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eFrom a \\\"get it done\\\" perspective, making the routine return 1 row rather than 0 matches similar instances in other\u003cbr\\/\u003e\\nparts of the code (and there is a RESOLVE in the code that asks even if that should be the case).  It is still an\u003cbr\\/\u003e\\nestimate even though it is using real data, so there is always part that is a guess and since we know \\\"0\'s\\\" seem\u003cbr\\/\u003e\\nto cause problems it seem reasonable to me to make it 1.  It matches current assumptions about unique key indexes where\u003cbr\\/\u003e\\nwe return estimates of 1 row for matching key scan, when it could really return either 0 or 1 row.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt may hide other\u003cbr\\/\u003e\\nbugs in optimizer costing but seems like a reasonable incremental fix if it seems to fix your bug and passes existing\u003cbr\\/\u003e\\ntests.  \u003c\\/p\u003e\\n\\n\u003cp\u003eYour app is definitely exploring areas that have not been tested in Derby.  When that code was written, it is likely no\u003cbr\\/\u003e\\ndisk existed in development that could have held your db.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751421_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751421_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 16:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T16:44:54+0000\'\u003e27\\/Aug\\/13 16:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    From a \\\"get it done\\\" perspective, making the routine return 1 row rather than 0 matches similar instances in other \\nparts of the code (and there is a RESOLVE in the code that asks even if that should be the case).  It is still an \\nestimate even though it is using real data, so there is always part that is a guess and since we know \\\"0\'s\\\" seem \\nto cause problems it seem reasonable to me to make it 1.  It matches current assumptions about unique key indexes where \\nwe return estimates of 1 row for matching key scan, when it could really return either 0 or 1 row. \\n\\n It may hide other \\nbugs in optimizer costing but seems like a reasonable incremental fix if it seems to fix your bug and passes existing \\ntests.   \\n\\n Your app is definitely exploring areas that have not been tested in Derby.  When that code was written, it is likely no \\ndisk existed in development that could have held your db.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751474\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751474&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751474\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13751474_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751474_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 17:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T17:29:36+0000\'\u003e27\\/Aug\\/13 17:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMike\'s request:\u003c\\/p\u003e\\n\\n\u003cp\u003e   1) can you try the query on some value where there are exactly 2 values, maybe just add another row to the value you know there is \u003cbr\\/\u003e\\nonly one of? Just wondering if this is an off by 1 bug somewhere.\u003c\\/p\u003e\\n\\n\u003cp\u003eI added a new row which has the same value being queried on (22112129) and the left_of_start and right_of_start still return the same value even though there are now two rows that will be returned in the query.   So it does not look like a off by 1 bug.   I surmise that since it it dealing with percentages and these are floating point, non-exact values, that what is happening is that sometimes the percentage of the result space starting and stopping regions are so close that the percentages become equivalent.\u003c\\/p\u003e\\n\\n\u003cp\u003e   3) The BtreeCostController is probably never returning a 0.0 cost, but in FromBaseTable.java, we have:\u003c\\/p\u003e\\n\\n\\n\u003cp\u003e\\t\\t\\t\\/*\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003e\\n\\t\u003cul\u003e\\n\\t\\t\u003cli\u003eLet the join strategy decide whether the cost of the base\u003c\\/li\u003e\\n\\t\\t\u003cli\u003escan is a single scan, or a scan per outer row.\u003c\\/li\u003e\\n\\t\\t\u003cli\u003eNOTE: The multiplication should only be done against the\u003c\\/li\u003e\\n\\t\\t\u003cli\u003etotal row count, not the singleScanRowCount.\u003cbr\\/\u003e\\n\\t\\t\\t*\\/\u003cbr\\/\u003e\\n\\t\\t\\tdouble newCost = costEstimate.getEstimatedCost();\u003c\\/li\u003e\\n\\t\u003c\\/ul\u003e\\n\\t\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e\\t\\t\\tif (currentJoinStrategy.multiplyBaseCostByOuterRows())\u003c\\/p\u003e\\n\\t\\t\\t{\\n\\t\\t\\t\\tnewCost *= outerCost.rowCount();\\n\\t\\t\\t}\\n\\n\u003cp\u003e\\t\\t\\tcostEstimate.setCost(\u003cbr\\/\u003e\\n\\t\\t\\t\\tnewCost,\u003cbr\\/\u003e\\n\\t\\t\\t\\tcostEstimate.rowCount() * outerCost.rowCount(),\u003cbr\\/\u003e\\n\\t\\t\\t\\tcostEstimate.singleScanRowCount());\u003c\\/p\u003e\\n\\n\u003cp\u003eSo if the row count of the outer table of the join is 0.0, the newCost can end up being 0.0, even though the cost for the table being processed is very large.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13751474_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751474_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 17:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T17:29:36+0000\'\u003e27\\/Aug\\/13 17:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Mike\'s request: \\n\\n    1) can you try the query on some value where there are exactly 2 values, maybe just add another row to the value you know there is  \\nonly one of? Just wondering if this is an off by 1 bug somewhere. \\n\\n I added a new row which has the same value being queried on (22112129) and the left_of_start and right_of_start still return the same value even though there are now two rows that will be returned in the query.   So it does not look like a off by 1 bug.   I surmise that since it it dealing with percentages and these are floating point, non-exact values, that what is happening is that sometimes the percentage of the result space starting and stopping regions are so close that the percentages become equivalent. \\n\\n    3) The BtreeCostController is probably never returning a 0.0 cost, but in FromBaseTable.java, we have: \\n\\n\\n \\t\\t\\t\\/* \\n \\n\\t \\n\\t \\n\\t\\t Let the join strategy decide whether the cost of the base \\n\\t\\t scan is a single scan, or a scan per outer row. \\n\\t\\t NOTE: The multiplication should only be done against the \\n\\t\\t total row count, not the singleScanRowCount. \\n\\t\\t\\t*\\/ \\n\\t\\t\\tdouble newCost = costEstimate.getEstimatedCost(); \\n\\t \\n\\t \\n \\n\\n\\n \\t\\t\\tif (currentJoinStrategy.multiplyBaseCostByOuterRows()) \\n\\t\\t\\t{\\n\\t\\t\\t\\tnewCost *= outerCost.rowCount();\\n\\t\\t\\t}\\n\\n \\t\\t\\tcostEstimate.setCost( \\n\\t\\t\\t\\tnewCost, \\n\\t\\t\\t\\tcostEstimate.rowCount() * outerCost.rowCount(), \\n\\t\\t\\t\\tcostEstimate.singleScanRowCount()); \\n\\n So if the row count of the outer table of the join is 0.0, the newCost can end up being 0.0, even though the cost for the table being processed is very large.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751549\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751549&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751549\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13751549_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751549_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 18:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T18:24:09+0000\'\u003e27\\/Aug\\/13 18:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Brett Bergquist - 27\\/Aug\\/13 18:30\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMikes request:\u003c\\/p\u003e\\n\\n\u003cp\u003e   2) Do you ever get a bad query plan if you use \\\"?\\\" parameters rather than exact values? I would expect not as it should travel\u003cbr\\/\u003e\\na whole different path through the optimizer.\u003c\\/p\u003e\\n\\n\u003cp\u003eI tried this and what happens is that BtreeCostController.getScanCost is called with null values for startKeyValue and stopKeyValue.  This causes the left_of_start to be set to 0.0 and left_of_stop to be set to 1.0, effectively causing this to estimate that the complete range of index values are going to be processed.\u003c\\/p\u003e\\n\\n\u003cp\u003eThen the selectivity as defined by the statistics take more effect.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13751549_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751549_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 18:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T18:24:09+0000\'\u003e27\\/Aug\\/13 18:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Brett Bergquist - 27\\/Aug\\/13 18:30\\\"\u003eedited\u003c\\/span\u003e                   Mikes request: \\n\\n    2) Do you ever get a bad query plan if you use \\\"?\\\" parameters rather than exact values? I would expect not as it should travel \\na whole different path through the optimizer. \\n\\n I tried this and what happens is that BtreeCostController.getScanCost is called with null values for startKeyValue and stopKeyValue.  This causes the left_of_start to be set to 0.0 and left_of_stop to be set to 1.0, effectively causing this to estimate that the complete range of index values are going to be processed. \\n\\n Then the selectivity as defined by the statistics take more effect.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751616\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751616&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751616\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751616_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751616_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 19:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T19:25:03+0000\'\u003e27\\/Aug\\/13 19:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003efor question #2, is the query plan \\\"correct\\\" when you use \\\"?\\\" parameter?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751616_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751616_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 19:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T19:25:03+0000\'\u003e27\\/Aug\\/13 19:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    for question #2, is the query plan \\\"correct\\\" when you use \\\"?\\\" parameter?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751678\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751678&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751678\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13751678_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751678_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 20:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T20:26:22+0000\'\u003e27\\/Aug\\/13 20:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIt does choose a valid and optimal one but because the BtreeCostController is really not coming into play.  That is returning all rows as the estimate row count.  So for example, for a 7M row table, the estimate row count is 7M and the cost is very high because of the other calculations done in there (ie. cost += (estimated_row_count * row_size) * BASE_ROW_PER_BYTECOST).\u003c\\/p\u003e\\n\\n\u003cp\u003eThen FromBaseTable uses the statistics selectivity in the final cost computation.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo the answer is yes it gets a \\\"correct\\\" plan, but though a different computation of the cost.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13751678_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751678_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 20:26\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T20:26:22+0000\'\u003e27\\/Aug\\/13 20:26\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    It does choose a valid and optimal one but because the BtreeCostController is really not coming into play.  That is returning all rows as the estimate row count.  So for example, for a 7M row table, the estimate row count is 7M and the cost is very high because of the other calculations done in there (ie. cost += (estimated_row_count * row_size) * BASE_ROW_PER_BYTECOST). \\n\\n Then FromBaseTable uses the statistics selectivity in the final cost computation. \\n\\n So the answer is yes it gets a \\\"correct\\\" plan, but though a different computation of the cost.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751680\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751680&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751680\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751680_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751680_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 20:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T20:28:34+0000\'\u003e27\\/Aug\\/13 20:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ei do see a lot of cost *= cost and rowcount = rowcount1 * rowcount2 kinds of code in the optimizer, so even more\u003cbr\\/\u003e\\nreason not to return 0 out of the store costs.  \u003c\\/p\u003e\\n\\n\u003cp\u003eI guess the optmizer model might not be wrong if it is actually the case that if there were 0 rows in the outer table that\u003cbr\\/\u003e\\nit would actually not do the full scan.  But since these are all estimates seems like there always should be some cost that\u003cbr\\/\u003e\\nis linearly related to number of rows scanned if there are actually not 0 rows.  better to be a little pessimistic and return\u003cbr\\/\u003e\\n1 row rather 0.  \u003c\\/p\u003e\\n\\n\u003cp\u003eThere may be ways to make that btree code be smarter when it is returning a very small number of rows, especially if the\u003cbr\\/\u003e\\nstart search and stop search are actually the same page.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751680_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751680_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 20:28\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T20:28:34+0000\'\u003e27\\/Aug\\/13 20:28\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    i do see a lot of cost *= cost and rowcount = rowcount1 * rowcount2 kinds of code in the optimizer, so even more \\nreason not to return 0 out of the store costs.   \\n\\n I guess the optmizer model might not be wrong if it is actually the case that if there were 0 rows in the outer table that \\nit would actually not do the full scan.  But since these are all estimates seems like there always should be some cost that \\nis linearly related to number of rows scanned if there are actually not 0 rows.  better to be a little pessimistic and return \\n1 row rather 0.   \\n\\n There may be ways to make that btree code be smarter when it is returning a very small number of rows, especially if the \\nstart search and stop search are actually the same page.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751708\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751708&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751708\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751708_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751708_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 20:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T20:53:07+0000\'\u003e27\\/Aug\\/13 20:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e&gt;It does choose a valid and optimal one but because the BtreeCostController is really not coming into play. That is returning all rows as the &gt;estimate row count. So for example, for a 7M row table, the estimate row count is 7M and the cost is very high because of the other &gt;calculations done in there (ie. cost += (estimated_row_count * row_size) * BASE_ROW_PER_BYTECOST).\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt;Then FromBaseTable uses the statistics selectivity in the final cost computation.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt;So the answer is yes it gets a \\\"correct\\\" plan, but though a different computation of the cost.\u003c\\/p\u003e\\n\\n\u003cp\u003egood, just wanted to make sure that there was not a bug in that area also.  I believe this is working as designed, picking\u003cbr\\/\u003e\\na correct plan for the \\\"average\\\" possible value - since this compiled plan then can be used over and over by different values.\u003cbr\\/\u003e\\nThis is what we usually recommend to users to avoid a recompile cost on every execution, which may be why this bug has \u003cbr\\/\u003e\\nexisted for a long time.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751708_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751708_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 20:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T20:53:07+0000\'\u003e27\\/Aug\\/13 20:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    &gt;It does choose a valid and optimal one but because the BtreeCostController is really not coming into play. That is returning all rows as the &gt;estimate row count. So for example, for a 7M row table, the estimate row count is 7M and the cost is very high because of the other &gt;calculations done in there (ie. cost += (estimated_row_count * row_size) * BASE_ROW_PER_BYTECOST). \\n\\n &gt;Then FromBaseTable uses the statistics selectivity in the final cost computation. \\n\\n &gt;So the answer is yes it gets a \\\"correct\\\" plan, but though a different computation of the cost. \\n\\n good, just wanted to make sure that there was not a bug in that area also.  I believe this is working as designed, picking \\na correct plan for the \\\"average\\\" possible value - since this compiled plan then can be used over and over by different values. \\nThis is what we usually recommend to users to avoid a recompile cost on every execution, which may be why this bug has  \\nexisted for a long time.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13751906\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13751906&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13751906\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751906_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751906_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 23:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T23:43:48+0000\'\u003e27\\/Aug\\/13 23:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 28\\/Aug\\/13 18:08\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHere is a patch against trunk to get some feedback for \u003cbr\\/\u003e\\nthe discussion.  It simply always returns \u003cbr\\/\u003e\\nat least one row as the estimated rows returned whenever store is asked how many rows qualify for a particular range of an\u003cbr\\/\u003e\\nindex scan (in store asking for 1 key is still a range scan where the start is &gt;= key and stop is &gt; key).\u003c\\/p\u003e\\n\\n\u003cp\u003eI have no repro at this point, but would like to check one in with any fix.  If the\u003cbr\\/\u003e\\nrepro really needs 47 million rows would likely not include it in nightly tests, and instead add it to the large data tests.\u003c\\/p\u003e\\n\\n\u003cp\u003eRunning existing tests now to see if this causes any problems with existing tests.  All tests passed on this initial patch,\u003cbr\\/\u003e\\nand Brett reports it fixed the issue in his database.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13751906_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13751906_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'27\\/Aug\\/13 23:43\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-27T23:43:48+0000\'\u003e27\\/Aug\\/13 23:43\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 28\\/Aug\\/13 18:08\\\"\u003eedited\u003c\\/span\u003e                   Here is a patch against trunk to get some feedback for  \\nthe discussion.  It simply always returns  \\nat least one row as the estimated rows returned whenever store is asked how many rows qualify for a particular range of an \\nindex scan (in store asking for 1 key is still a range scan where the start is &gt;= key and stop is &gt; key). \\n\\n I have no repro at this point, but would like to check one in with any fix.  If the \\nrepro really needs 47 million rows would likely not include it in nightly tests, and instead add it to the large data tests. \\n\\n Running existing tests now to see if this causes any problems with existing tests.  All tests passed on this initial patch, \\nand Brett reports it fixed the issue in his database.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13752338\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13752338&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13752338\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13752338_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13752338_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Aug\\/13 12:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-28T12:25:39+0000\'\u003e28\\/Aug\\/13 12:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI have the patch applied and it fixes the estimated row cost.  \u003c\\/p\u003e\\n\\n\u003cp\u003eBut if you look farther above, the estimated_row_count is computed from the ret_fraction (which can end up as 0.0 if the left_of_start and left_of_stop are the same) and this is used in computing the initial cost and later used in computed the cached_row_count which is also used in computing the cost.\u003c\\/p\u003e\\n\\n\u003cp\u003eMight it not be useful to have the estimated_row_count be set to \\\"1\\\" when the ret_fraction is 0.0 so that these other calculations are based the one row?  This is nearly what would happen if in the example above with 48 million rows, that the left_of_start returned 0.07715294 and the left_of_stop returned 0.07715295, the estimated_row_count would be .48 rows.  That way the cost does not become 0.0 when the left_of_start and left_of_stop are the same.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13752338_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13752338_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Aug\\/13 12:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-28T12:25:39+0000\'\u003e28\\/Aug\\/13 12:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I have the patch applied and it fixes the estimated row cost.   \\n\\n But if you look farther above, the estimated_row_count is computed from the ret_fraction (which can end up as 0.0 if the left_of_start and left_of_stop are the same) and this is used in computing the initial cost and later used in computed the cached_row_count which is also used in computing the cost. \\n\\n Might it not be useful to have the estimated_row_count be set to \\\"1\\\" when the ret_fraction is 0.0 so that these other calculations are based the one row?  This is nearly what would happen if in the example above with 48 million rows, that the left_of_start returned 0.07715294 and the left_of_stop returned 0.07715295, the estimated_row_count would be .48 rows.  That way the cost does not become 0.0 when the left_of_start and left_of_stop are the same. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13752645\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13752645&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13752645\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13752645_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13752645_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Aug\\/13 18:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-28T18:07:10+0000\'\u003e28\\/Aug\\/13 18:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 28\\/Aug\\/13 23:11\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThis second patch addresses brett\'s comment about making cost return based on 1 row.  This version moves the default setting of a minimum of 1 row returned up in the routine so that all other calculations are based on at least 1 row being returned.\u003c\\/p\u003e\\n\\n\u003cp\u003eWill run full tests on this version.  This patch also passed full tests on trunk.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13752645_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13752645_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'28\\/Aug\\/13 18:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-28T18:07:10+0000\'\u003e28\\/Aug\\/13 18:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 28\\/Aug\\/13 23:11\\\"\u003eedited\u003c\\/span\u003e                   This second patch addresses brett\'s comment about making cost return based on 1 row.  This version moves the default setting of a minimum of 1 row returned up in the routine so that all other calculations are based on at least 1 row being returned. \\n\\n Will run full tests on this version.  This patch also passed full tests on trunk.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13753303\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13753303&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13753303\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13753303_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753303_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 04:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T04:48:43+0000\'\u003e29\\/Aug\\/13 04:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI am trying to see if I can reproduce the problem. I am trying it right now with 8million rows in the table which I think looks like the table Brett has but with 48million rows. When I tried 800,000 rows, the problem did not reproduce. I will post the result of that run when it is finished but I wanted to share the test code to make sure I am mimicking Brett\'s tables and indexes correctly. Please let me know if the test code needs to be changed to match the problem schema. I have also added a println in BTreeCostController.getScanCost as follows\u003cbr\\/\u003e\\n            if (ret_fraction &lt; 0) \u003c\\/p\u003e\\n{\\n                \\/\\/added following println\\n            \\tSystem.out.println(\\\"In engine code with ret_fraction&lt;0\\\");\\n                ret_fraction = 0;\\n            }\\n\u003cp\u003eI think when the test runs into estimated row count of 0, we will hit the piece of code above and will see the println printed.\u003c\\/p\u003e\\n\\n\u003cp\u003eRun the program as follows\u003cbr\\/\u003e\\njava  org.apache.derbyTesting.functionTests.tests.lang.MamtaJDBC  &gt; dellater.txt\u003c\\/p\u003e\\n\\n\u003cp\u003eThe output from the program will look as follows\u003cbr\\/\u003e\\nTesting embedded\u003cbr\\/\u003e\\nfinished creating tables\u003cbr\\/\u003e\\nTable1 -    done inserting data\u003cbr\\/\u003e\\nTable3 - done inserting data\u003cbr\\/\u003e\\nTable2 - done inserting data\u003cbr\\/\u003e\\ndone inserting data\u003cbr\\/\u003e\\nt0.Table3_ID =0\u003cbr\\/\u003e\\nt0.Table3_ID =1\u003cbr\\/\u003e\\nt0.Table3_ID =2\u003cbr\\/\u003e\\n.....\u003c\\/p\u003e\\n\\n\u003cp\u003eAnd hopefully at some point, we will see \\\"In engine code with ret_fraction&lt;0\\\" in the output printed by the test program.\u003c\\/p\u003e\\n\\n\\n\\n\u003cp\u003epackage org.apache.derbyTesting.functionTests.tests.lang;\u003c\\/p\u003e\\n\\n\u003cp\u003eimport java.net.*; \u003cbr\\/\u003e\\nimport java.io.*; \u003cbr\\/\u003e\\nimport java.sql.*;\u003c\\/p\u003e\\n\\n\u003cp\u003e\\/** \u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eClient template starts its own NetworkServer and runs some SQL against it.\u003c\\/li\u003e\\n\\t\u003cli\u003eThe SQL or JDBC API calls can be modified to reproduce issues\u003c\\/li\u003e\\n\\t\u003cli\u003e\u003cp\u003e *\\/\u003cbr\\/\u003e\\npublic class MamtaJDBC { \u003c\\/p\u003e\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003e    public static void main(String[] args) throws Exception {\u003cbr\\/\u003e\\n    \\t\\/\\/Make Derby use index\u003cbr\\/\u003e\\n    \\tConnection conn=null;\u003cbr\\/\u003e\\n    \\tStatement s;\u003cbr\\/\u003e\\n    \\tPreparedStatement ps;\u003cbr\\/\u003e\\n        \\tSystem.out.println(\\\"Testing embedded\\\");\u003cbr\\/\u003e\\n            Class.forName(\\\"org.apache.derby.jdbc.EmbeddedDriver\\\");\u003cbr\\/\u003e\\n            try\u003c\\/p\u003e\\n{\\n                conn = DriverManager.getConnection(\\\"jdbc:derby:c:\\/dellater\\/ClobTest3;create=true\\\");\\n            }\\n\u003cp\u003ecatch(Exception ex){}\u003cbr\\/\u003e\\n    \\ts = conn.createStatement();\u003cbr\\/\u003e\\n        try \u003c\\/p\u003e\\n{ \\n            s.executeUpdate(\\\"DROP TABLE Table2\\\"); \\n        }\\n\u003cp\u003e catch (SQLException se) \u003c\\/p\u003e\\n{ \\n            if (!se.getSQLState().equals(\\\"42Y55\\\")) \\n                throw se; \\n        } \u003cbr\\/\u003e\\n        try { \\n            s.executeUpdate(\\\"DROP TABLE Table1\\\"); \\n        } catch (SQLException se) {             if (!se.getSQLState().equals(\\\"42Y55\\\"))                 throw se;         }\\n\u003cp\u003e \u003cbr\\/\u003e\\n        try \u003c\\/p\u003e\\n{ \\n            s.executeUpdate(\\\"DROP TABLE Table3\\\"); \\n        }\\n\u003cp\u003e catch (SQLException se) \u003c\\/p\u003e\\n{ \\n            if (!se.getSQLState().equals(\\\"42Y55\\\")) \\n                throw se; \\n        }\\n\u003cp\u003e        \\/\\/equivalent to Bret\'s table \\\"CORE_V1\\\".\\\"CONFIGURATION_BUNDLE\\\"\u003cbr\\/\u003e\\n        s.executeUpdate(\\\"CREATE TABLE Table1 (\\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"ID int PRIMARY KEY NOT NULL)\\\"); \u003cbr\\/\u003e\\n        \\/\\/equivalent to Bret\'s table \\\"PKG_9145E_V1\\\".\\\"COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY\\\"\u003cbr\\/\u003e\\n        s.executeUpdate(\\\"CREATE TABLE Table2 (\\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"Table1_ID int NOT NULL,\\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"Table3_ID int NOT NULL,\\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"CONSTRAINT TABLE2_PK PRIMARY KEY \\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"(Table1_ID,Table3_ID))\\\");\u003cbr\\/\u003e\\n        \\/\\/equivalent to Bret\'s table \\\"PKG_9145E_V1\\\".\\\"COS_ED_DROP_PROFILE_DSCP_QMAPPING\\\"\u003cbr\\/\u003e\\n        s.executeUpdate(\\\"CREATE TABLE Table3 (\\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"ID int PRIMARY KEY NOT NULL)\\\"); \u003c\\/p\u003e\\n\\n\u003cp\u003e        s.executeUpdate(\\\"ALTER TABLE table2 \\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"ADD CONSTRAINT TABLE2_FK_1 \\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"FOREIGN KEY (Table1_ID) \\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"REFERENCES TABLE1(ID)\\\");\u003cbr\\/\u003e\\n        s.executeUpdate(\\\"ALTER TABLE table2 \\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"ADD CONSTRAINT TABLE2_FK_2 \\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"FOREIGN KEY (Table3_ID) \\\"+\u003cbr\\/\u003e\\n        \\t\\t\\\"REFERENCES TABLE3(ID)\\\");\u003cbr\\/\u003e\\n        System.out.println(\\\"finished creating tables\\\");\u003cbr\\/\u003e\\n\\t      int count = 1000000; \u003cbr\\/\u003e\\n\\t      ps = conn.prepareStatement(\\\"INSERT INTO table1 VALUES \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/help_16.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\\\");\u003cbr\\/\u003e\\n  \\t      for (int i = 0; i &lt; count; i++) \u003c\\/p\u003e\\n{ \\n  \\t    \\t  ps.setInt(1,i);\\n  \\t        ps.execute();\\n\\t      }\\n\u003cp\u003e \u003cbr\\/\u003e\\n  \\t      System.out.println(\\\"Table1 -    done inserting data\\\");\u003cbr\\/\u003e\\n\\t      count = 8000000; \u003cbr\\/\u003e\\n\\t      ps = conn.prepareStatement(\\\"INSERT INTO table3 VALUES \u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/help_16.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e\\\");\u003cbr\\/\u003e\\n  \\t      for (int i = 0; i &lt; count; i++) \u003c\\/p\u003e\\n{ \\n  \\t    \\t  ps.setInt(1,i);\\n    \\t        ps.execute();\\n\\t      }\\n\u003cp\u003e \u003cbr\\/\u003e\\n  \\t      System.out.println(\\\"Table3 - done inserting data\\\");\u003cbr\\/\u003e\\n\\t      count = 1000000; \u003cbr\\/\u003e\\n\\t      ps = conn.prepareStatement(\\\"INSERT INTO table2 VALUES (?,?)\\\");\u003cbr\\/\u003e\\n  \\t      for (int i = 0; i &lt; count; i++) { \u003cbr\\/\u003e\\n\\t  \\t    \\t  ps.setInt(1,i);\u003cbr\\/\u003e\\n  \\t    \\t  int j=0;\u003cbr\\/\u003e\\n  \\t    \\t  for (int k=0; k&lt;8; k+\u003cins\u003e,j\u003c\\/ins\u003e+) \u003c\\/p\u003e\\n{\\n  \\t    \\t\\t  ps.setInt(2,j);\\n  \\t              ps.execute();\\n  \\t    \\t  }\\n\u003cp\u003e\\t      } \u003cbr\\/\u003e\\n  \\t      System.out.println(\\\"Table2 - done inserting data\\\");\u003cbr\\/\u003e\\n  \\t      System.out.println(\\\"done inserting data\\\");\u003cbr\\/\u003e\\n\\t      count = 8000000; \u003cbr\\/\u003e\\n  \\t      for (int i = 0; i &lt; count; i++) \u003c\\/p\u003e\\n{ \\n  \\t    \\t  System.out.println(\\\"t0.Table3_ID =\\\"+i);\\n  \\t    \\t  s.execute(\\\"SELECT * FROM \\\"+\\n  \\t    \\t    \\t  \\\"Table1 T1,\\\"+\\n     \\t\\t\\t  \\\"Table2 t0 \\\"+\\n  \\t    \\t    \\t  \\\"WHERE t1.ID = t0.Table1_ID and \\\"+\\n     \\t\\t\\t  \\\"t0.Table3_ID = \\\"+i);\\n  \\t      }\\n\u003cp\u003e  \\t      System.out.println(\\\"done testing\\\");\u003cbr\\/\u003e\\n    }\u003cbr\\/\u003e\\n}\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13753303_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753303_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 04:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T04:48:43+0000\'\u003e29\\/Aug\\/13 04:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I am trying to see if I can reproduce the problem. I am trying it right now with 8million rows in the table which I think looks like the table Brett has but with 48million rows. When I tried 800,000 rows, the problem did not reproduce. I will post the result of that run when it is finished but I wanted to share the test code to make sure I am mimicking Brett\'s tables and indexes correctly. Please let me know if the test code needs to be changed to match the problem schema. I have also added a println in BTreeCostController.getScanCost as follows \\n            if (ret_fraction &lt; 0)  \\n{\\n                \\/\\/added following println\\n            \\tSystem.out.println(\\\"In engine code with ret_fraction&lt;0\\\");\\n                ret_fraction = 0;\\n            }\\n I think when the test runs into estimated row count of 0, we will hit the piece of code above and will see the println printed. \\n\\n Run the program as follows \\njava  org.apache.derbyTesting.functionTests.tests.lang.MamtaJDBC  &gt; dellater.txt \\n\\n The output from the program will look as follows \\nTesting embedded \\nfinished creating tables \\nTable1 -    done inserting data \\nTable3 - done inserting data \\nTable2 - done inserting data \\ndone inserting data \\nt0.Table3_ID =0 \\nt0.Table3_ID =1 \\nt0.Table3_ID =2 \\n..... \\n\\n And hopefully at some point, we will see \\\"In engine code with ret_fraction&lt;0\\\" in the output printed by the test program. \\n\\n\\n\\n package org.apache.derbyTesting.functionTests.tests.lang; \\n\\n import java.net.*;  \\nimport java.io.*;  \\nimport java.sql.*; \\n\\n \\/**  \\n \\n\\t Client template starts its own NetworkServer and runs some SQL against it. \\n\\t The SQL or JDBC API calls can be modified to reproduce issues \\n\\t   *\\/ \\npublic class MamtaJDBC {   \\n \\n\\n\\n     public static void main(String[] args) throws Exception { \\n    \\t\\/\\/Make Derby use index \\n    \\tConnection conn=null; \\n    \\tStatement s; \\n    \\tPreparedStatement ps; \\n        \\tSystem.out.println(\\\"Testing embedded\\\"); \\n            Class.forName(\\\"org.apache.derby.jdbc.EmbeddedDriver\\\"); \\n            try \\n{\\n                conn = DriverManager.getConnection(\\\"jdbc:derby:c:\\/dellater\\/ClobTest3;create=true\\\");\\n            }\\n catch(Exception ex){} \\n    \\ts = conn.createStatement(); \\n        try  \\n{ \\n            s.executeUpdate(\\\"DROP TABLE Table2\\\"); \\n        }\\n  catch (SQLException se)  \\n{ \\n            if (!se.getSQLState().equals(\\\"42Y55\\\")) \\n                throw se; \\n        }  \\n        try { \\n            s.executeUpdate(\\\"DROP TABLE Table1\\\"); \\n        } catch (SQLException se) {             if (!se.getSQLState().equals(\\\"42Y55\\\"))                 throw se;         }\\n   \\n        try  \\n{ \\n            s.executeUpdate(\\\"DROP TABLE Table3\\\"); \\n        }\\n  catch (SQLException se)  \\n{ \\n            if (!se.getSQLState().equals(\\\"42Y55\\\")) \\n                throw se; \\n        }\\n         \\/\\/equivalent to Bret\'s table \\\"CORE_V1\\\".\\\"CONFIGURATION_BUNDLE\\\" \\n        s.executeUpdate(\\\"CREATE TABLE Table1 (\\\"+ \\n        \\t\\t\\\"ID int PRIMARY KEY NOT NULL)\\\");  \\n        \\/\\/equivalent to Bret\'s table \\\"PKG_9145E_V1\\\".\\\"COSEDDROPPROFILEDSCPTABLEBUNDLE_COSEDDROPPROFILEDSCPTABLEENTRY\\\" \\n        s.executeUpdate(\\\"CREATE TABLE Table2 (\\\"+ \\n        \\t\\t\\\"Table1_ID int NOT NULL,\\\"+ \\n        \\t\\t\\\"Table3_ID int NOT NULL,\\\"+ \\n        \\t\\t\\\"CONSTRAINT TABLE2_PK PRIMARY KEY \\\"+ \\n        \\t\\t\\\"(Table1_ID,Table3_ID))\\\"); \\n        \\/\\/equivalent to Bret\'s table \\\"PKG_9145E_V1\\\".\\\"COS_ED_DROP_PROFILE_DSCP_QMAPPING\\\" \\n        s.executeUpdate(\\\"CREATE TABLE Table3 (\\\"+ \\n        \\t\\t\\\"ID int PRIMARY KEY NOT NULL)\\\");  \\n\\n         s.executeUpdate(\\\"ALTER TABLE table2 \\\"+ \\n        \\t\\t\\\"ADD CONSTRAINT TABLE2_FK_1 \\\"+ \\n        \\t\\t\\\"FOREIGN KEY (Table1_ID) \\\"+ \\n        \\t\\t\\\"REFERENCES TABLE1(ID)\\\"); \\n        s.executeUpdate(\\\"ALTER TABLE table2 \\\"+ \\n        \\t\\t\\\"ADD CONSTRAINT TABLE2_FK_2 \\\"+ \\n        \\t\\t\\\"FOREIGN KEY (Table3_ID) \\\"+ \\n        \\t\\t\\\"REFERENCES TABLE3(ID)\\\"); \\n        System.out.println(\\\"finished creating tables\\\"); \\n\\t      int count = 1000000;  \\n\\t      ps = conn.prepareStatement(\\\"INSERT INTO table1 VALUES  \\\"); \\n  \\t      for (int i = 0; i &lt; count; i++)  \\n{ \\n  \\t    \\t  ps.setInt(1,i);\\n  \\t        ps.execute();\\n\\t      }\\n   \\n  \\t      System.out.println(\\\"Table1 -    done inserting data\\\"); \\n\\t      count = 8000000;  \\n\\t      ps = conn.prepareStatement(\\\"INSERT INTO table3 VALUES  \\\"); \\n  \\t      for (int i = 0; i &lt; count; i++)  \\n{ \\n  \\t    \\t  ps.setInt(1,i);\\n    \\t        ps.execute();\\n\\t      }\\n   \\n  \\t      System.out.println(\\\"Table3 - done inserting data\\\"); \\n\\t      count = 1000000;  \\n\\t      ps = conn.prepareStatement(\\\"INSERT INTO table2 VALUES (?,?)\\\"); \\n  \\t      for (int i = 0; i &lt; count; i++) {  \\n\\t  \\t    \\t  ps.setInt(1,i); \\n  \\t    \\t  int j=0; \\n  \\t    \\t  for (int k=0; k&lt;8; k+ ,j +)  \\n{\\n  \\t    \\t\\t  ps.setInt(2,j);\\n  \\t              ps.execute();\\n  \\t    \\t  }\\n \\t      }  \\n  \\t      System.out.println(\\\"Table2 - done inserting data\\\"); \\n  \\t      System.out.println(\\\"done inserting data\\\"); \\n\\t      count = 8000000;  \\n  \\t      for (int i = 0; i &lt; count; i++)  \\n{ \\n  \\t    \\t  System.out.println(\\\"t0.Table3_ID =\\\"+i);\\n  \\t    \\t  s.execute(\\\"SELECT * FROM \\\"+\\n  \\t    \\t    \\t  \\\"Table1 T1,\\\"+\\n     \\t\\t\\t  \\\"Table2 t0 \\\"+\\n  \\t    \\t    \\t  \\\"WHERE t1.ID = t0.Table1_ID and \\\"+\\n     \\t\\t\\t  \\\"t0.Table3_ID = \\\"+i);\\n  \\t      }\\n   \\t      System.out.println(\\\"done testing\\\"); \\n    } \\n}              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13753553\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13753553&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13753553\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13753553_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753553_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 12:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T12:21:14+0000\'\u003e29\\/Aug\\/13 12:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMamta, just confirming that what you have represents the real tables that I have. \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13753553_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753553_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 12:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T12:21:14+0000\'\u003e29\\/Aug\\/13 12:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Mamta, just confirming that what you have represents the real tables that I have.               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13753682\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13753682&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13753682\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13753682_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753682_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 14:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T14:48:07+0000\'\u003e29\\/Aug\\/13 14:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for looking at the program, Brett.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13753682_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753682_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 14:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T14:48:07+0000\'\u003e29\\/Aug\\/13 14:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for looking at the program, Brett.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13753732\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13753732&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13753732\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13753732_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753732_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 15:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T15:33:26+0000\'\u003e29\\/Aug\\/13 15:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003enot sure exactly where you are putting your code in BTreeCostController but what you posted may not catch\u003cbr\\/\u003e\\nall the cases we are looking for.  I think there are some cases where the ret_fraction is very small such\u003cbr\\/\u003e\\nthat ret_fraction * number of rows gives back a number of rows &gt; 0 but less than 0.5 and the code then\u003cbr\\/\u003e\\nrounds the number of rows to 0. I would suggest instrumenting the code near the end of the routine looking\u003cbr\\/\u003e\\nfor estimated_row_count &lt; 0.5\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13753732_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753732_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 15:33\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T15:33:26+0000\'\u003e29\\/Aug\\/13 15:33\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    not sure exactly where you are putting your code in BTreeCostController but what you posted may not catch \\nall the cases we are looking for.  I think there are some cases where the ret_fraction is very small such \\nthat ret_fraction * number of rows gives back a number of rows &gt; 0 but less than 0.5 and the code then \\nrounds the number of rows to 0. I would suggest instrumenting the code near the end of the routine looking \\nfor estimated_row_count &lt; 0.5              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13753739\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13753739&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13753739\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13753739_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753739_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 15:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T15:40:29+0000\'\u003e29\\/Aug\\/13 15:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ealso if you want to significantly improve the performance of your load I suggest turning off autocommit and  \u003cbr\\/\u003e\\ncommit every so often.  maybe every 10k or 100k inserts.\u003c\\/p\u003e\\n\\n\u003cp\u003eI am not sure of this suggestion, but it might be worth trying 3 queries, that vary i.  Try:\u003cbr\\/\u003e\\ni = 0\u003cbr\\/\u003e\\ni = some value in the middle of the range\u003cbr\\/\u003e\\ni = largest value in range ( i think this is the one you are trying).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13753739_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753739_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 15:40\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T15:40:29+0000\'\u003e29\\/Aug\\/13 15:40\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    also if you want to significantly improve the performance of your load I suggest turning off autocommit and   \\ncommit every so often.  maybe every 10k or 100k inserts. \\n\\n I am not sure of this suggestion, but it might be worth trying 3 queries, that vary i.  Try: \\ni = 0 \\ni = some value in the middle of the range \\ni = largest value in range ( i think this is the one you are trying).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13753824\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13753824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13753824\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13753824_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753824_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 17:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T17:17:17+0000\'\u003e29\\/Aug\\/13 17:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI ended up doing both, returning 1 as the estimated_row_count after detecting ret_fraction == 0 and then at the bottom, I made sure that the rounding did not end up causing an estimated row count == 0.   I saw this happen in my testing even when I did the first change after the ret_fraction and saw table scans in my logging which prompted me to go back in and put in the test after rounding.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bbergquist\\\" id=\\\"commentauthor_13753824_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bbergquist\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bbergquist\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Brett Bergquist\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13753824_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Aug\\/13 17:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-29T17:17:17+0000\'\u003e29\\/Aug\\/13 17:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I ended up doing both, returning 1 as the estimated_row_count after detecting ret_fraction == 0 and then at the bottom, I made sure that the rounding did not end up causing an estimated row count == 0.   I saw this happen in my testing even when I did the first change after the ret_fraction and saw table scans in my logging which prompted me to go back in and put in the test after rounding.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13755348\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13755348&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13755348\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13755348_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13755348_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'31\\/Aug\\/13 01:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-31T01:56:19+0000\'\u003e31\\/Aug\\/13 01:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI had to make a change to the earlier test program since that program was inserting duplicate values in non-unique foreign key on Table2. It now inserts all unique values in foreign key corresponding to Table3 and I have been able to reproduce the problem. I have attached the repro test case as testRepro_v1.txt. The program creates threee tables as shown below\u003cbr\\/\u003e\\n        CREATE TABLE Table1 (ID int PRIMARY KEY NOT NULL);\u003cbr\\/\u003e\\n        CREATE TABLE Table2 (Table1_ID int NOT NULL, Table3_ID int NOT NULL,\u003cbr\\/\u003e\\n\\t\\tCONSTRAINT TABLE2_PK PRIMARY KEY (Table1_ID,Table3_ID));\u003cbr\\/\u003e\\n        CREATE TABLE Table3 (ID int PRIMARY KEY NOT NULL); \u003c\\/p\u003e\\n\\n\u003cp\u003e        ALTER TABLE table2 ADD CONSTRAINT TABLE2_FK_1 FOREIGN KEY (Table1_ID) REFERENCES TABLE1(ID);\u003cbr\\/\u003e\\n        ALTER TABLE table2 ADD CONSTRAINT TABLE2_FK_2 FOREIGN KEY (Table3_ID) REFERENCES TABLE3(ID);\u003c\\/p\u003e\\n\\n\u003cp\u003eThe program inserts 1million rows in Table1 and 8 million rows in both Table2 and Table3. After the data is loaded, it selects each of the 8 million rows from Table2 individually with a query like following(the constant assigned to\u003cbr\\/\u003e\\nt0.Table3_ID iterates from 0 to 8million-1).\u003cbr\\/\u003e\\nSELECT count\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e FROM \u003cbr\\/\u003e\\n\\tTable1 T1,\u003cbr\\/\u003e\\n\\tTable2 t0 \u003cbr\\/\u003e\\n\\tWHERE t1.ID = t0.Table1_ID and \u003cbr\\/\u003e\\n\\t\\tt0.Table3_ID = 0;\u003c\\/p\u003e\\n\\n\u003cp\u003eAdditionally, I have two printlns in BTreeCostController.getScanCost towards the bottom of the method. I have attached svn diff for changes in BTreeCostController.getScanCost as DERBY_6317_temp_changes_for_debugging.txt. The method will also have the changes suggested by Mike in his second patch but those changes are commented out.\u003cbr\\/\u003e\\n\\t\\t.....\u003cbr\\/\u003e\\n\\t\\t\\/\\/Added this println and if statement with println. The rest of the code is unchanged\u003cbr\\/\u003e\\n        \\tSystem.out.println(\\\"In engine estimated row count is \\\" + estimated_row_count);\u003cbr\\/\u003e\\n        \\tif (estimated_row_count &lt; 0.5)\u003cbr\\/\u003e\\n\\t            \\tSystem.out.println(\\\"We are going to round estimated row count to 0\\\");\u003cbr\\/\u003e\\n            \\/\\/ RESOLVE - should we make sure this number is &gt; 0?\u003cbr\\/\u003e\\n            cost_result.setEstimatedRowCount(Math.round(estimated_row_count));\u003cbr\\/\u003e\\n        }\u003cbr\\/\u003e\\n        finally\u003c\\/p\u003e\\n\\n\u003cp\u003eRun the test program after making the changes in BTreeCostController.getScanCost as follows.\u003cbr\\/\u003e\\njava org.apache.derbyTesting.functionTests.tests.lang.MamtaJDBC &gt; dellater.txt\u003cbr\\/\u003e\\nIt will produce a really large dellater.txt. notepad couldn\'t open the file because of it\'s size. I did grep on the file to look for string \\\"We are going to round estimated row count to 0\\\" and found number of occurences of it. An example of the string were as follows\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892862:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892866:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892904:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892908:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892946:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892950:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892988:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51892992:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51893030:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51893034:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.\\/dellater2.txt:51893072:We are going to round estimated row count to 0\u003cbr\\/\u003e\\n.....\u003c\\/p\u003e\\n\\n\u003cp\u003eI picked the first line from grep output above and used that line number to find the value of the constant in the SELECT query that resulted in estimated row count to be rounded to 0 and found following\u003cbr\\/\u003e\\n$ head -n 51892862 dellater2.txt | tail -n 10\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.9536743\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003cbr\\/\u003e\\nt0.Table3_ID =5189284\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.47683716\u003cbr\\/\u003e\\nWe are going to round estimated row count to 0\u003c\\/p\u003e\\n\\n\u003cp\u003eNext, I tried that t0.Table3_ID =5189284 value directly in ij with log query plan on and could see in derby.log that we are doing table scan for the inner(right) resultset. I tried value one higher than the problem ID value and saw that we use index scan for that SELECT query.\u003cbr\\/\u003e\\n$ java -Dderby.language.logQueryPlan=true -Dij.exceptionTrace=true org.apache.derby.tools.ij\u003cbr\\/\u003e\\nij version 10.11\u003cbr\\/\u003e\\nij&gt; connect \'jdbc:derby:clobtest3\';\u003cbr\\/\u003e\\nij&gt; SELECT count\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e FROM\u003cbr\\/\u003e\\n        Table1 T1,\u003cbr\\/\u003e\\n        Table2 t0\u003cbr\\/\u003e\\n        WHERE t1.ID = t0.Table&gt; 1_ID and\u003cbr\\/\u003e\\n                t0.Tabl&gt; e3_ID = 5189284 ;\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.47683716\u003cbr\\/\u003e\\nWe are going to round estimated row count to 0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.47683716\u003cbr\\/\u003e\\nWe are going to round estimated row count to 0\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003cbr\\/\u003e\\n1\u003cbr\\/\u003e\\n-----------\u003cbr\\/\u003e\\n1\u003c\\/p\u003e\\n\\n\u003cp\u003e1 row selected\u003cbr\\/\u003e\\nij&gt; SELECT count\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e FROM\u003cbr\\/\u003e\\n        Table1 T1,\u003cbr\\/\u003e\\n        Table2 t0\u003cbr\\/\u003e\\n        WHERE t1.ID = t0.Table1_ID and\u003cbr\\/\u003e\\n              t0.Table3_ID = 5189285;\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.9536743\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.9536743\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003cbr\\/\u003e\\n1\u003cbr\\/\u003e\\n-----------\u003cbr\\/\u003e\\n1\u003c\\/p\u003e\\n\\n\u003cp\u003e1 row selected\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eI applied Mike\'s 2nd patch which check if estimated row count is less than &lt;.5 and if so, it assigns value 1 to estimated row count. With that patch, I ran the 2 queries again in ij against the database and saw that we are indeed using index scan for both the queries. So, the patch definitely fixed the problem with the repro db I have created.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe test program takes over 4-5hours to load the data and run 8millions selects.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13755348_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13755348_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'31\\/Aug\\/13 01:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-31T01:56:19+0000\'\u003e31\\/Aug\\/13 01:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I had to make a change to the earlier test program since that program was inserting duplicate values in non-unique foreign key on Table2. It now inserts all unique values in foreign key corresponding to Table3 and I have been able to reproduce the problem. I have attached the repro test case as testRepro_v1.txt. The program creates threee tables as shown below \\n        CREATE TABLE Table1 (ID int PRIMARY KEY NOT NULL); \\n        CREATE TABLE Table2 (Table1_ID int NOT NULL, Table3_ID int NOT NULL, \\n\\t\\tCONSTRAINT TABLE2_PK PRIMARY KEY (Table1_ID,Table3_ID)); \\n        CREATE TABLE Table3 (ID int PRIMARY KEY NOT NULL);  \\n\\n         ALTER TABLE table2 ADD CONSTRAINT TABLE2_FK_1 FOREIGN KEY (Table1_ID) REFERENCES TABLE1(ID); \\n        ALTER TABLE table2 ADD CONSTRAINT TABLE2_FK_2 FOREIGN KEY (Table3_ID) REFERENCES TABLE3(ID); \\n\\n The program inserts 1million rows in Table1 and 8 million rows in both Table2 and Table3. After the data is loaded, it selects each of the 8 million rows from Table2 individually with a query like following(the constant assigned to \\nt0.Table3_ID iterates from 0 to 8million-1). \\nSELECT count  FROM  \\n\\tTable1 T1, \\n\\tTable2 t0  \\n\\tWHERE t1.ID = t0.Table1_ID and  \\n\\t\\tt0.Table3_ID = 0; \\n\\n Additionally, I have two printlns in BTreeCostController.getScanCost towards the bottom of the method. I have attached svn diff for changes in BTreeCostController.getScanCost as DERBY_6317_temp_changes_for_debugging.txt. The method will also have the changes suggested by Mike in his second patch but those changes are commented out. \\n\\t\\t..... \\n\\t\\t\\/\\/Added this println and if statement with println. The rest of the code is unchanged \\n        \\tSystem.out.println(\\\"In engine estimated row count is \\\" + estimated_row_count); \\n        \\tif (estimated_row_count &lt; 0.5) \\n\\t            \\tSystem.out.println(\\\"We are going to round estimated row count to 0\\\"); \\n            \\/\\/ RESOLVE - should we make sure this number is &gt; 0? \\n            cost_result.setEstimatedRowCount(Math.round(estimated_row_count)); \\n        } \\n        finally \\n\\n Run the test program after making the changes in BTreeCostController.getScanCost as follows. \\njava org.apache.derbyTesting.functionTests.tests.lang.MamtaJDBC &gt; dellater.txt \\nIt will produce a really large dellater.txt. notepad couldn\'t open the file because of it\'s size. I did grep on the file to look for string \\\"We are going to round estimated row count to 0\\\" and found number of occurences of it. An example of the string were as follows \\n.\\/dellater2.txt:51892862:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51892866:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51892904:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51892908:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51892946:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51892950:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51892988:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51892992:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51893030:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51893034:We are going to round estimated row count to 0 \\n.\\/dellater2.txt:51893072:We are going to round estimated row count to 0 \\n..... \\n\\n I picked the first line from grep output above and used that line number to find the value of the constant in the SELECT query that resulted in estimated row count to be rounded to 0 and found following \\n$ head -n 51892862 dellater2.txt | tail -n 10 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.9536743 \\nIn engine estimated row count is 1000005.0 \\nt0.Table3_ID =5189284 \\nIn engine estimated row count is 1000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.47683716 \\nWe are going to round estimated row count to 0 \\n\\n Next, I tried that t0.Table3_ID =5189284 value directly in ij with log query plan on and could see in derby.log that we are doing table scan for the inner(right) resultset. I tried value one higher than the problem ID value and saw that we use index scan for that SELECT query. \\n$ java -Dderby.language.logQueryPlan=true -Dij.exceptionTrace=true org.apache.derby.tools.ij \\nij version 10.11 \\nij&gt; connect \'jdbc:derby:clobtest3\'; \\nij&gt; SELECT count  FROM \\n        Table1 T1, \\n        Table2 t0 \\n        WHERE t1.ID = t0.Table&gt; 1_ID and \\n                t0.Tabl&gt; e3_ID = 5189284 ; \\nIn engine estimated row count is 1000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.47683716 \\nWe are going to round estimated row count to 0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.47683716 \\nWe are going to round estimated row count to 0 \\nIn engine estimated row count is 1000005.0 \\n1 \\n----------- \\n1 \\n\\n 1 row selected \\nij&gt; SELECT count  FROM \\n        Table1 T1, \\n        Table2 t0 \\n        WHERE t1.ID = t0.Table1_ID and \\n              t0.Table3_ID = 5189285; \\nIn engine estimated row count is 1000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.9536743 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.9536743 \\nIn engine estimated row count is 1000005.0 \\n1 \\n----------- \\n1 \\n\\n 1 row selected \\n\\n\\n I applied Mike\'s 2nd patch which check if estimated row count is less than &lt;.5 and if so, it assigns value 1 to estimated row count. With that patch, I ran the 2 queries again in ij against the database and saw that we are indeed using index scan for both the queries. So, the patch definitely fixed the problem with the repro db I have created. \\n\\n The test program takes over 4-5hours to load the data and run 8millions selects.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13755556\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13755556&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13755556\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13755556_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13755556_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'31\\/Aug\\/13 17:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-31T17:11:14+0000\'\u003e31\\/Aug\\/13 17:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIt turns out most of the time in the test is taken in executing the selects.  For a sane classes run I got the following\u003cbr\\/\u003e\\ntimes for the load:\u003cbr\\/\u003e\\nfinished creating tables\u003cbr\\/\u003e\\nTable1 - done inserting data, num rows = 1000000\u003cbr\\/\u003e\\nTable1 -    inserting data executed in ms: 44513\u003cbr\\/\u003e\\nTable3 - done inserting data, num rows = 8000000\u003cbr\\/\u003e\\nTable3 -    inserting data executed in ms: 399121\u003cbr\\/\u003e\\nTable2 - done inserting data, num rows = 1000000\u003cbr\\/\u003e\\nTable2 -    inserting data executed in ms: 1272520\u003c\\/p\u003e\\n\\n\\n\u003cp\u003eso a total of around 10 minutes to load 1 million + 8 million + 1 million rows.  The load time could likely\u003cbr\\/\u003e\\nbe reduced by first creating the tables with no primary keys, constraints, or indexes and adding them after\u003cbr\\/\u003e\\nthe data has been loaded.  \u003c\\/p\u003e\\n\\n\u003cp\u003eI was not running with all the prints, as it is likely that was also slowing down the system.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13755556_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13755556_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'31\\/Aug\\/13 17:11\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-08-31T17:11:14+0000\'\u003e31\\/Aug\\/13 17:11\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    It turns out most of the time in the test is taken in executing the selects.  For a sane classes run I got the following \\ntimes for the load: \\nfinished creating tables \\nTable1 - done inserting data, num rows = 1000000 \\nTable1 -    inserting data executed in ms: 44513 \\nTable3 - done inserting data, num rows = 8000000 \\nTable3 -    inserting data executed in ms: 399121 \\nTable2 - done inserting data, num rows = 1000000 \\nTable2 -    inserting data executed in ms: 1272520 \\n\\n\\n so a total of around 10 minutes to load 1 million + 8 million + 1 million rows.  The load time could likely \\nbe reduced by first creating the tables with no primary keys, constraints, or indexes and adding them after \\nthe data has been loaded.   \\n\\n I was not running with all the prints, as it is likely that was also slowing down the system. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13757977\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13757977&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13757977\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13757977_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13757977_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 17:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T17:10:41+0000\'\u003e04\\/Sep\\/13 17:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI have been working on a junit test for this jira and for some strange reason, the problem does not reproduce yet. The test is based on the stand alone test case. I had made one optimization in the junit test case to create the indexes after the database was loaded and that is when the problem did not reproduce. Since then, I have removed the optimization so now the junit test looks similar to stand alone test case and I have fired that junit run this morning. Will post the results when the test is over. I did want to mention that the data load takes close to 45minutes with the test. Mike mentioned in his case it took only 10 minutes. I am attaching a patch for junit test DERBY_6317_junit_test_v1_diff.txt. May be Mike or some one else can see why the load in my case is taking much longer. This patch is not ready for commit. The patch has some changes to largedata suite, please ignore it. I commented out other largedata tests so I can focus on just my junit repro.\u003c\\/p\u003e\\n\\n\u003cp\u003eI am running on Windows 7 machine with IBM jdk 1.6\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13757977_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13757977_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 17:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T17:10:41+0000\'\u003e04\\/Sep\\/13 17:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I have been working on a junit test for this jira and for some strange reason, the problem does not reproduce yet. The test is based on the stand alone test case. I had made one optimization in the junit test case to create the indexes after the database was loaded and that is when the problem did not reproduce. Since then, I have removed the optimization so now the junit test looks similar to stand alone test case and I have fired that junit run this morning. Will post the results when the test is over. I did want to mention that the data load takes close to 45minutes with the test. Mike mentioned in his case it took only 10 minutes. I am attaching a patch for junit test DERBY_6317_junit_test_v1_diff.txt. May be Mike or some one else can see why the load in my case is taking much longer. This patch is not ready for commit. The patch has some changes to largedata suite, please ignore it. I commented out other largedata tests so I can focus on just my junit repro. \\n\\n I am running on Windows 7 machine with IBM jdk 1.6              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758140\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758140&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758140\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13758140_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758140_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:34:40+0000\'\u003e04\\/Sep\\/13 18:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eyou are right mamta i had not timed the load, just did the printouts above.  I did not notice that the Table2 load\u003cbr\\/\u003e\\nhad a loop of 1mill and an inner loop of 8.  So the num rows printed was wrong, and I missed a decimal point when\u003cbr\\/\u003e\\nI was adding the time in my head.  The Table2 load took 1272 seconds, more like 20 minutes for it + 10 minutes for Table 3 and 1 minute\u003cbr\\/\u003e\\nfor table 1.  So 34 minutes which is a lot closer to what you  were getting.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13758140_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758140_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:34:40+0000\'\u003e04\\/Sep\\/13 18:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    you are right mamta i had not timed the load, just did the printouts above.  I did not notice that the Table2 load \\nhad a loop of 1mill and an inner loop of 8.  So the num rows printed was wrong, and I missed a decimal point when \\nI was adding the time in my head.  The Table2 load took 1272 seconds, more like 20 minutes for it + 10 minutes for Table 3 and 1 minute \\nfor table 1.  So 34 minutes which is a lot closer to what you  were getting.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758166\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758166&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758166\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758166_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758166_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:50:36+0000\'\u003e04\\/Sep\\/13 18:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for double checking Mike. \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758166_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758166_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:50:36+0000\'\u003e04\\/Sep\\/13 18:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for double checking Mike.               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758169\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758169&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758169\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758169_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758169_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:53:09+0000\'\u003e04\\/Sep\\/13 18:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI realized I have not posted the query plans for the index scan vs table scan cases. I will post them in next two comments for easier read.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758169_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758169_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:53:09+0000\'\u003e04\\/Sep\\/13 18:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I realized I have not posted the query plans for the index scan vs table scan cases. I will post them in next two comments for easier read.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758172\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758172&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758172\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758172_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758172_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:55:01+0000\'\u003e04\\/Sep\\/13 18:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe following query plan is when we are doing table scan of TABLE1 instead of index scan. Note the value in SELECT for indexed column is 5189284\u003c\\/p\u003e\\n\\n\u003cp\u003eWed Sep 04 11:47:25 PDT 2013 Thread\u003cspan class=\\\"error\\\"\u003e&#91;main,5,main&#93;\u003c\\/span\u003e (XID = 767109), (SESSIONID = 1), SELECT count\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e FROM \u003cbr\\/\u003e\\n\\tTable1 T1,\u003cbr\\/\u003e\\n\\tTable2 t0 \u003cbr\\/\u003e\\n\\tWHERE t1.ID = t0.Table1_ID and \u003cbr\\/\u003e\\n\\t\\tt0.Table3_ID = 5189284 ******* Project-Restrict ResultSet (7):\u003cbr\\/\u003e\\nNumber of opens = 1\u003cbr\\/\u003e\\nRows seen = 1\u003cbr\\/\u003e\\nRows filtered = 0\u003cbr\\/\u003e\\nrestriction = false\u003cbr\\/\u003e\\nprojection = true\u003cbr\\/\u003e\\n\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\trestriction time (milliseconds) = 0\u003cbr\\/\u003e\\n\\tprojection time (milliseconds) = 0\u003cbr\\/\u003e\\n\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\toptimizer estimated cost: 6.33\u003cbr\\/\u003e\\nSource result set:\u003cbr\\/\u003e\\n\\tScalar Aggregate ResultSet:\u003cbr\\/\u003e\\n\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\tRows input = 1\u003cbr\\/\u003e\\n\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\toptimizer estimated row count: 0.00\u003cbr\\/\u003e\\n\\t\\toptimizer estimated cost: 6.33\u003cbr\\/\u003e\\n\\tIndex Key Optimization = false\u003cbr\\/\u003e\\n\\tSource result set:\u003cbr\\/\u003e\\n\\t\\tProject-Restrict ResultSet (6):\u003cbr\\/\u003e\\n\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\trestriction = false\u003cbr\\/\u003e\\n\\t\\tprojection = true\u003cbr\\/\u003e\\n\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\trestriction time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\tprojection time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\toptimizer estimated row count: 0.00\u003cbr\\/\u003e\\n\\t\\t\\toptimizer estimated cost: 6.33\u003cbr\\/\u003e\\n\\t\\tSource result set:\u003cbr\\/\u003e\\n\\t\\t\\tNested Loop Join ResultSet:\u003cbr\\/\u003e\\n\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\tRows seen from the left = 1\u003cbr\\/\u003e\\n\\t\\t\\tRows seen from the right = 1\u003cbr\\/\u003e\\n\\t\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\t\\tRows returned = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\toptimizer estimated row count: 0.00\u003cbr\\/\u003e\\n\\t\\t\\t\\toptimizer estimated cost: 6.33\u003cbr\\/\u003e\\n\\t\\t\\tLeft result set:\u003cbr\\/\u003e\\n\\t\\t\\t\\tIndex Row to Base Row ResultSet for TABLE2:\u003cbr\\/\u003e\\n\\t\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tColumns accessed from heap = \u003c\\/p\u003e\\n{0, 1}\\n\u003cp\u003e\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated row count: 0.00\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated cost: 6.33\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tIndex Scan ResultSet for TABLE2 using constraint TABLE2_FK_2 at read committed isolation level using instantaneous share row locking chosen by the optimizer\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tFetch Size = 16\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\t\\t\\tscan information:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tBit set of columns fetched=All\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of columns fetched=2\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of deleted rows visited=0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of pages visited=4\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of rows qualified=1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of rows visited=2\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tScan type=btree\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tTree height=-1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tstart position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t&gt;= on first 1 column(s).\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns: \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t0 \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tstop position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t&gt; on first 1 column(s).\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns: \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t0 \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tqualifiers:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\tNone\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\toptimizer estimated row count: 0.00\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\toptimizer estimated cost: 6.33\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\tRight result set:\u003cbr\\/\u003e\\n\\t\\t\\t\\tTable Scan ResultSet for TABLE1 at read committed isolation level using instantaneous share row locking chosen by the optimizer\u003cbr\\/\u003e\\n\\t\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\tFetch Size = 16\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\t\\tscan information:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tBit set of columns fetched=All\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of columns fetched=1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of pages visited=7300\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of rows qualified=1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of rows visited=1000000\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tScan type=heap\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tstart position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tnull\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tstop position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tnull\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tqualifiers:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tColumn\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e\u003cspan class=\\\"error\\\"\u003e&#91;0&#93;\u003c\\/span\u003e Id: 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tOperator: =\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tOrdered nulls: false\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tUnknown return value: false\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNegate comparison result: false\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated row count: 0.00\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated cost: 0.00\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758172_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758172_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:55:01+0000\'\u003e04\\/Sep\\/13 18:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The following query plan is when we are doing table scan of TABLE1 instead of index scan. Note the value in SELECT for indexed column is 5189284 \\n\\n Wed Sep 04 11:47:25 PDT 2013 Thread &#91;main,5,main&#93;  (XID = 767109), (SESSIONID = 1), SELECT count  FROM  \\n\\tTable1 T1, \\n\\tTable2 t0  \\n\\tWHERE t1.ID = t0.Table1_ID and  \\n\\t\\tt0.Table3_ID = 5189284 ******* Project-Restrict ResultSet (7): \\nNumber of opens = 1 \\nRows seen = 1 \\nRows filtered = 0 \\nrestriction = false \\nprojection = true \\n\\tconstructor time (milliseconds) = 0 \\n\\topen time (milliseconds) = 0 \\n\\tnext time (milliseconds) = 0 \\n\\tclose time (milliseconds) = 0 \\n\\trestriction time (milliseconds) = 0 \\n\\tprojection time (milliseconds) = 0 \\n\\toptimizer estimated row count: 1.00 \\n\\toptimizer estimated cost: 6.33 \\nSource result set: \\n\\tScalar Aggregate ResultSet: \\n\\tNumber of opens = 1 \\n\\tRows input = 1 \\n\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\topen time (milliseconds) = 0 \\n\\t\\tnext time (milliseconds) = 0 \\n\\t\\tclose time (milliseconds) = 0 \\n\\t\\toptimizer estimated row count: 0.00 \\n\\t\\toptimizer estimated cost: 6.33 \\n\\tIndex Key Optimization = false \\n\\tSource result set: \\n\\t\\tProject-Restrict ResultSet (6): \\n\\t\\tNumber of opens = 1 \\n\\t\\tRows seen = 1 \\n\\t\\tRows filtered = 0 \\n\\t\\trestriction = false \\n\\t\\tprojection = true \\n\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\trestriction time (milliseconds) = 0 \\n\\t\\t\\tprojection time (milliseconds) = 0 \\n\\t\\t\\toptimizer estimated row count: 0.00 \\n\\t\\t\\toptimizer estimated cost: 6.33 \\n\\t\\tSource result set: \\n\\t\\t\\tNested Loop Join ResultSet: \\n\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\tRows seen from the left = 1 \\n\\t\\t\\tRows seen from the right = 1 \\n\\t\\t\\tRows filtered = 0 \\n\\t\\t\\tRows returned = 1 \\n\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\toptimizer estimated row count: 0.00 \\n\\t\\t\\t\\toptimizer estimated cost: 6.33 \\n\\t\\t\\tLeft result set: \\n\\t\\t\\t\\tIndex Row to Base Row ResultSet for TABLE2: \\n\\t\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\t\\tRows seen = 1 \\n\\t\\t\\t\\tColumns accessed from heap =  \\n{0, 1}\\n \\t\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\t\\toptimizer estimated row count: 0.00 \\n\\t\\t\\t\\t\\toptimizer estimated cost: 6.33 \\n\\t\\t\\t\\t\\tIndex Scan ResultSet for TABLE2 using constraint TABLE2_FK_2 at read committed isolation level using instantaneous share row locking chosen by the optimizer \\n\\t\\t\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\t\\t\\tRows seen = 1 \\n\\t\\t\\t\\t\\tRows filtered = 0 \\n\\t\\t\\t\\t\\tFetch Size = 16 \\n\\t\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0 \\n\\n \\t\\t\\t\\t\\tscan information: \\n\\t\\t\\t\\t\\t\\tBit set of columns fetched=All \\n\\t\\t\\t\\t\\t\\tNumber of columns fetched=2 \\n\\t\\t\\t\\t\\t\\tNumber of deleted rows visited=0 \\n\\t\\t\\t\\t\\t\\tNumber of pages visited=4 \\n\\t\\t\\t\\t\\t\\tNumber of rows qualified=1 \\n\\t\\t\\t\\t\\t\\tNumber of rows visited=2 \\n\\t\\t\\t\\t\\t\\tScan type=btree \\n\\t\\t\\t\\t\\t\\tTree height=-1 \\n\\t\\t\\t\\t\\t\\tstart position: \\n\\t\\t\\t\\t\\t\\t\\t&gt;= on first 1 column(s). \\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns:  \\n\\t\\t\\t\\t\\t\\t\\t0  \\n\\t\\t\\t\\t\\t\\tstop position: \\n\\t\\t\\t\\t\\t\\t\\t&gt; on first 1 column(s). \\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns:  \\n\\t\\t\\t\\t\\t\\t\\t0  \\n\\t\\t\\t\\t\\t\\tqualifiers: \\n\\t\\t\\t\\t\\t\\t\\tNone \\n\\t\\t\\t\\t\\t\\toptimizer estimated row count: 0.00 \\n\\t\\t\\t\\t\\t\\toptimizer estimated cost: 6.33 \\n\\n \\t\\t\\tRight result set: \\n\\t\\t\\t\\tTable Scan ResultSet for TABLE1 at read committed isolation level using instantaneous share row locking chosen by the optimizer \\n\\t\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\t\\tRows seen = 1 \\n\\t\\t\\t\\tRows filtered = 0 \\n\\t\\t\\t\\tFetch Size = 16 \\n\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0 \\n\\n \\t\\t\\t\\tscan information: \\n\\t\\t\\t\\t\\tBit set of columns fetched=All \\n\\t\\t\\t\\t\\tNumber of columns fetched=1 \\n\\t\\t\\t\\t\\tNumber of pages visited=7300 \\n\\t\\t\\t\\t\\tNumber of rows qualified=1 \\n\\t\\t\\t\\t\\tNumber of rows visited=1000000 \\n\\t\\t\\t\\t\\tScan type=heap \\n\\t\\t\\t\\t\\tstart position: \\n\\t\\t\\t\\t\\t\\tnull \\n\\t\\t\\t\\t\\tstop position: \\n\\t\\t\\t\\t\\t\\tnull \\n\\t\\t\\t\\t\\tqualifiers: \\n\\t\\t\\t\\t\\t\\tColumn &#91;0&#93;  &#91;0&#93;  Id: 0 \\n\\t\\t\\t\\t\\t\\tOperator: = \\n\\t\\t\\t\\t\\t\\tOrdered nulls: false \\n\\t\\t\\t\\t\\t\\tUnknown return value: false \\n\\t\\t\\t\\t\\t\\tNegate comparison result: false \\n\\t\\t\\t\\t\\toptimizer estimated row count: 0.00 \\n\\t\\t\\t\\t\\toptimizer estimated cost: 0.00              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758183\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758183&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758183\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758183_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758183_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:58:12+0000\'\u003e04\\/Sep\\/13 18:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe following query plan is when we are doing index scan of TABLE1 which is the correct behavior. Note the value in SELECT for indexed column is 5189285 (just one higher than the 5189284 where we use table scan)\u003cbr\\/\u003e\\n----------------------------------------------------------------\u003cbr\\/\u003e\\nWed Sep 04 11:55:19 PDT 2013:\u003cbr\\/\u003e\\nBooting Derby version The Apache Software Foundation - Apache Derby - 10.11.0.0 alpha - (1): instance a816c00e-0140-ea54-2a4c-00000022b220 \u003cbr\\/\u003e\\non database directory C:\\\\p4clients\\\\svnmain\\\\client3\\\\trunk\\\\systest\\\\del\\\\ClobTest3 with class loader sun.misc.Launcher$AppClassLoader@53745374 \u003cbr\\/\u003e\\nLoaded from \u003ca href=\\\"file:\\/C:\\/p4clients\\/svnmain\\/client3\\/trunk\\/classes\\/\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003efile:\\/C:\\/p4clients\\/svnmain\\/client3\\/trunk\\/classes\\/\u003c\\/a\u003e\u003cbr\\/\u003e\\njava.vendor=IBM Corporation\u003cbr\\/\u003e\\njava.runtime.version=pwi3260sr14-20130705_01 (SR14)\u003cbr\\/\u003e\\njava.fullversion=JRE 1.6.0 IBM J9 2.4 Windows 7 x86-32 jvmwi3260sr14-20130704_155156 (JIT enabled, AOT enabled)\u003cbr\\/\u003e\\nJ9VM - 20130704_155156\u003cbr\\/\u003e\\nJIT  - r9_20130517_38390\u003cbr\\/\u003e\\nGC   - GA24_Java6_SR14_20130704_1138_B155156\u003cbr\\/\u003e\\nuser.dir=C:\\\\p4clients\\\\svnmain\\\\client3\\\\trunk\\\\systest\\\\del\u003cbr\\/\u003e\\nos.name=Windows 7\u003cbr\\/\u003e\\nos.arch=x86\u003cbr\\/\u003e\\nos.version=6.1 build 7601 Service Pack 1\u003cbr\\/\u003e\\nderby.system.home=null\u003cbr\\/\u003e\\nDatabase Class Loader started - derby.database.classpath=\'\'\u003cbr\\/\u003e\\nWed Sep 04 11:55:24 PDT 2013 Thread\u003cspan class=\\\"error\\\"\u003e&#91;main,5,main&#93;\u003c\\/span\u003e (XID = 767118), (SESSIONID = 1), SELECT count\u003cimg class=\\\"emoticon\\\" src=\\\"\\/jira\\/images\\/icons\\/emoticons\\/star_yellow.png\\\" height=\\\"16\\\" width=\\\"16\\\" align=\\\"absmiddle\\\" alt=\\\"\\\" border=\\\"0\\\"\\/\u003e FROM \u003cbr\\/\u003e\\n\\tTable1 T1,\u003cbr\\/\u003e\\n\\tTable2 t0 \u003cbr\\/\u003e\\n\\tWHERE t1.ID = t0.Table1_ID and \u003cbr\\/\u003e\\n\\t\\tt0.Table3_ID = 5189285 ******* Project-Restrict ResultSet (7):\u003cbr\\/\u003e\\nNumber of opens = 1\u003cbr\\/\u003e\\nRows seen = 1\u003cbr\\/\u003e\\nRows filtered = 0\u003cbr\\/\u003e\\nrestriction = false\u003cbr\\/\u003e\\nprojection = true\u003cbr\\/\u003e\\n\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\trestriction time (milliseconds) = 0\u003cbr\\/\u003e\\n\\tprojection time (milliseconds) = 0\u003cbr\\/\u003e\\n\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\toptimizer estimated cost: 12.72\u003cbr\\/\u003e\\nSource result set:\u003cbr\\/\u003e\\n\\tScalar Aggregate ResultSet:\u003cbr\\/\u003e\\n\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\tRows input = 1\u003cbr\\/\u003e\\n\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\t\\toptimizer estimated cost: 12.72\u003cbr\\/\u003e\\n\\tIndex Key Optimization = false\u003cbr\\/\u003e\\n\\tSource result set:\u003cbr\\/\u003e\\n\\t\\tProject-Restrict ResultSet (6):\u003cbr\\/\u003e\\n\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\trestriction = false\u003cbr\\/\u003e\\n\\t\\tprojection = true\u003cbr\\/\u003e\\n\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\trestriction time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\tprojection time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\t\\t\\toptimizer estimated cost: 12.72\u003cbr\\/\u003e\\n\\t\\tSource result set:\u003cbr\\/\u003e\\n\\t\\t\\tNested Loop Exists Join ResultSet:\u003cbr\\/\u003e\\n\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\tRows seen from the left = 1\u003cbr\\/\u003e\\n\\t\\t\\tRows seen from the right = 1\u003cbr\\/\u003e\\n\\t\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\t\\tRows returned = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\t\\t\\t\\toptimizer estimated cost: 12.72\u003cbr\\/\u003e\\n\\t\\t\\tLeft result set:\u003cbr\\/\u003e\\n\\t\\t\\t\\tIndex Row to Base Row ResultSet for TABLE2:\u003cbr\\/\u003e\\n\\t\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tColumns accessed from heap = \u003c\\/p\u003e\\n{0, 1}\\n\u003cp\u003e\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated cost: 8.01\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tIndex Scan ResultSet for TABLE2 using constraint TABLE2_FK_2 at read committed isolation level using instantaneous share row locking chosen by the optimizer\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tFetch Size = 16\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\t\\t\\tscan information:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tBit set of columns fetched=All\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of columns fetched=2\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of deleted rows visited=0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of pages visited=4\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of rows qualified=1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNumber of rows visited=2\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tScan type=btree\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tTree height=-1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tstart position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t&gt;= on first 1 column(s).\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns: \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t0 \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tstop position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t&gt; on first 1 column(s).\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns: \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\t0 \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tqualifiers:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t\\tNone\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\toptimizer estimated cost: 8.01\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\tRight result set:\u003cbr\\/\u003e\\n\\t\\t\\t\\tIndex Scan ResultSet for TABLE1 using constraint SQL130829215951000 at read committed isolation level using share row locking chosen by the optimizer\u003cbr\\/\u003e\\n\\t\\t\\t\\tNumber of opens = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tRows seen = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\tRows filtered = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\tFetch Size = 1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\topen time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\t\\tscan information:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tBit set of columns fetched=\u003c\\/p\u003e\\n{0}\\n\u003cp\u003e\\t\\t\\t\\t\\tNumber of columns fetched=1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of deleted rows visited=0\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of pages visited=3\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of rows qualified=1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tNumber of rows visited=1\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tScan type=btree\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tTree height=3\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tstart position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t&gt;= on first 1 column(s).\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns: \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t0 \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tstop position:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t&gt; on first 1 column(s).\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns: \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\t0 \u003cbr\\/\u003e\\n\\t\\t\\t\\t\\tqualifiers:\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\t\\tNone\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\t\\t\\t\\t\\toptimizer estimated cost: 4.71\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758183_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758183_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 18:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T18:58:12+0000\'\u003e04\\/Sep\\/13 18:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The following query plan is when we are doing index scan of TABLE1 which is the correct behavior. Note the value in SELECT for indexed column is 5189285 (just one higher than the 5189284 where we use table scan) \\n---------------------------------------------------------------- \\nWed Sep 04 11:55:19 PDT 2013: \\nBooting Derby version The Apache Software Foundation - Apache Derby - 10.11.0.0 alpha - (1): instance a816c00e-0140-ea54-2a4c-00000022b220  \\non database directory C:\\\\p4clients\\\\svnmain\\\\client3\\\\trunk\\\\systest\\\\del\\\\ClobTest3 with class loader sun.misc.Launcher$AppClassLoader@53745374  \\nLoaded from  file:\\/C:\\/p4clients\\/svnmain\\/client3\\/trunk\\/classes\\/  \\njava.vendor=IBM Corporation \\njava.runtime.version=pwi3260sr14-20130705_01 (SR14) \\njava.fullversion=JRE 1.6.0 IBM J9 2.4 Windows 7 x86-32 jvmwi3260sr14-20130704_155156 (JIT enabled, AOT enabled) \\nJ9VM - 20130704_155156 \\nJIT  - r9_20130517_38390 \\nGC   - GA24_Java6_SR14_20130704_1138_B155156 \\nuser.dir=C:\\\\p4clients\\\\svnmain\\\\client3\\\\trunk\\\\systest\\\\del \\nos.name=Windows 7 \\nos.arch=x86 \\nos.version=6.1 build 7601 Service Pack 1 \\nderby.system.home=null \\nDatabase Class Loader started - derby.database.classpath=\'\' \\nWed Sep 04 11:55:24 PDT 2013 Thread &#91;main,5,main&#93;  (XID = 767118), (SESSIONID = 1), SELECT count  FROM  \\n\\tTable1 T1, \\n\\tTable2 t0  \\n\\tWHERE t1.ID = t0.Table1_ID and  \\n\\t\\tt0.Table3_ID = 5189285 ******* Project-Restrict ResultSet (7): \\nNumber of opens = 1 \\nRows seen = 1 \\nRows filtered = 0 \\nrestriction = false \\nprojection = true \\n\\tconstructor time (milliseconds) = 0 \\n\\topen time (milliseconds) = 0 \\n\\tnext time (milliseconds) = 0 \\n\\tclose time (milliseconds) = 0 \\n\\trestriction time (milliseconds) = 0 \\n\\tprojection time (milliseconds) = 0 \\n\\toptimizer estimated row count: 1.00 \\n\\toptimizer estimated cost: 12.72 \\nSource result set: \\n\\tScalar Aggregate ResultSet: \\n\\tNumber of opens = 1 \\n\\tRows input = 1 \\n\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\topen time (milliseconds) = 0 \\n\\t\\tnext time (milliseconds) = 0 \\n\\t\\tclose time (milliseconds) = 0 \\n\\t\\toptimizer estimated row count: 1.00 \\n\\t\\toptimizer estimated cost: 12.72 \\n\\tIndex Key Optimization = false \\n\\tSource result set: \\n\\t\\tProject-Restrict ResultSet (6): \\n\\t\\tNumber of opens = 1 \\n\\t\\tRows seen = 1 \\n\\t\\tRows filtered = 0 \\n\\t\\trestriction = false \\n\\t\\tprojection = true \\n\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\trestriction time (milliseconds) = 0 \\n\\t\\t\\tprojection time (milliseconds) = 0 \\n\\t\\t\\toptimizer estimated row count: 1.00 \\n\\t\\t\\toptimizer estimated cost: 12.72 \\n\\t\\tSource result set: \\n\\t\\t\\tNested Loop Exists Join ResultSet: \\n\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\tRows seen from the left = 1 \\n\\t\\t\\tRows seen from the right = 1 \\n\\t\\t\\tRows filtered = 0 \\n\\t\\t\\tRows returned = 1 \\n\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\toptimizer estimated row count: 1.00 \\n\\t\\t\\t\\toptimizer estimated cost: 12.72 \\n\\t\\t\\tLeft result set: \\n\\t\\t\\t\\tIndex Row to Base Row ResultSet for TABLE2: \\n\\t\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\t\\tRows seen = 1 \\n\\t\\t\\t\\tColumns accessed from heap =  \\n{0, 1}\\n \\t\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\t\\toptimizer estimated row count: 1.00 \\n\\t\\t\\t\\t\\toptimizer estimated cost: 8.01 \\n\\t\\t\\t\\t\\tIndex Scan ResultSet for TABLE2 using constraint TABLE2_FK_2 at read committed isolation level using instantaneous share row locking chosen by the optimizer \\n\\t\\t\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\t\\t\\tRows seen = 1 \\n\\t\\t\\t\\t\\tRows filtered = 0 \\n\\t\\t\\t\\t\\tFetch Size = 16 \\n\\t\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0 \\n\\n \\t\\t\\t\\t\\tscan information: \\n\\t\\t\\t\\t\\t\\tBit set of columns fetched=All \\n\\t\\t\\t\\t\\t\\tNumber of columns fetched=2 \\n\\t\\t\\t\\t\\t\\tNumber of deleted rows visited=0 \\n\\t\\t\\t\\t\\t\\tNumber of pages visited=4 \\n\\t\\t\\t\\t\\t\\tNumber of rows qualified=1 \\n\\t\\t\\t\\t\\t\\tNumber of rows visited=2 \\n\\t\\t\\t\\t\\t\\tScan type=btree \\n\\t\\t\\t\\t\\t\\tTree height=-1 \\n\\t\\t\\t\\t\\t\\tstart position: \\n\\t\\t\\t\\t\\t\\t\\t&gt;= on first 1 column(s). \\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns:  \\n\\t\\t\\t\\t\\t\\t\\t0  \\n\\t\\t\\t\\t\\t\\tstop position: \\n\\t\\t\\t\\t\\t\\t\\t&gt; on first 1 column(s). \\n\\t\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns:  \\n\\t\\t\\t\\t\\t\\t\\t0  \\n\\t\\t\\t\\t\\t\\tqualifiers: \\n\\t\\t\\t\\t\\t\\t\\tNone \\n\\t\\t\\t\\t\\t\\toptimizer estimated row count: 1.00 \\n\\t\\t\\t\\t\\t\\toptimizer estimated cost: 8.01 \\n\\n \\t\\t\\tRight result set: \\n\\t\\t\\t\\tIndex Scan ResultSet for TABLE1 using constraint SQL130829215951000 at read committed isolation level using share row locking chosen by the optimizer \\n\\t\\t\\t\\tNumber of opens = 1 \\n\\t\\t\\t\\tRows seen = 1 \\n\\t\\t\\t\\tRows filtered = 0 \\n\\t\\t\\t\\tFetch Size = 1 \\n\\t\\t\\t\\t\\tconstructor time (milliseconds) = 0 \\n\\t\\t\\t\\t\\topen time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tnext time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tclose time (milliseconds) = 0 \\n\\t\\t\\t\\t\\tnext time in milliseconds\\/row = 0 \\n\\n \\t\\t\\t\\tscan information: \\n\\t\\t\\t\\t\\tBit set of columns fetched= \\n{0}\\n \\t\\t\\t\\t\\tNumber of columns fetched=1 \\n\\t\\t\\t\\t\\tNumber of deleted rows visited=0 \\n\\t\\t\\t\\t\\tNumber of pages visited=3 \\n\\t\\t\\t\\t\\tNumber of rows qualified=1 \\n\\t\\t\\t\\t\\tNumber of rows visited=1 \\n\\t\\t\\t\\t\\tScan type=btree \\n\\t\\t\\t\\t\\tTree height=3 \\n\\t\\t\\t\\t\\tstart position: \\n\\t\\t\\t\\t\\t\\t&gt;= on first 1 column(s). \\n\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns:  \\n\\t\\t\\t\\t\\t\\t0  \\n\\t\\t\\t\\t\\tstop position: \\n\\t\\t\\t\\t\\t\\t&gt; on first 1 column(s). \\n\\t\\t\\t\\t\\t\\tOrdered null semantics on the following columns:  \\n\\t\\t\\t\\t\\t\\t0  \\n\\t\\t\\t\\t\\tqualifiers: \\n\\t\\t\\t\\t\\t\\tNone \\n\\t\\t\\t\\t\\toptimizer estimated row count: 1.00 \\n\\t\\t\\t\\t\\toptimizer estimated cost: 4.71 \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758192\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758192&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758192\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758192_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758192_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 19:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T19:01:41+0000\'\u003e04\\/Sep\\/13 19:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWanted to point out that with my repro db, out of the 8 million rows, the first row that picks table scan in following query is 5189284.\u003cbr\\/\u003e\\nSELECT count FROM\u003cbr\\/\u003e\\nTable1 T1,\u003cbr\\/\u003e\\nTable2 t0\u003cbr\\/\u003e\\nWHERE t1.ID = t0.Table1_ID and\u003cbr\\/\u003e\\nt0.Table3_ID = 5189284\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758192_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758192_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 19:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T19:01:41+0000\'\u003e04\\/Sep\\/13 19:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Wanted to point out that with my repro db, out of the 8 million rows, the first row that picks table scan in following query is 5189284. \\nSELECT count FROM \\nTable1 T1, \\nTable2 t0 \\nWHERE t1.ID = t0.Table1_ID and \\nt0.Table3_ID = 5189284              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758208\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758208&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758208\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13758208_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758208_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 19:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T19:10:29+0000\'\u003e04\\/Sep\\/13 19:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003edo you have any idea how many of the values in your repro db caused issue to reproduce?  \u003c\\/p\u003e\\n\\n\u003cp\u003eDo you see any patttern to the estimated row count?  Maybe just grepping for the key line and where\u003cbr\\/\u003e\\nestimate row count is 0.* would be interesting.  Obviously visually seeing a pattern in 5 million\u003cbr\\/\u003e\\nrows is hard.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13758208_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758208_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 19:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T19:10:29+0000\'\u003e04\\/Sep\\/13 19:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    do you have any idea how many of the values in your repro db caused issue to reproduce?   \\n\\n Do you see any patttern to the estimated row count?  Maybe just grepping for the key line and where \\nestimate row count is 0.* would be interesting.  Obviously visually seeing a pattern in 5 million \\nrows is hard.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13758369\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13758369&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13758369\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758369_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758369_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 21:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T21:25:06+0000\'\u003e04\\/Sep\\/13 21:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI believe there are atleast 212082 rows which cause us to table scan rather than index scan.\u003c\\/p\u003e\\n\\n\u003cp\u003eJust some additional info on the output of the stand alone repro\u003cbr\\/\u003e\\nThe output from my repro stand alone case is extremely large(3.17GB) so I did a grep on it for the problem case identification string \\\"We are going to round estimated row count to 0\\\". I redirected the grep output a file and that file is also pretty big(29.1MB). For a typical wrong query plan case, we print something like following\u003cbr\\/\u003e\\nt0.Table3_ID =6035610\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.47683716\u003cbr\\/\u003e\\nWe are going to round estimated row count to 0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 8000005.0\u003cbr\\/\u003e\\nIn engine estimated row count is 0.47683716\u003cbr\\/\u003e\\nWe are going to round estimated row count to 0\u003cbr\\/\u003e\\nIn engine estimated row count is 1000005.0\u003c\\/p\u003e\\n\\n\u003cp\u003eie \\\"We are going to round estimated row count to 0\\\" gets printed twice for every SELECT which results in table scan rather than index scan.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13758369_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13758369_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'04\\/Sep\\/13 21:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-04T21:25:06+0000\'\u003e04\\/Sep\\/13 21:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I believe there are atleast 212082 rows which cause us to table scan rather than index scan. \\n\\n Just some additional info on the output of the stand alone repro \\nThe output from my repro stand alone case is extremely large(3.17GB) so I did a grep on it for the problem case identification string \\\"We are going to round estimated row count to 0\\\". I redirected the grep output a file and that file is also pretty big(29.1MB). For a typical wrong query plan case, we print something like following \\nt0.Table3_ID =6035610 \\nIn engine estimated row count is 1000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.47683716 \\nWe are going to round estimated row count to 0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 8000005.0 \\nIn engine estimated row count is 0.47683716 \\nWe are going to round estimated row count to 0 \\nIn engine estimated row count is 1000005.0 \\n\\n ie \\\"We are going to round estimated row count to 0\\\" gets printed twice for every SELECT which results in table scan rather than index scan. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13759809\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13759809&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13759809\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13759809_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13759809_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 03:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T03:07:22+0000\'\u003e06\\/Sep\\/13 03:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttaching patch DERBY_6317_junit_test_v2_diff.txt which has junit reproducible test for this jira. There are handful of fixtures. The longest running fixture is testDERBY_6317 since it does select on each of the 8 million rows individually and checks if we are using index scan for getting the row. Without Mike\'s patch, this test fixture can take about 6hrs. This test fixture will fail along with couple other test fixtures(testDERBY_6317_value1, testDERBY_6317_value2, testDERBY_6317_value3) without Mike\'s changes because they will detect that we are using table scan. Once Mike\'s patch is applied, all of the test fixtures should pass. I am running the junit test right now with Mike\'s changes and the test has not finished yet after 9 hours of run. I will post a comment once this test run is over. Because of the length of the time the testDERBY_6317 fixture takes, we obviously won\'t want this to be running as part of junit complete suite. Even without this test fixture, the test can take over an hr because it has to load 3 tables with 1million, 8million and 8million rows respectively and these tables have indexes defined on them. The indexes need to be defined before the data load in order to reproduce the problem.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13759809_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13759809_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 03:07\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T03:07:22+0000\'\u003e06\\/Sep\\/13 03:07\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attaching patch DERBY_6317_junit_test_v2_diff.txt which has junit reproducible test for this jira. There are handful of fixtures. The longest running fixture is testDERBY_6317 since it does select on each of the 8 million rows individually and checks if we are using index scan for getting the row. Without Mike\'s patch, this test fixture can take about 6hrs. This test fixture will fail along with couple other test fixtures(testDERBY_6317_value1, testDERBY_6317_value2, testDERBY_6317_value3) without Mike\'s changes because they will detect that we are using table scan. Once Mike\'s patch is applied, all of the test fixtures should pass. I am running the junit test right now with Mike\'s changes and the test has not finished yet after 9 hours of run. I will post a comment once this test run is over. Because of the length of the time the testDERBY_6317 fixture takes, we obviously won\'t want this to be running as part of junit complete suite. Even without this test fixture, the test can take over an hr because it has to load 3 tables with 1million, 8million and 8million rows respectively and these tables have indexes defined on them. The indexes need to be defined before the data load in order to reproduce the problem.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13759848\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13759848&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13759848\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13759848_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13759848_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 04:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T04:20:25+0000\'\u003e06\\/Sep\\/13 04:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe new junit test from the earlier patch finished successfully with Mike\'s patch. It took close to 10hrs to finish.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13759848_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13759848_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 04:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T04:20:25+0000\'\u003e06\\/Sep\\/13 04:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The new junit test from the earlier patch finished successfully with Mike\'s patch. It took close to 10hrs to finish.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13759849\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13759849&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13759849\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13759849_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13759849_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 04:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T04:25:10+0000\'\u003e06\\/Sep\\/13 04:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIt should be noted that it makes sense that test took longer with the fix.  Without the fix the loop trying to run 8 million selects will fail\u003cbr\\/\u003e\\nand stop when it hits the first problem, at around row 5 million.  With the fix it has to run 3 million more selects.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13759849_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13759849_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 04:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T04:25:10+0000\'\u003e06\\/Sep\\/13 04:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    It should be noted that it makes sense that test took longer with the fix.  Without the fix the loop trying to run 8 million selects will fail \\nand stop when it hits the first problem, at around row 5 million.  With the fix it has to run 3 million more selects.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13760324\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13760324&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13760324\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13760324_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13760324_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 16:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T16:24:25+0000\'\u003e06\\/Sep\\/13 16:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eUploading a new patch for the junit test. I accidentally uploaded older version of the junit test with the previous patch.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13760324_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13760324_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 16:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T16:24:25+0000\'\u003e06\\/Sep\\/13 16:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Uploading a new patch for the junit test. I accidentally uploaded older version of the junit test with the previous patch.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13760375\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13760375&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13760375\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13760375_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13760375_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 17:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T17:19:06+0000\'\u003e06\\/Sep\\/13 17:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttaching another patch DERBY_6317_junit_test_v4_diff.txt which now has 3 test fixtures testing for values in SELECT which will cause Derby to use table scan without \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e fix. It also has 3 test fixtures testing for values in SELECT which will cause Derby to use index scan even without \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e fix. And lastly, it has the very time consuming test fixture(testDERBY_6317) which does SELECT individually for each of the 8 million rows. This test fixture passes for all 8 million rows with \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e fix but it stops at row 5189284 without \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e fix because that\'s the first row that does a table scan rather than an index scan.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13760375_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13760375_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Sep\\/13 17:19\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-06T17:19:06+0000\'\u003e06\\/Sep\\/13 17:19\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attaching another patch DERBY_6317_junit_test_v4_diff.txt which now has 3 test fixtures testing for values in SELECT which will cause Derby to use table scan without   DERBY-6317   fix. It also has 3 test fixtures testing for values in SELECT which will cause Derby to use index scan even without   DERBY-6317   fix. And lastly, it has the very time consuming test fixture(testDERBY_6317) which does SELECT individually for each of the 8 million rows. This test fixture passes for all 8 million rows with   DERBY-6317   fix but it stops at row 5189284 without   DERBY-6317   fix because that\'s the first row that does a table scan rather than an index scan.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13762432\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13762432&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13762432\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13762432_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13762432_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/Sep\\/13 22:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-09T22:59:52+0000\'\u003e09\\/Sep\\/13 22:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 1521310 from mikem@apache.org in branch \'code\\/trunk\'\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/svn.apache.org\\/r1521310\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/svn.apache.org\\/r1521310\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0 \u003c\\/p\u003e\\n\\n\u003cp\u003eThe Optimizer estimates do not handle well 0 row counts coming out of store.\u003cbr\\/\u003e\\nThese estimates end up getting multiplied by other estimates and the resulting\u003cbr\\/\u003e\\n0 costs caused the incorrect plan to be picked in the repro included with\u003cbr\\/\u003e\\nthis fix.  This fix changes store cost to always return at least a minimum\u003cbr\\/\u003e\\nof one row when asked to estimate the number of rows in an exact range of\u003cbr\\/\u003e\\nkeys from an index.  This minimum is consistent with the optimizer assumption\u003cbr\\/\u003e\\nthat an exact key match on a unique index will also return 1 row.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks to Brett Bergquist for debugging and suggesting a fix and to mamta \u003cbr\\/\u003e\\nsatoor for providing a reproducible test case for the bug.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13762432_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13762432_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'09\\/Sep\\/13 22:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-09T22:59:52+0000\'\u003e09\\/Sep\\/13 22:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 1521310 from mikem@apache.org in branch \'code\\/trunk\' \\n[  https:\\/\\/svn.apache.org\\/r1521310  ] \\n\\n   DERBY-6317   Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0  \\n\\n The Optimizer estimates do not handle well 0 row counts coming out of store. \\nThese estimates end up getting multiplied by other estimates and the resulting \\n0 costs caused the incorrect plan to be picked in the repro included with \\nthis fix.  This fix changes store cost to always return at least a minimum \\nof one row when asked to estimate the number of rows in an exact range of \\nkeys from an index.  This minimum is consistent with the optimizer assumption \\nthat an exact key match on a unique index will also return 1 row. \\n\\n Thanks to Brett Bergquist for debugging and suggesting a fix and to mamta  \\nsatoor for providing a reproducible test case for the bug.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13763097\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13763097&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13763097\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13763097_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13763097_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Sep\\/13 15:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-10T15:03:54+0000\'\u003e10\\/Sep\\/13 15:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 1521517 from mikem@apache.org in branch \'code\\/branches\\/10.10\'\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/svn.apache.org\\/r1521517\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/svn.apache.org\\/r1521517\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\u003c\\/p\u003e\\n\\n\u003cp\u003ebackported change #1521310 from trunk to 10.10 branch.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe Optimizer estimates do not handle well 0 row counts coming out of store.\u003cbr\\/\u003e\\nThese estimates end up getting multiplied by other estimates and the resulting\u003cbr\\/\u003e\\n0 costs caused the incorrect plan to be picked in the repro included with\u003cbr\\/\u003e\\nthis fix.  This fix changes store cost to always return at least a minimum\u003cbr\\/\u003e\\nof one row when asked to estimate the number of rows in an exact range of\u003cbr\\/\u003e\\nkeys from an index.  This minimum is consistent with the optimizer assumption\u003cbr\\/\u003e\\nthat an exact key match on a unique index will also return 1 row.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks to Brett Bergquist for debugging and suggesting a fix and to mamta\u003cbr\\/\u003e\\nsatoor for providing a reproducible test case for the bug.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13763097_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13763097_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Sep\\/13 15:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-10T15:03:54+0000\'\u003e10\\/Sep\\/13 15:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 1521517 from mikem@apache.org in branch \'code\\/branches\\/10.10\' \\n[  https:\\/\\/svn.apache.org\\/r1521517  ] \\n\\n   DERBY-6317   Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0 \\n\\n backported change #1521310 from trunk to 10.10 branch. \\n\\n The Optimizer estimates do not handle well 0 row counts coming out of store. \\nThese estimates end up getting multiplied by other estimates and the resulting \\n0 costs caused the incorrect plan to be picked in the repro included with \\nthis fix.  This fix changes store cost to always return at least a minimum \\nof one row when asked to estimate the number of rows in an exact range of \\nkeys from an index.  This minimum is consistent with the optimizer assumption \\nthat an exact key match on a unique index will also return 1 row. \\n\\n Thanks to Brett Bergquist for debugging and suggesting a fix and to mamta \\nsatoor for providing a reproducible test case for the bug.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13764479\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13764479&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13764479\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13764479_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13764479_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/13 16:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-11T16:49:24+0000\'\u003e11\\/Sep\\/13 16:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 1521931 from mikem@apache.org in branch \'code\\/branches\\/10.9\'\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/svn.apache.org\\/r1521931\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/svn.apache.org\\/r1521931\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\u003c\\/p\u003e\\n\\n\u003cp\u003ebackported change #1521310 from trunk to 10.9 branch.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe Optimizer estimates do not handle well 0 row counts coming out of store.\u003cbr\\/\u003e\\nThese estimates end up getting multiplied by other estimates and the resulting\u003cbr\\/\u003e\\n0 costs caused the incorrect plan to be picked in the repro included with\u003cbr\\/\u003e\\nthis fix.  This fix changes store cost to always return at least a minimum\u003cbr\\/\u003e\\nof one row when asked to estimate the number of rows in an exact range of\u003cbr\\/\u003e\\nkeys from an index.  This minimum is consistent with the optimizer assumption\u003cbr\\/\u003e\\nthat an exact key match on a unique index will also return 1 row.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks to Brett Bergquist for debugging and suggesting a fix and to mamta\u003cbr\\/\u003e\\nsatoor for providing a reproducible test case for the bug.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13764479_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13764479_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/13 16:49\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-11T16:49:24+0000\'\u003e11\\/Sep\\/13 16:49\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 1521931 from mikem@apache.org in branch \'code\\/branches\\/10.9\' \\n[  https:\\/\\/svn.apache.org\\/r1521931  ] \\n\\n   DERBY-6317   Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0 \\n\\n backported change #1521310 from trunk to 10.9 branch. \\n\\n The Optimizer estimates do not handle well 0 row counts coming out of store. \\nThese estimates end up getting multiplied by other estimates and the resulting \\n0 costs caused the incorrect plan to be picked in the repro included with \\nthis fix.  This fix changes store cost to always return at least a minimum \\nof one row when asked to estimate the number of rows in an exact range of \\nkeys from an index.  This minimum is consistent with the optimizer assumption \\nthat an exact key match on a unique index will also return 1 row. \\n\\n Thanks to Brett Bergquist for debugging and suggesting a fix and to mamta \\nsatoor for providing a reproducible test case for the bug.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13764898\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13764898&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13764898\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13764898_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13764898_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/13 22:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-11T22:46:47+0000\'\u003e11\\/Sep\\/13 22:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 1522084 from mikem@apache.org in branch \'code\\/branches\\/10.8\'\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/svn.apache.org\\/r1522084\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/svn.apache.org\\/r1522084\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6317\\\" title=\\\"Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6317\\\"\u003e\u003cdel\u003eDERBY-6317\u003c\\/del\u003e\u003c\\/a\u003e Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0\u003c\\/p\u003e\\n\\n\u003cp\u003ebackported change #1521310 from trunk to 10.8 branch.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe Optimizer estimates do not handle well 0 row counts coming out of store.\u003cbr\\/\u003e\\nThese estimates end up getting multiplied by other estimates and the resulting\u003cbr\\/\u003e\\n0 costs caused the incorrect plan to be picked in the repro included with\u003cbr\\/\u003e\\nthis fix.  This fix changes store cost to always return at least a minimum\u003cbr\\/\u003e\\nof one row when asked to estimate the number of rows in an exact range of\u003cbr\\/\u003e\\nkeys from an index.  This minimum is consistent with the optimizer assumption\u003cbr\\/\u003e\\nthat an exact key match on a unique index will also return 1 row.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks to Brett Bergquist for debugging and suggesting a fix and to mamta\u003cbr\\/\u003e\\nsatoor for providing a reproducible test case for the bug.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13764898_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13764898_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Sep\\/13 22:46\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-11T22:46:47+0000\'\u003e11\\/Sep\\/13 22:46\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 1522084 from mikem@apache.org in branch \'code\\/branches\\/10.8\' \\n[  https:\\/\\/svn.apache.org\\/r1522084  ] \\n\\n   DERBY-6317   Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0 \\n\\n backported change #1521310 from trunk to 10.8 branch. \\n\\n The Optimizer estimates do not handle well 0 row counts coming out of store. \\nThese estimates end up getting multiplied by other estimates and the resulting \\n0 costs caused the incorrect plan to be picked in the repro included with \\nthis fix.  This fix changes store cost to always return at least a minimum \\nof one row when asked to estimate the number of rows in an exact range of \\nkeys from an index.  This minimum is consistent with the optimizer assumption \\nthat an exact key match on a unique index will also return 1 row. \\n\\n Thanks to Brett Bergquist for debugging and suggesting a fix and to mamta \\nsatoor for providing a reproducible test case for the bug.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13770951\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=13770951&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13770951\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13770951_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13770951_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Sep\\/13 16:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-18T16:48:04+0000\'\u003e18\\/Sep\\/13 16:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eFixed in trunk, backported to 10.10, 10.9, 10.8.  Fix is applicable to previous releases and can be backported if anyone is interested.  I don\'t plan on backporting it any further right now.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13770951_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13770951_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Sep\\/13 16:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-09-18T16:48:04+0000\'\u003e18\\/Sep\\/13 16:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Fixed in trunk, backported to 10.10, 10.9, 10.8.  Fix is applicable to previous releases and can be backported if anyone is interested.  I don\'t plan on backporting it any further right now.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-14284716\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6317?focusedCommentId=14284716&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14284716\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"myrna\\\" id=\\\"commentauthor_14284716_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=myrna\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"myrna\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Myrna van Lunteren\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_14284716_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Jan\\/15 00:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-01-21T00:22:55+0000\'\u003e21\\/Jan\\/15 00:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ebulk change to close all issues resolved but not closed and not changed since June 1, 2014.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"myrna\\\" id=\\\"commentauthor_14284716_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=myrna\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"myrna\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Myrna van Lunteren\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_14284716_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Jan\\/15 00:22\'\u003e\u003ctime class=\'livestamp\' datetime=\'2015-01-21T00:22:55+0000\'\u003e21\\/Jan\\/15 00:22\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    bulk change to close all issues resolved but not closed and not changed since June 1, 2014.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="10594";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/DERBY\\/summary\\\" title=\\\"Derby\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=10594&amp;avatarId=10122\\\" alt=\\\"Derby\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/DERBY\\/summary\\\" title=\\\"Derby\\\"\u003eDerby\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1520240799523"> 
    <input type="hidden" title="jira.request.server.time" value="456"> 
    <input type="hidden" title="jira.request.id" value="546x94439172x1"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="3"> 
    <input type="hidden" title="db.reads.time.in.ms" value="49"> 
    <input type="hidden" title="db.conns.time.in.ms" value="55"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 546x94439172x1
	          REQUEST TIMESTAMP : [05/Mar/2018:09:06:39 +0000]
	               REQUEST TIME : 0.4560
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 3

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=17, elapsedTotal=49168089, elapsedMin=709171, elapsedMax=12027661, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=21, elapsedTotal=55989390, elapsedMin=749854, elapsedMax=12051319, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>