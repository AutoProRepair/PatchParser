<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=Edge"> 
  <meta name="application-name" content="JIRA" data-name="jira" data-version="7.6.3">
  <meta name="ajs-viewissue-use-history-api" content="false"> 
  <meta name="ajs-jira-base-url" content="https://issues.apache.org/jira"> 
  <meta name="ajs-serverRenderedViewIssue" content="true"> 
  <meta name="ajs-dev-mode" content="false"> 
  <meta name="ajs-context-path" content="/jira"> 
  <meta name="ajs-version-number" content="7.6.3"> 
  <meta name="ajs-build-number" content="76005"> 
  <meta name="ajs-is-beta" content="false"> 
  <meta name="ajs-is-rc" content="false"> 
  <meta name="ajs-is-snapshot" content="false"> 
  <meta name="ajs-is-milestone" content="false"> 
  <meta name="ajs-remote-user" content=""> 
  <meta name="ajs-remote-user-fullname" content=""> 
  <meta name="ajs-user-locale" content="en_UK"> 
  <meta name="ajs-user-locale-group-separator" content=","> 
  <meta name="ajs-app-title" content="ASF JIRA"> 
  <meta name="ajs-keyboard-shortcuts-enabled" content="true"> 
  <meta name="ajs-keyboard-accesskey-modifier" content="Ctrl+Alt"> 
  <meta name="ajs-enabled-dark-features" content="[&quot;com.atlassian.jira.agile.darkfeature.editable.detailsview&quot;,&quot;nps.survey.inline.dialog&quot;,&quot;com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled&quot;,&quot;jira.plugin.devstatus.phasetwo&quot;,&quot;jira.frother.reporter.field&quot;,&quot;atlassian.rest.xsrf.legacy.enabled&quot;,&quot;jira.issue.status.lozenge&quot;,&quot;com.atlassian.jira.config.BIG_PIPE&quot;,&quot;com.atlassian.jira.projects.issuenavigator&quot;,&quot;com.atlassian.jira.config.PDL&quot;,&quot;jira.plugin.devstatus.phasetwo.enabled&quot;,&quot;atlassian.aui.raphael.disabled&quot;,&quot;app-switcher.new&quot;,&quot;frother.assignee.field&quot;,&quot;com.atlassian.jira.projects.ProjectCentricNavigation.Switch&quot;,&quot;sd.internal.base.off.thread.on.completion.events.enabled&quot;,&quot;jira.onboarding.cyoa&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.enabled&quot;,&quot;sd.slavalue.record.updated.date.enabled&quot;,&quot;com.atlassian.jira.config.ProjectConfig.MENU&quot;,&quot;com.atlassian.jira.projects.sidebar.DEFER_RESOURCES&quot;,&quot;com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled&quot;,&quot;com.atlassian.jira.agile.darkfeature.sprint.goal.enabled&quot;,&quot;jira.zdu.admin-updates-ui&quot;,&quot;jira.zdu.jmx-monitoring&quot;,&quot;sd.sla.improved.rendering.enabled&quot;,&quot;sd.canned.responses.enabled&quot;,&quot;sd.new.settings.sidebar.location.disabled&quot;,&quot;jira.zdu.cluster-upgrade-state&quot;,&quot;com.atlassian.jira.agile.darkfeature.splitissue&quot;,&quot;com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED&quot;,&quot;com.atlassian.feedback.feedback-button-move-to-header-enable&quot;,&quot;jira.export.csv.enabled&quot;]"> 
  <meta name="ajs-in-admin-mode" content="false"> 
  <meta name="ajs-is-sysadmin" content="false"> 
  <meta name="ajs-is-admin" content="false"> 
  <meta name="ajs-outgoing-mail-enabled" content="true"> 
  <meta name="ajs-date-relativize" content="true"> 
  <meta name="ajs-date-time" content="HH:mm"> 
  <meta name="ajs-date-day" content="EEEE HH:mm"> 
  <meta name="ajs-date-dmy" content="dd/MMM/yy"> 
  <meta name="ajs-date-complete" content="dd/MMM/yy HH:mm"> 
  <script type="text/javascript">var AJS=AJS||{};AJS.debug=true;</script> 
  <meta id="atlassian-token" name="atlassian-token" content="A5KQ-2QAV-T4JA-FDED|abd1a31f9235799a093953415ad23614d28cdd29|lout"> 
  <link rel="shortcut icon" href="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/favicon.ico"> 
  <!--[if IE]><![endif]--> 
  <script type="text/javascript">
    (function() {
        var contextPath = '/jira';
        var eventBuffer = [];

        function printDeprecatedMsg() {
            if (console && console.warn) {
                console.warn('DEPRECATED JS - contextPath global variable has been deprecated since 7.4.0. Use `wrm/context-path` module instead.');
            }
        }

        function sendEvent(analytics, postfix) {
            analytics.send({
                name: 'js.globals.contextPath.' + postfix
            });
        }

        function sendDeprecatedEvent(postfix) {
            try {
                var analytics = require('jira/analytics');
                if (eventBuffer.length) {
                    eventBuffer.forEach(function(value) {
                        sendEvent(analytics, value);
                    });
                    eventBuffer = [];
                }

                if (postfix) {
                    sendEvent(analytics, postfix);
                }
            } catch(ex) {
                eventBuffer.push(postfix);
                setTimeout(sendDeprecatedEvent, 1000);
            }
        }

        Object.defineProperty(window, 'contextPath', {
            get: function() {
                printDeprecatedMsg();
                sendDeprecatedEvent('get');
                return contextPath;
            },
            set: function(value) {
                printDeprecatedMsg();
                sendDeprecatedEvent('set');
                contextPath = value;
            }
        });
    })();

</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\"/jira\"";
WRM._unparsedData["jira.webresources:feature-flags.feature-flag-data"]="{\"enabled-feature-keys\":[\"com.atlassian.jira.agile.darkfeature.editable.detailsview\",\"nps.survey.inline.dialog\",\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint.enabled\",\"jira.plugin.devstatus.phasetwo\",\"jira.frother.reporter.field\",\"atlassian.rest.xsrf.legacy.enabled\",\"jira.issue.status.lozenge\",\"com.atlassian.jira.config.BIG_PIPE\",\"com.atlassian.jira.projects.issuenavigator\",\"com.atlassian.jira.config.PDL\",\"jira.plugin.devstatus.phasetwo.enabled\",\"atlassian.aui.raphael.disabled\",\"app-switcher.new\",\"frother.assignee.field\",\"com.atlassian.jira.projects.ProjectCentricNavigation.Switch\",\"sd.internal.base.off.thread.on.completion.events.enabled\",\"jira.onboarding.cyoa\",\"com.atlassian.jira.agile.darkfeature.kanplan.enabled\",\"sd.slavalue.record.updated.date.enabled\",\"com.atlassian.jira.config.ProjectConfig.MENU\",\"com.atlassian.jira.projects.sidebar.DEFER_RESOURCES\",\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions.enabled\",\"com.atlassian.jira.agile.darkfeature.sprint.goal.enabled\",\"jira.zdu.admin-updates-ui\",\"jira.zdu.jmx-monitoring\",\"sd.sla.improved.rendering.enabled\",\"sd.canned.responses.enabled\",\"sd.new.settings.sidebar.location.disabled\",\"jira.zdu.cluster-upgrade-state\",\"com.atlassian.jira.agile.darkfeature.splitissue\",\"com.atlassian.jira.config.CoreFeatures.LICENSE_ROLES_ENABLED\",\"com.atlassian.feedback.feedback-button-move-to-header-enable\",\"jira.export.csv.enabled\"],\"feature-flag-states\":{\"com.atlassian.jira.agile.darkfeature.kanplan\":false,\"sd.internal.base.off.thread.on.completion.events\":false,\"jira.instrumentation.laas\":false,\"com.atlassian.jira.agile.darkfeature.edit.closed.sprint\":false,\"com.atlassian.jira.issuetable.draggable\":true,\"jira.create.linked.issue\":true,\"com.atlassian.jira.agile.darkfeature.sprint.goal\":false,\"jira.sal.host.connect.accessor.existing.transaction.will.create.transactions\":true,\"jira.jql.suggestrecentfields\":false,\"com.atlassian.jira.agile.darkfeature.kanplan.epics.and.versions\":false,\"jira.jql.smartautoselectfirst\":false,\"com.atlassian.jira.agile.darkfeature.optimistic.transitions\":true,\"com.atlassian.jira.issuetable.move.links.hidden\":true,\"jira.priorities.per.project\":true,\"com.atlassian.jira.upgrade.startup.fix.index\":true,\"jira.renderer.consider.variable.format\":true}}";
WRM._unparsedData["jira.webresources:default-comment-security-level.DefaultCommentSecurityLevelHelpLink"]="{\"extraClasses\":\"default-comment-level-help\",\"title\":\"Commenting on an Issue\",\"url\":\"https://docs.atlassian.com/jira/jcore-docs-076/Editing+and+collaborating+on+issues#Editingandcollaboratingonissues-restrictacomment\",\"isLocal\":false}";
WRM._unparsedData["jira.webresources:dateFormatProvider.allFormats"]="{\"dateFormats\":{\"meridiem\":[\"AM\",\"PM\"],\"eras\":[\"BC\",\"AD\"],\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"monthsShort\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"weekdaysShort\":[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},\"lookAndFeelFormats\":{\"relativize\":\"true\",\"time\":\"HH:mm\",\"day\":\"EEEE HH:mm\",\"dmy\":\"dd/MMM/yy\",\"complete\":\"dd/MMM/yy HH:mm\"}}";
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:issueviewer.features"]="{\"rteEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.thumbnail-mime-types"]="\"image/vnd.wap.wbmp,image/png,image/x-png,image/jpeg,image/bmp,image/gif\"";
WRM._unparsedData["com.atlassian.jira.plugins.jira-dnd-attachment-plugin:dnd-issue-drop-zone.upload-limit"]="\"62914560\"";
WRM._unparsedData["com.atlassian.plugins.helptips.jira-help-tips:help-tip-manager.JiraHelpTipData"]="{\"anonymous\":true}";
WRM._unparsedData["com.atlassian.jira.jira-view-issue-plugin:controller-subtasks.controller.subtasks.parameters"]="{\"url\":\"/rest/api/2/issue/{issueId}/subtask/move\"}";
WRM._unparsedData["com.atlassian.analytics.analytics-client:policy-update-init.policy-update-data-provider"]="false";
WRM._unparsedData["com.atlassian.analytics.analytics-client:programmatic-analytics-init.programmatic-analytics-data-provider"]="false";
WRM._unparsedData["jira.webresources:avatar-picker.data"]="{}";
WRM._unparsedData["com.atlassian.feedback.jira-feedback-plugin:button-resources-init.data"]="{\"jira.feedback.plugin.issue.collector.core\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.default\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"jira.feedback.plugin.issue.collector.service.desk\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?locale=en-UK&collectorId=a698db21\",\"jira.feedback.plugin.issue.collector.software\":\"https://jira.atlassian.com/s/576e9ab86257d4f65f6ea5b6dd50de44-T/en_UK3ljiw5/71006/b6b48b2829824b869586ac216d119363/2.0.11/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-UK&collectorId=abbf546d\",\"isHeaderFeedbackButtonEnabled\":true}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:dismissedFlags.flags"]="{\"dismissed\":[]}";
WRM._unparsedData["com.atlassian.jira.jira-header-plugin:newsletter-signup-tip-init.newsletterSignup"]="{\"signupDescription\":\"Get updates, inspiration and best practices from the team behind JIRA.\",\"formUrl\":\"https://www.atlassian.com/apis/exact-target/{0}/subscribe?mailingListId=1401671\",\"signupTitle\":\"Sign up!\",\"signupId\":\"newsletter-signup-tip\",\"showNewsletterTip\":false}";
WRM._unparsedData["com.atlassian.jira.project-templates-plugin:project-templates-plugin-resources.ptAnalyticsData"]="{\"instanceCreatedDate\":\"2011-01-31\"}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.help-data"]="{\"showHelp\":true,\"editorDocumentationUrl\":[\"https://docs.atlassian.com/jira/jcore-docs-076/Visual+editing\"],\"editorDocumentationTitle\":[\"Show me documentation for the visual editor\"]}";
WRM._unparsedData["com.atlassian.jira.plugins.jira-wiki-editor:wiki-editor-resources.thumbnails-allowed"]="false";
WRM._unparsedData["jira.webresources:user-message-flags.adminLockout"]="{}";
WRM._unparsedData["jira.request.correlation-id"]="\"77cbee30f10e31\"";
WRM._unparsedData["project-id"]="10594";
WRM._unparsedData["project-key"]="\"DERBY\"";
WRM._unparsedData["project-name"]="\"Derby\"";
WRM._unparsedData["project-type"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:generic-filters"]="[{\"id\":\"allissues\",\"jql\":\"project = \\\"{0}\\\" ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"All issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[]},{\"id\":\"allopenissues\",\"jql\":\"project = \\\"{0}\\\" AND resolution = Unresolved ORDER BY {1}\",\"defaultOrderby\":\"priority DESC, updated DESC\",\"label\":\"Open issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"resolution\"]},{\"id\":\"doneissues\",\"jql\":\"project = \\\"{0}\\\" AND statusCategory = Done ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Done issues\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"status\"]},{\"id\":\"recentlyviewed\",\"jql\":\"project = \\\"{0}\\\" AND issuekey in issueHistory() ORDER BY {1}\",\"defaultOrderby\":\"lastViewed DESC\",\"label\":\"Viewed recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"issuekey\"]},{\"id\":\"addedrecently\",\"jql\":\"project = \\\"{0}\\\" AND created \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"created DESC\",\"label\":\"Created recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"created\"]},{\"id\":\"resolvedrecently\",\"jql\":\"project = \\\"{0}\\\" AND resolutiondate \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Resolved recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":false,\"fields\":[\"resolutiondate\"]},{\"id\":\"updatedrecently\",\"jql\":\"project = \\\"{0}\\\" AND updated \u003e= -1w ORDER BY {1}\",\"defaultOrderby\":\"updated DESC\",\"label\":\"Updated recently\",\"requiresUser\":false,\"supportsInlineIssueCreate\":true,\"fields\":[\"updated\"]}]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:default-filter-priority"]="[\"allopenissues\",\"allissues\"]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-manage-filters"]="false";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:project-filters"]="[]";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:can-create-issues"]="false";
WRM._unparsedData["projectId"]="10594";
WRM._unparsedData["projectKey"]="\"DERBY\"";
WRM._unparsedData["projectType"]="\"software\"";
WRM._unparsedData["com.atlassian.jira.jira-projects-issue-navigator:server-rendered"]="true";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/a8a4711bc3f2eb261d8c8fd9fbcbba8b-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/74ac580603ca910fff0cfdf319e54add-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/css/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.css?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" media="all"> 
  <link type="text/css" rel="stylesheet" href="/jira/s/611672383f6cab00ab202241ba6f9d68-T/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources-init/com.atlassian.feedback.jira-feedback-plugin:button-resources-init.css" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources-init" data-wrm-batch-type="resource" media="all"> 
  <script type="text/javascript" src="/jira/s/98ceb006e504d7924d5ffc411626c6bc-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1fca1750044f2777c977e8d8cc023344/_/download/contextbatch/js/_super/batch.js?locale=en-UK" data-wrm-key="_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/c1e4d26ea276469807c3dc0918df482c-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/fbf45109b31165e5b7740a9d72318cea/_/download/contextbatch/js/project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super/batch.js?agile_global_admin_condition=true&amp;hc-enabled=true&amp;is-server-instance=true&amp;jag=true&amp;jira.create.linked.issue=true&amp;locale=en-UK&amp;nps-acknowledged=true&amp;richediton=true" data-wrm-key="project.issue.navigator,jira.view.issue,jira.global,atl.general,jira.general,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/6bf9253c8d533109c3b02e26794be24e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/871d45c9f322a22cb3aa9b7948a69803/_/download/contextbatch/js/atl.global,-_super/batch.js?locale=en-UK" data-wrm-key="atl.global,-_super" data-wrm-batch-type="context" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-en/jira.webresources:calendar-en.js" data-wrm-key="jira.webresources:calendar-en" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:calendar-localisation-moment/jira.webresources:calendar-localisation-moment.js" data-wrm-key="jira.webresources:calendar-localisation-moment" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/7.6.3/_/download/batch/com.atlassian.feedback.jira-feedback-plugin:button-resources/com.atlassian.feedback.jira-feedback-plugin:button-resources.js" data-wrm-key="com.atlassian.feedback.jira-feedback-plugin:button-resources" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/ccd2e67b523185973473e8bd5735c8f9-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/e0de73613a1027de08f3da6a45e1d1a2/_/download/contextbatch/css/jira.global.look-and-feel,-_super/batch.css" data-wrm-key="jira.global.look-and-feel,-_super" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/rest/api/1.0/shortcuts/76005/33e5e0166867c8c9228d44506f60b2e8/shortcuts.js?context=issuenavigation&amp;context=issueaction"></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.jira.jira-issue-nav-components:inline-edit-enabled"]="true";
WRM._unparsedData["should-display-chaperone"]="false";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <link type="text/css" rel="stylesheet" href="/jira/s/15712b600e9aecf72ffd9fd3704a0c78-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/css/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.css?jira.create.linked.issue=true&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" media="all"> 
  <script type="text/javascript" src="/jira/s/6579b6b8ba67abaa496e39b9242a18a4-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/6b22a15c7b83f87a47b1757076f43542/_/download/contextbatch/js/com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue/batch.js?jira.create.linked.issue=true&amp;locale=en-UK&amp;richediton=true" data-wrm-key="com.atlassian.jira.projects.sidebar.init,-_super,-project.issue.navigator,-jira.view.issue" data-wrm-batch-type="context" data-initially-rendered></script> 
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="ajs-can-search-users" content="false"> 
  <meta name="ajs-can-edit-watchers" content="false"> 
  <meta name="ajs-default-avatar-url" content="https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10453"> 
  <meta name="ajs-issue-project-type" content="software"> 
  <meta name="ajs-issue-key" content="DERBY-6011"> 
  <meta name="ajs-server-view-issue-is-editable" content="false"> 
  <title>[DERBY-6011] Derby performs very badly (seems to deadlock and timeout) in very simple multi-threaded tests - ASF JIRA</title> 
  <link rel="search" type="application/opensearchdescription+xml" href="/jira/osd.jsp" title="[DERBY-6011] Derby performs very badly (seems to deadlock and timeout) in very simple multi-threaded tests - ASF JIRA"> 
 </head> 
 <body id="jira" class="aui-layout aui-theme-default " data-version="7.6.3"> 
  <div id="page"> 
   <header id="header" role="banner"> 
    <script>
require(["jquery", "jira/license-banner"], function ($, licenseBanner) {
    $(function () {
        licenseBanner.showLicenseBanner("");
        licenseBanner.showLicenseFlag("");
    });
});
</script> 
    <nav class="aui-header aui-dropdown2-trigger-group" role="navigation">
     <div class="aui-header-inner">
      <div class="aui-header-before">
       <a class=" aui-dropdown2-trigger app-switcher-trigger" aria-controls="app-switcher" aria-haspopup="true" role="button" tabindex="0" data-aui-trigger href="#app-switcher"><span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Linked Applications</span></a>
       <div id="app-switcher" class="aui-dropdown2 aui-style-default" role="menu" aria-hidden="true" data-is-switcher="true" data-environment="{&quot;isUserAdmin&quot;:false,&quot;isAppSuggestionAvailable&quot;:false,&quot;isSiteAdminUser&quot;:false}">
        <div role="application">
         <div class="app-switcher-loading">
          Loading…
         </div>
        </div>
       </div>
      </div>
      <div class="aui-header-primary">
       <h1 id="logo" class="aui-header-logo aui-header-logo-custom"><a href="https://issues.apache.org/jira/secure/MyJiraHome.jspa"><img src="/jira/s/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/_/jira-logo-scaled.png" alt="ASF JIRA"></a></h1>
       <ul class="aui-nav">
        <li><a href="/jira/secure/Dashboard.jspa" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="home_link" aria-haspopup="true" aria-controls="home_link-content" title="View and manage your dashboards" accesskey="d">Dashboards</a>
         <div class="aui-dropdown2 aui-style-default" id="home_link-content" data-aui-dropdown2-ajax-key="home_link"></div></li>
        <li><a href="/jira/browse/DERBY" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="browse_link" aria-haspopup="true" aria-controls="browse_link-content" title="View recent projects and browse a list of projects" accesskey="p">Projects</a>
         <div class="aui-dropdown2 aui-style-default" id="browse_link-content" data-aui-dropdown2-ajax-key="browse_link"></div></li>
        <li><a href="/jira/issues/" class=" aui-nav-link aui-dropdown2-trigger aui-dropdown2-ajax" id="find_link" aria-haspopup="true" aria-controls="find_link-content" title="Search for issues and view recent issues" accesskey="i">Issues</a>
         <div class="aui-dropdown2 aui-style-default" id="find_link-content" data-aui-dropdown2-ajax-key="find_link"></div></li> 
       </ul>
      </div>
      <div class="aui-header-secondary">
       <ul class="aui-nav">
        <li id="quicksearch-menu"> 
         <form action="/jira/secure/QuickSearch.jspa" method="get" id="quicksearch" class="aui-quicksearch dont-default-focus ajs-dirty-warning-exempt"> 
          <input id="quickSearchInput" class="search" type="text" title="Search" placeholder="Search" name="searchString" accessKey="q"> 
          <input type="submit" class="hidden" value="Search"> 
         </form> </li> 
        <li><a class="jira-feedback-plugin" role="button" aria-haspopup="true" id="jira-header-feedback-link" href="#"><span class="aui-icon aui-icon-small jira-feedback-plugin-icon">Give feedback to Atlassian</span></a></li> 
        <li id="system-help-menu"> <a class="aui-nav-link aui-dropdown2-trigger" id="help_menu" aria-haspopup="true" aria-owns="system-help-menu-content" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="$textUtils.htmlEncode($rootHelpMenuItem.params.target)" title="Help"><span class="aui-icon aui-icon-small aui-iconfont-help">Help</span></a> 
         <div id="system-help-menu-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
           <ul id="jira-help" class="aui-list-truncate"> 
            <li> <a id="view_core_help" class="aui-nav-link " title="Go to the online documentation for JIRA Core" href="https://docs.atlassian.com/jira/jcore-docs-076/" target="_blank">JIRA Core help</a> </li> 
            <li> <a id="keyshortscuthelp" class="aui-nav-link " title="Get more information about JIRA's Keyboard Shortcuts" href="/jira/secure/ViewKeyboardShortcuts!default.jspa" target="_blank">Keyboard Shortcuts</a> </li> 
            <li> <a id="view_about" class="aui-nav-link " title="Get more information about JIRA" href="/jira/secure/AboutPage.jspa">About JIRA</a> </li> 
            <li> <a id="view_credits" class="aui-nav-link " title="See who did what" href="/jira/secure/JiraCreditsPage!default.jspa" target="_blank">JIRA Credits</a> </li> 
           </ul> 
          </div> 
         </div> </li> 
        <li id="user-options"> <a class="aui-nav-link login-link" href="/jira/login.jsp?os_destination=%2Fbrowse%2FDERBY-6011">Log In</a> 
         <div id="user-options-content" class="aui-dropdown2 aui-style-default"> 
          <div class="aui-dropdown2-section"> 
          </div> 
         </div> </li> 
       </ul>
      </div>
     </div>
     <!-- .aui-header-inner-->
    </nav>
    <!-- .aui-header --> 
   </header> 
   <section id="content" role="main"> 
    <big-pipe data-id="sidebar-id" unresolved></big-pipe>
    <div class="aui-sidebar  sidebar-placeholder">
     <div class="aui-sidebar-wrapper">
      <div class="aui-sidebar-body"></div>
      <div class="aui-sidebar-footer">
       <a class="aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy" data-tooltip="Expand sidebar ( [ )" href="#"><span class="aui-icon aui-icon-small"></span></a>
      </div>
     </div>
    </div>
    <script id="projects-sidebar-init">
    require(['jira/projects/sidebar/expansion-manager'], function(expansionManager) {
        var scriptTag = document.getElementById('projects-sidebar-init');
        var sidebar = AJS.sidebar('.aui-sidebar');
        expansionManager(sidebar);
        scriptTag.parentElement.removeChild(scriptTag);
    });
    </script>
    <div class="aui-page-panel">
     <div class="aui-page-panel-inner">
      <div class="issue-navigator">
       <div class="content">
        <div class="issue-view">
         <div class="navigation-tools">
          <div class="pager-container"></div>
         </div>
         <div class="issue-container">
          <div id="issue-content" class="issue-edit-form">
           <header id="stalker" class="issue-header js-stalker">
            <div class="issue-header-content">
             <header class="aui-page-header">
              <div class="aui-page-header-inner">
               <div class="aui-page-header-image">
                <span id="10594" class="aui-avatar aui-avatar-large aui-avatar-project"><span class="aui-avatar-inner"><img id="project-avatar" alt="Uploaded image for project: 'Derby'" src="https://issues.apache.org/jira/secure/projectavatar?pid=10594&amp;avatarId=10122"></span></span>
               </div>
               <!-- .aui-page-header-image -->
               <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                 <li><a id="project-name-val" href="/jira/browse/DERBY">Derby</a></li>
                 <li><a class="issue-link" data-issue-key="DERBY-6011" href="/jira/browse/DERBY-6011" id="key-val" rel="12623008">DERBY-6011</a></li>
                </ol>
                <h1 id="summary-val">Derby performs very badly (seems to deadlock and timeout) in very simple multi-threaded tests</h1>
               </div>
               <!-- .aui-page-header-main -->
               <div class="aui-page-header-actions">
                <div id="issue-header-pager"></div>
               </div>
               <!-- .aui-page-header-actions -->
              </div>
              <!-- .aui-page-header-inner -->
             </header>
             <!-- .aui-page-header -->
             <div class="command-bar">
              <div class="ops-cont">
               <div class="ops-menus aui-toolbar">
                <div class="toolbar-split toolbar-split-left">
                 <ul id="opsbar-ops-login-lnk_container" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item"><a id="ops-login-lnk" title="Log In" class="toolbar-trigger" href="/jira/login.jsp?os_destination=%2Fbrowse%2FDERBY-6011"><span class="trigger-label">Log In</span></a></li>
                 </ul>
                 <ul id="opsbar-opsbar-operations" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-transitions" class="toolbar-group pluggable-ops"></ul>
                 <ul id="opsbar-opsbar-admin" class="toolbar-group pluggable-ops"></ul>
                </div>
                <div class="toolbar-split toolbar-split-right">
                 <ul id="opsbar-jira.issue.tools" class="toolbar-group pluggable-ops">
                  <li class="toolbar-item">
                   <div>
                    <a href="#" id="viewissue-export" aria-owns="viewissue-export_drop" aria-haspopup="true" title="Export this issue in another format" class="toolbar-trigger aui-button aui-style-default aui-dropdown2-trigger"><span class="icon icon-default aui-icon aui-icon-small aui-iconfont-export"></span> <span class="dropdown-text">Export</span></a>
                    <div id="viewissue-export_drop" class="aui-style-default aui-dropdown2">
                     <ul>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-xml/DERBY-6011/DERBY-6011.xml" id="jira.issueviews:issue-xml"><span class="trigger-label">XML</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-word/DERBY-6011/DERBY-6011.doc" id="jira.issueviews:issue-word"><span class="trigger-label">Word</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/jira.issueviews:issue-html/DERBY-6011/DERBY-6011.html" id="jira.issueviews:issue-html"><span class="trigger-label">Printable</span></a></li>
                      <li class="aui-list-item"><a href="/jira/si/com.atlassian.jira.plugins.jira-importers-plugin:issue-json/DERBY-6011/DERBY-6011.json" id="com.atlassian.jira.plugins.jira-importers-plugin:issue-json"><span class="trigger-label">JSON</span></a></li>
                     </ul>
                    </div>
                   </div></li>
                 </ul>
                </div>
               </div>
              </div>
             </div>
            </div>
           </header>
           <div class="issue-body-content">
            <div class="aui-group issue-body">
             <div class="aui-item issue-main-column">
              <div id="details-module" class="module toggle-wrap">
               <div id="details-module_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Details</h2>
               </div>
               <div class="mod-content"> 
                <ul id="issuedetails" class="property-list two-cols"> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Type:</strong> 
                   <span id="type-val" class="value"> <img alt="" height="16" src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" title="Bug - A problem which impairs or prevents the functions of the product." width="16"> Bug </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Status:</strong> 
                   <span id="status-val" class="value"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done jira-issue-status-lozenge-max-width-medium" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </span> 
                  </div> </li> 
                 <li class="item new"> 
                  <div class="wrap"> 
                   <strong class="name">Priority:</strong> 
                   <span id="priority-val" class="value"> <img alt="" height="16" src="/jira/images/icons/priorities/major.svg" title="Major - Major loss of function." width="16"> Major </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Resolution:</strong> 
                   <span id="resolution-val" class="value resolved"> Fixed </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Affects Version/s:</strong> 
                   <span id="versions-val" class="value"> <span class="shorten" id="versions-field"> <span title="10.7.1.1 First release on the 10.7 branch.">10.7.1.1</span>, <span title="10.8.2.2 second release on the 10.8 branch">10.8.2.2</span>, <span title="10.9.1.0 First release on the 10.9 branch">10.9.1.0</span> </span> </span> 
                  </div> </li> 
                 <li class="item item-right"> 
                  <div class="wrap"> 
                   <strong class="name">Fix Version/s:</strong> 
                   <span id="fixfor-val" class="value"> <span class="shorten" id="fixVersions-field"> <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.8.3.3" title="10.8.3.3 Head of 10.8 branch starting 2014-01-13">10.8.3.3</a>, <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.9.2.2" title="10.9.2.2 Head of 10.9 branch after releasing 10.9.1.0">10.9.2.2</a>, <a href="/jira/issues/?jql=project+%3D+DERBY+AND+fixVersion+%3D+10.10.1.1" title="10.10.1.1 First release on the 10.10 branch">10.10.1.1</a> </span> </span> 
                  </div> </li> 
                 <li class="item"> 
                  <div class="wrap"> 
                   <strong class="name">Component/s:</strong> 
                   <span id="components-val" class="value"> <span class="shorten" id="components-field"> <a href="/jira/issues/?jql=project+%3D+DERBY+AND+component+%3D+SQL" title="SQL ">SQL</a> </span> </span> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap" id="wrap-labels"> 
                   <strong class="name">Labels:</strong> 
                   <div class="labels-wrap value"> 
                    <span class="labels" id="labels-12623008-value">None</span> 
                   </div> 
                  </div> </li> 
                 <li class="item full-width"> 
                  <div class="wrap"> 
                   <strong class="name">Environment:</strong> 
                   <div id="environment-val" class="value">
                     Lenovo laptop with SSD's, Windows 7, 64-bit, Sun JDK 1.6.xx 
                   </div> 
                  </div> </li> 
                </ul> 
               </div>
              </div>
              <div id="descriptionmodule" class="module toggle-wrap">
               <div id="descriptionmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Description</h2>
               </div>
               <div class="mod-content">
                <div id="description-val" class="field-ignore-highlight"> 
                 <div class="user-content-block"> 
                  <p>The Apache ManifoldCF project supports Derby as one of its underlying databases. Simple tests, however, demonstrate that Derby is apparently deadlocking and timing out repeatedly under multi-thread conditions. This problem is long-standing, and is not exhibited by any other database ManifoldCF supports, and makes a simple test take between 6x and 12x as long.</p> 
                  <p>There is a trivial test with demonstrates the problem vs. other databases. Please do the following (once you have java 1.6+, svn 1.7+, and ant 1.7+ available):</p> 
                  <p>(1) Check out <a href="https://svn.apache.org/repos/asf/manifoldcf/trunk" class="external-link" rel="nofollow">https://svn.apache.org/repos/asf/manifoldcf/trunk</a><br> (2) Run the following ant target to download the dependencies: "ant make-core-deps"<br> (3) Run the Derby test: "ant run-rss-tests-derby" . Note the time required - at least 180 seconds, can be up to 360 seconds.<br> (4) Run the equivalent HSQLDB test: "ant run-rss-tests-HSQLDB". This test takes about 31 seconds to run.</p> 
                  <p>The output of the Derby test can be found in the directory "tests/rss/test-derby-output". Have a look at manifoldcf.log, where all long-running queries are reported. Derby.log is also included, which shows only that during the test's cleanup phase the database is deleted before it is shutdown, which is not pertinent to the performance issue.</p> 
                  <p>I am available to assist with ManifoldCF, if that seems to be required.</p> 
                 </div> 
                </div> 
               </div>
              </div>
              <div id="dnd-metadata" class="module toggle-wrap">
               <div id="dnd-metadata_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <div id="dnd-metadata-webpanel" data-can-attach="false" data-project-type="software" data-upload-limit="62914560" data-thumbnails-allowed="false"></div>
               </div>
              </div>
              <div id="attachmentmodule" class="module toggle-wrap">
               <div id="attachmentmodule_heading" class="mod-header">
                <ul class="ops">
                 <li class="drop">
                  <div class="aui-dd-parent">
                   <a href="#" class="icon drop-menu js-default-dropdown" title="Options"><span>Options</span></a>
                   <div class="aui-dropdown-content aui-list">
                    <ul id="attachment-sorting-options" class="aui-list-section aui-first">
                     <li class="aui-list-item"><a id="attachment-sort-key-name" href="/jira/browse/DERBY-6011?attachmentSortBy=fileName#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="viewissue.subtasks.tab.show.all.name"><span>Sort By Name</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-key-date" href="/jira/browse/DERBY-6011?attachmentSortBy=dateTime#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Sort By Date"><span>Sort By Date</span></a></li>
                    </ul>
                    <ul id="attachment-sorting-order-options" class="aui-list-section aui-last">
                     <li class="aui-list-item"><a id="attachment-sort-direction-asc" href="/jira/browse/DERBY-6011?attachmentOrder=asc#attachmentmodule" class="aui-list-checked aui-checked aui-list-item-link" title="Ascending"><span>Ascending</span></a></li>
                     <li class="aui-list-item"><a id="attachment-sort-direction-desc" href="/jira/browse/DERBY-6011?attachmentOrder=desc#attachmentmodule" class="aui-list-checked aui-list-item-link" title="Descending"><span>Descending</span></a></li>
                    </ul>
                   </div>
                  </div></li>
                </ul>
                <h2 class="toggle-title">Attachments</h2>
               </div>
               <div class="mod-content">
                <ol id="file_attachments" class="item-attachments" data-sort-key="fileName" data-sort-order="asc">
                 <li class="attachment-content js-file-attachment" data-attachment-id="12560669" data-issue-id="12623008" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12560669/derby.log" draggable="true" data-downloadurl="text/plain:derby.log:https://issues.apache.org/jira/secure/attachment/12560669/derby.log"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12560669/derby.log" title="Latest  12/Dec/12 22:55 - Karl Wright" draggable="true" data-downloadurl="text/plain:derby.log:https://issues.apache.org/jira/secure/attachment/12560669/derby.log">derby.log</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2012-12-12T22:55:52.298Z">12/Dec/12 22:55</time>
                   </dd>
                   <dd class="attachment-size">
                    8 kB
                   </dd>
                   <dd class="attachment-author">
                    Karl Wright
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12564698" data-issue-id="12623008" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12564698/force-specific-index.diff" draggable="true" data-downloadurl="text/x-diff:force-specific-index.diff:https://issues.apache.org/jira/secure/attachment/12564698/force-specific-index.diff"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-devtools-file" title="File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12564698/force-specific-index.diff" title="Latest  14/Jan/13 13:02 - Knut Anders Hatlen" draggable="true" data-downloadurl="text/x-diff:force-specific-index.diff:https://issues.apache.org/jira/secure/attachment/12564698/force-specific-index.diff">force-specific-index.diff</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-01-14T13:02:50.190Z">14/Jan/13 13:02</time>
                   </dd>
                   <dd class="attachment-size">
                    2 kB
                   </dd>
                   <dd class="attachment-author">
                    Knut Anders Hatlen
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12560670" data-issue-id="12623008" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12560670/manifoldcf.log" draggable="true" data-downloadurl="text/plain:manifoldcf.log:https://issues.apache.org/jira/secure/attachment/12560670/manifoldcf.log"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-file-txt" title="Text File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12560670/manifoldcf.log" title="Latest  12/Dec/12 22:55 - Karl Wright" draggable="true" data-downloadurl="text/plain:manifoldcf.log:https://issues.apache.org/jira/secure/attachment/12560670/manifoldcf.log">manifoldcf.log</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2012-12-12T22:55:52.300Z">12/Dec/12 22:55</time>
                   </dd>
                   <dd class="attachment-size">
                    12 kB
                   </dd>
                   <dd class="attachment-author">
                    Karl Wright
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12565148" data-issue-id="12623008" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12565148/prefer-unique-index-v1.diff" draggable="true" data-downloadurl="text/x-diff:prefer-unique-index-v1.diff:https://issues.apache.org/jira/secure/attachment/12565148/prefer-unique-index-v1.diff"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-devtools-file" title="File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12565148/prefer-unique-index-v1.diff" title="Latest  16/Jan/13 17:47 - Knut Anders Hatlen" draggable="true" data-downloadurl="text/x-diff:prefer-unique-index-v1.diff:https://issues.apache.org/jira/secure/attachment/12565148/prefer-unique-index-v1.diff">prefer-unique-index-v1.diff</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-01-16T17:47:09.306Z">16/Jan/13 17:47</time>
                   </dd>
                   <dd class="attachment-size">
                    1 kB
                   </dd>
                   <dd class="attachment-author">
                    Knut Anders Hatlen
                   </dd>
                  </dl></li>
                 <li class="attachment-content js-file-attachment" data-attachment-id="12565945" data-issue-id="12623008" data-attachment-type="file">
                  <div class="attachment-thumb">
                   <a href="/jira/secure/attachment/12565945/prefer-unique-index-v2.diff" draggable="true" data-downloadurl="text/x-diff:prefer-unique-index-v2.diff:https://issues.apache.org/jira/secure/attachment/12565945/prefer-unique-index-v2.diff"><span class="aui-icon aui-icon-small attachment-icon aui-iconfont-devtools-file" title="File"></span></a>
                  </div>
                  <dl>
                   <dt class="attachment-title">
                    <a href="/jira/secure/attachment/12565945/prefer-unique-index-v2.diff" title="Latest  22/Jan/13 14:05 - Knut Anders Hatlen" draggable="true" data-downloadurl="text/x-diff:prefer-unique-index-v2.diff:https://issues.apache.org/jira/secure/attachment/12565945/prefer-unique-index-v2.diff">prefer-unique-index-v2.diff</a>
                   </dt>
                   <dd class="attachment-delete">
                    <span class="icon"></span>
                   </dd>
                   <dd class="attachment-date">
                    <time class="livestamp" datetime="2013-01-22T14:05:28.108Z">22/Jan/13 14:05</time>
                   </dd>
                   <dd class="attachment-size">
                    14 kB
                   </dd>
                   <dd class="attachment-author">
                    Knut Anders Hatlen
                   </dd>
                  </dl></li>
                </ol>
               </div>
              </div>
              <div id="linkingmodule" class="module toggle-wrap">
               <div id="linkingmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Issue Links</h2>
               </div>
               <div class="mod-content"> 
                <div class="links-container" data-default-link-icon="/jira/images/icons/generic_link_16.png"> 
                 <dl class="links-list "> 
                  <dt title="relates to">
                   relates to
                  </dt> 
                  <dd id="internal-12656863_10030"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype" width="16" height="16" title="Bug - A problem which impairs or prevents the functions of the product." alt="Bug - A problem which impairs or prevents the functions of the product."> <span title="DERBY-6289: Derby 10.8 backport issue (summer 2013)"> <a href="/jira/browse/DERBY-6289" data-issue-key="DERBY-6289" class="issue-link link-title resolution">DERBY-6289</a> <span class="link-summary">Derby 10.8 backport issue (summer 2013)</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                  <dd id="internal-12381347_10030"> 
                   <div class="link-content"> 
                    <p> <img src="/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype" width="16" height="16" title="Improvement - An improvement or enhancement to an existing feature or task." alt="Improvement - An improvement or enhancement to an existing feature or task."> <span title="DERBY-3155: Support for SQL:2003 MERGE statement"> <a href="/jira/browse/DERBY-3155" data-issue-key="DERBY-3155" class="issue-link link-title resolution">DERBY-3155</a> <span class="link-summary">Support for SQL:2003 MERGE statement</span> </span> </p> 
                    <ul class="link-snapshot"> 
                     <li class="priority"> <img src="/jira/images/icons/priorities/major.svg" width="16" height="16" title="Major - Major loss of function." alt="Major - Major loss of function."> </li> 
                     <li class="status"> <span class=" jira-issue-status-lozenge aui-lozenge jira-issue-status-lozenge-green jira-issue-status-lozenge-done aui-lozenge-subtle jira-issue-status-lozenge-max-width-short" data-tooltip="<span class=&quot;jira-issue-status-tooltip-title&quot;>Closed</span><br><span class=&quot;jira-issue-status-tooltip-desc&quot;>The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.</span>">Closed</span> </li> 
                    </ul> 
                   </div> 
                  </dd> 
                 </dl> 
                </div> 
               </div>
              </div>
              <div id="activitymodule" class="module toggle-wrap">
               <div id="activitymodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Activity</h2>
               </div>
               <div class="mod-content"> 
                <big-pipe data-id="activity-panel-pipe-id" style="height: 70px"> 
                 <div></div> 
                </big-pipe> 
               </div>
              </div>
             </div>
             <div id="viewissuesidebar" class="aui-item issue-side-column">
              <div id="peoplemodule" class="module toggle-wrap">
               <div id="peoplemodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">People</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details" id="peopledetails"> 
                 <li class="people-details"> 
                  <dl> 
                   <dt>
                    Assignee:
                   </dt> 
                   <dd> 
                    <span id="assignee-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_assignee_knutanders" rel="knutanders" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Knut Anders Hatlen&quot;,&quot;emailAddress&quot;:&quot;knut.hatlen@oracle.com&quot;,&quot;username&quot;:&quot;knutanders&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="knutanders"></span></span> Knut Anders Hatlen </span> </span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Reporter:
                   </dt> 
                   <dd> 
                    <span id="reporter-val" class="view-issue-field"> <span class="user-hover" id="issue_summary_reporter_kwright@metacarta.com" rel="kwright@metacarta.com" data-user="{&quot;avatarUrl&quot;:&quot;https://issues.apache.org/jira/secure/useravatar?size=xsmall&amp;avatarId=10452&quot;,&quot;displayName&quot;:&quot;Karl Wright&quot;,&quot;emailAddress&quot;:&quot;DaddyWri@gmail.com&quot;,&quot;username&quot;:&quot;kwright@metacarta.com&quot;}"> <span class="aui-avatar aui-avatar-small"><span class="aui-avatar-inner"><img src="https://issues.apache.org/jira/secure/useravatar?size=small&amp;avatarId=10452" alt="kwright@metacarta.com"></span></span> Karl Wright </span> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
                <ul class="item-details"> 
                 <li> 
                  <dl> 
                   <dt>
                    Votes:
                   </dt> 
                   <dd> 
                    <span id="vote-data" class="aui-badge vote-state-off">0</span> 
                    <span id="vote-label" title="You have to be logged in to vote for an issue.">Vote for this issue</span> 
                   </dd> 
                  </dl> 
                  <dl> 
                   <dt>
                    Watchers:
                   </dt> 
                   <dd> 
                    <span id="watcher-data" class="aui-badge watch-state-off">9</span> 
                    <span id="watch-label" title="You have to be logged in to watch an issue.">Start watching this issue</span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
              <div id="datesmodule" class="module toggle-wrap">
               <div id="datesmodule_heading" class="mod-header">
                <ul class="ops"></ul>
                <h2 class="toggle-title">Dates</h2>
               </div>
               <div class="mod-content"> 
                <ul class="item-details"> 
                 <li> 
                  <dl class="dates"> 
                   <dt>
                    Created:
                   </dt> 
                   <dd class="date user-tz" title="08/Dec/12 11:14"> 
                    <span data-name="Created" id="created-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2012-12-08T11:14:32+0000">08/Dec/12 11:14</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Updated:
                   </dt> 
                   <dd class="date user-tz" title="10/Jul/13 22:58"> 
                    <span data-name="Updated" id="updated-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2013-07-10T22:58:14+0000">10/Jul/13 22:58</time> </span> 
                   </dd> 
                  </dl> 
                  <dl class="dates"> 
                   <dt>
                    Resolved:
                   </dt> 
                   <dd class="date user-tz" title="22/Apr/13 07:47"> 
                    <span data-name="Resolved" id="resolutiondate-val" data-fieldtype="datetime"> <time class="livestamp" datetime="2013-04-22T07:47:10+0000">22/Apr/13 07:47</time> </span> 
                   </dd> 
                  </dl> </li> 
                </ul> 
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <!-- .aui-page-panel-inner -->
    </div>
    <!-- .aui-page-panel -->
    <div class="issue-navigator-init"></div> 
   </section> 
   <footer id="footer" role="contentinfo"> 
    <section class="footer-body"> 
     <ul class="atlassian-footer"> 
      <li> Atlassian JIRA <a class="seo-link" rel="nofollow" href="https://www.atlassian.com/software/jira">Project Management Software</a> <span id="footer-build-information">(v7.6.3#76005-<span title="8a4e38d34af948780dbf52044e7aafb13a7cae58" data-commit-id="8a4e38d34af948780dbf52044e7aafb13a7cae58}">sha1:8a4e38d</span>)</span> </li> 
      <li> <a id="about-link" rel="nofollow" href="/jira/secure/AboutPage.jspa/secure/AboutPage.jspa">About JIRA</a> </li> 
      <li> <a id="footer-report-problem-link" rel="nofollow" href="/jira/secure/CreateIssue!default.jspa">Report a problem</a> </li> 
     </ul> 
     <ul class="atlassian-footer"> 
      <li class="licensemessage"> Powered by a free Atlassian <a rel="nofollow" href="http://www.atlassian.com/software/jira">JIRA</a> open source license for Apache Software Foundation. Try JIRA - <a rel="nofollow" href="http://www.atlassian.com/software/jira">bug tracking software</a> for <i>your</i> team. </li> 
     </ul> 
     <div id="footer-logo">
      <a rel="nofollow" href="http://www.atlassian.com/">Atlassian</a>
     </div> 
    </section> 
    <fieldset class="hidden parameters"> 
     <input type="hidden" title="loggedInUser" value=""> 
     <input type="hidden" title="ajaxTimeout" value="The call to the JIRA server did not complete within the timeout period.  We are unsure of the result of this operation."> 
     <input type="hidden" title="JiraVersion" value="7.6.3"> 
     <input type="hidden" title="ajaxUnauthorised" value="You are not authorised to perform this operation. Please log in."> 
     <input type="hidden" title="baseURL" value="https://issues.apache.org/jira"> 
     <input type="hidden" title="ajaxCommsError" value="The JIRA server could not be contacted. This may be a temporary glitch or the server may be down. "> 
     <input type="hidden" title="ajaxServerError" value="The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation."> 
     <input type="hidden" title="ajaxErrorCloseDialog" value="Close this dialog and press refresh in your browser"> 
     <input type="hidden" title="ajaxErrorDialogHeading" value="Communications Breakdown"> 
     <input type="hidden" title="dirtyMessage" value="You have entered new data on this page. If you navigate away from this page without first saving your data, the changes will be lost."> 
     <input type="hidden" title="dirtyDialogMessage" value="You have entered new data in this dialog. If you navigate away from this dialog without first saving your data, the changes will be lost. Click cancel to return to the dialog."> 
     <input type="hidden" title="keyType" value="Type"> 
     <input type="hidden" title="keyThen" value="then"> 
     <input type="hidden" title="dblClickToExpand" value="Double click to expand"> 
     <input type="hidden" title="actions" value="Actions"> 
     <input type="hidden" title="removeItem" value="Remove"> 
     <input type="hidden" title="workflow" value="Workflow"> 
     <input type="hidden" title="labelNew" value="New Label"> 
     <input type="hidden" title="issueActionsHint" value="Begin typing for available operations or press down to see all"> 
     <input type="hidden" title="closelink" value="Close"> 
     <input type="hidden" title="dotOperations" value="Operations"> 
     <input type="hidden" title="dotLoading" value="Loading..."> 
     <input type="hidden" title="frotherSuggestions" value="Suggestions"> 
     <input type="hidden" title="frotherNomatches" value="No Matches"> 
     <input type="hidden" title="multiselectVersionsError" value="{0} is not a valid version."> 
     <input type="hidden" title="multiselectComponentsError" value="{0} is not a valid component."> 
     <input type="hidden" title="multiselectGenericError" value="The value {0} is invalid."> 
    </fieldset> 
   </footer> 
  </div> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-js/jira.webresources:bigpipe-js.js" data-wrm-key="jira.webresources:bigpipe-js" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["activity-panel-pipe-id"]="\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \u003cdiv class=\\\"tabwrap tabs2\\\"\u003e\\n\\n        \u003cul id=\\\"issue-tabs\\\" class=\\\"tabs horizontal\\\"\u003e\\n                                \\n            \u003cli  data-id=\\\"all-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\" data-label=\\\"All\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"all-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel\\\"\u003e\u003cstrong\u003eAll\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  class=\\\"active\\\" id=\\\"comment-tabpanel\\\"  data-id=\\\"comment-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\" data-label=\\\"Comments\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel\\\"\u003e\\n                            \u003cstrong tabindex=\\\"0\\\"\u003eComments\u003c\\/strong\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"worklog-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\" data-label=\\\"Work Log\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"worklog-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.jira.plugin.system.issuetabpanels:worklog-tabpanel\\\"\u003e\u003cstrong\u003eWork Log\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"changehistory-tabpanel\\\" data-key=\\\"com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\" data-label=\\\"History\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"changehistory-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel\\\"\u003e\u003cstrong\u003eHistory\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"activity-stream-issue-tab\\\" data-key=\\\"com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\" data-label=\\\"Activity\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"activity-stream-issue-tab\\\" href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab\\\"\u003e\u003cstrong\u003eActivity\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                                \\n            \u003cli  data-id=\\\"transitions-summary-tabpanel\\\" data-key=\\\"com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\" data-label=\\\"Transitions\\\" data-href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\\n                            \u003ca class=\\\"ajax-activity-content\\\" id=\\\"transitions-summary-tabpanel\\\" href=\\\"\\/jira\\/browse\\/DERBY-6011?page=com.googlecode.jira-suite-utilities:transitions-summary-tabpanel\\\"\u003e\u003cstrong\u003eTransitions\u003c\\/strong\u003e\u003c\\/a\u003e\\n                        \u003c\\/li\u003e\\n                \u003c\\/ul\u003e\\n\\n                    \u003cdiv class=\\\"sortwrap\\\"\u003e\\n                                    \u003ca class=\\\"issue-activity-sort-link ajax-activity-content\\\" rel=\\\"nofollow\\\" data-tab-sort data-order=\\\"desc\\\" href=\\\"\\/jira\\/browse\\/DERBY-6011?actionOrder=desc\\\" title=\\\"Ascending order - Click to sort in descending order\\\"\u003e\\n                        \u003cspan class=\\\"aui-icon aui-icon-small aui-iconfont-up\\\"\u003eAscending order - Click to sort in descending order\u003c\\/span\u003e\\n                    \u003c\\/a\u003e\\n                            \u003c\\/div\u003e\\n            \u003c\\/div\u003e\\n    \u003cdiv class=\\\"issuePanelWrapper\\\"\u003e\\n        \u003cdiv class=\\\"issuePanelProgress\\\"\u003e\u003c\\/div\u003e\\n        \u003cdiv class=\\\"issuePanelContainer\\\" id=\\\"issue_actions_container\\\"\u003e\\n                                    \\n\\n\\n\u003cdiv id=\\\"comment-13530431\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13530431&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13530431\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"myrna\\\" id=\\\"commentauthor_13530431_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=myrna\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"myrna\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Myrna van Lunteren\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530431_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Dec\\/12 22:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-12T22:23:19+0000\'\u003e12\\/Dec\\/12 22:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHi,\u003cbr\\/\u003e\\nThanks for making this report! Especially if this is a long-standing issue...\u003c\\/p\u003e\\n\\n\u003cp\u003eHowever, setting this up seems a little more involved than I have time for right now, and possibly the same is true for others (or someone would\'ve replied).\u003c\\/p\u003e\\n\\n\u003cp\u003eCould you publish at least the derby.log and other log file from one of your own runs?\u003cbr\\/\u003e\\nDo you have an excerpt of the jdbc calls that you can cut-and-paste?\u003c\\/p\u003e\\n\\n\u003cp\u003eAnd is it possible for you to run with the debug builds of derby? Those would give line numbers with any stack traces.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"myrna\\\" id=\\\"commentauthor_13530431_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=myrna\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"myrna\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Myrna van Lunteren\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530431_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Dec\\/12 22:23\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-12T22:23:19+0000\'\u003e12\\/Dec\\/12 22:23\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Hi, \\nThanks for making this report! Especially if this is a long-standing issue... \\n\\n However, setting this up seems a little more involved than I have time for right now, and possibly the same is true for others (or someone would\'ve replied). \\n\\n Could you publish at least the derby.log and other log file from one of your own runs? \\nDo you have an excerpt of the jdbc calls that you can cut-and-paste? \\n\\n And is it possible for you to run with the debug builds of derby? Those would give line numbers with any stack traces.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13530462\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13530462&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13530462\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13530462_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530462_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Dec\\/12 22:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-12T22:55:52+0000\'\u003e12\\/Dec\\/12 22:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHere are the output logs.  Please advise were I can get a \\\"debug\\\" version of any recent version of derby.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13530462_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530462_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Dec\\/12 22:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-12T22:55:52+0000\'\u003e12\\/Dec\\/12 22:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Here are the output logs.  Please advise were I can get a \\\"debug\\\" version of any recent version of derby.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13530482\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13530482&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13530482\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13530482_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530482_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Dec\\/12 23:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-12T23:24:34+0000\'\u003e12\\/Dec\\/12 23:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI tried the test with derby.stream.error.logSeverityLevel=0 to get more data in derby.log. Then I saw many deadlocks of this kind:\u003c\\/p\u003e\\n\\n\u003cp\u003eERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\u003cbr\\/\u003e\\nLock : ROW, JOBQUEUE, (1,37)\u003cbr\\/\u003e\\n  Waiting XID : \u003c\\/p\u003e\\n{726, U}\\n\u003cp\u003e , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\u003cbr\\/\u003e\\n  Granted XID : \u003c\\/p\u003e\\n{721, X}\\n\u003cp\u003e \u003cbr\\/\u003e\\nLock : ROW, JOBQUEUE, (1,38)\u003cbr\\/\u003e\\n  Waiting XID : \u003c\\/p\u003e\\n{721, U}\\n\u003cp\u003e , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\u003cbr\\/\u003e\\n  Granted XID : \u003c\\/p\u003e\\n{720, X}\\n\u003cp\u003e \u003cbr\\/\u003e\\nLock : ROW, JOBQUEUE, (1,37)\u003cbr\\/\u003e\\n  Waiting XID : \u003c\\/p\u003e\\n{720, U}\\n\u003cp\u003e , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\u003cbr\\/\u003e\\n. The selected victim is XID : 726.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo... Three transactions locking the same rows, but in different order, and end up in a deadlock.\u003c\\/p\u003e\\n\\n\u003cp\u003eIt varies how many transactions that are part of the deadlock, but it looks like it\'s always the same query that\'s involved.\u003c\\/p\u003e\\n\\n\u003cp\u003eI haven\'t dug any further to see how the query is used yet.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13530482_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530482_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Dec\\/12 23:24\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-12T23:24:34+0000\'\u003e12\\/Dec\\/12 23:24\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I tried the test with derby.stream.error.logSeverityLevel=0 to get more data in derby.log. Then I saw many deadlocks of this kind: \\n\\n ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is: \\nLock : ROW, JOBQUEUE, (1,37) \\n  Waiting XID :  \\n{726, U}\\n  , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE \\n  Granted XID :  \\n{721, X}\\n   \\nLock : ROW, JOBQUEUE, (1,38) \\n  Waiting XID :  \\n{721, U}\\n  , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE \\n  Granted XID :  \\n{720, X}\\n   \\nLock : ROW, JOBQUEUE, (1,37) \\n  Waiting XID :  \\n{720, U}\\n  , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE \\n. The selected victim is XID : 726. \\n\\n So... Three transactions locking the same rows, but in different order, and end up in a deadlock. \\n\\n It varies how many transactions that are part of the deadlock, but it looks like it\'s always the same query that\'s involved. \\n\\n I haven\'t dug any further to see how the query is used yet.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13530520\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13530520&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13530520\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13530520_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530520_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 00:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T00:13:17+0000\'\u003e13\\/Dec\\/12 00:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIs normal deadlock behavior a wait of 30-60 seconds?  because that\'s what I\'m seeing...\u003c\\/p\u003e\\n\\n\u003cp\u003eI can look at the transactions where this query is being fired; they are supposedly ordered by the dochash everywhere but we may have a bug there; I\'ll research.  Still, immediate detection of a deadlock should not cause the long-running queries we see.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13530520_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530520_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 00:13\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T00:13:17+0000\'\u003e13\\/Dec\\/12 00:13\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Is normal deadlock behavior a wait of 30-60 seconds?  because that\'s what I\'m seeing... \\n\\n I can look at the transactions where this query is being fired; they are supposedly ordered by the dochash everywhere but we may have a bug there; I\'ll research.  Still, immediate detection of a deadlock should not cause the long-running queries we see.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13530544\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13530544&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13530544\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13530544_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530544_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 00:42\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T00:42:36+0000\'\u003e13\\/Dec\\/12 00:42\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI added code to dump the order in which FOR UPDATE queries occur within all such transactions.  Here is a sample:\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003eC:\\\\wip\\\\mcf\\\\trunk\\\\tests\\\\rss\\\\test-derby-output&gt;tail -f manifoldcf.log\\n WARN 2012-12-12 19:34:55,191 (Startup thread) - Updating: 003B8F747BBAD5C268EB77CA597CBEE8DDA51D2C 3DFAA926101B8F5E105345E9FA8F6FF6E2503E25 99C0CD575F36553F77EB7AA75FF482E70493AA37 B431F3383185EF8B73935CC448011AA5A8A45EEF B915311D0951A301FAC8C259FA4D3945BDC80EE9 C3F374EA2B2B9B4EDEB1FBBE6911A64732C6038B E6BA898A8951E6CAAFC9339646BA0FD753F32F41 EA9515103B9821D7FF82DF135A7054DCA24A263E F04C0F1EFA841CF9CB57532577169FAD61EFD20B F9060099494ABDD229F9B31A2CECB5BB2DAF3877\\n WARN 2012-12-12 19:34:57,751 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'20\'\u003c\\/span\u003e) - Updating: 019DC959C3D2D81AA500308882553E08E2128F3A 033689A1424C66E5C15F3A553ED632D7711F18C7 0BCB5FB2AE27DBBA7743A70CB57714496A30EBBD 26278F7F152D729150F293C3109A1D9A58AD21C6 2D6080272A03EE908F9802D4EED6AC51D6C12225 77200A152ABAA4267532747B5D07589A5C1D2702 965B87D0FEE7880E6862209BD0B9538A86771879 B157D34358568EADF670474ED35AF0AB62550708 BFCF552C4D14CE9630C428D9F3C197B70308C81B F3059DC934196A6F84D6BED8277CB2E77D0AE97F\\n WARN 2012-12-12 19:34:57,761 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'21\'\u003c\\/span\u003e) - Updating: 0CDC72CE178F4A53C54B31EEAA879ED10C8ABF50 28B8DB65AFC0E07477BE019559275F5DDEB5265A 695D963FFA7E075984DD905A47399E344319BD75 6B89F81ACE4851223423E57F3B48C9440F6BDAA9 7709C357A9A72915959503F100BD9416E153EF69 814B53D19EC2EEFA286E6E607DEF5381676E5CA8 8776852699BABF0D4653840312C2FCD3CB35D196 8E2E6580C863C2AA6ACD90D4B47A78C636BE0176 8FCA17A6EEBCC7AD17C4DEA053B8531BC40E5D87 B5E611CB37699E2061FAB5359CC1CA8AEB9544E2\\n WARN 2012-12-12 19:34:57,761 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'27\'\u003c\\/span\u003e) - Updating: 06EF09998C07EE279680EFB40D8D173B953BBB41 089C4A318256A5BE24751A18C15B12534088AE53 18ECC28594B73C11C8A0E29D2647BD8C0BCFCFB0 236BC8FC47E522279D04B03F9F24173CEEBC3CC4 2B2B03FBC06D85FD6F1D9F2FD06DB135D14EAA01 5347BE04928401EFE2B95BCD9B3E79DB5BC41001 5E55A3510C77E35EABB49CF0E2DD8D69ECB3B9F7 9FC003AE98DBAC93A78F8DBD8B5E05C40941C4EF D835783891D230FFB4B620195404A682310F6B28 DE398FAFF2E0A5B14FB464C4797E22C589A3356C\\n WARN 2012-12-12 19:34:57,761 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'28\'\u003c\\/span\u003e) - Updating: 19EA2C455D02F87BD90F42697A383329C87528EB 254A4AB5D1225F9BA950D6C57163F75C6CFFFFC0 28326FC3D745333CDDBEC3773E287852070A181E 2E01C7863900BB12317EE44ECF2DD3AFEE91521E 307883028721A1CCB7022E5836F453083E799960 53823AB0FF908EB8FFD3132DC4FC5B98E299B9A6 6F37A1F53B5788CFBD34CCFF6C3BE39F164CA220 949A65754EADE71A345AA79A0F3873210F161F73 9F2B2BBDFE7CCC8C96978AD7C264AD8037F2CC15 C565A81AB0F3F726FDAD117F4107A417D473ED90\\n WARN 2012-12-12 19:34:57,761 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'25\'\u003c\\/span\u003e) - Updating: 42B481A0A216F2427C32510AF60BC454003C404E 5ED258F4A057352BEA7FF004C99547F180A29569 7BED6B0D45CCD9AA2AD2104877581EE58DE422E9 84AB9FA028CC720613F52B5CB9A6892D17D3E245 BBA0A8216C1BDD1DF9C13D5375D0C02EB3F95DB2 C79FE39946B6928EB7205F7CFFA47A729CF0B661 CD824F7566B50CE109580D962E6E763C01332397 DD57F6FE90BB3E32B7FAD7F828CFAF8D935EB348 F86948D55405C4C116C6976E4F8459A0EE841D0D FEFBC683A56504DB7D418ADDBFF37FD53B275500\\n WARN 2012-12-12 19:34:57,761 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'26\'\u003c\\/span\u003e) - Updating: 05A24080B87E69BADDA0A18B3FFD15C7585AFDEE 06115678F7341BDA326CEC24B8EBC61068045500 1AEFEDD366A61686F0A8A8D26BC6EEC121020F57 27C2A7B08CB174D797E49A24970E51DAEEF10910 5C7F49ACB75FD2859A6149C56E465A018C7CAF9B 8CC7F639CB3459F917AC446A987D4F277A8E3ABB C839461E3EEE75420D5C50993023BD4FD89071D1 CABCC5DB287F47FDA363E88B8E1ADA75181FC44A FC14D78A477B160EA8B26170F8B4BD923C408930 FD0918C5F881ED4E548718557888491B4628CD93\\n WARN 2012-12-12 19:34:57,761 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'23\'\u003c\\/span\u003e) - Updating: 1CFD6C6B4D826A408EC0150A6DD29AB5C3109980 30453368183133EB1C15E7332107069CC05F8CF4 5CD048722B14CDE3F9C290F76456DDF0B2651A50 81B9643732699B6430014FADCE9D912B6FEC837E 8CDFBD16CA436568AC69DF33D4B3C30BD0F3E969 D3A1BD538E7B70A47408B34A6FB9FE729C302CD6 D6A92EE29556CB6DA708C7A62BC81487D9C0154A D9186FE82FF92AC4E015B65D629F917811D460AF E37AA6500F9169EB4584F8393D4ED7C6B4C0C24F FD0753B3F8FF1B5207856BAB18A4E95BC5D565BC\\n WARN 2012-12-12 19:34:57,761 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'24\'\u003c\\/span\u003e) - Updating: 2E95CCE9E2C1B45DE9E072AFDF887C8B71942E85 2F34184B314A85CB5FC9F7790BD7D6A60D71358B 47D7D7541742A4BF73AF2EA982B816D91D31618E 9802024F3BE53EA74EC6AEC988BA83DFD324C0BA 996569CB471D39FB4447813FE7EE9388671CCD57 ACA10747868899A55ADC9B639743BFFE13CCCD8D B976865B4C25BE2BDDC32772D7323161F289B625 BA96F4D762F9D3BC38C74469437ECA6BAD426EAF BC41C066F89F359F8E4F79C54D076884435A9A5B D0E19E1769871A98F620C22B58F6FE9F9ACAC440\\n WARN 2012-12-12 19:34:57,771 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'22\'\u003c\\/span\u003e) - Updating: 0F87592E9B7A46E5ED62CD24494494340CDF9017 2C25CD30BBA30CF206A2E1F1E790C3177D08DAA3 2FF4E8863AC478B3907842D9641B2A709CF12B08 35EA4158F31C1DC82CEA37E623043A6F7E3FF6D3 40A0F27E071B00D03EC1CE6E87072D4B9833B87B 4A5D5C909F7C2AEF31F4F5F609693FD9E93F6234 6821DBDCD0EE1790139249BD5672164DE564744D AE7B06C816DD8B0695C3B72346DD44B50031365A E66A1117DB7BF457C99C3BEA212D7C6060C6A57F EE095CD6ABFF89126C03C619C3B68A25D966C00F\\n WARN 2012-12-12 19:34:57,771 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'29\'\u003c\\/span\u003e) - Updating: 0593EFDEBC69F8EF57E3BBC6C028889F9EF149C5 08CB4439D7F6F61999FD30D1D25EF47ACA663528 14582338E03D44F26A15F010C2AFCE2922C784DD 1D8B8022946E5D57D01627C5063790EE9AC2AD00 683E03E53C5E3436A630BDDBAC9DCE9020A2F1D3 BDE5FD21AD2B122E979766D9AD52BC245E9C0240 E08DBEC97CE8CC5504331D358B94BF66F1939923 E6E2608BF4A29EAABEAB7D62F3E4013577AADC76 E9A9AC4471D155B51487B6715FD95A551EC0BB2C EFA897EB9FE6ECCC05DBC9F89E90E520C60EAED1\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eIt appears they all are ordered, as stipulated.  So there is no reason for a deadlock to develop, at least among the set of queries as you provided above.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13530544_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13530544_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 00:42\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T00:42:36+0000\'\u003e13\\/Dec\\/12 00:42\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I added code to dump the order in which FOR UPDATE queries occur within all such transactions.  Here is a sample: \\n\\n  \\n C:\\\\wip\\\\mcf\\\\trunk\\\\tests\\\\rss\\\\test-derby-output&gt;tail -f manifoldcf.log\\n WARN 2012-12-12 19:34:55,191 (Startup thread) - Updating: 003B8F747BBAD5C268EB77CA597CBEE8DDA51D2C 3DFAA926101B8F5E105345E9FA8F6FF6E2503E25 99C0CD575F36553F77EB7AA75FF482E70493AA37 B431F3383185EF8B73935CC448011AA5A8A45EEF B915311D0951A301FAC8C259FA4D3945BDC80EE9 C3F374EA2B2B9B4EDEB1FBBE6911A64732C6038B E6BA898A8951E6CAAFC9339646BA0FD753F32F41 EA9515103B9821D7FF82DF135A7054DCA24A263E F04C0F1EFA841CF9CB57532577169FAD61EFD20B F9060099494ABDD229F9B31A2CECB5BB2DAF3877\\n WARN 2012-12-12 19:34:57,751 (Worker thread  \'20\' ) - Updating: 019DC959C3D2D81AA500308882553E08E2128F3A 033689A1424C66E5C15F3A553ED632D7711F18C7 0BCB5FB2AE27DBBA7743A70CB57714496A30EBBD 26278F7F152D729150F293C3109A1D9A58AD21C6 2D6080272A03EE908F9802D4EED6AC51D6C12225 77200A152ABAA4267532747B5D07589A5C1D2702 965B87D0FEE7880E6862209BD0B9538A86771879 B157D34358568EADF670474ED35AF0AB62550708 BFCF552C4D14CE9630C428D9F3C197B70308C81B F3059DC934196A6F84D6BED8277CB2E77D0AE97F\\n WARN 2012-12-12 19:34:57,761 (Worker thread  \'21\' ) - Updating: 0CDC72CE178F4A53C54B31EEAA879ED10C8ABF50 28B8DB65AFC0E07477BE019559275F5DDEB5265A 695D963FFA7E075984DD905A47399E344319BD75 6B89F81ACE4851223423E57F3B48C9440F6BDAA9 7709C357A9A72915959503F100BD9416E153EF69 814B53D19EC2EEFA286E6E607DEF5381676E5CA8 8776852699BABF0D4653840312C2FCD3CB35D196 8E2E6580C863C2AA6ACD90D4B47A78C636BE0176 8FCA17A6EEBCC7AD17C4DEA053B8531BC40E5D87 B5E611CB37699E2061FAB5359CC1CA8AEB9544E2\\n WARN 2012-12-12 19:34:57,761 (Worker thread  \'27\' ) - Updating: 06EF09998C07EE279680EFB40D8D173B953BBB41 089C4A318256A5BE24751A18C15B12534088AE53 18ECC28594B73C11C8A0E29D2647BD8C0BCFCFB0 236BC8FC47E522279D04B03F9F24173CEEBC3CC4 2B2B03FBC06D85FD6F1D9F2FD06DB135D14EAA01 5347BE04928401EFE2B95BCD9B3E79DB5BC41001 5E55A3510C77E35EABB49CF0E2DD8D69ECB3B9F7 9FC003AE98DBAC93A78F8DBD8B5E05C40941C4EF D835783891D230FFB4B620195404A682310F6B28 DE398FAFF2E0A5B14FB464C4797E22C589A3356C\\n WARN 2012-12-12 19:34:57,761 (Worker thread  \'28\' ) - Updating: 19EA2C455D02F87BD90F42697A383329C87528EB 254A4AB5D1225F9BA950D6C57163F75C6CFFFFC0 28326FC3D745333CDDBEC3773E287852070A181E 2E01C7863900BB12317EE44ECF2DD3AFEE91521E 307883028721A1CCB7022E5836F453083E799960 53823AB0FF908EB8FFD3132DC4FC5B98E299B9A6 6F37A1F53B5788CFBD34CCFF6C3BE39F164CA220 949A65754EADE71A345AA79A0F3873210F161F73 9F2B2BBDFE7CCC8C96978AD7C264AD8037F2CC15 C565A81AB0F3F726FDAD117F4107A417D473ED90\\n WARN 2012-12-12 19:34:57,761 (Worker thread  \'25\' ) - Updating: 42B481A0A216F2427C32510AF60BC454003C404E 5ED258F4A057352BEA7FF004C99547F180A29569 7BED6B0D45CCD9AA2AD2104877581EE58DE422E9 84AB9FA028CC720613F52B5CB9A6892D17D3E245 BBA0A8216C1BDD1DF9C13D5375D0C02EB3F95DB2 C79FE39946B6928EB7205F7CFFA47A729CF0B661 CD824F7566B50CE109580D962E6E763C01332397 DD57F6FE90BB3E32B7FAD7F828CFAF8D935EB348 F86948D55405C4C116C6976E4F8459A0EE841D0D FEFBC683A56504DB7D418ADDBFF37FD53B275500\\n WARN 2012-12-12 19:34:57,761 (Worker thread  \'26\' ) - Updating: 05A24080B87E69BADDA0A18B3FFD15C7585AFDEE 06115678F7341BDA326CEC24B8EBC61068045500 1AEFEDD366A61686F0A8A8D26BC6EEC121020F57 27C2A7B08CB174D797E49A24970E51DAEEF10910 5C7F49ACB75FD2859A6149C56E465A018C7CAF9B 8CC7F639CB3459F917AC446A987D4F277A8E3ABB C839461E3EEE75420D5C50993023BD4FD89071D1 CABCC5DB287F47FDA363E88B8E1ADA75181FC44A FC14D78A477B160EA8B26170F8B4BD923C408930 FD0918C5F881ED4E548718557888491B4628CD93\\n WARN 2012-12-12 19:34:57,761 (Worker thread  \'23\' ) - Updating: 1CFD6C6B4D826A408EC0150A6DD29AB5C3109980 30453368183133EB1C15E7332107069CC05F8CF4 5CD048722B14CDE3F9C290F76456DDF0B2651A50 81B9643732699B6430014FADCE9D912B6FEC837E 8CDFBD16CA436568AC69DF33D4B3C30BD0F3E969 D3A1BD538E7B70A47408B34A6FB9FE729C302CD6 D6A92EE29556CB6DA708C7A62BC81487D9C0154A D9186FE82FF92AC4E015B65D629F917811D460AF E37AA6500F9169EB4584F8393D4ED7C6B4C0C24F FD0753B3F8FF1B5207856BAB18A4E95BC5D565BC\\n WARN 2012-12-12 19:34:57,761 (Worker thread  \'24\' ) - Updating: 2E95CCE9E2C1B45DE9E072AFDF887C8B71942E85 2F34184B314A85CB5FC9F7790BD7D6A60D71358B 47D7D7541742A4BF73AF2EA982B816D91D31618E 9802024F3BE53EA74EC6AEC988BA83DFD324C0BA 996569CB471D39FB4447813FE7EE9388671CCD57 ACA10747868899A55ADC9B639743BFFE13CCCD8D B976865B4C25BE2BDDC32772D7323161F289B625 BA96F4D762F9D3BC38C74469437ECA6BAD426EAF BC41C066F89F359F8E4F79C54D076884435A9A5B D0E19E1769871A98F620C22B58F6FE9F9ACAC440\\n WARN 2012-12-12 19:34:57,771 (Worker thread  \'22\' ) - Updating: 0F87592E9B7A46E5ED62CD24494494340CDF9017 2C25CD30BBA30CF206A2E1F1E790C3177D08DAA3 2FF4E8863AC478B3907842D9641B2A709CF12B08 35EA4158F31C1DC82CEA37E623043A6F7E3FF6D3 40A0F27E071B00D03EC1CE6E87072D4B9833B87B 4A5D5C909F7C2AEF31F4F5F609693FD9E93F6234 6821DBDCD0EE1790139249BD5672164DE564744D AE7B06C816DD8B0695C3B72346DD44B50031365A E66A1117DB7BF457C99C3BEA212D7C6060C6A57F EE095CD6ABFF89126C03C619C3B68A25D966C00F\\n WARN 2012-12-12 19:34:57,771 (Worker thread  \'29\' ) - Updating: 0593EFDEBC69F8EF57E3BBC6C028889F9EF149C5 08CB4439D7F6F61999FD30D1D25EF47ACA663528 14582338E03D44F26A15F010C2AFCE2922C784DD 1D8B8022946E5D57D01627C5063790EE9AC2AD00 683E03E53C5E3436A630BDDBAC9DCE9020A2F1D3 BDE5FD21AD2B122E979766D9AD52BC245E9C0240 E08DBEC97CE8CC5504331D358B94BF66F1939923 E6E2608BF4A29EAABEAB7D62F3E4013577AADC76 E9A9AC4471D155B51487B6715FD95A551EC0BB2C EFA897EB9FE6ECCC05DBC9F89E90E520C60EAED1\\n \\n  \\n\\n It appears they all are ordered, as stipulated.  So there is no reason for a deadlock to develop, at least among the set of queries as you provided above. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13531131\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13531131&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13531131\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"myrna\\\" id=\\\"commentauthor_13531131_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=myrna\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"myrna\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Myrna van Lunteren\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531131_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 16:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T16:05:33+0000\'\u003e13\\/Dec\\/12 16:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThat timeframe for the timeout\\/deadlocks sounds like the default settings; the default deadlock timeout period is 20 seconds, and the default timeout is 60. There are properties to adjust these, see the Reference Manual (latest alpha: \u003ca href=\\\"http:\\/\\/db.apache.org\\/derby\\/docs\\/dev\\/ref\\/\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/db.apache.org\\/derby\\/docs\\/dev\\/ref\\/\u003c\\/a\u003e) especially derby.locks.deadlockTimeout and derby.locks.waitTimeout. \u003cbr\\/\u003e\\nRegarding debug versions - for each derby release there is a db-derby-&lt;version&gt;\u003cdel\u003elib-debug.zip and db-derby\u003c\\/del\u003e&lt;version&gt;.tar.gz file that holds just the debug jar files. We also call these the \'sane\' jars. See for instance the 10.9.1.0 release page: \u003ca href=\\\"http:\\/\\/db.apache.org\\/derby\\/releases\\/release-10.9.1.0.cgi\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/db.apache.org\\/derby\\/releases\\/release-10.9.1.0.cgi\u003c\\/a\u003e under \'distributions\'.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"myrna\\\" id=\\\"commentauthor_13531131_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=myrna\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"myrna\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Myrna van Lunteren\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531131_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 16:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T16:05:33+0000\'\u003e13\\/Dec\\/12 16:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    That timeframe for the timeout\\/deadlocks sounds like the default settings; the default deadlock timeout period is 20 seconds, and the default timeout is 60. There are properties to adjust these, see the Reference Manual (latest alpha:  http:\\/\\/db.apache.org\\/derby\\/docs\\/dev\\/ref\\/ ) especially derby.locks.deadlockTimeout and derby.locks.waitTimeout.  \\nRegarding debug versions - for each derby release there is a db-derby-&lt;version&gt; lib-debug.zip and db-derby &lt;version&gt;.tar.gz file that holds just the debug jar files. We also call these the \'sane\' jars. See for instance the 10.9.1.0 release page:  http:\\/\\/db.apache.org\\/derby\\/releases\\/release-10.9.1.0.cgi  under \'distributions\'.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13531160\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13531160&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13531160\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13531160_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531160_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 16:37\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T16:37:43+0000\'\u003e13\\/Dec\\/12 16:37\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThis parameter we attempt to set:\u003c\\/p\u003e\\n\\n\u003cp\u003e  static\u003c\\/p\u003e\\n  {\\n    System.setProperty(\\\"derby.locks.waitTimeout\\\",\\\"-1\\\");\\n  }\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13531160_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531160_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 16:37\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T16:37:43+0000\'\u003e13\\/Dec\\/12 16:37\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    This parameter we attempt to set: \\n\\n   static \\n  {\\n    System.setProperty(\\\"derby.locks.waitTimeout\\\",\\\"-1\\\");\\n  }\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13531219\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13531219&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13531219\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13531219_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531219_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 17:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T17:30:37+0000\'\u003e13\\/Dec\\/12 17:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eSetting derby.locks.waitTimeout to -1 makes Derby wait indefinitely on locks if there is no deadlock. derby.locks.deadlockTimeout determines how long Derby should wait for a lock before it checks if there is a deadlock. So if you want deadlocks to be detected and resolved immediately, the latter property should be set to 0. (I think. The reference manual is silent on what 0 or negative deadlock timeout means, but that\'s how I read the code comments anyway.)\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13531219_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531219_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 17:30\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T17:30:37+0000\'\u003e13\\/Dec\\/12 17:30\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Setting derby.locks.waitTimeout to -1 makes Derby wait indefinitely on locks if there is no deadlock. derby.locks.deadlockTimeout determines how long Derby should wait for a lock before it checks if there is a deadlock. So if you want deadlocks to be detected and resolved immediately, the latter property should be set to 0. (I think. The reference manual is silent on what 0 or negative deadlock timeout means, but that\'s how I read the code comments anyway.)              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13531280\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13531280&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13531280\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13531280_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531280_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 18:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T18:25:55+0000\'\u003e13\\/Dec\\/12 18:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAdding derby.locks.deadlockTimeout=0 cuts the time from 10x worse than other databases down to only 3x worse.  However, even with that setting, there is still quite a lot of long-running queries in the log:\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e WARN 2012-12-09 18:59:22,869 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'10\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (52511 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 18:59:22,869 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'10\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'033689A1424C66E5C15F3A553ED632D7711F18C7\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,869 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'10\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (main) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (52071 ms): [SELECT jobid,CAST(COUNT(dochash) AS bigint) AS doccount FROM jobqueue t1 WHERE EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobs t0 WHERE t0.id=t1.jobid AND id=?) GROUP BY jobid]\\n WARN 2012-12-09 18:59:22,949 (main) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'0\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (30291 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 18:59:22,949 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'0\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'42B481A0A216F2427C32510AF60BC454003C404E\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'0\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (45233 ms): [SELECT id FROM jobqueue WHERE jobid=? AND status IN (?,?,?,?,?,?) FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'P\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'F\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'f\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 6: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (51101 ms): [SELECT t0.id,t0.jobid,t0.dochash,t0.docid,t0.status,t0.failtime,t0.failcount,t0.priorityset FROM jobqueue t0 WHERE t0.status IN (?,?) AND t0.checkaction=? AND t0.checktime&lt;=? AND EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobs t1 WHERE t1.status IN (?,?) AND t1.id=t0.jobid AND t1.priority=?) AND NOT EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobqueue t2 WHERE t2.dochash=t0.dochash AND t2.status IN (?,?,?,?,?,?) AND t2.jobid!=t0.jobid) AND NOT EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM prereqevents t3,events t4 WHERE t0.id=t3.owner AND t3.eventname=t4.name) ORDER BY t0.docpriority ASC,t0.status ASC,t0.checkaction ASC,t0.checktime ASC FETCH NEXT 120 ROWS ONLY]\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'P\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'R\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097511858\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 6: \u003cspan class=\\\"code-quote\\\"\u003e\'5\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 7: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 8: \u003cspan class=\\\"code-quote\\\"\u003e\'F\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 9: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 10: \u003cspan class=\\\"code-quote\\\"\u003e\'f\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 11: \u003cspan class=\\\"code-quote\\\"\u003e\'D\'\u003c\\/span\u003e\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 12: \u003cspan class=\\\"code-quote\\\"\u003e\'d\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,021 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'6\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (40052 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:03,021 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'6\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'089C4A318256A5BE24751A18C15B12534088AE53\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,021 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'6\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (main) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (40142 ms): [SELECT jobid,CAST(COUNT(dochash) AS bigint) AS doccount FROM jobqueue t1 WHERE status IN (?,?,?,?,?,?) AND EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobs t0 WHERE t0.id=t1.jobid AND id=?) GROUP BY jobid]\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'P\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'F\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'f\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 6: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (30124 ms): [SELECT id FROM jobqueue WHERE jobid=? AND status IN (?,?,?,?,?,?) FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'P\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'F\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'f\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 6: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'8\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (39502 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:03,111 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'8\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'05A24080B87E69BADDA0A18B3FFD15C7585AFDEE\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'8\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (40112 ms): [SELECT docpriority,jobid,dochash,docid FROM jobqueue t0 WHERE status IN (?,?) AND checkaction=? AND checktime&lt;=? AND EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobs t1 WHERE t1.status IN (?,?) AND t1.id=t0.jobid)  ORDER BY docpriority ASC,status ASC,checkaction ASC,checktime ASC FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'P\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'R\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097511858\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,138 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'8\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (40007 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,138 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'8\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'06115678F7341BDA326CEC24B8EBC61068045500\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,138 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'8\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (main) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (40127 ms): [SELECT jobid,CAST(COUNT(dochash) AS bigint) AS doccount FROM jobqueue t1 WHERE status IN (?,?,?,?,?) AND EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobs t0 WHERE t0.id=t1.jobid AND id=?) GROUP BY jobid]\\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'C\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'Z\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'F\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'f\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'1\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (39417 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'1\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'0593EFDEBC69F8EF57E3BBC6C028889F9EF149C5\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'1\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'12\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (48812 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'12\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'0F87592E9B7A46E5ED62CD24494494340CDF9017\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'12\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'9\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (32241 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'9\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'0CDC72CE178F4A53C54B31EEAA879ED10C8ABF50\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'9\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (30112 ms): [SELECT id FROM jobqueue WHERE jobid=? AND status IN (?,?,?,?,?,?) FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'P\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'F\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'f\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 6: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,308 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'0\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (40889 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:01:03,308 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'0\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'42B481A0A216F2427C32510AF60BC454003C404E\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,308 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'0\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,448 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'2\'\u003c\\/span\u003e) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (32970 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:01:03,448 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'2\'\u003c\\/span\u003e) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'19EA2C455D02F87BD90F42697A383329C87528EB\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,448 (Worker thread \u003cspan class=\\\"code-quote\\\"\u003e\'2\'\u003c\\/span\u003e) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097490879\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) - Found a \u003cspan class=\\\"code-object\\\"\u003elong\u003c\\/span\u003e-running query (60227 ms): [SELECT t0.id,t0.jobid,t0.dochash,t0.docid,t0.status,t0.failtime,t0.failcount,t0.priorityset FROM jobqueue t0 WHERE t0.status IN (?,?) AND t0.checkaction=? AND t0.checktime&lt;=? AND EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobs t1 WHERE t1.status IN (?,?) AND t1.id=t0.jobid AND t1.priority=?) AND NOT EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM jobqueue t2 WHERE t2.dochash=t0.dochash AND t2.status IN (?,?,?,?,?,?) AND t2.jobid!=t0.jobid) AND NOT EXISTS(SELECT \u003cspan class=\\\"code-quote\\\"\u003e\'x\'\u003c\\/span\u003e FROM prereqevents t3,events t4 WHERE t0.id=t3.owner AND t3.eventname=t4.name) ORDER BY t0.docpriority ASC,t0.status ASC,t0.checkaction ASC,t0.checktime ASC FETCH NEXT 120 ROWS ONLY]\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 0: \u003cspan class=\\\"code-quote\\\"\u003e\'P\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 1: \u003cspan class=\\\"code-quote\\\"\u003e\'G\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 2: \u003cspan class=\\\"code-quote\\\"\u003e\'R\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 3: \u003cspan class=\\\"code-quote\\\"\u003e\'1355097603111\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 4: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 5: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 6: \u003cspan class=\\\"code-quote\\\"\u003e\'5\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 7: \u003cspan class=\\\"code-quote\\\"\u003e\'A\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 8: \u003cspan class=\\\"code-quote\\\"\u003e\'F\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 9: \u003cspan class=\\\"code-quote\\\"\u003e\'a\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 10: \u003cspan class=\\\"code-quote\\\"\u003e\'f\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 11: \u003cspan class=\\\"code-quote\\\"\u003e\'D\'\u003c\\/span\u003e\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 12: \u003cspan class=\\\"code-quote\\\"\u003e\'d\'\u003c\\/span\u003e\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eCan you explain this?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13531280_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13531280_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'13\\/Dec\\/12 18:25\'\u003e\u003ctime class=\'livestamp\' datetime=\'2012-12-13T18:25:55+0000\'\u003e13\\/Dec\\/12 18:25\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Adding derby.locks.deadlockTimeout=0 cuts the time from 10x worse than other databases down to only 3x worse.  However, even with that setting, there is still quite a lot of long-running queries in the log: \\n\\n  \\n  WARN 2012-12-09 18:59:22,869 (Worker thread  \'10\' ) - Found a  long -running query (52511 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 18:59:22,869 (Worker thread  \'10\' ) -   Parameter 0:  \'033689A1424C66E5C15F3A553ED632D7711F18C7\' \\n WARN 2012-12-09 18:59:22,869 (Worker thread  \'10\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 18:59:22,949 (main) - Found a  long -running query (52071 ms): [SELECT jobid,CAST(COUNT(dochash) AS bigint) AS doccount FROM jobqueue t1 WHERE EXISTS(SELECT  \'x\'  FROM jobs t0 WHERE t0.id=t1.jobid AND id=?) GROUP BY jobid]\\n WARN 2012-12-09 18:59:22,949 (main) -   Parameter 0:  \'1355097490879\' \\n WARN 2012-12-09 18:59:22,949 (Worker thread  \'0\' ) - Found a  long -running query (30291 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 18:59:22,949 (Worker thread  \'0\' ) -   Parameter 0:  \'42B481A0A216F2427C32510AF60BC454003C404E\' \\n WARN 2012-12-09 18:59:22,949 (Worker thread  \'0\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 18:59:22,949 (Finisher thread) - Found a  long -running query (45233 ms): [SELECT id FROM jobqueue WHERE jobid=? AND status IN (?,?,?,?,?,?) FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 0:  \'1355097490879\' \\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 1:  \'A\' \\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 2:  \'a\' \\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 3:  \'P\' \\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 4:  \'F\' \\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 5:  \'f\' \\n WARN 2012-12-09 18:59:22,949 (Finisher thread) -   Parameter 6:  \'G\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) - Found a  long -running query (51101 ms): [SELECT t0.id,t0.jobid,t0.dochash,t0.docid,t0.status,t0.failtime,t0.failcount,t0.priorityset FROM jobqueue t0 WHERE t0.status IN (?,?) AND t0.checkaction=? AND t0.checktime&lt;=? AND EXISTS(SELECT  \'x\'  FROM jobs t1 WHERE t1.status IN (?,?) AND t1.id=t0.jobid AND t1.priority=?) AND NOT EXISTS(SELECT  \'x\'  FROM jobqueue t2 WHERE t2.dochash=t0.dochash AND t2.status IN (?,?,?,?,?,?) AND t2.jobid!=t0.jobid) AND NOT EXISTS(SELECT  \'x\'  FROM prereqevents t3,events t4 WHERE t0.id=t3.owner AND t3.eventname=t4.name) ORDER BY t0.docpriority ASC,t0.status ASC,t0.checkaction ASC,t0.checktime ASC FETCH NEXT 120 ROWS ONLY]\\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 0:  \'P\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 1:  \'G\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 2:  \'R\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 3:  \'1355097511858\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 4:  \'A\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 5:  \'a\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 6:  \'5\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 7:  \'A\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 8:  \'F\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 9:  \'a\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 10:  \'f\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 11:  \'D\' \\n WARN 2012-12-09 18:59:22,969 (Stuffer thread) -   Parameter 12:  \'d\' \\n WARN 2012-12-09 19:00:03,021 (Worker thread  \'6\' ) - Found a  long -running query (40052 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:03,021 (Worker thread  \'6\' ) -   Parameter 0:  \'089C4A318256A5BE24751A18C15B12534088AE53\' \\n WARN 2012-12-09 19:00:03,021 (Worker thread  \'6\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:00:03,091 (main) - Found a  long -running query (40142 ms): [SELECT jobid,CAST(COUNT(dochash) AS bigint) AS doccount FROM jobqueue t1 WHERE status IN (?,?,?,?,?,?) AND EXISTS(SELECT  \'x\'  FROM jobs t0 WHERE t0.id=t1.jobid AND id=?) GROUP BY jobid]\\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 0:  \'A\' \\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 1:  \'a\' \\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 2:  \'P\' \\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 3:  \'F\' \\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 4:  \'f\' \\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 5:  \'G\' \\n WARN 2012-12-09 19:00:03,091 (main) -   Parameter 6:  \'1355097490879\' \\n WARN 2012-12-09 19:00:03,091 (Finisher thread) - Found a  long -running query (30124 ms): [SELECT id FROM jobqueue WHERE jobid=? AND status IN (?,?,?,?,?,?) FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 0:  \'1355097490879\' \\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 1:  \'A\' \\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 2:  \'a\' \\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 3:  \'P\' \\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 4:  \'F\' \\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 5:  \'f\' \\n WARN 2012-12-09 19:00:03,091 (Finisher thread) -   Parameter 6:  \'G\' \\n WARN 2012-12-09 19:00:03,111 (Worker thread  \'8\' ) - Found a  long -running query (39502 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:03,111 (Worker thread  \'8\' ) -   Parameter 0:  \'05A24080B87E69BADDA0A18B3FFD15C7585AFDEE\' \\n WARN 2012-12-09 19:00:03,111 (Worker thread  \'8\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) - Found a  long -running query (40112 ms): [SELECT docpriority,jobid,dochash,docid FROM jobqueue t0 WHERE status IN (?,?) AND checkaction=? AND checktime&lt;=? AND EXISTS(SELECT  \'x\'  FROM jobs t1 WHERE t1.status IN (?,?) AND t1.id=t0.jobid)  ORDER BY docpriority ASC,status ASC,checkaction ASC,checktime ASC FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 0:  \'P\' \\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 1:  \'G\' \\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 2:  \'R\' \\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 3:  \'1355097511858\' \\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 4:  \'A\' \\n WARN 2012-12-09 19:00:03,111 (Stuffer thread) -   Parameter 5:  \'a\' \\n WARN 2012-12-09 19:00:43,138 (Worker thread  \'8\' ) - Found a  long -running query (40007 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,138 (Worker thread  \'8\' ) -   Parameter 0:  \'06115678F7341BDA326CEC24B8EBC61068045500\' \\n WARN 2012-12-09 19:00:43,138 (Worker thread  \'8\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:00:43,218 (main) - Found a  long -running query (40127 ms): [SELECT jobid,CAST(COUNT(dochash) AS bigint) AS doccount FROM jobqueue t1 WHERE status IN (?,?,?,?,?) AND EXISTS(SELECT  \'x\'  FROM jobs t0 WHERE t0.id=t1.jobid AND id=?) GROUP BY jobid]\\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 0:  \'C\' \\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 1:  \'Z\' \\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 2:  \'F\' \\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 3:  \'f\' \\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 4:  \'G\' \\n WARN 2012-12-09 19:00:43,218 (main) -   Parameter 5:  \'1355097490879\' \\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'1\' ) - Found a  long -running query (39417 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'1\' ) -   Parameter 0:  \'0593EFDEBC69F8EF57E3BBC6C028889F9EF149C5\' \\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'1\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'12\' ) - Found a  long -running query (48812 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'12\' ) -   Parameter 0:  \'0F87592E9B7A46E5ED62CD24494494340CDF9017\' \\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'12\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'9\' ) - Found a  long -running query (32241 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'9\' ) -   Parameter 0:  \'0CDC72CE178F4A53C54B31EEAA879ED10C8ABF50\' \\n WARN 2012-12-09 19:00:43,218 (Worker thread  \'9\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:00:43,218 (Finisher thread) - Found a  long -running query (30112 ms): [SELECT id FROM jobqueue WHERE jobid=? AND status IN (?,?,?,?,?,?) FETCH NEXT 1 ROWS ONLY]\\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 0:  \'1355097490879\' \\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 1:  \'A\' \\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 2:  \'a\' \\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 3:  \'P\' \\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 4:  \'F\' \\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 5:  \'f\' \\n WARN 2012-12-09 19:00:43,218 (Finisher thread) -   Parameter 6:  \'G\' \\n WARN 2012-12-09 19:01:03,308 (Worker thread  \'0\' ) - Found a  long -running query (40889 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:01:03,308 (Worker thread  \'0\' ) -   Parameter 0:  \'42B481A0A216F2427C32510AF60BC454003C404E\' \\n WARN 2012-12-09 19:01:03,308 (Worker thread  \'0\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:01:03,448 (Worker thread  \'2\' ) - Found a  long -running query (32970 ms): [SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE]\\n WARN 2012-12-09 19:01:03,448 (Worker thread  \'2\' ) -   Parameter 0:  \'19EA2C455D02F87BD90F42697A383329C87528EB\' \\n WARN 2012-12-09 19:01:03,448 (Worker thread  \'2\' ) -   Parameter 1:  \'1355097490879\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) - Found a  long -running query (60227 ms): [SELECT t0.id,t0.jobid,t0.dochash,t0.docid,t0.status,t0.failtime,t0.failcount,t0.priorityset FROM jobqueue t0 WHERE t0.status IN (?,?) AND t0.checkaction=? AND t0.checktime&lt;=? AND EXISTS(SELECT  \'x\'  FROM jobs t1 WHERE t1.status IN (?,?) AND t1.id=t0.jobid AND t1.priority=?) AND NOT EXISTS(SELECT  \'x\'  FROM jobqueue t2 WHERE t2.dochash=t0.dochash AND t2.status IN (?,?,?,?,?,?) AND t2.jobid!=t0.jobid) AND NOT EXISTS(SELECT  \'x\'  FROM prereqevents t3,events t4 WHERE t0.id=t3.owner AND t3.eventname=t4.name) ORDER BY t0.docpriority ASC,t0.status ASC,t0.checkaction ASC,t0.checktime ASC FETCH NEXT 120 ROWS ONLY]\\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 0:  \'P\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 1:  \'G\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 2:  \'R\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 3:  \'1355097603111\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 4:  \'A\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 5:  \'a\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 6:  \'5\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 7:  \'A\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 8:  \'F\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 9:  \'a\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 10:  \'f\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 11:  \'D\' \\n WARN 2012-12-09 19:01:03,458 (Stuffer thread) -   Parameter 12:  \'d\' \\n \\n  \\n\\n Can you explain this?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13542038\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13542038&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13542038\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13542038_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13542038_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/Jan\\/13 07:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-02T07:14:58+0000\'\u003e02\\/Jan\\/13 07:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAny further comment on this ticket?\u003c\\/p\u003e\\n\\n\u003cp\u003eFWIW, the situation as I understand it is:\u003c\\/p\u003e\\n\\n\u003cul class=\\\"alternate\\\" type=\\\"square\\\"\u003e\\n\\t\u003cli\u003eDerby is reporting a deadlock on a transaction that locks records always in a specific order, so there should be no deadlock occurring in the first place AFAICT\u003c\\/li\u003e\\n\\t\u003cli\u003eEven with the given test that uses only runt database tables of max size 100 rows, and with derby.locks.deadlockTimeout=0, I see huge waits of 50 seconds or so on some queries\u003c\\/li\u003e\\n\\t\u003cli\u003eAll other supported databases perform fine on this test with \u003cb\u003eno\u003c\\/b\u003e reported deadlocks (or deadlock-derived failbacks\\/retries)\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13542038_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13542038_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'02\\/Jan\\/13 07:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-02T07:14:58+0000\'\u003e02\\/Jan\\/13 07:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Any further comment on this ticket? \\n\\n FWIW, the situation as I understand it is: \\n\\n \\n\\t Derby is reporting a deadlock on a transaction that locks records always in a specific order, so there should be no deadlock occurring in the first place AFAICT \\n\\t Even with the given test that uses only runt database tables of max size 100 rows, and with derby.locks.deadlockTimeout=0, I see huge waits of 50 seconds or so on some queries \\n\\t All other supported databases perform fine on this test with  no  reported deadlocks (or deadlock-derived failbacks\\/retries) \\n \\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13545362\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13545362&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13545362\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13545362_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13545362_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Jan\\/13 09:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-06T09:53:40+0000\'\u003e06\\/Jan\\/13 09:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI instrumented our Derby and HSQLDB database drivers to dump to standard out any time a deadlock exception was thrown.  For HSQLDB on the identical task (ant run-rss-tests-HSQLDB), no deadlock exceptions whatsoever were thrown.  For derby, here is the output:\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e\\nmcf-test-build.run-derby:\\n    [mkdir] Created dir: C:\\\\wip\\\\mcf\\\\trunk\\\\tests\\\\rss\\\\test-derby-output\\n    [junit] Testsuite: org.apache.manifoldcf.rss_tests.RSSSimpleCrawlDerbyIT\\n    [junit] Configuration file successfully read\\n    [junit] 36 [main] INFO org.eclipse.jetty.server.Server - jetty-7.5.4.v20111024\\n    [junit] 120 [main] INFO org.eclipse.jetty.webapp.WebInfConfiguration - Extract jar:file:\\/C:\\/wip\\/mcf\\/trunk\\/framework\\/build\\/war-proprietary\\/mcf-crawler-ui.war!\\/ to C:\\\\Users\\\\Karl\\\\AppData\\\\Local\\\\Temp\\\\jetty-0.0.0.0-8346-mcf-crawler-ui.war-_mcf-crawler-ui-any-\\\\webapp\\n    [junit] 1951 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.w.WebAppContext{\\/mcf-crawler-ui,file:\\/C:\\/Users\\/Karl\\/AppData\\/Local\\/Temp\\/jetty-0.0.0.0-8346-mcf-crawler-ui.war-_mcf-crawler-ui-any-\\/webapp\\/},..\\/..\\/..\\/framework\\/build\\/war-proprietary\\/mcf-crawler-ui.war\\n    [junit] 2161 [main] INFO org.eclipse.jetty.webapp.WebInfConfiguration - Extract jar:file:\\/C:\\/wip\\/mcf\\/trunk\\/framework\\/build\\/war-proprietary\\/mcf-authority-service.war!\\/ to C:\\\\Users\\\\Karl\\\\AppData\\\\Local\\\\Temp\\\\jetty-0.0.0.0-8346-mcf-authority-service.war-_mcf-authority-service-any-\\\\webapp\\n    [junit] 3752 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.w.WebAppContext{\\/mcf-authority-service,file:\\/C:\\/Users\\/Karl\\/AppData\\/Local\\/Temp\\/jetty-0.0.0.0-8346-mcf-authority-service.war-_mcf-authority-service-any-\\/webapp\\/},..\\/..\\/..\\/framework\\/build\\/war-proprietary\\/mcf-authority-service.war\\n    [junit] 3786 [main] INFO org.eclipse.jetty.webapp.WebInfConfiguration - Extract jar:file:\\/C:\\/wip\\/mcf\\/trunk\\/framework\\/build\\/war-proprietary\\/mcf-api-service.war!\\/ to C:\\\\Users\\\\Karl\\\\AppData\\\\Local\\\\Temp\\\\jetty-0.0.0.0-8346-mcf-api-service.war-_mcf-api-service-any-\\\\webapp\\n    [junit] 5611 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.w.WebAppContext{\\/mcf-api-service,file:\\/C:\\/Users\\/Karl\\/AppData\\/Local\\/Temp\\/jetty-0.0.0.0-8346-mcf-api-service.war-_mcf-api-service-any-\\/webapp\\/},..\\/..\\/..\\/framework\\/build\\/war-proprietary\\/mcf-api-service.war\\n    [junit] 5625 [main] INFO org.eclipse.jetty.server.AbstractConnector - Started SelectChannelConnector@0.0.0.0:8346 STARTING\\n    [junit] 5652 [main] INFO org.eclipse.jetty.server.Server - jetty-7.5.4.v20111024\\n    [junit] 5652 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.s.ServletContextHandler{\\/rss,\u003cspan class=\\\"code-keyword\\\"\u003enull\u003c\\/span\u003e}\\n    [junit] 5694 [main] INFO org.eclipse.jetty.server.AbstractConnector - Started SelectChannelConnector@0.0.0.0:8189 STARTING\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] Crawl required 100714 milliseconds\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eSome interesting things to note.  First, there are a lot of \\\"deadlocks\\\" where the \\\"cycles\\\" make no sense to me at all.  For example, the very first deadlock:\u003c\\/p\u003e\\n\\n\u003cdiv class=\\\"code panel\\\" style=\\\"border-width: 1px;\\\"\u003e\u003cdiv class=\\\"codeContent panelContent\\\"\u003e\\n\u003cpre class=\\\"code-java\\\"\u003e    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n\u003c\\/pre\u003e\\n\u003c\\/div\u003e\u003c\\/div\u003e\\n\\n\u003cp\u003eIt looks like the very same one-row operation is somehow grabbing two different locks in random order.  Pretty much all of the deadlocks seem to be variants of this same problem.  Does anyone have an explanation for why Derby is throwing two locks for a single row update?  and why it is throwing them in random order?\u003c\\/p\u003e\\n\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13545362_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13545362_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'06\\/Jan\\/13 09:53\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-06T09:53:40+0000\'\u003e06\\/Jan\\/13 09:53\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I instrumented our Derby and HSQLDB database drivers to dump to standard out any time a deadlock exception was thrown.  For HSQLDB on the identical task (ant run-rss-tests-HSQLDB), no deadlock exceptions whatsoever were thrown.  For derby, here is the output: \\n\\n  \\n \\nmcf-test-build.run-derby:\\n    [mkdir] Created dir: C:\\\\wip\\\\mcf\\\\trunk\\\\tests\\\\rss\\\\test-derby-output\\n    [junit] Testsuite: org.apache.manifoldcf.rss_tests.RSSSimpleCrawlDerbyIT\\n    [junit] Configuration file successfully read\\n    [junit] 36 [main] INFO org.eclipse.jetty.server.Server - jetty-7.5.4.v20111024\\n    [junit] 120 [main] INFO org.eclipse.jetty.webapp.WebInfConfiguration - Extract jar:file:\\/C:\\/wip\\/mcf\\/trunk\\/framework\\/build\\/war-proprietary\\/mcf-crawler-ui.war!\\/ to C:\\\\Users\\\\Karl\\\\AppData\\\\Local\\\\Temp\\\\jetty-0.0.0.0-8346-mcf-crawler-ui.war-_mcf-crawler-ui-any-\\\\webapp\\n    [junit] 1951 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.w.WebAppContext{\\/mcf-crawler-ui,file:\\/C:\\/Users\\/Karl\\/AppData\\/Local\\/Temp\\/jetty-0.0.0.0-8346-mcf-crawler-ui.war-_mcf-crawler-ui-any-\\/webapp\\/},..\\/..\\/..\\/framework\\/build\\/war-proprietary\\/mcf-crawler-ui.war\\n    [junit] 2161 [main] INFO org.eclipse.jetty.webapp.WebInfConfiguration - Extract jar:file:\\/C:\\/wip\\/mcf\\/trunk\\/framework\\/build\\/war-proprietary\\/mcf-authority-service.war!\\/ to C:\\\\Users\\\\Karl\\\\AppData\\\\Local\\\\Temp\\\\jetty-0.0.0.0-8346-mcf-authority-service.war-_mcf-authority-service-any-\\\\webapp\\n    [junit] 3752 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.w.WebAppContext{\\/mcf-authority-service,file:\\/C:\\/Users\\/Karl\\/AppData\\/Local\\/Temp\\/jetty-0.0.0.0-8346-mcf-authority-service.war-_mcf-authority-service-any-\\/webapp\\/},..\\/..\\/..\\/framework\\/build\\/war-proprietary\\/mcf-authority-service.war\\n    [junit] 3786 [main] INFO org.eclipse.jetty.webapp.WebInfConfiguration - Extract jar:file:\\/C:\\/wip\\/mcf\\/trunk\\/framework\\/build\\/war-proprietary\\/mcf-api-service.war!\\/ to C:\\\\Users\\\\Karl\\\\AppData\\\\Local\\\\Temp\\\\jetty-0.0.0.0-8346-mcf-api-service.war-_mcf-api-service-any-\\\\webapp\\n    [junit] 5611 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.w.WebAppContext{\\/mcf-api-service,file:\\/C:\\/Users\\/Karl\\/AppData\\/Local\\/Temp\\/jetty-0.0.0.0-8346-mcf-api-service.war-_mcf-api-service-any-\\/webapp\\/},..\\/..\\/..\\/framework\\/build\\/war-proprietary\\/mcf-api-service.war\\n    [junit] 5625 [main] INFO org.eclipse.jetty.server.AbstractConnector - Started SelectChannelConnector@0.0.0.0:8346 STARTING\\n    [junit] 5652 [main] INFO org.eclipse.jetty.server.Server - jetty-7.5.4.v20111024\\n    [junit] 5652 [main] INFO org.eclipse.jetty.server.handler.ContextHandler - started o.e.j.s.ServletContextHandler{\\/rss, null }\\n    [junit] 5694 [main] INFO org.eclipse.jetty.server.AbstractConnector - Started SelectChannelConnector@0.0.0.0:8189 STARTING\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {719, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 719.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {721, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 721.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {724, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 724.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {722, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 722.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {723, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 723.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {725, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit] . The selected victim is XID : 725.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,28)\\n    [junit]   Waiting XID : {718, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {717, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,29)\\n    [junit]   Waiting XID : {717, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {718, X} \\n    [junit] . The selected victim is XID : 718.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,51)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {762, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {762, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] . The selected victim is XID : 759.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] java.lang.Exception: Deadlock\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.reinterpretException(DBInterfaceDerby.java:816)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:976)\\n    [junit] \\tat org.apache.manifoldcf.crawler.jobs.JobManager.addDocuments(JobManager.java:4085)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.processDocumentReferences(WorkerThread.java:1932)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread$ProcessActivity.flush(WorkerThread.java:1863)\\n    [junit] \\tat org.apache.manifoldcf.crawler.system.WorkerThread.run(WorkerThread.java:554)\\n    [junit] Caused by: org.apache.manifoldcf.core.interfaces.ManifoldCFException: Database exception: SQLException getting resultset (40001): A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeViaThread(Database.java:717)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeUncachedQuery(Database.java:745)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$QueryCacheExecutor.create(Database.java:1430)\\n    [junit] \\tat org.apache.manifoldcf.core.cachemanager.CacheManager.findObjectsAndExecute(CacheManager.java:144)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.executeQuery(Database.java:186)\\n    [junit] \\tat org.apache.manifoldcf.core.database.DBInterfaceDerby.performQuery(DBInterfaceDerby.java:972)\\n    [junit] \\t... 4 more\\n    [junit] Caused by: java.sql.SQLTransactionRollbackException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.getData(Database.java:948)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database.execute(Database.java:866)\\n    [junit] \\tat org.apache.manifoldcf.core.database.Database$ExecuteQueryThread.run(Database.java:677)\\n    [junit] Caused by: java.sql.SQLException: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\\n    [junit] \\t... 12 more\\n    [junit] Caused by: ERROR 40001: A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\\n    [junit] Lock : ROW, JOBQUEUE, (1,50)\\n    [junit]   Waiting XID : {761, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {759, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,49)\\n    [junit]   Waiting XID : {759, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {761, X} \\n    [junit] . The selected victim is XID : 761.\\n    [junit] \\tat org.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.Deadlock.buildException(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.AbstractPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.services.locks.ConcurrentPool.lockObject(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.raw.xact.RowLocking2.lockRecordForRead(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.heap.HeapController.lockRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3.lockRowOnPage(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLocking3._lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.index.B2IRowLockingRR.lockScanRow(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeForwardScan.fetchRows(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.store.access.btree.BTreeScan.fetchNext(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)\\n    [junit] \\tat org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)\\n    [junit] \\t... 5 more\\n    [junit] Crawl required 100714 milliseconds\\n \\n  \\n\\n Some interesting things to note.  First, there are a lot of \\\"deadlocks\\\" where the \\\"cycles\\\" make no sense to me at all.  For example, the very first deadlock: \\n\\n  \\n     [junit] Lock : ROW, JOBQUEUE, (1,17)\\n    [junit]   Waiting XID : {715, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {714, X} \\n    [junit] Lock : ROW, JOBQUEUE, (1,18)\\n    [junit]   Waiting XID : {714, U} , APP, SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\n    [junit]   Granted XID : {715, X} \\n    [junit] . The selected victim is XID : 715.\\n \\n  \\n\\n It looks like the very same one-row operation is somehow grabbing two different locks in random order.  Pretty much all of the deadlocks seem to be variants of this same problem.  Does anyone have an explanation for why Derby is throwing two locks for a single row update?  and why it is throwing them in random order? \\n\\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13545596\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13545596&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13545596\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dagw\\\" id=\\\"commentauthor_13545596_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dagw\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dagw\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Dag H. Wanvik\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13545596_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'07\\/Jan\\/13 03:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-07T03:06:15+0000\'\u003e07\\/Jan\\/13 03:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe threads are grabbing locks on rows in JOBQUEUE in different order (#17, 18), hence the deadlock. Why they do, is the question to answer here. It could be the order in which the application issues the queries, or the way the Derby executes them, possibly involving indexes.\u003c\\/p\u003e\\n\\n\u003cp\u003eSome questions: \u003c\\/p\u003e\\n\\n\u003cp\u003eIn this query, \\\"SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\\":\u003c\\/p\u003e\\n\\n\u003cp\u003edoes this select a single row or multiple rows? If it is a single row, does the same thread\'s transaction access multiple such rows, i.e. use multiple of these queries in the same transaction?. If they do, are those accesses guaranteed to be in the same order (say, ascending on id)?. Are there other SQL statements on JOBQUEUE that could require write locks on these row active at this time?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dagw\\\" id=\\\"commentauthor_13545596_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dagw\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dagw\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Dag H. Wanvik\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13545596_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'07\\/Jan\\/13 03:06\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-07T03:06:15+0000\'\u003e07\\/Jan\\/13 03:06\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The threads are grabbing locks on rows in JOBQUEUE in different order (#17, 18), hence the deadlock. Why they do, is the question to answer here. It could be the order in which the application issues the queries, or the way the Derby executes them, possibly involving indexes. \\n\\n Some questions:  \\n\\n In this query, \\\"SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\\\": \\n\\n does this select a single row or multiple rows? If it is a single row, does the same thread\'s transaction access multiple such rows, i.e. use multiple of these queries in the same transaction?. If they do, are those accesses guaranteed to be in the same order (say, ascending on id)?. Are there other SQL statements on JOBQUEUE that could require write locks on these row active at this time?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13545736\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13545736&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13545736\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13545736_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13545736_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'07\\/Jan\\/13 09:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-07T09:56:45+0000\'\u003e07\\/Jan\\/13 09:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThis query selects for a single row.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis is within a SERIALIZED transaction which is capable of handling multiple rows.  As has been posted earlier in this ticket, the accesses within the transaction are always ordered by dochash, and I have verified that the ordering logic is correct.  Write accesses within the same thread\\/transaction are also expected, otherwise FOR UPDATE would not be needed.  Write accesses from other threads (different transactions) are also possible, otherwise how could there be deadlock?\u003c\\/p\u003e\\n\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13545736_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13545736_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'07\\/Jan\\/13 09:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-07T09:56:45+0000\'\u003e07\\/Jan\\/13 09:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    This query selects for a single row. \\n\\n This is within a SERIALIZED transaction which is capable of handling multiple rows.  As has been posted earlier in this ticket, the accesses within the transaction are always ordered by dochash, and I have verified that the ordering logic is correct.  Write accesses within the same thread\\/transaction are also expected, otherwise FOR UPDATE would not be needed.  Write accesses from other threads (different transactions) are also possible, otherwise how could there be deadlock? \\n\\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551140\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551140&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551140\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13551140_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551140_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 14:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T14:45:01+0000\'\u003e11\\/Jan\\/13 14:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI ran the repro with derby.language.logStatementText=true to see which statements the transactions involved in the deadlock executed. The first deadlock reported involved four transactions. Each transaction executed the following three statements:\u003c\\/p\u003e\\n\\n\u003cp\u003eSELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\u003cbr\\/\u003e\\nINSERT INTO jobqueue (docpriority,id,priorityset,docid,status,dochash,checktime,checkaction,jobid) VALUES (?,?,?,?,?,?,?,?,?)\u003cbr\\/\u003e\\nSELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\u003c\\/p\u003e\\n\\n\u003cp\u003eThe first two statements were executed with the same dochash (presumably the application first checks whether the row exists, and inserts a new row if it doesn\'t exist). The third statement used a different dochash and got stuck waiting for a lock.\u003c\\/p\u003e\\n\\n\u003cp\u003eAll four transactions used different dochash values, so one wouldn\'t normally expect lock conflicts between them.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'m wondering, though, if the lock conflicts are caused by the use of serializable transactions. Derby supports the serializable isolation level by taking previous key locks. That is, when it reads a row using via an index, it locks not only that row, but also the row right before it in the index. Combined with some logic in the insert code, which refuses to insert a new row into an index if the position right before it is locked, the previous key lock prevents the so-called phantom reads that are not allowed in serializable transactions.\u003c\\/p\u003e\\n\\n\u003cp\u003eSo even though the transactions access completely different sets of rows, they may end up locking some of the same rows if the isolation level is serializable and the accessed rows live near each other in the index.\u003c\\/p\u003e\\n\\n\u003cp\u003eAt least that\'s a theory. I\'ll have to trace the locking too in order to find out if that could explain the deadlocks, or if there\'s something else going on.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13551140_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551140_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 14:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T14:45:01+0000\'\u003e11\\/Jan\\/13 14:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I ran the repro with derby.language.logStatementText=true to see which statements the transactions involved in the deadlock executed. The first deadlock reported involved four transactions. Each transaction executed the following three statements: \\n\\n SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE \\nINSERT INTO jobqueue (docpriority,id,priorityset,docid,status,dochash,checktime,checkaction,jobid) VALUES (?,?,?,?,?,?,?,?,?) \\nSELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE \\n\\n The first two statements were executed with the same dochash (presumably the application first checks whether the row exists, and inserts a new row if it doesn\'t exist). The third statement used a different dochash and got stuck waiting for a lock. \\n\\n All four transactions used different dochash values, so one wouldn\'t normally expect lock conflicts between them. \\n\\n I\'m wondering, though, if the lock conflicts are caused by the use of serializable transactions. Derby supports the serializable isolation level by taking previous key locks. That is, when it reads a row using via an index, it locks not only that row, but also the row right before it in the index. Combined with some logic in the insert code, which refuses to insert a new row into an index if the position right before it is locked, the previous key lock prevents the so-called phantom reads that are not allowed in serializable transactions. \\n\\n So even though the transactions access completely different sets of rows, they may end up locking some of the same rows if the isolation level is serializable and the accessed rows live near each other in the index. \\n\\n At least that\'s a theory. I\'ll have to trace the locking too in order to find out if that could explain the deadlocks, or if there\'s something else going on.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551156\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551156&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551156\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13551156_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551156_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 15:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T15:04:55+0000\'\u003e11\\/Jan\\/13 15:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI\'ve linked this issue to \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-3155\\\" title=\\\"Support for SQL:2003 MERGE statement\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-3155\\\"\u003e\u003cdel\u003eDERBY-3155\u003c\\/del\u003e\u003c\\/a\u003e (MERGE statement), as that feature might avoid concurrency problems like the ones seen in this issue. If MERGE gets added to Derby, the SELECT+INSERT could be done in a single operation, and serializable isolation level wouldn\'t be needed to protect against phantom rows between the two operations.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13551156_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551156_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 15:04\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T15:04:55+0000\'\u003e11\\/Jan\\/13 15:04\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I\'ve linked this issue to   DERBY-3155   (MERGE statement), as that feature might avoid concurrency problems like the ones seen in this issue. If MERGE gets added to Derby, the SELECT+INSERT could be done in a single operation, and serializable isolation level wouldn\'t be needed to protect against phantom rows between the two operations.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551172\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551172&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551172\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bryanpendleton\\\" id=\\\"commentauthor_13551172_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bryanpendleton\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bryanpendleton\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Bryan Pendleton\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551172_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 15:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T15:27:15+0000\'\u003e11\\/Jan\\/13 15:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIf it\'s previous key locking, does the deadlock go away if you change the program to issue\u003c\\/p\u003e\\n\\n\u003cp\u003e    SET ISOLATION READ COMMITTED\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bryanpendleton\\\" id=\\\"commentauthor_13551172_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bryanpendleton\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bryanpendleton\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Bryan Pendleton\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551172_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 15:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T15:27:15+0000\'\u003e11\\/Jan\\/13 15:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    If it\'s previous key locking, does the deadlock go away if you change the program to issue \\n\\n     SET ISOLATION READ COMMITTED              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551206\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551206&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551206\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13551206_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551206_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 15:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T15:54:46+0000\'\u003e11\\/Jan\\/13 15:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI changed that particular transaction to use READ COMMITTED, but it still deadlocks as before.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13551206_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551206_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 15:54\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T15:54:46+0000\'\u003e11\\/Jan\\/13 15:54\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I changed that particular transaction to use READ COMMITTED, but it still deadlocks as before.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551380\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551380&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551380\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551380_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551380_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 18:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T18:45:32+0000\'\u003e11\\/Jan\\/13 18:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ejust for understanding the issue it may help to try with all transactions read committed.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551380_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551380_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 18:45\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T18:45:32+0000\'\u003e11\\/Jan\\/13 18:45\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    just for understanding the issue it may help to try with all transactions read committed.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551384\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551384&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551384\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551384_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551384_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 18:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T18:47:54+0000\'\u003e11\\/Jan\\/13 18:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCan we get a complete lock list dump when the transaction deadlocks?  Might point to anything wierd happening if the system has more locks than we expect.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551384_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551384_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 18:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T18:47:54+0000\'\u003e11\\/Jan\\/13 18:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Can we get a complete lock list dump when the transaction deadlocks?  Might point to anything wierd happening if the system has more locks than we expect.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551418\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551418&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551418\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551418_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551418_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 19:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T19:14:09+0000\'\u003e11\\/Jan\\/13 19:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 11\\/Jan\\/13 19:14\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAll the deadlocks I have seen listed are happening on  page 1.  Is the dataset particularly small?  If so I often worry about the optimizer deciding not to use the index in some cases as it figures out it can get all the rows by just reading a page of the base table.  I think we have checked query plans, but sometimes they change with execution, especially now with automatic \u003cbr\\/\u003e\\nstatistics gathering.  It is usually not a problem with real world data sets of more than a page, but often shows up in test cases where the data set has been made minimal.  \u003c\\/p\u003e\\n\\n\u003cp\u003eA quick scan of the deadlocks posted seem to all be 2 rows that are one after the other in the base table.  Need to look at the data set to understand if this relates to the rows being\u003cbr\\/\u003e\\none after the other in the index (ie. are the rows inserted in index order?).  If so, then previous key locking is likely involved.  \u003c\\/p\u003e\\n\\n\u003cp\u003eTo debug one could see if the deadlocks still appear if we enable the trace that prints all query plans to the log on execution.  Or if there are not too many queries could use hints to force the use of the index \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551418_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551418_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 19:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T19:14:09+0000\'\u003e11\\/Jan\\/13 19:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 11\\/Jan\\/13 19:14\\\"\u003eedited\u003c\\/span\u003e                   All the deadlocks I have seen listed are happening on  page 1.  Is the dataset particularly small?  If so I often worry about the optimizer deciding not to use the index in some cases as it figures out it can get all the rows by just reading a page of the base table.  I think we have checked query plans, but sometimes they change with execution, especially now with automatic  \\nstatistics gathering.  It is usually not a problem with real world data sets of more than a page, but often shows up in test cases where the data set has been made minimal.   \\n\\n A quick scan of the deadlocks posted seem to all be 2 rows that are one after the other in the base table.  Need to look at the data set to understand if this relates to the rows being \\none after the other in the index (ie. are the rows inserted in index order?).  If so, then previous key locking is likely involved.   \\n\\n To debug one could see if the deadlocks still appear if we enable the trace that prints all query plans to the log on execution.  Or if there are not too many queries could use hints to force the use of the index               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551423\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551423&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551423\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13551423_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551423_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 19:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T19:18:35+0000\'\u003e11\\/Jan\\/13 19:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Karl Wright - 11\\/Jan\\/13 19:19\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe dataset is extremely small - 100 rows.  As such I doubt very much that indexes are being used, even though they are present.  Hard to see why this would impact locking.  But previous-key locking could certainly be involved.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13551423_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551423_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 19:18\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T19:18:35+0000\'\u003e11\\/Jan\\/13 19:18\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Karl Wright - 11\\/Jan\\/13 19:19\\\"\u003eedited\u003c\\/span\u003e                   The dataset is extremely small - 100 rows.  As such I doubt very much that indexes are being used, even though they are present.  Hard to see why this would impact locking.  But previous-key locking could certainly be involved.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551426\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551426&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551426\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13551426_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551426_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 19:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T19:20:48+0000\'\u003e11\\/Jan\\/13 19:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHow can I get a lock list dump via jdbc?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13551426_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551426_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'11\\/Jan\\/13 19:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-11T19:20:48+0000\'\u003e11\\/Jan\\/13 19:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    How can I get a lock list dump via jdbc?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551716\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551716&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551716\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551716_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551716_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Jan\\/13 01:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-12T01:01:42+0000\'\u003e12\\/Jan\\/13 01:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ethe following links describe a diagnostic table that you can do a select from.  it will work to code this select in jdbc.\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"http:\\/\\/wiki.apache.org\\/db-derby\\/LockDebugging\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/wiki.apache.org\\/db-derby\\/LockDebugging\u003c\\/a\u003e\u003cbr\\/\u003e\\n\u003ca href=\\\"http:\\/\\/db.apache.org\\/derby\\/docs\\/10.8\\/devguide\\/cdevconcepts50894.html\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/db.apache.org\\/derby\\/docs\\/10.8\\/devguide\\/cdevconcepts50894.html\u003c\\/a\u003e\u003c\\/p\u003e\\n\\n\u003cp\u003eI think there use to be a flag to get the system to dump the whole lock table when we got a deadlock, but I can\'t find it.\u003cbr\\/\u003e\\nFor debugging you might just set timeout shorter than deadlock and with the derby.locks.deadlockTrace prop set you\u003cbr\\/\u003e\\nshould see all locks present when the timeout happened (which in your case should be a deadlock that just has not\u003cbr\\/\u003e\\nbeen checked for yet).\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551716_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551716_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Jan\\/13 01:01\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-12T01:01:42+0000\'\u003e12\\/Jan\\/13 01:01\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    the following links describe a diagnostic table that you can do a select from.  it will work to code this select in jdbc. \\n\\n  http:\\/\\/wiki.apache.org\\/db-derby\\/LockDebugging  \\n http:\\/\\/db.apache.org\\/derby\\/docs\\/10.8\\/devguide\\/cdevconcepts50894.html  \\n\\n I think there use to be a flag to get the system to dump the whole lock table when we got a deadlock, but I can\'t find it. \\nFor debugging you might just set timeout shorter than deadlock and with the derby.locks.deadlockTrace prop set you \\nshould see all locks present when the timeout happened (which in your case should be a deadlock that just has not \\nbeen checked for yet).              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13551718\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13551718&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13551718\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551718_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551718_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Jan\\/13 01:08\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-12T01:08:11+0000\'\u003e12\\/Jan\\/13 01:08\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ethe reason indexes matter with locking is that in serializable mode if you use an index you will only lock rows that are in the range of the query.  But if you don\'t use an\u003cbr\\/\u003e\\nindex then every row in the table will be locked.  A lot of work has been done to make the optimizer to choose to use indexes in this case, but there may be problems.  The reason for \u003cbr\\/\u003e\\nall the locks is that there is no way to prevent phantoms if you are just doing a scan off all rows without an index,without locking all rows.  \u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13551718_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13551718_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'12\\/Jan\\/13 01:08\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-12T01:08:11+0000\'\u003e12\\/Jan\\/13 01:08\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    the reason indexes matter with locking is that in serializable mode if you use an index you will only lock rows that are in the range of the query.  But if you don\'t use an \\nindex then every row in the table will be locked.  A lot of work has been done to make the optimizer to choose to use indexes in this case, but there may be problems.  The reason for  \\nall the locks is that there is no way to prevent phantoms if you are just doing a scan off all rows without an index,without locking all rows.   \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13552583\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13552583&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13552583\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552583_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552583_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 11:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T11:12:06+0000\'\u003e14\\/Jan\\/13 11:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe queries do use an index. Unfortunately, they use the foreign key index on the JOBID column rather than the unique index on (DOCHASH,JOBID). This means\u003c\\/p\u003e\\n\\n\u003cp\u003e    SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\u003c\\/p\u003e\\n\\n\u003cp\u003ewill have to go through all the rows with the same JOBID as the row it is looking for. If it had used the unique index on (DOCHASH,JOBID), it would only need to fetch a single row from the index.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552583_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552583_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 11:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T11:12:06+0000\'\u003e14\\/Jan\\/13 11:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The queries do use an index. Unfortunately, they use the foreign key index on the JOBID column rather than the unique index on (DOCHASH,JOBID). This means \\n\\n     SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE \\n\\n will have to go through all the rows with the same JOBID as the row it is looking for. If it had used the unique index on (DOCHASH,JOBID), it would only need to fetch a single row from the index.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13552636\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13552636&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13552636\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552636_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552636_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 13:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T13:02:50+0000\'\u003e14\\/Jan\\/13 13:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIf I add an optimizer override to force the query to use the index on (DOCHASH,JOBID), the deadlock goes away. See the attached force-specific-index.diff.\u003c\\/p\u003e\\n\\n\u003cp\u003eHowever, in some runs, I saw another query deadlocking, although not as frequently as the original deadlock without the workaround.\u003c\\/p\u003e\\n\\n\u003cp\u003eThis is what the new deadlock cycle looks like:\u003c\\/p\u003e\\n\\n\u003cp\u003eLock : ROW, CARRYDOWN, (1,7)\u003cbr\\/\u003e\\n  Waiting XID : \u003c\\/p\u003e\\n{835, X}\\n\u003cp\u003e , APP, UPDATE carrydown SET isnew=? WHERE jobid=? AND parentidhash=? AND isnew IN (?,?)\u003cbr\\/\u003e\\n  Granted XID : \u003c\\/p\u003e\\n{821, X} \u003cbr\\/\u003e\\nLock : ROW, CARRYDOWN, (1,8)\u003cbr\\/\u003e\\n  Waiting XID : {821, X}\\n\u003cp\u003e , APP, UPDATE carrydown SET isnew=? WHERE jobid=? AND parentidhash=? AND isnew IN (?,?)\u003cbr\\/\u003e\\n  Granted XID : \u003c\\/p\u003e\\n{819, X} \u003cbr\\/\u003e\\nLock : ROW, CARRYDOWN, (1,7)\u003cbr\\/\u003e\\n  Waiting XID : {819, X}\\n\u003cp\u003e , APP, UPDATE carrydown SET isnew=? WHERE jobid=? AND parentidhash=? AND isnew IN (?,?)\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552636_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552636_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 13:02\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T13:02:50+0000\'\u003e14\\/Jan\\/13 13:02\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    If I add an optimizer override to force the query to use the index on (DOCHASH,JOBID), the deadlock goes away. See the attached force-specific-index.diff. \\n\\n However, in some runs, I saw another query deadlocking, although not as frequently as the original deadlock without the workaround. \\n\\n This is what the new deadlock cycle looks like: \\n\\n Lock : ROW, CARRYDOWN, (1,7) \\n  Waiting XID :  \\n{835, X}\\n  , APP, UPDATE carrydown SET isnew=? WHERE jobid=? AND parentidhash=? AND isnew IN (?,?) \\n  Granted XID :  \\n{821, X}  \\nLock : ROW, CARRYDOWN, (1,8) \\n  Waiting XID : {821, X}\\n  , APP, UPDATE carrydown SET isnew=? WHERE jobid=? AND parentidhash=? AND isnew IN (?,?) \\n  Granted XID :  \\n{819, X}  \\nLock : ROW, CARRYDOWN, (1,7) \\n  Waiting XID : {819, X}\\n  , APP, UPDATE carrydown SET isnew=? WHERE jobid=? AND parentidhash=? AND isnew IN (?,?)              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13552638\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13552638&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13552638\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13552638_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552638_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 13:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T13:10:09+0000\'\u003e14\\/Jan\\/13 13:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWorst comes to worst, ManifoldCF can force particular index usage for certain queries, but this is obviously not ideal.  Is there any chance Derby can choose to optimize a unique index over a non-unique one, if there is a choice?  That would seem to be a valid optimization, no?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13552638_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552638_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 13:10\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T13:10:09+0000\'\u003e14\\/Jan\\/13 13:10\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Worst comes to worst, ManifoldCF can force particular index usage for certain queries, but this is obviously not ideal.  Is there any chance Derby can choose to optimize a unique index over a non-unique one, if there is a choice?  That would seem to be a valid optimization, no?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13552645\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13552645&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13552645\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13552645_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552645_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 13:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T13:14:21+0000\'\u003e14\\/Jan\\/13 13:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIndexes on the carrydown table are as follows:\u003c\\/p\u003e\\n\\n\u003cp\u003e      IndexDescription uniqueIndex = new IndexDescription(true,new String[]\u003c\\/p\u003e\\n{jobIDField,parentIDHashField,childIDHashField,dataNameField,dataValueHashField}\\n\u003cp\u003e);\u003cbr\\/\u003e\\n      IndexDescription jobChildDataIndex = new IndexDescription(false,new String[]\u003c\\/p\u003e\\n{jobIDField,childIDHashField,dataNameField}\\n\u003cp\u003e);\u003cbr\\/\u003e\\n      IndexDescription newIndex = new IndexDescription(false,new String[]\u003c\\/p\u003e\\n{newField}\\n\u003cp\u003e);\u003c\\/p\u003e\\n\\n\u003cp\u003eSo this would need to use the unique index but only partially, so multiple rows would be matched. \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13552645_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552645_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 13:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T13:14:21+0000\'\u003e14\\/Jan\\/13 13:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Indexes on the carrydown table are as follows: \\n\\n       IndexDescription uniqueIndex = new IndexDescription(true,new String[] \\n{jobIDField,parentIDHashField,childIDHashField,dataNameField,dataValueHashField}\\n ); \\n      IndexDescription jobChildDataIndex = new IndexDescription(false,new String[] \\n{jobIDField,childIDHashField,dataNameField}\\n ); \\n      IndexDescription newIndex = new IndexDescription(false,new String[] \\n{newField}\\n ); \\n\\n So this would need to use the unique index but only partially, so multiple rows would be matched.               \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13552671\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13552671&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13552671\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552671_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552671_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 14:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T14:12:35+0000\'\u003e14\\/Jan\\/13 14:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eFor the jobqueue query, I agree that the optimizer should have picked the unique index automatically. For some reason, it thinks that it\'ll have to go through more rows if it uses the unique index. From the query plans:\u003c\\/p\u003e\\n\\n\u003cp\u003eWhen using foreign key index on jobid:\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\toptimizer estimated row count: 0.60\u003cbr\\/\u003e\\n\\t\\toptimizer estimated cost: 118.95\u003c\\/p\u003e\\n\\n\u003cp\u003eWhen using unique index on (dochash,jobid):\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\toptimizer estimated row count: 1.00\u003cbr\\/\u003e\\n\\t\\toptimizer estimated cost: 135.64\u003c\\/p\u003e\\n\\n\u003cp\u003eSo something is off with the estimates, as clearly the more specific index on (dochash,jobid) would never return more rows than the index on jobid when both columns are specified in the scan.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe update statement that works on the carrydown table already seems to use the unique index.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552671_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552671_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 14:12\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T14:12:35+0000\'\u003e14\\/Jan\\/13 14:12\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    For the jobqueue query, I agree that the optimizer should have picked the unique index automatically. For some reason, it thinks that it\'ll have to go through more rows if it uses the unique index. From the query plans: \\n\\n When using foreign key index on jobid: \\n\\n \\t\\toptimizer estimated row count: 0.60 \\n\\t\\toptimizer estimated cost: 118.95 \\n\\n When using unique index on (dochash,jobid): \\n\\n \\t\\toptimizer estimated row count: 1.00 \\n\\t\\toptimizer estimated cost: 135.64 \\n\\n So something is off with the estimates, as clearly the more specific index on (dochash,jobid) would never return more rows than the index on jobid when both columns are specified in the scan. \\n\\n The update statement that works on the carrydown table already seems to use the unique index.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13552834\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13552834&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13552834\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552834_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552834_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 16:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T16:17:45+0000\'\u003e14\\/Jan\\/13 16:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI enabled optimizer tracing and ran the following script:\u003c\\/p\u003e\\n\\n\u003cp\u003econnect \'jdbc:derby:memory:db;create=true\';\u003cbr\\/\u003e\\nCREATE TABLE jobs(endtime BIGINT,reseedinterval BIGINT,outputspec CLOB,errortext CLOB,starttime BIGINT,reseedtime BIGINT,status CHAR(1) NOT NULL,startmethod CHAR(1) NOT NULL,windowend BIGINT,connectionname VARCHAR(32) NOT NULL \\/\u003cb\u003eCONSTRAINT c1357832449702 REFERENCES repoconnections(connectionname) ON DELETE RESTRICT\u003c\\/b\u003e\\/,type CHAR(1) NOT NULL,expirationtime BIGINT,docspec CLOB,id BIGINT NOT NULL CONSTRAINT c1357832449701 PRIMARY KEY,lasttime BIGINT NOT NULL,priority BIGINT NOT NULL,description VARCHAR(255) NOT NULL,outputname VARCHAR(32) NOT NULL \\/\u003cb\u003eCONSTRAINT c1357832449700 REFERENCES outputconnections(connectionname) ON DELETE RESTRICT\u003c\\/b\u003e\\/,lastchecktime BIGINT,hopcountmode CHAR(1),intervaltime BIGINT);\u003cbr\\/\u003e\\nCREATE TABLE jobqueue(docpriority FLOAT,id BIGINT NOT NULL CONSTRAINT c1357832449692 PRIMARY KEY,priorityset BIGINT,docid CLOB NOT NULL,failcount BIGINT,status CHAR(1) NOT NULL,dochash VARCHAR(40) NOT NULL,isseed CHAR(1),checktime BIGINT,checkaction CHAR(1),jobid BIGINT NOT NULL CONSTRAINT c1357832449691 REFERENCES jobs(id) ON DELETE RESTRICT,failtime BIGINT);\u003cbr\\/\u003e\\nCREATE UNIQUE INDEX I1357832449682 ON jobqueue (dochash,jobid);\u003cbr\\/\u003e\\nprepare ps as \'SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\';\u003c\\/p\u003e\\n\\n\u003cp\u003eThe optimizer trace for the two plans we\'re interested in looked like this:\u003c\\/p\u003e\\n\\n\u003cp\u003eConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1233 name = SQL130114161941611 uuid = ce8780ad-013c-39a4-fecd-000002dacb70 indexable = true, key columns = \u003c\\/p\u003e\\n{JOBID} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1233 name = SQL130114161941611 uuid = ce8780ad-013c-39a4-fecd-000002dacb70 indexable = true, key columns = {JOBID}\\n\u003cp\u003e for table 0\u003cbr\\/\u003e\\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1233 name = SQL130114161941611 uuid = ce8780ad-013c-39a4-fecd-000002dacb70 indexable = true, key columns = \u003c\\/p\u003e\\n{JOBID} scan for table number 0 is : \u003cbr\\/\u003e\\nLevel2CostEstimateImpl: at 2080388391, cost == 20.039500000000004, rowCount == 6.0, singleScanRowCount == 6.0\u003cbr\\/\u003e\\n\\tNumber of extra first column predicates is : 0, extra first column selectivity is : 0.1\u003cbr\\/\u003e\\n\\tNumber of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n\\tNumber of start\\/stop statistics predicates is : 1, statistics start\\/stop selectivity is : 1.0\u003cbr\\/\u003e\\n\\tNumber of extra qualifiers is : 0, extra qualifier selectivity is : 1.0\u003cbr\\/\u003e\\n\\tNumber of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1\u003cbr\\/\u003e\\nCost including extra first column selectivity is : Level2CostEstimateImpl: at 2080388391, cost == 38.50750000000001, rowCount == 0.6000000000000001, singleScanRowCount == 0.6000000000000001 for table 0\u003cbr\\/\u003e\\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 2080388391, cost == 118.95070000000003, rowCount == 0.6000000000000001, singleScanRowCount == 0.6000000000000001 for table 0\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 2080388391, cost == 118.95070000000003, rowCount == 0.6000000000000001, singleScanRowCount == 0.6000000000000001 for table 0\u003cbr\\/\u003e\\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 2080388391, cost == 118.95070000000003, rowCount == 0.6000000000000001, singleScanRowCount == 0.06000000000000001 for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1249 name = I1357832449682 uuid = 4fe880b5-013c-39a4-fecd-000002dacb70 indexable = true, key columns = {DOCHASH, JOBID} for table 0\u003cbr\\/\u003e\\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1249 name = I1357832449682 uuid = 4fe880b5-013c-39a4-fecd-000002dacb70 indexable = true, key columns = {DOCHASH, JOBID} for table 0\u003cbr\\/\u003e\\nGuaranteed to match a single row - cost is: 1.5715 for table 0\u003cbr\\/\u003e\\nLock mode set to MODE_RECORD because all start and stop positions are constant\u003cbr\\/\u003e\\nCost of 1.0 scans is: Level2CostEstimateImpl: at 2080388391, cost == 1.5715, rowCount == 1.0, singleScanRowCount == 1.0 for table 0\u003cbr\\/\u003e\\nIndex does not cover query - cost including base row fetch is: 134.072 for table 0\u003cbr\\/\u003e\\n\u003cbr\\/\u003e\\nIf I read this correctly, the optimizer estimates the predicate JOBID = ? to match 10% of the rows in the {JOBID}\\n\u003cp\u003e index, and the size of the index is estimated to 6 (it\'s actually empty), so that\'s where the expected 0.6 matching rows come from.\u003c\\/p\u003e\\n\\n\u003cp\u003eWith the \u003c\\/p\u003e\\n{DOCHASH,JOBID}\\n\u003cp\u003e index, on the other hand, it simply concludes that it\'s guaranteed to return one row (although, strictly speaking, it\'s only guaranteed to return at most one row, as it could return zero rows).\u003c\\/p\u003e\\n\\n\u003cp\u003eSo when the estimated size of the table is very small, the optimizer thinks the non-unique index returns fewer rows than the unique index. Which is not correct.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13552834_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552834_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 16:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T16:17:45+0000\'\u003e14\\/Jan\\/13 16:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I enabled optimizer tracing and ran the following script: \\n\\n connect \'jdbc:derby:memory:db;create=true\'; \\nCREATE TABLE jobs(endtime BIGINT,reseedinterval BIGINT,outputspec CLOB,errortext CLOB,starttime BIGINT,reseedtime BIGINT,status CHAR(1) NOT NULL,startmethod CHAR(1) NOT NULL,windowend BIGINT,connectionname VARCHAR(32) NOT NULL \\/ CONSTRAINT c1357832449702 REFERENCES repoconnections(connectionname) ON DELETE RESTRICT \\/,type CHAR(1) NOT NULL,expirationtime BIGINT,docspec CLOB,id BIGINT NOT NULL CONSTRAINT c1357832449701 PRIMARY KEY,lasttime BIGINT NOT NULL,priority BIGINT NOT NULL,description VARCHAR(255) NOT NULL,outputname VARCHAR(32) NOT NULL \\/ CONSTRAINT c1357832449700 REFERENCES outputconnections(connectionname) ON DELETE RESTRICT \\/,lastchecktime BIGINT,hopcountmode CHAR(1),intervaltime BIGINT); \\nCREATE TABLE jobqueue(docpriority FLOAT,id BIGINT NOT NULL CONSTRAINT c1357832449692 PRIMARY KEY,priorityset BIGINT,docid CLOB NOT NULL,failcount BIGINT,status CHAR(1) NOT NULL,dochash VARCHAR(40) NOT NULL,isseed CHAR(1),checktime BIGINT,checkaction CHAR(1),jobid BIGINT NOT NULL CONSTRAINT c1357832449691 REFERENCES jobs(id) ON DELETE RESTRICT,failtime BIGINT); \\nCREATE UNIQUE INDEX I1357832449682 ON jobqueue (dochash,jobid); \\nprepare ps as \'SELECT id,status,checktime FROM jobqueue WHERE dochash=? AND jobid=? FOR UPDATE\'; \\n\\n The optimizer trace for the two plans we\'re interested in looked like this: \\n\\n Considering conglomerate ConglomerateDescriptor: conglomerateNumber = 1233 name = SQL130114161941611 uuid = ce8780ad-013c-39a4-fecd-000002dacb70 indexable = true, key columns =  \\n{JOBID} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1233 name = SQL130114161941611 uuid = ce8780ad-013c-39a4-fecd-000002dacb70 indexable = true, key columns = {JOBID}\\n  for table 0 \\nCost of conglomerate ConglomerateDescriptor: conglomerateNumber = 1233 name = SQL130114161941611 uuid = ce8780ad-013c-39a4-fecd-000002dacb70 indexable = true, key columns =  \\n{JOBID} scan for table number 0 is :  \\nLevel2CostEstimateImpl: at 2080388391, cost == 20.039500000000004, rowCount == 6.0, singleScanRowCount == 6.0 \\n\\tNumber of extra first column predicates is : 0, extra first column selectivity is : 0.1 \\n\\tNumber of extra start\\/stop predicates is : 0, extra start\\/stop selectivity is : 1.0 \\n\\tNumber of start\\/stop statistics predicates is : 1, statistics start\\/stop selectivity is : 1.0 \\n\\tNumber of extra qualifiers is : 0, extra qualifier selectivity is : 1.0 \\n\\tNumber of extra non-qualifiers is : 1, extra non-qualifier selectivity is : 0.1 \\nCost including extra first column selectivity is : Level2CostEstimateImpl: at 2080388391, cost == 38.50750000000001, rowCount == 0.6000000000000001, singleScanRowCount == 0.6000000000000001 for table 0 \\nIndex does not cover query: cost including row fetch is: Level2CostEstimateImpl: at 2080388391, cost == 118.95070000000003, rowCount == 0.6000000000000001, singleScanRowCount == 0.6000000000000001 for table 0 \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 2080388391, cost == 118.95070000000003, rowCount == 0.6000000000000001, singleScanRowCount == 0.6000000000000001 for table 0 \\nCost including extra non-qualifier start\\/stop selectivity is : Level2CostEstimateImpl: at 2080388391, cost == 118.95070000000003, rowCount == 0.6000000000000001, singleScanRowCount == 0.06000000000000001 for table 0 \\n \\nConsidering conglomerate ConglomerateDescriptor: conglomerateNumber = 1249 name = I1357832449682 uuid = 4fe880b5-013c-39a4-fecd-000002dacb70 indexable = true, key columns = {DOCHASH, JOBID} for table 0 \\nEstimating cost of conglomerate: ConglomerateDescriptor: conglomerateNumber = 1249 name = I1357832449682 uuid = 4fe880b5-013c-39a4-fecd-000002dacb70 indexable = true, key columns = {DOCHASH, JOBID} for table 0 \\nGuaranteed to match a single row - cost is: 1.5715 for table 0 \\nLock mode set to MODE_RECORD because all start and stop positions are constant \\nCost of 1.0 scans is: Level2CostEstimateImpl: at 2080388391, cost == 1.5715, rowCount == 1.0, singleScanRowCount == 1.0 for table 0 \\nIndex does not cover query - cost including base row fetch is: 134.072 for table 0 \\n \\nIf I read this correctly, the optimizer estimates the predicate JOBID = ? to match 10% of the rows in the {JOBID}\\n  index, and the size of the index is estimated to 6 (it\'s actually empty), so that\'s where the expected 0.6 matching rows come from. \\n\\n With the  \\n{DOCHASH,JOBID}\\n  index, on the other hand, it simply concludes that it\'s guaranteed to return one row (although, strictly speaking, it\'s only guaranteed to return at most one row, as it could return zero rows). \\n\\n So when the estimated size of the table is very small, the optimizer thinks the non-unique index returns fewer rows than the unique index. Which is not correct.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13552932\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13552932&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13552932\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13552932_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552932_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 17:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T17:59:48+0000\'\u003e14\\/Jan\\/13 17:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 14\\/Jan\\/13 18:02\\\"\u003eedited\u003c\\/span\u003e \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003ethanks for the analysis knut.  I agree that again there is a problem with edge case of very few rows.  The actual performance diff probably does not matter, but for locking would be\u003cbr\\/\u003e\\nnice if we could get the optimizer to pick the unique key index in this case.  It has been so long that I don\'t remember the change, but I believe we play with estimates to make\u003cbr\\/\u003e\\nsure that in this case the optmizer picks the index case.  I think performance wise if all the rows are on one page, it probably makes more sense to not use the index at all, but\u003cbr\\/\u003e\\nthat causes all sorts of locking problems so we try to avoid that.  So changes to costing to get system to choose unique index vs non-unique would be in keeping with current\u003cbr\\/\u003e\\ndesign.\u003c\\/p\u003e\\n\\n\u003cp\u003eestimating one row from the unique index seems a reasonable guess for most queries, so I don\'t think we should change that.\u003c\\/p\u003e\\n\\n\u003cp\u003eWhat would people think about changing the estimate on the non-unique index to always have a floor of either 1 row if that works or maybe 1.1 rows just to make it always bigger than\u003cbr\\/\u003e\\nthe unique index case if 1 does not work.  I have not worked in the optimizer code so not sure where or how easy that change would be.  Would that get the \\\"right\\\" indexes picked in\u003cbr\\/\u003e\\nboth of these cases? This seems like a pretty safe change to me, as it would only affect these edge case small number of row cases.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor those interested this problem is likely specific to queries with \\\"?\\\" parameters, as the optimization has to use guesses like \\\"10%\\\"  when it does not exact value in the case of\u003cbr\\/\u003e\\na non unique index or using part of the columns in a unique index.  With actual values Derby will use actual index to figure out better estimate.  \u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n                                            \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13552932_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13552932_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 17:59\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T17:59:48+0000\'\u003e14\\/Jan\\/13 17:59\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e   - \u003cspan class=\\\"redText subText\\\" title=\\\"Mike Matrigali - 14\\/Jan\\/13 18:02\\\"\u003eedited\u003c\\/span\u003e                   thanks for the analysis knut.  I agree that again there is a problem with edge case of very few rows.  The actual performance diff probably does not matter, but for locking would be \\nnice if we could get the optimizer to pick the unique key index in this case.  It has been so long that I don\'t remember the change, but I believe we play with estimates to make \\nsure that in this case the optmizer picks the index case.  I think performance wise if all the rows are on one page, it probably makes more sense to not use the index at all, but \\nthat causes all sorts of locking problems so we try to avoid that.  So changes to costing to get system to choose unique index vs non-unique would be in keeping with current \\ndesign. \\n\\n estimating one row from the unique index seems a reasonable guess for most queries, so I don\'t think we should change that. \\n\\n What would people think about changing the estimate on the non-unique index to always have a floor of either 1 row if that works or maybe 1.1 rows just to make it always bigger than \\nthe unique index case if 1 does not work.  I have not worked in the optimizer code so not sure where or how easy that change would be.  Would that get the \\\"right\\\" indexes picked in \\nboth of these cases? This seems like a pretty safe change to me, as it would only affect these edge case small number of row cases. \\n\\n For those interested this problem is likely specific to queries with \\\"?\\\" parameters, as the optimization has to use guesses like \\\"10%\\\"  when it does not exact value in the case of \\na non unique index or using part of the columns in a unique index.  With actual values Derby will use actual index to figure out better estimate.                \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13553053\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13553053&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13553053\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13553053_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13553053_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 19:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T19:56:57+0000\'\u003e14\\/Jan\\/13 19:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMost likely using 1 as floor would be sufficient to make the optimizer pick the unique index. The optimizer trace above suggests that the lookup in the non-unique index will have a cost of 20.04, whereas the lookup in the unique index has cost 1.575. So if the two had the exact same estimated cost for the additional base table fetch, the unique index plan would be preferred. Presumably...\u003c\\/p\u003e\\n\\n\u003cp\u003eFromBaseTable.estimateCost() already has code to handle something that sounds like a very similar case:\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\t\\t\\/* oneRowResultSetForSomeConglom means there\'s a unique index, but certainly\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003enot this one since we are here.  If store knows this non-unique index\u003c\\/li\u003e\\n\\t\u003cli\u003ewon\'t return any row or just returns one row (eg., the predicate is a\u003c\\/li\u003e\\n\\t\u003cli\u003ecomparison with constant or almost empty table), we do minor adjustment\u003c\\/li\u003e\\n\\t\u003cli\u003eon cost (affecting decision for covering index) and rc (decision for\u003c\\/li\u003e\\n\\t\u003cli\u003enon-covering). The purpose is favoring unique index. beetle 5006.\u003cbr\\/\u003e\\n\\t\\t\\t\\t *\\/\u003cbr\\/\u003e\\n\\t\\t\\t\\tif (oneRowResultSetForSomeConglom &amp;&amp; costEstimate.rowCount() &lt;= 1)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tcostEstimate.setCost(costEstimate.getEstimatedCost() * 2,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t costEstimate.rowCount() + 2,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t costEstimate.singleScanRowCount() + 2);\\n\\t\\t\\t\\t}\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eMaybe we could change this code to add even more bias towards the unique index.\u003c\\/p\u003e\\n\\n\u003cp\u003eAnother thing to consider, is whether the cost estimates give a realistic picture of the actual cost. I find it puzzling that the estimates for looking up the key in an index is somewhere between 1.5 and 20, whereas looking up the base row with the row location fetched from the index, adds more than 100 to the cost. I\'d expect those two costs to be about the same size. And if they were, the difference in index lookup cost (1.5 vs 20) would have dominated the difference in base row lookups (1 vs 0.6). But with the current estimates, the base row lookup has more weight than the index lookup.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13553053_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13553053_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 19:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T19:56:57+0000\'\u003e14\\/Jan\\/13 19:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Most likely using 1 as floor would be sufficient to make the optimizer pick the unique index. The optimizer trace above suggests that the lookup in the non-unique index will have a cost of 20.04, whereas the lookup in the unique index has cost 1.575. So if the two had the exact same estimated cost for the additional base table fetch, the unique index plan would be preferred. Presumably... \\n\\n FromBaseTable.estimateCost() already has code to handle something that sounds like a very similar case: \\n\\n \\t\\t\\t\\t\\/* oneRowResultSetForSomeConglom means there\'s a unique index, but certainly \\n \\n\\t not this one since we are here.  If store knows this non-unique index \\n\\t won\'t return any row or just returns one row (eg., the predicate is a \\n\\t comparison with constant or almost empty table), we do minor adjustment \\n\\t on cost (affecting decision for covering index) and rc (decision for \\n\\t non-covering). The purpose is favoring unique index. beetle 5006. \\n\\t\\t\\t\\t *\\/ \\n\\t\\t\\t\\tif (oneRowResultSetForSomeConglom &amp;&amp; costEstimate.rowCount() &lt;= 1)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tcostEstimate.setCost(costEstimate.getEstimatedCost() * 2,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t costEstimate.rowCount() + 2,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t costEstimate.singleScanRowCount() + 2);\\n\\t\\t\\t\\t} \\n \\n\\n\\n Maybe we could change this code to add even more bias towards the unique index. \\n\\n Another thing to consider, is whether the cost estimates give a realistic picture of the actual cost. I find it puzzling that the estimates for looking up the key in an index is somewhere between 1.5 and 20, whereas looking up the base row with the row location fetched from the index, adds more than 100 to the cost. I\'d expect those two costs to be about the same size. And if they were, the difference in index lookup cost (1.5 vs 20) would have dominated the difference in base row lookups (1 vs 0.6). But with the current estimates, the base row lookup has more weight than the index lookup.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13553223\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13553223&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13553223\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13553223_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13553223_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 22:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T22:48:31+0000\'\u003e14\\/Jan\\/13 22:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe costing is based a some very simplistic tests run at store level on a machine from probably 10 years ago.  I don\'t know if the actual relative performance is valid anymore, but as an\u003cbr\\/\u003e\\nexplanation for what you are seeing I can give the following.  The cost comes from a couple of things, where #2 below is usually the reason why the cost of looking up base row is higher\u003cbr\\/\u003e\\nthan index:\u003cbr\\/\u003e\\n1) finding the beginning of the right row on the page (whether it is an index or a base page)\u003cbr\\/\u003e\\n2) copying the data out of store into the datastructure provided by language.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor #1 the rowlocation is not an actual offset on the page in the base table - it is the ID of the row, so in the worst case you may have to do some sort of sequencial scan of the offset table to \u003cbr\\/\u003e\\nfind the row.  There are hints and caches that try to optimize this.  In the index case there is a binary search to find the row.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor #2 at least at the time was a very dominent part of the cost, and at least for the estimate is linearly related to the length of the data being gotten.  With estimates necessary about the\u003cbr\\/\u003e\\nlength of the data based on datatype and I think the number of rows and the number of pages in the table - this estimate may be a problem again in a very short table or maybe does not handle allocated but not used pages very well.  In general index length is much shorter than data length.  I know there are problems with length cost estimates for blobs for instance.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13553223_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13553223_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'14\\/Jan\\/13 22:48\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-14T22:48:31+0000\'\u003e14\\/Jan\\/13 22:48\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The costing is based a some very simplistic tests run at store level on a machine from probably 10 years ago.  I don\'t know if the actual relative performance is valid anymore, but as an \\nexplanation for what you are seeing I can give the following.  The cost comes from a couple of things, where #2 below is usually the reason why the cost of looking up base row is higher \\nthan index: \\n1) finding the beginning of the right row on the page (whether it is an index or a base page) \\n2) copying the data out of store into the datastructure provided by language. \\n\\n For #1 the rowlocation is not an actual offset on the page in the base table - it is the ID of the row, so in the worst case you may have to do some sort of sequencial scan of the offset table to  \\nfind the row.  There are hints and caches that try to optimize this.  In the index case there is a binary search to find the row. \\n\\n For #2 at least at the time was a very dominent part of the cost, and at least for the estimate is linearly related to the length of the data being gotten.  With estimates necessary about the \\nlength of the data based on datatype and I think the number of rows and the number of pages in the table - this estimate may be a problem again in a very short table or maybe does not handle allocated but not used pages very well.  In general index length is much shorter than data length.  I know there are problems with length cost estimates for blobs for instance.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13553741\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13553741&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13553741\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13553741_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13553741_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Jan\\/13 12:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-15T12:44:48+0000\'\u003e15\\/Jan\\/13 12:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe code I mentioned in FromBaseTable.estimateCost() does not come into play here because it is only used if the row count of the non-unique index is &lt;= 1. In this query, the estimated row count is 6 (because the 10% selectivity of the predicate hasn\'t been applied yet).\u003c\\/p\u003e\\n\\n\u003cp\u003eSince we know at this point that there is a unique index, and that we have equality predicates for each column in the key, we also know that the unique index is guaranteed to return at most one row. So do we really need to check if the row count of the non-unique index is &lt;= 1 to determine that it\'s reasonable to favor the unique index? The more rows we expect from the non-unique index, the more likely it is that the unique index is a better choice, I would think.\u003c\\/p\u003e\\n\\n\u003cp\u003eI tried to change\u003cbr\\/\u003e\\n    if (oneRowResultSetForSomeConglom &amp;&amp; costEstimate.rowCount() &lt;= 1)\u003cbr\\/\u003e\\nto\u003cbr\\/\u003e\\n    if (oneRowResultSetForSomeConglom &amp;&amp; costEstimate.rowCount() &lt;= 10)\u003cbr\\/\u003e\\nor just\u003cbr\\/\u003e\\n    if (oneRowResultSetForSomeConglom)\u003c\\/p\u003e\\n\\n\u003cp\u003eBoth of the alternatives made the test pick the unique index, and the deadlocks on the jobqueue table went away.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13553741_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13553741_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'15\\/Jan\\/13 12:44\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-15T12:44:48+0000\'\u003e15\\/Jan\\/13 12:44\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The code I mentioned in FromBaseTable.estimateCost() does not come into play here because it is only used if the row count of the non-unique index is &lt;= 1. In this query, the estimated row count is 6 (because the 10% selectivity of the predicate hasn\'t been applied yet). \\n\\n Since we know at this point that there is a unique index, and that we have equality predicates for each column in the key, we also know that the unique index is guaranteed to return at most one row. So do we really need to check if the row count of the non-unique index is &lt;= 1 to determine that it\'s reasonable to favor the unique index? The more rows we expect from the non-unique index, the more likely it is that the unique index is a better choice, I would think. \\n\\n I tried to change \\n    if (oneRowResultSetForSomeConglom &amp;&amp; costEstimate.rowCount() &lt;= 1) \\nto \\n    if (oneRowResultSetForSomeConglom &amp;&amp; costEstimate.rowCount() &lt;= 10) \\nor just \\n    if (oneRowResultSetForSomeConglom) \\n\\n Both of the alternatives made the test pick the unique index, and the deadlocks on the jobqueue table went away.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13554954\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13554954&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13554954\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13554954_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13554954_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Jan\\/13 11:37\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-16T11:37:10+0000\'\u003e16\\/Jan\\/13 11:37\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eIn case someone wonders why the estimated row count is 6 for the empty index, that\'s because\u003c\\/p\u003e\\n\\n\u003cp\u003e1) OpenBTree.getEstimatedRowCount() adjusts the row count for empty indexes from 0 to 1, with the following rationale:\u003c\\/p\u003e\\n\\n\u003cp\u003e        \\/\\/ Don\'t return 0 rows (return 1 instead), as this often leads the \u003cbr\\/\u003e\\n        \\/\\/ optimizer to produce plans which don\'t use indexes because of the 0 \u003cbr\\/\u003e\\n        \\/\\/ row edge case.\u003cbr\\/\u003e\\n        \\/\\/\u003cbr\\/\u003e\\n        \\/\\/ Eventually the plan is recompiled when rows are added, but we\u003cbr\\/\u003e\\n        \\/\\/ have seen multiple customer cases of deadlocks and timeouts \u003cbr\\/\u003e\\n        \\/\\/ because of these 0 row based plans.  \u003c\\/p\u003e\\n\\n\u003cp\u003e2) FromBaseTable.estimateCost() adds 5 to the row count with this comment:\u003c\\/p\u003e\\n\\n\u003cp\u003e\\t\\t\\t\\/* we prefer index than table scan for concurrency reason, by a small\u003c\\/p\u003e\\n\u003cul\u003e\\n\\t\u003cli\u003eadjustment on estimated row count.  This affects optimizer\'s decision\u003c\\/li\u003e\\n\\t\u003cli\u003eespecially when few rows are in table. beetle 5006. This makes sense\u003c\\/li\u003e\\n\\t\u003cli\u003esince the plan may stay long before we actually check and invalidate it.\u003c\\/li\u003e\\n\\t\u003cli\u003eAnd new rows may be inserted before we check and invalidate the plan.\u003c\\/li\u003e\\n\\t\u003cli\u003eHere we only prefer index that has start\\/stop key from predicates. Non-\u003c\\/li\u003e\\n\\t\u003cli\u003econstant start\\/stop key case is taken care of by selectivity later.\u003cbr\\/\u003e\\n\\t\\t\\t *\\/\u003c\\/li\u003e\\n\u003c\\/ul\u003e\\n\\n\\n\u003cp\u003eIf we\'d skipped (2), the estimated row count would stayed at 1, and the aforementioned adjustment of the cost in FromBaseTable to prefer unique indexes would have been applied. So even though the two adjustments in FromBaseTable have the same goal, they end up canceling each other.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13554954_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13554954_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Jan\\/13 11:37\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-16T11:37:10+0000\'\u003e16\\/Jan\\/13 11:37\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    In case someone wonders why the estimated row count is 6 for the empty index, that\'s because \\n\\n 1) OpenBTree.getEstimatedRowCount() adjusts the row count for empty indexes from 0 to 1, with the following rationale: \\n\\n         \\/\\/ Don\'t return 0 rows (return 1 instead), as this often leads the  \\n        \\/\\/ optimizer to produce plans which don\'t use indexes because of the 0  \\n        \\/\\/ row edge case. \\n        \\/\\/ \\n        \\/\\/ Eventually the plan is recompiled when rows are added, but we \\n        \\/\\/ have seen multiple customer cases of deadlocks and timeouts  \\n        \\/\\/ because of these 0 row based plans.   \\n\\n 2) FromBaseTable.estimateCost() adds 5 to the row count with this comment: \\n\\n \\t\\t\\t\\/* we prefer index than table scan for concurrency reason, by a small \\n \\n\\t adjustment on estimated row count.  This affects optimizer\'s decision \\n\\t especially when few rows are in table. beetle 5006. This makes sense \\n\\t since the plan may stay long before we actually check and invalidate it. \\n\\t And new rows may be inserted before we check and invalidate the plan. \\n\\t Here we only prefer index that has start\\/stop key from predicates. Non- \\n\\t constant start\\/stop key case is taken care of by selectivity later. \\n\\t\\t\\t *\\/ \\n \\n\\n\\n If we\'d skipped (2), the estimated row count would stayed at 1, and the aforementioned adjustment of the cost in FromBaseTable to prefer unique indexes would have been applied. So even though the two adjustments in FromBaseTable have the same goal, they end up canceling each other.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13555252\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13555252&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13555252\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13555252_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13555252_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Jan\\/13 17:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-16T17:47:09+0000\'\u003e16\\/Jan\\/13 17:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttached is a patch that makes FromBaseTable.estimateCost() adjust the estimated cost of the non-unique index scan to make it more likely that the unique index scan will be picked, if we know that a unique index could be used and that we have equality predicates for all columns in the key.\u003c\\/p\u003e\\n\\n\u003cp\u003eWithout the patch, we only did this if the non-unique index was expected to return 0 or 1 row. If the non-unique index returns more than 1 row, it should make even more sense to pick the unique index, so it sounds safe to do this unconditionally when we know definitely that the unique index doesn\'t return more than one row.\u003c\\/p\u003e\\n\\n\u003cp\u003eThere\'s no test case in the patch, but if it sounds like an OK fix, we could add a test case that uses the script from my 14\\/Jan\\/13 17:17 comment, and check that the query plan uses the unique index.\u003c\\/p\u003e\\n\\n\u003cp\u003eRegression tests ran cleanly with the patch. Also, the ManifoldCF test passes most times, but occasionally fails with a deadlock on another table. That\'s probably a different problem, though.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13555252_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13555252_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Jan\\/13 17:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-16T17:47:09+0000\'\u003e16\\/Jan\\/13 17:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attached is a patch that makes FromBaseTable.estimateCost() adjust the estimated cost of the non-unique index scan to make it more likely that the unique index scan will be picked, if we know that a unique index could be used and that we have equality predicates for all columns in the key. \\n\\n Without the patch, we only did this if the non-unique index was expected to return 0 or 1 row. If the non-unique index returns more than 1 row, it should make even more sense to pick the unique index, so it sounds safe to do this unconditionally when we know definitely that the unique index doesn\'t return more than one row. \\n\\n There\'s no test case in the patch, but if it sounds like an OK fix, we could add a test case that uses the script from my 14\\/Jan\\/13 17:17 comment, and check that the query plan uses the unique index. \\n\\n Regression tests ran cleanly with the patch. Also, the ManifoldCF test passes most times, but occasionally fails with a deadlock on another table. That\'s probably a different problem, though.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13555857\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13555857&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13555857\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dagw\\\" id=\\\"commentauthor_13555857_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dagw\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dagw\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Dag H. Wanvik\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13555857_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 04:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T04:55:37+0000\'\u003e17\\/Jan\\/13 04:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI don\'t know this code, but reading your comments and looking at code and patch, the explanation and patch seem reasonable to me.\u003c\\/p\u003e\\n\\n\u003cp\u003eI think adding a regression tests as you suggest is a good idea, for optimizer changes it would be especially good to have more regression tests since change in one location can easily have impact elsewhere due to the nature of the problem. \u003c\\/p\u003e\\n\\n\u003cp\u003eIt seems that this change wouldn\'t be harmful in a join context though, if anything it would inform the optimizer better on the branch cost.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"dagw\\\" id=\\\"commentauthor_13555857_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=dagw\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"dagw\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Dag H. Wanvik\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13555857_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 04:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T04:55:37+0000\'\u003e17\\/Jan\\/13 04:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I don\'t know this code, but reading your comments and looking at code and patch, the explanation and patch seem reasonable to me. \\n\\n I think adding a regression tests as you suggest is a good idea, for optimizer changes it would be especially good to have more regression tests since change in one location can easily have impact elsewhere due to the nature of the problem.  \\n\\n It seems that this change wouldn\'t be harmful in a join context though, if anything it would inform the optimizer better on the branch cost.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13556263\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13556263&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13556263\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bryanpendleton\\\" id=\\\"commentauthor_13556263_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bryanpendleton\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bryanpendleton\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Bryan Pendleton\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13556263_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 15:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T15:17:27+0000\'\u003e17\\/Jan\\/13 15:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI have no objections to the proposed patch. Favoring a unique index over a non-unique\u003cbr\\/\u003e\\nindex seems like a good general principle.\u003c\\/p\u003e\\n\\n\u003cp\u003eAre there complexities when the indexes are compound (multi-column), and contain\u003cbr\\/\u003e\\ndifferent sets of columns, and the WHERE clause specifies criteria that don\'t mention\u003cbr\\/\u003e\\nthe entire set of columns of any index?\u003c\\/p\u003e\\n\\n\u003cp\u003eFor example, if there was a unique index on columns (A, B, C), and a non-unique\u003cbr\\/\u003e\\nindex on columns (B, E), and the query specifies B=7 and C=9, is it obvious that\u003cbr\\/\u003e\\nwe should then favor the unique index?\u003c\\/p\u003e\\n\\n\u003cp\u003eIn the past, when confronted with tables that had unexpected concurrency hotspots\u003cbr\\/\u003e\\nbecause they were very small, I have used the technique (in my application) of adding\u003cbr\\/\u003e\\nlarge dummy data columns at the end of the rows, thus artificially bloating up my\u003cbr\\/\u003e\\ndata so that rows are pushed to separate pages and the optimizer is less likely to\u003cbr\\/\u003e\\nprefer scans and more likely to favor indexes.\u003c\\/p\u003e\\n\\n\u003cp\u003eWould that application technique be beneficial here?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"bryanpendleton\\\" id=\\\"commentauthor_13556263_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=bryanpendleton\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"bryanpendleton\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Bryan Pendleton\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13556263_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 15:17\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T15:17:27+0000\'\u003e17\\/Jan\\/13 15:17\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I have no objections to the proposed patch. Favoring a unique index over a non-unique \\nindex seems like a good general principle. \\n\\n Are there complexities when the indexes are compound (multi-column), and contain \\ndifferent sets of columns, and the WHERE clause specifies criteria that don\'t mention \\nthe entire set of columns of any index? \\n\\n For example, if there was a unique index on columns (A, B, C), and a non-unique \\nindex on columns (B, E), and the query specifies B=7 and C=9, is it obvious that \\nwe should then favor the unique index? \\n\\n In the past, when confronted with tables that had unexpected concurrency hotspots \\nbecause they were very small, I have used the technique (in my application) of adding \\nlarge dummy data columns at the end of the rows, thus artificially bloating up my \\ndata so that rows are pushed to separate pages and the optimizer is less likely to \\nprefer scans and more likely to favor indexes. \\n\\n Would that application technique be beneficial here?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13556270\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13556270&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13556270\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13556270_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13556270_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 15:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T15:27:14+0000\'\u003e17\\/Jan\\/13 15:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003e@Bryan: The application technique is not very helpful, since ManifoldCF runs on a number of databases and we really would not want to encumber the use of other databases in order to support Derby.\u003c\\/p\u003e\\n\\n\u003cp\u003eSecond, the ability to use an index does not work as you specify for most databases.  If an index is on (A, B, C), you can often use the index if there is a WHERE using A and B, but you can\'t usually use that index if the WHERE is on any columns that don\'t include A.  So your hypothetical situation is not valid.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13556270_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13556270_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 15:27\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T15:27:14+0000\'\u003e17\\/Jan\\/13 15:27\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    @Bryan: The application technique is not very helpful, since ManifoldCF runs on a number of databases and we really would not want to encumber the use of other databases in order to support Derby. \\n\\n Second, the ability to use an index does not work as you specify for most databases.  If an index is on (A, B, C), you can often use the index if there is a WHERE using A and B, but you can\'t usually use that index if the WHERE is on any columns that don\'t include A.  So your hypothetical situation is not valid.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13556601\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13556601&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13556601\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13556601_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13556601_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 21:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T21:14:23+0000\'\u003e17\\/Jan\\/13 21:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHi Knut, thanks for the patch. I am looking at the issue to see what existing query plans will change because of the patch. \u003c\\/p\u003e\\n\\n\u003cp\u003eIs it correct that all the queries which are \u003cb\u003ecompletly\u003c\\/b\u003e covered by an unique index will now choose that unique index? Without the patch, \u003cb\u003eonly\u003c\\/b\u003e queries with very limited data in the table would have picked a non-unique index rather than unique index? I guess what would help is little blurb about what kind of queries will be impacted by this change. Thanks for your work.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13556601_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13556601_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'17\\/Jan\\/13 21:14\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-17T21:14:23+0000\'\u003e17\\/Jan\\/13 21:14\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Hi Knut, thanks for the patch. I am looking at the issue to see what existing query plans will change because of the patch.  \\n\\n Is it correct that all the queries which are  completly  covered by an unique index will now choose that unique index? Without the patch,  only  queries with very limited data in the table would have picked a non-unique index rather than unique index? I guess what would help is little blurb about what kind of queries will be impacted by this change. Thanks for your work.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13557133\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13557133&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13557133\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13557133_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557133_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 10:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T10:57:33+0000\'\u003e18\\/Jan\\/13 10:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for the feedback, Dag, Bryan and Mamta.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; For example, if there was a unique index on columns (A, B, C), and a non-unique\u003cbr\\/\u003e\\n&gt; index on columns (B, E), and the query specifies B=7 and C=9, is it obvious that\u003cbr\\/\u003e\\n&gt; we should then favor the unique index?\u003c\\/p\u003e\\n\\n\u003cp\u003eIn that example, this particular adjustment of the cost is not performed. It is\u003cbr\\/\u003e\\ncurrently done only if\u003c\\/p\u003e\\n\\n\u003cp\u003e1) There is a unique index on the table, and\u003c\\/p\u003e\\n\\n\u003cp\u003e2) The query contains equality predicates for all columns in the unique index, and\u003c\\/p\u003e\\n\\n\u003cp\u003e3) Estimated row count of the access path that\'s being explored (not the unique\u003cbr\\/\u003e\\nindex) has expected row count less than or equal to 1 before selectivity is\u003cbr\\/\u003e\\napplied\u003c\\/p\u003e\\n\\n\u003cp\u003eThe example query does not satisfy requirement (2), as it doesn\'t have an\u003cbr\\/\u003e\\nequality predicate for column A. The patch only removes requirement (3), so it\u003cbr\\/\u003e\\nshouldn\'t have any effect on such a query.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; In the past, when confronted with tables that had unexpected concurrency hotspots\u003cbr\\/\u003e\\n&gt; because they were very small, I have used the technique (in my application) of adding\u003cbr\\/\u003e\\n&gt; large dummy data columns at the end of the rows, thus artificially bloating up my\u003cbr\\/\u003e\\n&gt; data so that rows are pushed to separate pages and the optimizer is less likely to\u003cbr\\/\u003e\\n&gt; prefer scans and more likely to favor indexes.\u003cbr\\/\u003e\\n&gt;\u003cbr\\/\u003e\\n&gt; Would that application technique be beneficial here?\u003c\\/p\u003e\\n\\n\u003cp\u003eIf the JOBQUEUE table has three or more rows at the time the query is compiled,\u003cbr\\/\u003e\\nthe unique index is chosen, so the problem can be worked around that way if the\u003cbr\\/\u003e\\napplication logic accepts it. It also looks like turning off cost-based\u003cbr\\/\u003e\\noptimization (by setting the derby.optimizer.ruleBasedOptimization property to\u003cbr\\/\u003e\\ntrue) makes it pick the unique index. But that may have other unwanted effects,\u003cbr\\/\u003e\\nand I don\'t think the rule-based optimizer is a documented feature.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Is it correct that all the queries which are \u003cb\u003ecompletly\u003c\\/b\u003e covered by an unique\u003cbr\\/\u003e\\n&gt; index will now choose that unique index?\u003c\\/p\u003e\\n\\n\u003cp\u003eThis particular optimization does not take into consideration whether or not\u003cbr\\/\u003e\\nthe index is covering. The unique index in the ManifoldCF test case is in fact\u003cbr\\/\u003e\\nnot a covering index.\u003c\\/p\u003e\\n\\n\u003cp\u003eI don\'t believe the patch will make all queries will pick a unique covering\u003cbr\\/\u003e\\nindex if one is available, for two reasons:\u003c\\/p\u003e\\n\\n\u003cp\u003e1) The optimization is only applied if there are equality predicates for all\u003cbr\\/\u003e\\nindex columns, so the patch won\'t make a multi-row scan on a unique index any\u003cbr\\/\u003e\\nmore likely than it currently is.\u003c\\/p\u003e\\n\\n\u003cp\u003e2) It\'s just an adjustment of the cost, not a guarantee that the unique index\u003cbr\\/\u003e\\nwill be picked. There could still be other factors that make the overall\u003cbr\\/\u003e\\nestimated cost for the unique index higher than some other alternative.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; Without the patch, \u003cb\u003eonly\u003c\\/b\u003e queries with very limited data in the table would\u003cbr\\/\u003e\\n&gt; have picked a non-unique index rather than unique index?\u003c\\/p\u003e\\n\\n\u003cp\u003eYes, that\'s right. The intention of the current code seems to be that those\u003cbr\\/\u003e\\nqueries should have been using the unique index too. Unfortunately, another\u003cbr\\/\u003e\\noptimizer tweak (see my comment from 16\\/Jan\\/13 12:37) makes the table appear\u003cbr\\/\u003e\\nnot so empty, and the cost adjustment in favor of the unique index is not\u003cbr\\/\u003e\\napplied.\u003c\\/p\u003e\\n\\n\u003cp\u003e&gt; I guess what would help is little blurb about what kind of queries will be\u003cbr\\/\u003e\\n&gt; impacted by this change.\u003c\\/p\u003e\\n\\n\u003cp\u003eI\'ll see if I can come up with some kind of systematic description of the\u003cbr\\/\u003e\\nchanges we should expect.\u003c\\/p\u003e\\n\\n\u003cp\u003eThanks.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13557133_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557133_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 10:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T10:57:33+0000\'\u003e18\\/Jan\\/13 10:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for the feedback, Dag, Bryan and Mamta. \\n\\n &gt; For example, if there was a unique index on columns (A, B, C), and a non-unique \\n&gt; index on columns (B, E), and the query specifies B=7 and C=9, is it obvious that \\n&gt; we should then favor the unique index? \\n\\n In that example, this particular adjustment of the cost is not performed. It is \\ncurrently done only if \\n\\n 1) There is a unique index on the table, and \\n\\n 2) The query contains equality predicates for all columns in the unique index, and \\n\\n 3) Estimated row count of the access path that\'s being explored (not the unique \\nindex) has expected row count less than or equal to 1 before selectivity is \\napplied \\n\\n The example query does not satisfy requirement (2), as it doesn\'t have an \\nequality predicate for column A. The patch only removes requirement (3), so it \\nshouldn\'t have any effect on such a query. \\n\\n &gt; In the past, when confronted with tables that had unexpected concurrency hotspots \\n&gt; because they were very small, I have used the technique (in my application) of adding \\n&gt; large dummy data columns at the end of the rows, thus artificially bloating up my \\n&gt; data so that rows are pushed to separate pages and the optimizer is less likely to \\n&gt; prefer scans and more likely to favor indexes. \\n&gt; \\n&gt; Would that application technique be beneficial here? \\n\\n If the JOBQUEUE table has three or more rows at the time the query is compiled, \\nthe unique index is chosen, so the problem can be worked around that way if the \\napplication logic accepts it. It also looks like turning off cost-based \\noptimization (by setting the derby.optimizer.ruleBasedOptimization property to \\ntrue) makes it pick the unique index. But that may have other unwanted effects, \\nand I don\'t think the rule-based optimizer is a documented feature. \\n\\n &gt; Is it correct that all the queries which are  completly  covered by an unique \\n&gt; index will now choose that unique index? \\n\\n This particular optimization does not take into consideration whether or not \\nthe index is covering. The unique index in the ManifoldCF test case is in fact \\nnot a covering index. \\n\\n I don\'t believe the patch will make all queries will pick a unique covering \\nindex if one is available, for two reasons: \\n\\n 1) The optimization is only applied if there are equality predicates for all \\nindex columns, so the patch won\'t make a multi-row scan on a unique index any \\nmore likely than it currently is. \\n\\n 2) It\'s just an adjustment of the cost, not a guarantee that the unique index \\nwill be picked. There could still be other factors that make the overall \\nestimated cost for the unique index higher than some other alternative. \\n\\n &gt; Without the patch,  only  queries with very limited data in the table would \\n&gt; have picked a non-unique index rather than unique index? \\n\\n Yes, that\'s right. The intention of the current code seems to be that those \\nqueries should have been using the unique index too. Unfortunately, another \\noptimizer tweak (see my comment from 16\\/Jan\\/13 12:37) makes the table appear \\nnot so empty, and the cost adjustment in favor of the unique index is not \\napplied. \\n\\n &gt; I guess what would help is little blurb about what kind of queries will be \\n&gt; impacted by this change. \\n\\n I\'ll see if I can come up with some kind of systematic description of the \\nchanges we should expect. \\n\\n Thanks.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13557374\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13557374&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13557374\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13557374_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557374_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 17:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T17:31:06+0000\'\u003e18\\/Jan\\/13 17:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWhen we add regression tests for this jira, I think it will be good to add a regression test in upgrade suite as well showing that prior releases would pick non-unique index for the given dataset but trunk will pick unique index instead. Thanks.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13557374_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557374_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 17:31\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T17:31:06+0000\'\u003e18\\/Jan\\/13 17:31\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    When we add regression tests for this jira, I think it will be good to add a regression test in upgrade suite as well showing that prior releases would pick non-unique index for the given dataset but trunk will pick unique index instead. Thanks.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13557452\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13557452&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13557452\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13557452_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557452_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 18:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T18:32:37+0000\'\u003e18\\/Jan\\/13 18:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks Knut, your following comments make it most clear for me.  I have a hard time reading the optimizer code and getting\u003cbr\\/\u003e\\nthat info.  Maybe you could beef up the comments in this area with your clear explanation of the code path.  \u003c\\/p\u003e\\n\\n\u003cp\u003eIt seems clear to me that given the following that the change is a good one, is essence improving the estimate guess in the\u003cbr\\/\u003e\\nnon-unique index by taking advantage of knowledge about the unique index on the same columns.\u003c\\/p\u003e\\n\\n\u003cp\u003eIn that example, this particular adjustment of the cost is not performed. It is\u003cbr\\/\u003e\\ncurrently done only if\u003c\\/p\u003e\\n\\n\u003cp\u003e1) There is a unique index on the table, and\u003c\\/p\u003e\\n\\n\u003cp\u003e2) The query contains equality predicates for all columns in the unique index, and\u003c\\/p\u003e\\n\\n\u003cp\u003e3) Estimated row count of the access path that\'s being explored (not the unique\u003cbr\\/\u003e\\nindex) has expected row count less than or equal to 1 before selectivity is\u003cbr\\/\u003e\\napplied\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13557452_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557452_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 18:32\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T18:32:37+0000\'\u003e18\\/Jan\\/13 18:32\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks Knut, your following comments make it most clear for me.  I have a hard time reading the optimizer code and getting \\nthat info.  Maybe you could beef up the comments in this area with your clear explanation of the code path.   \\n\\n It seems clear to me that given the following that the change is a good one, is essence improving the estimate guess in the \\nnon-unique index by taking advantage of knowledge about the unique index on the same columns. \\n\\n In that example, this particular adjustment of the cost is not performed. It is \\ncurrently done only if \\n\\n 1) There is a unique index on the table, and \\n\\n 2) The query contains equality predicates for all columns in the unique index, and \\n\\n 3) Estimated row count of the access path that\'s being explored (not the unique \\nindex) has expected row count less than or equal to 1 before selectivity is \\napplied              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13557498\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13557498&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13557498\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13557498_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557498_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 19:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T19:15:07+0000\'\u003e18\\/Jan\\/13 19:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eKnut, please correct me if my following understanding of this jira is wrong. I am also looking forward to your \\\"some kind of systematic description of the changes we should expect.\\\"\u003c\\/p\u003e\\n\\n\u003cp\u003eThe proposed fix adjusts the estimated cost for the query plan such that unique index will be favored over non-unique index if there is equality predicate for all the index columns of the unique index. In a table with enough data, even without the proposed changes, the unique index would have weighted higher automatically because of the number of rows in the table but for edge case with very few rows, non-unique index will appear better without the proposed change. Also, if I understand the change correctly, this change will in theory impact only edge case queries where the table in question has only couple rows. The behavior of all the other queries will remain unchanged.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13557498_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13557498_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'18\\/Jan\\/13 19:15\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-18T19:15:07+0000\'\u003e18\\/Jan\\/13 19:15\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Knut, please correct me if my following understanding of this jira is wrong. I am also looking forward to your \\\"some kind of systematic description of the changes we should expect.\\\" \\n\\n The proposed fix adjusts the estimated cost for the query plan such that unique index will be favored over non-unique index if there is equality predicate for all the index columns of the unique index. In a table with enough data, even without the proposed changes, the unique index would have weighted higher automatically because of the number of rows in the table but for edge case with very few rows, non-unique index will appear better without the proposed change. Also, if I understand the change correctly, this change will in theory impact only edge case queries where the table in question has only couple rows. The behavior of all the other queries will remain unchanged.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13558697\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13558697&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13558697\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13558697_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13558697_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Jan\\/13 11:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-21T11:20:32+0000\'\u003e21\\/Jan\\/13 11:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks, Mike and Mamta. Mike\'s description of the problem and Mamta\'s description of fix agree with my understanding this code.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe set of queries that will use this particular optimizer tweak after the suggested fix (set A), are those that access a table that has a unique index, and that have equality predicates for all the columns in that index. All plans which do not use such an index to access that table, will get their cost adjusted (scan cost is multiplied by 2, scan row count before selectivity adjustment is incremented by 2).\u003c\\/p\u003e\\n\\n\u003cp\u003eThe set of queries that will see changes in cost estimates for some plans because of the suggested fix (set B), is the subset of A where the optimizer believes one or more of the scan alternatives will have to read more than one row. This includes these two categories:\u003c\\/p\u003e\\n\\n\u003cp\u003e  i) Queries where the row count statistics actually do indicate that multiple rows will have to be read. That is, the table contains multiple rows.\u003c\\/p\u003e\\n\\n\u003cp\u003e  ii) Queries where the fix for beetle 5006 makes an empty or almost empty table appear not so empty. That is, if the alternatives include index scans with no constant start or stop keys, or full table scans. (Note: parameters are not considered constant start or stop keys, so \\\"our\\\" query falls into this category.)\u003c\\/p\u003e\\n\\n\u003cp\u003eThe set of queries that will see that a different plan being picked after the fix (set C), is the subset of B where all of the following conditions apply:\u003c\\/p\u003e\\n\\n\u003cp\u003e  i) The unique index is not covering, so that an index-to-base-row result set will be needed.\u003c\\/p\u003e\\n\\n\u003cp\u003e  ii) One of the alternative scans is expected to return &lt; 1 row (after selectivity has been applied).\u003c\\/p\u003e\\n\\n\u003cp\u003e  iii) The estimated cost of reading a row from the base table is so high that the difference between reading less than 1 row and reading exactly 1 row, is greater than the difference in cost between the unique index lookup and the alternative scan.\u003c\\/p\u003e\\n\\n\u003cp\u003eSet C should be a lot smaller than set B, as most queries are against non-empty tables. Those queries should already be using the unique index because the optimizer understands that the non-unique alternatives will have to fetch at least as many rows from the base table. The costs of the plans using non-unique scans are still adjusted, but they\'re already believed to be more expensive, so it doesn\'t change the outcome.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13558697_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13558697_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Jan\\/13 11:20\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-21T11:20:32+0000\'\u003e21\\/Jan\\/13 11:20\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks, Mike and Mamta. Mike\'s description of the problem and Mamta\'s description of fix agree with my understanding this code. \\n\\n The set of queries that will use this particular optimizer tweak after the suggested fix (set A), are those that access a table that has a unique index, and that have equality predicates for all the columns in that index. All plans which do not use such an index to access that table, will get their cost adjusted (scan cost is multiplied by 2, scan row count before selectivity adjustment is incremented by 2). \\n\\n The set of queries that will see changes in cost estimates for some plans because of the suggested fix (set B), is the subset of A where the optimizer believes one or more of the scan alternatives will have to read more than one row. This includes these two categories: \\n\\n   i) Queries where the row count statistics actually do indicate that multiple rows will have to be read. That is, the table contains multiple rows. \\n\\n   ii) Queries where the fix for beetle 5006 makes an empty or almost empty table appear not so empty. That is, if the alternatives include index scans with no constant start or stop keys, or full table scans. (Note: parameters are not considered constant start or stop keys, so \\\"our\\\" query falls into this category.) \\n\\n The set of queries that will see that a different plan being picked after the fix (set C), is the subset of B where all of the following conditions apply: \\n\\n   i) The unique index is not covering, so that an index-to-base-row result set will be needed. \\n\\n   ii) One of the alternative scans is expected to return &lt; 1 row (after selectivity has been applied). \\n\\n   iii) The estimated cost of reading a row from the base table is so high that the difference between reading less than 1 row and reading exactly 1 row, is greater than the difference in cost between the unique index lookup and the alternative scan. \\n\\n Set C should be a lot smaller than set B, as most queries are against non-empty tables. Those queries should already be using the unique index because the optimizer understands that the non-unique alternatives will have to fetch at least as many rows from the base table. The costs of the plans using non-unique scans are still adjusted, but they\'re already believed to be more expensive, so it doesn\'t change the outcome.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13558788\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13558788&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13558788\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13558788_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13558788_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Jan\\/13 14:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-21T14:21:18+0000\'\u003e21\\/Jan\\/13 14:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThe suggested fix only works if the cost we add to the non-unique index scan is sufficiently big to out-weigh the difference in cost for fetching the base row.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe fix is sufficient in the original query, as the difference in base row cost isn\'t  0.6 base row retrievals (non-unique index) vs 1 base row (unique index).\u003c\\/p\u003e\\n\\n\u003cp\u003eIt does not seem to be sufficient for this similar query, though:\u003c\\/p\u003e\\n\\n\u003cp\u003ecreate table t1(c1 int not null, c2 int not null, c3 int not null, c4 int not null, c5 blob);\u003cbr\\/\u003e\\ncreate index idx3 on t1(c1, c2, c3);\u003cbr\\/\u003e\\ncreate unique index uidx4 on t1(c1, c2, c3, c4);\u003c\\/p\u003e\\n\\n\u003cp\u003eprepare ps as \'select * from t1 where c1 = ? and c2 = ? and c3 = ? and c4 = ?\';\u003cbr\\/\u003e\\nexecute ps using \'values (1,2,3,4)\';\u003c\\/p\u003e\\n\\n\u003cp\u003eHere, we\'d want the SELECT statement to use the unique index UIDX4, but the optimizer picks the non-unique index IDX3. The unique index is better because it reads fewer rows from the index (or at least no more rows than the non-unique index), fewer rows from the base table.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe reason why it ends up using the non-unique index, is that the higher number of predicates in this query makes the selectivity very low, so the estimated number of rows returned by the non-unique index is 0.01. That means the estimated cost of the base row fetch operation is 100 times higher for the unique index, where the estimated row count is 1.\u003c\\/p\u003e\\n\\n\u003cp\u003eFor this query, Mike\'s suggestion of using a floor of 1.0 for the row count would probably work better. That should also help the query we looked at originally. I\'ll investigate and see if that\'s a viable alternative.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13558788_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13558788_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'21\\/Jan\\/13 14:21\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-21T14:21:18+0000\'\u003e21\\/Jan\\/13 14:21\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    The suggested fix only works if the cost we add to the non-unique index scan is sufficiently big to out-weigh the difference in cost for fetching the base row. \\n\\n The fix is sufficient in the original query, as the difference in base row cost isn\'t  0.6 base row retrievals (non-unique index) vs 1 base row (unique index). \\n\\n It does not seem to be sufficient for this similar query, though: \\n\\n create table t1(c1 int not null, c2 int not null, c3 int not null, c4 int not null, c5 blob); \\ncreate index idx3 on t1(c1, c2, c3); \\ncreate unique index uidx4 on t1(c1, c2, c3, c4); \\n\\n prepare ps as \'select * from t1 where c1 = ? and c2 = ? and c3 = ? and c4 = ?\'; \\nexecute ps using \'values (1,2,3,4)\'; \\n\\n Here, we\'d want the SELECT statement to use the unique index UIDX4, but the optimizer picks the non-unique index IDX3. The unique index is better because it reads fewer rows from the index (or at least no more rows than the non-unique index), fewer rows from the base table. \\n\\n The reason why it ends up using the non-unique index, is that the higher number of predicates in this query makes the selectivity very low, so the estimated number of rows returned by the non-unique index is 0.01. That means the estimated cost of the base row fetch operation is 100 times higher for the unique index, where the estimated row count is 1. \\n\\n For this query, Mike\'s suggestion of using a floor of 1.0 for the row count would probably work better. That should also help the query we looked at originally. I\'ll investigate and see if that\'s a viable alternative.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13559649\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13559649&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13559649\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13559649_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13559649_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jan\\/13 14:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-22T14:05:28+0000\'\u003e22\\/Jan\\/13 14:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAttaching prefer-unique-index-v2.diff which implements the alternative proposal. The patch also adds a new test that verifies that the unique index is used.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe patch adjusts the cost estimate only if all of the following conditions hold:\u003c\\/p\u003e\\n\\n\u003cp\u003e1) There is a unique index (A) on the table\u003c\\/p\u003e\\n\\n\u003cp\u003e2) The query has equality predicates for all the columns in the unique index A\u003c\\/p\u003e\\n\\n\u003cp\u003e3) There is another index (B) that is either non-unique or unique without satisfying 2.\u003c\\/p\u003e\\n\\n\u003cp\u003e4) Index B is non-covering\u003c\\/p\u003e\\n\\n\u003cp\u003e5) The expected row count when using index B is less than 1\u003c\\/p\u003e\\n\\n\u003cp\u003eIf all of the above conditions hold, the row count for index B is changed to 1 before estimating the cost of fetching rows from the base table.\u003c\\/p\u003e\\n\\n\u003cp\u003eAlthough using the unique index might be slightly more expensive in some cases, it is safer as it will never access more than one row, whereas the non-unique alternative could potentially access many rows.\u003c\\/p\u003e\\n\\n\u003cp\u003eThe third, fourth and fifth select statements in the added test case were not affected by the v1 patch, but the v2 patch makes them all use a unique index.\u003c\\/p\u003e\\n\\n\u003cp\u003eAll the regression tests passed with the patch.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13559649_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13559649_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jan\\/13 14:05\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-22T14:05:28+0000\'\u003e22\\/Jan\\/13 14:05\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Attaching prefer-unique-index-v2.diff which implements the alternative proposal. The patch also adds a new test that verifies that the unique index is used. \\n\\n The patch adjusts the cost estimate only if all of the following conditions hold: \\n\\n 1) There is a unique index (A) on the table \\n\\n 2) The query has equality predicates for all the columns in the unique index A \\n\\n 3) There is another index (B) that is either non-unique or unique without satisfying 2. \\n\\n 4) Index B is non-covering \\n\\n 5) The expected row count when using index B is less than 1 \\n\\n If all of the above conditions hold, the row count for index B is changed to 1 before estimating the cost of fetching rows from the base table. \\n\\n Although using the unique index might be slightly more expensive in some cases, it is safer as it will never access more than one row, whereas the non-unique alternative could potentially access many rows. \\n\\n The third, fourth and fifth select statements in the added test case were not affected by the v1 patch, but the v2 patch makes them all use a unique index. \\n\\n All the regression tests passed with the patch.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13559926\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13559926&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13559926\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13559926_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13559926_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jan\\/13 19:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-22T19:41:24+0000\'\u003e22\\/Jan\\/13 19:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHi Knut, thanks for the new patch. The changes look good to me and the comments in the code is very helpful. I was wondering if it will be possible to add any regression test in upgrade suite to show how prior releases would favor non-unique index to unique index without the fix for \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6011\\\" title=\\\"Derby performs very badly (seems to deadlock and timeout) in very simple multi-threaded tests\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6011\\\"\u003e\u003cdel\u003eDERBY-6011\u003c\\/del\u003e\u003c\\/a\u003e and how trunk will use unique index instead. thanks.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13559926_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13559926_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Jan\\/13 19:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-22T19:41:24+0000\'\u003e22\\/Jan\\/13 19:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Hi Knut, thanks for the new patch. The changes look good to me and the comments in the code is very helpful. I was wondering if it will be possible to add any regression test in upgrade suite to show how prior releases would favor non-unique index to unique index without the fix for   DERBY-6011   and how trunk will use unique index instead. thanks.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13560524\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13560524&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13560524\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13560524_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13560524_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Jan\\/13 09:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-23T09:50:36+0000\'\u003e23\\/Jan\\/13 09:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks, Mamta. The test case in the patch verifies that the unique index is chosen on trunk. Currently, you have to run it manually against an old version to see that it fails. It is certainly possible to make it run against old versions automatically in the upgrade tests to verify that they pick the inferior plan, but I\'m not sure I see what value it adds. Do you have some specific concern that you want such a test to address? This issue doesn\'t involve the upgrade logic, as far as I can tell.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13560524_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13560524_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Jan\\/13 09:50\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-23T09:50:36+0000\'\u003e23\\/Jan\\/13 09:50\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks, Mamta. The test case in the patch verifies that the unique index is chosen on trunk. Currently, you have to run it manually against an old version to see that it fails. It is certainly possible to make it run against old versions automatically in the upgrade tests to verify that they pick the inferior plan, but I\'m not sure I see what value it adds. Do you have some specific concern that you want such a test to address? This issue doesn\'t involve the upgrade logic, as far as I can tell.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13560811\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13560811&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13560811\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13560811_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13560811_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Jan\\/13 16:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-23T16:39:44+0000\'\u003e23\\/Jan\\/13 16:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eHi Knut, my only reason for the upgrade suite regression test request was to show that the behavior has indeed changed from older release to 10.10\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mamtas\\\" id=\\\"commentauthor_13560811_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mamtas\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mamtas\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mamta A. Satoor\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13560811_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'23\\/Jan\\/13 16:39\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-23T16:39:44+0000\'\u003e23\\/Jan\\/13 16:39\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Hi Knut, my only reason for the upgrade suite regression test request was to show that the behavior has indeed changed from older release to 10.10              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13567033\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13567033&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13567033\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13567033_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13567033_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'30\\/Jan\\/13 22:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-30T22:55:17+0000\'\u003e30\\/Jan\\/13 22:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eWhat is the next potential release vehicle this patch could ship with?  It would be great if we could pick up a new version of Derby with this problem solved in time for ManifoldCF\'s April release.\u003c\\/p\u003e\\n \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13567033_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13567033_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'30\\/Jan\\/13 22:55\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-01-30T22:55:17+0000\'\u003e30\\/Jan\\/13 22:55\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    What is the next potential release vehicle this patch could ship with?  It would be great if we could pick up a new version of Derby with this problem solved in time for ManifoldCF\'s April release. \\n             \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13571269\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13571269&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13571269\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13571269_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13571269_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Feb\\/13 12:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-02-05T12:41:54+0000\'\u003e05\\/Feb\\/13 12:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI\'ve checked in the v2 patch on trunk, revision 1442554. I intend to backport it to the 10.9 branch if the nightly regression tests run stably with the fix.\u003c\\/p\u003e\\n\\n\u003cp\u003eThere is a 10.9.2 maintenance release ( \u003ca href=\\\"http:\\/\\/wiki.apache.org\\/db-derby\\/DerbyTenNineTwoRelease\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/wiki.apache.org\\/db-derby\\/DerbyTenNineTwoRelease\u003c\\/a\u003e ) planned soon that could carry this fix, provided it gets backported to 10.9 before the release candidate is produced. The dates are still unclear, as there were some speed bumps in the process. It might come out in time.\u003c\\/p\u003e\\n\\n\u003cp\u003eThere\'s also a 10.10.1 feature release ( \u003ca href=\\\"http:\\/\\/wiki.apache.org\\/db-derby\\/DerbyTenTenOneRelease\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttp:\\/\\/wiki.apache.org\\/db-derby\\/DerbyTenTenOneRelease\u003c\\/a\u003e ) that has been suggested some time later this year, but since no one has signed up for managing the release and published a schedule yet, it\'s probably less likely to get out in time.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13571269_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13571269_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'05\\/Feb\\/13 12:41\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-02-05T12:41:54+0000\'\u003e05\\/Feb\\/13 12:41\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I\'ve checked in the v2 patch on trunk, revision 1442554. I intend to backport it to the 10.9 branch if the nightly regression tests run stably with the fix. \\n\\n There is a 10.9.2 maintenance release (  http:\\/\\/wiki.apache.org\\/db-derby\\/DerbyTenNineTwoRelease  ) planned soon that could carry this fix, provided it gets backported to 10.9 before the release candidate is produced. The dates are still unclear, as there were some speed bumps in the process. It might come out in time. \\n\\n There\'s also a 10.10.1 feature release (  http:\\/\\/wiki.apache.org\\/db-derby\\/DerbyTenTenOneRelease  ) that has been suggested some time later this year, but since no one has signed up for managing the release and published a schedule yet, it\'s probably less likely to get out in time.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13574315\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13574315&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13574315\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13574315_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13574315_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'08\\/Feb\\/13 08:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-02-08T08:29:23+0000\'\u003e08\\/Feb\\/13 08:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI\'ve merged the fix to the 10.9 branch and committed revision 1443874.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13574315_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13574315_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'08\\/Feb\\/13 08:29\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-02-08T08:29:23+0000\'\u003e08\\/Feb\\/13 08:29\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I\'ve merged the fix to the 10.9 branch and committed revision 1443874.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13616959\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13616959&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13616959\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13616959_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13616959_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Mar\\/13 01:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-03-29T01:34:45+0000\'\u003e29\\/Mar\\/13 01:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eAny chance the 10.9.2 release will take place before April 15th?  I\'d like to include it in the ManifoldCF 1.2 release, if possible.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13616959_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13616959_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'29\\/Mar\\/13 01:34\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-03-29T01:34:45+0000\'\u003e29\\/Mar\\/13 01:34\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Any chance the 10.9.2 release will take place before April 15th?  I\'d like to include it in the ManifoldCF 1.2 release, if possible.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13632945\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13632945&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13632945\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13632945_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13632945_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/13 16:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-04-16T16:03:10+0000\'\u003e16\\/Apr\\/13 16:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eis there any more work planned for this issue.  looks fixed in trunk, 10.10 and 10.9 to me, unless more fixes are planned.  \u003cbr\\/\u003e\\nKarl were you able to test your application with the change?\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"mikem\\\" id=\\\"commentauthor_13632945_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=mikem\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"mikem\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Mike Matrigali\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13632945_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/13 16:03\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-04-16T16:03:10+0000\'\u003e16\\/Apr\\/13 16:03\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    is there any more work planned for this issue.  looks fixed in trunk, 10.10 and 10.9 to me, unless more fixes are planned.   \\nKarl were you able to test your application with the change?              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13632949\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13632949&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13632949\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13632949_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13632949_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/13 16:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-04-16T16:09:47+0000\'\u003e16\\/Apr\\/13 16:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eI did confirm that the fix worked for ManifoldCF.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kwright@metacarta.com\\\" id=\\\"commentauthor_13632949_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kwright%40metacarta.com\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kwright@metacarta.com\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Karl Wright\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13632949_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'16\\/Apr\\/13 16:09\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-04-16T16:09:47+0000\'\u003e16\\/Apr\\/13 16:09\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    I did confirm that the fix worked for ManifoldCF.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13637816\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13637816&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13637816\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13637816_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13637816_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Apr\\/13 07:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-04-22T07:47:10+0000\'\u003e22\\/Apr\\/13 07:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eThanks for verifying the fix, Karl. I\'m closing this issue, then. The fix is included in Derby 10.10.1.1, which was released last week.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"knutanders\\\" id=\\\"commentauthor_13637816_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=knutanders\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"knutanders\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Knut Anders Hatlen\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13637816_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'22\\/Apr\\/13 07:47\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-04-22T07:47:10+0000\'\u003e22\\/Apr\\/13 07:47\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Thanks for verifying the fix, Karl. I\'m closing this issue, then. The fix is included in Derby 10.10.1.1, which was released last week.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13704833\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13704833&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13704833\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_13704833_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13704833_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Jul\\/13 17:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-07-10T17:57:26+0000\'\u003e10\\/Jul\\/13 17:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eassign to myself temporarily for backport.\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_13704833_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13704833_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Jul\\/13 17:57\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-07-10T17:57:26+0000\'\u003e10\\/Jul\\/13 17:57\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    assign to myself temporarily for backport.              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13705201\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13705201&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13705201\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13705201_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13705201_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Jul\\/13 22:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-07-10T22:56:56+0000\'\u003e10\\/Jul\\/13 22:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eCommit 1502044 from \u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\" class=\\\"user-hover\\\" rel=\\\"kmarsden\\\"\u003eKathey Marsden\u003c\\/a\u003e\u003cbr\\/\u003e\\n[ \u003ca href=\\\"https:\\/\\/svn.apache.org\\/r1502044\\\" class=\\\"external-link\\\" rel=\\\"nofollow\\\"\u003ehttps:\\/\\/svn.apache.org\\/r1502044\u003c\\/a\u003e ]\u003c\\/p\u003e\\n\\n\u003cp\u003e\u003ca href=\\\"https:\\/\\/issues.apache.org\\/jira\\/browse\\/DERBY-6011\\\" title=\\\"Derby performs very badly (seems to deadlock and timeout) in very simple multi-threaded tests\\\" class=\\\"issue-link\\\" data-issue-key=\\\"DERBY-6011\\\"\u003e\u003cdel\u003eDERBY-6011\u003c\\/del\u003e\u003c\\/a\u003e Derby performs very badly (seems to deadlock and timeout) in very simple multi-threaded tests \u003c\\/p\u003e\\n\\n\u003cp\u003eContributed by Knut Anders Hatlen\u003cbr\\/\u003e\\nMerge revision  1442554 from trunk to 10.8\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"jira-bot\\\" id=\\\"commentauthor_13705201_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=jira-bot\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"jira-bot\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e ASF subversion and git services\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13705201_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Jul\\/13 22:56\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-07-10T22:56:56+0000\'\u003e10\\/Jul\\/13 22:56\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Commit 1502044 from  Kathey Marsden  \\n[  https:\\/\\/svn.apache.org\\/r1502044  ] \\n\\n   DERBY-6011   Derby performs very badly (seems to deadlock and timeout) in very simple multi-threaded tests  \\n\\n Contributed by Knut Anders Hatlen \\nMerge revision  1442554 from trunk to 10.8              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \\n\\n\\n\u003cdiv id=\\\"comment-13705204\\\" class=\\\"issue-data-block activity-comment twixi-block  expanded\\\"\u003e\\n    \u003cdiv class=\\\"twixi-wrap verbose actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Collapse comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-expanded\\\"\u003e\u003cspan\u003eHide\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-links\\\"\u003e\\n                \u003ca href=\\\"\\/jira\\/browse\\/DERBY-6011?focusedCommentId=13705204&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13705204\\\"\\n                   title=\\\"Right click and copy link for a permanent link to this comment.\\\" class=\\\"activitymodule-link issue-comment-action\\\"\u003e\\n                    \u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-link\\\"\u003ePermalink\u003c\\/span\u003e\u003c\\/a\u003e\\n                                            \u003c\\/div\u003e\\n            \u003cdiv class=\\\"action-details\\\"\u003e        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_13705204_verbose\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13705204_verbose subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Jul\\/13 22:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-07-10T22:58:14+0000\'\u003e10\\/Jul\\/13 22:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e  \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n        \u003cdiv class=\\\"action-body flooded\\\"\u003e\u003cp\u003eMerged back to 10.8. Reassigning Knut\u003c\\/p\u003e \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n    \u003cdiv class=\\\"twixi-wrap concise actionContainer\\\"\u003e\\n        \u003cdiv class=\\\"action-head\\\"\u003e\\n            \u003ca href=\\\"#\\\" title=\\\"Expand comment\\\" class=\\\"twixi\\\"\u003e\u003cspan class=\\\"icon-default aui-icon aui-icon-small aui-iconfont-collapsed\\\"\u003e\u003cspan\u003eShow\u003c\\/span\u003e\u003c\\/span\u003e\u003c\\/a\u003e\\n            \u003cdiv class=\\\"action-details flooded\\\"\u003e\\n                        \\n    \\n    \\n    \\n                \\n\\n    \u003ca class=\\\"user-hover user-avatar\\\" rel=\\\"kmarsden\\\" id=\\\"commentauthor_13705204_concise\\\" href=\\\"\\/jira\\/secure\\/ViewProfile.jspa?name=kmarsden\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-xsmall\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"https:\\/\\/issues.apache.org\\/jira\\/secure\\/useravatar?size=xsmall&amp;avatarId=10452\\\" alt=\\\"kmarsden\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e Kathey Marsden\u003c\\/a\u003e\\n added a comment  - \u003cspan class=\'commentdate_13705204_concise subText\'\u003e\u003cspan class=\'date user-tz\' title=\'10\\/Jul\\/13 22:58\'\u003e\u003ctime class=\'livestamp\' datetime=\'2013-07-10T22:58:14+0000\'\u003e10\\/Jul\\/13 22:58\u003c\\/time\u003e\u003c\\/span\u003e\u003c\\/span\u003e                    Merged back to 10.8. Reassigning Knut              \u003c\\/div\u003e\\n        \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\u003c\\/div\u003e\\n                             \u003c\\/div\u003e\\n    \u003c\\/div\u003e\\n\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["scope-filter-data"]="{\"createScopeActions\":[],\"scopes\":[]}";
WRM._unparsedData["sidebar-collapsed-by-default"]="true";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:can-manage"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:with-icons"]="false";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:shortcuts"]="[]";
WRM._unparsedData["com.atlassian.jira.projects.shortcuts:project-id"]="10594";
WRM._unparsedData["sidebar-id"]="\"\u003cdiv class=\\\"aui-sidebar  projects-sidebar sidebar-pending\\\" \u003e\u003cdiv class=\\\"aui-sidebar-wrapper\\\"\u003e\u003cdiv class=\\\"aui-sidebar-body\\\"\u003e\u003cheader class=\\\"aui-page-header\\\"\u003e\u003cdiv class=\\\"aui-page-header-inner\\\"\u003e\u003cdiv class=\\\"aui-page-header-image\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/DERBY\\/summary\\\" title=\\\"Derby\\\" class=\\\"jira-project-avatar\\\"\u003e\u003cspan class=\\\"aui-avatar aui-avatar-large aui-avatar-project\\\"\u003e\u003cspan class=\\\"aui-avatar-inner\\\"\u003e\u003cimg src=\\\"\\/jira\\/secure\\/projectavatar?pid=10594&amp;avatarId=10122\\\" alt=\\\"Derby\\\" \\/\u003e\u003c\\/span\u003e\u003c\\/span\u003e\u003cimg src=\\\"data:image\\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI\\/Pg0KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE4LjEuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPg0KPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgdmlld0JveD0iMCAwIDMwMCAzMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDMwMCAzMDA7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxnIGlkPSJMYXllcl8yIj4NCgk8cGF0aCBzdHlsZT0iZmlsbDojRjc5MjMyOyIgZD0iTTE1MCwwQzY2LjY2NywwLDAsNjYuNjY3LDAsMTUwczY2LjY2NywxNTAsMTUwLDE1MHMxNTAtNjYuNjY3LDE1MC0xNTBTMjMzLjMzMywwLDE1MCwweg0KCQkgTTEzNi42NjcsMTc4LjMzM0wxMjUsMTkwbC00MS42NjctNDBMOTUsMTM4LjMzM2wzMC0zMEwxMzYuNjY3LDEyMGwtMzAsMzBMMTM2LjY2NywxNzguMzMzeiBNMjA1LDE2MS42NjdsLTMwLDMwTDE2My4zMzMsMTgwDQoJCWwzMC0zMGwtMzAtMzBMMTc1LDEwOC4zMzNMMjE2LjY2NywxNTBMMjA1LDE2MS42Njd6Ii8+DQo8L2c+DQo8Zz4NCgk8cG9seWdvbiBzdHlsZT0iZmlsbDojRkZGRkZGOyIgcG9pbnRzPSIxNzUsMTkxLjY2NyAyMDUsMTYxLjY2NyAyMTYuNjY3LDE1MCAxNzUsMTA4LjMzMyAxNjMuMzMzLDEyMCAxOTMuMzMzLDE1MCAxNjMuMzMzLDE4MCAJIi8+DQoJPHBvbHlnb24gc3R5bGU9ImZpbGw6I0ZGRkZGRjsiIHBvaW50cz0iMTI1LDEwOC4zMzMgOTUsMTM4LjMzMyA4My4zMzMsMTUwIDEyNSwxOTAgMTM2LjY2NywxNzguMzMzIDEwNi42NjcsMTUwIDEzNi42NjcsMTIwIAkiLz4NCjwvZz4NCjwvc3ZnPg0K\\\" alt=\\\"Icon indicating the project type\\\" class=\\\"jira-project-avatar-icon\\\" \\/\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-image --\u003e\u003cdiv class=\\\"aui-page-header-main\\\"\u003e\u003ch1\u003e\u003cdiv class=\\\"aui-group aui-group-split\\\"\u003e\u003cdiv class=\\\"aui-item project-title\\\"\u003e\u003ca href=\\\"\\/jira\\/projects\\/DERBY\\/summary\\\" title=\\\"Derby\\\"\u003eDerby\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/h1\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-main --\u003e\u003c\\/div\u003e\u003c!-- .aui-page-header-inner --\u003e\u003c\\/header\u003e\u003c!-- .aui-page-header --\u003e\u003cnav class=\\\"aui-navgroup aui-navgroup-vertical\\\"\u003e\u003cdiv class=\\\"aui-navgroup-inner sidebar-content-container\\\"\u003e\u003cdiv class=\\\"aui-sidebar-group aui-sidebar-group-tier-one\\\" data-id=\\\"sidebar-navigation-panel\\\"\u003e\u003cul class=\\\"aui-nav\\\"\u003e\u003cli class=\\\"aui-nav-selected\\\" \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY\\/issues\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-issue-navigator:sidebar-issue-navigator\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-issues\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Issues\\\"\u003eIssues\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY?selectedItem=com.atlassian.jira.jira-projects-plugin:report-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:report-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large agile-icon-report\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Reports\\\"\u003eReports\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003cli  \u003e\u003ca class=\\\"aui-nav-item \\\" href=\\\"\\/jira\\/projects\\/DERBY?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page\\\" data-link-id=\\\"com.atlassian.jira.jira-projects-plugin:components-page\\\" \u003e\u003cspan class=\\\"aui-icon aui-icon-large icon-sidebar-components\\\"\u003e\u003c\\/span\u003e\u003cspan class=\\\"aui-nav-item-label\\\" title=\\\"Components\\\"\u003eComponents\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/li\u003e\u003c\\/ul\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/nav\u003e\u003c\\/div\u003e\u003cdiv class=\\\"aui-sidebar-footer\\\"\u003e\u003ca class=\\\"aui-button aui-button-subtle aui-sidebar-toggle aui-sidebar-footer-tipsy\\\" data-tooltip=\\\"Expand sidebar ( [ )\\\" href=\\\"#\\\"\u003e\u003cspan class=\\\"aui-icon aui-icon-small\\\"\u003e\u003c\\/span\u003e\u003c\\/a\u003e\u003c\\/div\u003e\u003c\\/div\u003e\u003c\\/div\u003e\"";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script> 
  <script type="text/javascript" src="/jira/s/d41d8cd98f00b204e9800998ecf8427e-CDN/3pgavk/76005/1c78b578e5c0e813799ab2baea47b6f7/1.0/_/download/batch/jira.webresources:bigpipe-init/jira.webresources:bigpipe-init.js" data-wrm-key="jira.webresources:bigpipe-init" data-wrm-batch-type="resource" data-initially-rendered></script> 
  <form id="jira_request_timing_info" class="dont-default-focus"> 
   <fieldset class="parameters hidden"> 
    <input type="hidden" title="jira.request.start.millis" value="1520240624783"> 
    <input type="hidden" title="jira.request.server.time" value="348"> 
    <input type="hidden" title="jira.request.id" value="543x94432752x3"> 
    <input type="hidden" title="jira.session.expiry.time" value="-"> 
    <input type="hidden" title="jira.session.expiry.in.mins" value="-"> 
    <input id="jiraConcurrentRequests" type="hidden" name="jira.request.concurrent.requests" value="3"> 
    <input type="hidden" title="db.reads.time.in.ms" value="53"> 
    <input type="hidden" title="db.conns.time.in.ms" value="61"> 
   </fieldset> 
  </form> 
  <!--
	                 REQUEST ID : 543x94432752x3
	          REQUEST TIMESTAMP : [05/Mar/2018:09:03:44 +0000]
	               REQUEST TIME : 0.3480
	                 ASESSIONID : -
	        CONCURRENT REQUESTS : 3

	                      db.reads : OpSnapshot{name='db.reads', invocationCount=21, elapsedTotal=53446810, elapsedMin=676305, elapsedMax=13697801, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
	                      db.conns : OpSnapshot{name='db.conns', invocationCount=25, elapsedTotal=61416181, elapsedMin=699879, elapsedMax=13845805, resultSetSize=0, cpuTotal=0, cpuMin=0, cpuMax=0}
-->   
 </body>
</html>